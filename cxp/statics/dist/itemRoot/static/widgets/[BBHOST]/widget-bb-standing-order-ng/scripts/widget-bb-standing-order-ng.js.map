{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6************","webpack:///webpack/bootstrap 22d24c31efc7cba15061?e34e************","webpack:///./widget-bb-standing-order-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*******","webpack:///external \"lib-bb-model-errors\"?7567****","webpack:///external \"lib-bb-widget-extension-ng\"?b547***","webpack:///external \"lib-bb-event-bus-ng\"?8215***","webpack:///external \"model-bb-payment-ng\"?f75e***","webpack:///./widget-bb-standing-order-ng/scripts/index.js","webpack:///./widget-bb-standing-order-ng/scripts/controller.js","webpack:///./widget-bb-standing-order-ng/scripts/constants.js","webpack:///./widget-bb-standing-order-ng/scripts/default-hooks.js"],"names":["defaultHooks","hooksKey","module","factory","controller","name","StandingOrderController","errorMessages","DEFAULT_PAGE_SIZE","DEFAULT_MAX_NAV_PAGES","DEFAULT_PAGINATION_TYPE","uiError","error","modelError","code","message","selections","selectedPayments","model","hooks","bus","$ctrl","preferences","getPaymentPreferences","pageSize","standingOrderPageSize","maxNavPages","paginationType","dismissTime","Math","abs","notificationDismissTime","standingOrders","rawItems","params","from","size","currentPage","totalItems","orderBy","defaultSortableColumn","direction","defaultSortableDirection","state","notifications","data","loading","hasMore","pageParams","initialLoading","loadMorePromise","append","newItems","existingItems","replace","items","load","merge","requestParams","Object","assign","getStandingOrders","then","raw","length","totalCount","processStandingOrders","processedPayments","catch","loadMore","done","getRequestParams","changePage","currentParams","reload","onSort","notifyOnAuthSuccess","publish","STANDING_ORDER_AUTH_SUCCESS","res","notifyOnRejectSuccess","STANDING_ORDER_REJECT_SUCCESS","notifyOnAuthFail","STANDING_ORDER_AUTH_FAIL","err","notifyOnRejectFail","STANDING_ORDER_REJECT_FAIL","removeSelectedPayment","selected","index","findIndex","id","paymentId","splice","authorize","authorizePayment","notifyOnMultipleAuthResult","succeeded","STANDING_ORDER_AUTH_MULTIPLE_SUCCESS","failed","STANDING_ORDER_AUTH_MULTIPLE_FAIL","selectedAll","authorizeMultiple","authorizeMultiplePayments","notifyOnMultipleRejectResult","STANDING_ORDER_REJECT_MULTIPLE_SUCCESS","STANDING_ORDER_REJECT_MULTIPLE_FAIL","rejectMultiple","rejectMultiplePayments","reject","rejectPayment","notifyOnDeleteSuccess","STANDING_ORDER_DELETE_SUCCESS","notifyOnDeleteFail","STANDING_ORDER_DELETE_FAIL","notifyOnMultipleDeleteResult","STANDING_ORDER_DELETE_MULTIPLE_SUCCESS","STANDING_ORDER_DELETE_MULTIPLE_FAIL","deleteMultiplePayments","deletePayment","bindEvents","subscribe","NOTIFICATION_EVENT","notification","push","$onInit","Event","payments"],"mappings":"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","file":"widget-bb-standing-order-ng/scripts/widget-bb-standing-order-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"model-bb-payment-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-standing-order-ng\", [\"vendor-bb-angular\", \"lib-bb-model-errors\", \"lib-bb-widget-extension-ng\", \"lib-bb-event-bus-ng\", \"model-bb-payment-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-standing-order-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"model-bb-payment-ng\"));\n\telse\n\t\troot[\"widget-bb-standing-order-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"model-bb-payment-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_60__, __WEBPACK_EXTERNAL_MODULE_80__, __WEBPACK_EXTERNAL_MODULE_89__, __WEBPACK_EXTERNAL_MODULE_90__, __WEBPACK_EXTERNAL_MODULE_91__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 22d24c31efc7cba15061","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-standing-order-ng/model.xml\n// module id = 0\n// module chunks = 13","module.exports = __WEBPACK_EXTERNAL_MODULE_60__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 60\n// module chunks = 5 6 7 8 9 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_80__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 80\n// module chunks = 6 9 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_89__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 89\n// module chunks = 9 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_90__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 90\n// module chunks = 9 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_91__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-payment-ng\"\n// module id = 91\n// module chunks = 9 10 11 12 13","/**\n * @module widget-bb-standing-order-ng\n *\n * @description\n * Shows standing orders list\n */\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport modelPaymentModuleKey, {\n  modelPaymentKey,\n} from 'model-bb-payment-ng';\nimport bbEventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\n\nimport Controller from './controller';\nimport * as defaultHooks from './default-hooks';\n\nconst hooksKey = 'widget-bb-payment-order-ng:hooks';\n\nexport default angular\n  .module('widget-bb-standing-order-ng', [\n    modelPaymentModuleKey,\n    bbEventBusModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('StandingOrderController', [\n    // dependencies to inject\n    modelPaymentKey,\n    hooksKey,\n    eventBusKey,\n    /* into */\n    Controller,\n  ])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-standing-order-ng/scripts/index.js","import { E_AUTH, E_USER, E_CONNECTIVITY, E_UNEXPECTED } from 'lib-bb-model-errors';\nimport Event from './constants';\n\nconst errorMessages = {\n  [E_AUTH]: 'error.auth',\n  [E_USER]: 'error.user',\n  [E_CONNECTIVITY]: 'error.connectivity',\n  [E_UNEXPECTED]: 'error.unexpected',\n};\n\n/**\n * Defines the default pageSize for the standing orders page\n * as defined in the widget model.xml\n * @type {number}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n\n/**\n * Defines the default maxNavPages for the accounts page\n * as defined in the widget model.xml\n * @type {int}\n */\nconst DEFAULT_MAX_NAV_PAGES = 3;\n\n/**\n * Defines the default paginationType for the accounts page\n * as defined in the widget model.xml\n * @type {string}\n */\nconst DEFAULT_PAGINATION_TYPE = 'load-more';\n\n/**\n * @description\n * Creates an error object for template\n *\n * @name uiError\n *\n * @inner\n * @param {object} modelError Error object\n * @type {function}\n * @returns {{message: string}}\n */\nconst uiError = modelError => {\n  let error = '';\n\n  if (modelError && modelError.code) {\n    error = errorMessages[modelError.code];\n  }\n\n  return {\n    message: error,\n  };\n};\n\nconst selections = {\n  selectedPayments: [],\n};\n\n/**\n * @name StandingOrderController\n * @type {object}\n * @description\n * Shows standing orders list\n *\n * @usage\n * <div ng-controller=\"StandingOrderController as $ctrl\">\n *   <!-- ... -->\n * </div>\n */\nexport default function StandingOrderController(model, hooks, bus) {\n  const $ctrl = this;\n  const preferences = model.getPaymentPreferences();\n  const pageSize = preferences.standingOrderPageSize || DEFAULT_PAGE_SIZE;\n  const maxNavPages = preferences.maxNavPages || DEFAULT_MAX_NAV_PAGES;\n  const paginationType = preferences.paginationType || DEFAULT_PAGINATION_TYPE;\n  const dismissTime = Math.abs(preferences.notificationDismissTime) || 3;\n\n  const standingOrders = {\n    rawItems: [],\n    params: {\n      from: 0,\n      size: pageSize,\n      currentPage: 1,\n      totalItems: 0,\n      maxNavPages,\n      paginationType,\n      orderBy: hooks.defaultSortableColumn(),\n      direction: hooks.defaultSortableDirection(),\n    },\n  };\n\n  const state = {\n    notifications: [],\n    standingOrders: {\n      data: [],\n      get orderBy() { return standingOrders.params.orderBy; },\n      get direction() { return standingOrders.params.direction; },\n      loading: false,\n      hasMore: false,\n      error: null,\n    },\n    pageParams: standingOrders.params,\n    initialLoading: true,\n    error: null,\n  };\n\n  /**\n   * @type {promise.<void>} loadMorePromise\n   */\n  let loadMorePromise = null;\n\n  /**\n   * Merges new orders with existing ones\n   *\n   * @inner\n   * @name append\n   * @type {function}\n   * @returns {array} Merged array of old and new orders\n   */\n  const append = (newItems, existingItems) => [...existingItems, ...newItems];\n\n  /**\n   * Replaces existing orders with new ones\n   *\n   * @inner\n   * @name replace\n   * @type {function}\n   * @returns {array} New payments\n   */\n  const replace = items => items;\n\n  /**\n   * @name load\n   *\n   * @description\n   * Loading standing orders\n   *\n   * @inner\n   * @type {function}\n   *\n   * @param {function} merge\n   * @param {object} params\n   * @return {Promise.<module:model-bb-payment-ng.Payments, ModelError>} A promise\n   */\n  const load = (merge, params) => {\n    const requestParams = Object.assign({}, standingOrders.params, params);\n    state.standingOrders.loading = true;\n\n    return model.getStandingOrders(requestParams)\n      .then(raw => {\n        state.standingOrders.loading = false;\n        standingOrders.rawItems = merge(raw.data, standingOrders.rawItems);\n        state.standingOrders.hasMore = standingOrders.rawItems.length < raw.totalCount;\n\n        state.pageParams.totalItems = raw.totalCount || 0;\n        state.pageParams.currentPage = requestParams.currentPage;\n\n        return standingOrders.rawItems;\n      })\n      .then(hooks.processStandingOrders)\n      .then(processedPayments => {\n        state.standingOrders.data = processedPayments;\n      })\n      .catch(error => {\n        state.error = uiError(error);\n        state.standingOrders.loading = false;\n      });\n  };\n\n  /**\n   * @name loadMore\n   *\n   * @description\n   * Loads more standing orders if they are available.\n   *\n   * @type {function}\n   * @param {function} done Callback to stop loading\n   * @return {Promise.<module:model-bb-payment-ng.Payments, ModelError>} A promise\n   */\n  const loadMore = done => {\n    if (state.standingOrders.loading) {\n      return loadMorePromise;\n    }\n\n    standingOrders.params.from++;\n\n    loadMorePromise = load(append)\n      .then(() => {\n        loadMorePromise = null;\n        done();\n      })\n      .catch(() => {\n        loadMorePromise = null;\n        standingOrders.params.from--;\n        done();\n      });\n\n    return loadMorePromise;\n  };\n\n  /**\n   * @description\n   * Get params for request.\n   *\n   * @name AccountsOverviewController#getRequestParams\n   *\n   * @inner\n   * @param {Object} params Custom params\n   * @type {function}\n   * @returns {Object} A request params\n   */\n  const getRequestParams = (params) => Object.assign({}, standingOrders.params, {\n    // In BE services pagination starts from 0 page, but in bootstrap directive it's 1\n    from: params.currentPage - 1,\n  }, params);\n\n  /**\n   * @description\n   * Change page of displayed accounts.\n   *\n   * @name AccountsOverviewController#changePage\n   * @type {function}\n   * @returns {Promise.<module:model-bb-product-summary-ng.Accounts, ModelError>}\n   * A Promise with loaded accounts\n   */\n  const changePage = (params = {}) => {\n    const currentParams = getRequestParams(params);\n\n    return load(replace, currentParams);\n  };\n\n  /**\n   * @name reload\n   *\n   * @description\n   * Reloads the current collection\n   *\n   * @inner\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const reload = () => {\n    const params = standingOrders.params;\n    const from = state.pageParams.currentPage ? (state.pageParams.currentPage - 1) : 0;\n    const size = (params.from + 1) * params.size;\n    return load(replace, { from, size });\n  };\n\n  /**\n   * @name onSort\n   * @type {function}\n   * @description\n   * Loads sorted list of payments\n   * @param  {string} orderBy   Column key to sort\n   * @param  {string} direction Sort direction\n   */\n  const onSort = (orderBy, direction) => {\n    Object.assign(standingOrders.params, {\n      orderBy,\n      direction,\n    });\n    reload();\n  };\n\n  /**\n   * @name notifyOnAuthSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's success.\n   *\n   * @fires bb.event.standing.order.auth.success\n   *\n   * @returns {object}\n   */\n  const notifyOnAuthSuccess = res => {\n    bus.publish(Event.STANDING_ORDER_AUTH_SUCCESS, res);\n  };\n\n  /**\n   * @name notifyOnRejectSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on rejection request's success.\n   *\n   * @fires bb.event.standing.order.reject.success\n   *\n   * @returns {object}\n   */\n  const notifyOnRejectSuccess = (res) => {\n    bus.publish(Event.STANDING_ORDER_REJECT_SUCCESS, res);\n  };\n\n  /**\n   * @name notifyOnAuthFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's failure.\n   *\n   * @fires bb.event.standing.order.auth.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnAuthFail = err => {\n    bus.publish(Event.STANDING_ORDER_AUTH_FAIL, err);\n  };\n\n  /**\n   * @name notifyOnRejectFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on rejection request's failure.\n   *\n   * @fires bb.event.standing.order.reject.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnRejectFail = (err) => {\n    bus.publish(Event.STANDING_ORDER_REJECT_FAIL, err);\n  };\n\n  /**\n   * @name removeSelectedPayment\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Remove payment id from selected standing orders.\n   *\n   * @returns {void}\n   */\n  const removeSelectedPayment = paymentId => {\n    const selected = selections.selectedPayments;\n    const index = selected.findIndex(id => id === paymentId);\n    if (index > -1) {\n      selected.splice(index, 1);\n    }\n  };\n\n  /**\n   * @name authorize\n   * @type {function}\n   *\n   * @description\n   * Request standing order authorization.\n   *\n   * @param {string} paymentId Id of the standing order\n   *\n   * @returns {Promise}\n   */\n  const authorize = paymentId =>\n    model.authorizePayment(paymentId)\n      .then(notifyOnAuthSuccess)\n      .then(() => removeSelectedPayment(paymentId))\n      .then(reload)\n      .catch(notifyOnAuthFail);\n\n  /**\n   * @name notifyOnMultipleAuthResult\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on multiple authorization results.\n   *\n   * @fires bb.event.standing.order.auth.multiple.success\n   * @fires bb.event.standing.order.auth.multiple.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnMultipleAuthResult = res => {\n    if (res.succeeded.length) {\n      bus.publish(Event.STANDING_ORDER_AUTH_MULTIPLE_SUCCESS, res.succeeded.length);\n    }\n\n    if (res.failed.length) {\n      bus.publish(Event.STANDING_ORDER_AUTH_MULTIPLE_FAIL, res.failed.length);\n    }\n\n    // Keep selected failed payments only\n    selections.selectedPayments = res.failed || [];\n    selections.selectedAll = false;\n  };\n\n  /**\n   * @name authorizeMultiple\n   * @type {function}\n   *\n   * @description\n   * Request list of standing orders authorization.\n   *\n   * @param {array} selectedPayments Collection of payments id\n   *\n   * @returns {Promise}\n   */\n  const authorizeMultiple = selectedPayments =>\n    model.authorizeMultiplePayments(selectedPayments)\n      .then(notifyOnMultipleAuthResult)\n      .then(reload)\n      .catch(error => {\n        state.error = error;\n      });\n\n  /**\n   * @name notifyOnMultipleRejectResult\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on multiple rejection results.\n   *\n   * @fires bb.event.standing.order.reject.multiple.success\n   * @fires bb.event.standing.order.reject.multiple.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnMultipleRejectResult = (res) => {\n    if (res.succeeded.length) {\n      bus.publish(Event.STANDING_ORDER_REJECT_MULTIPLE_SUCCESS, res.succeeded.length);\n    }\n\n    if (res.failed.length) {\n      bus.publish(Event.STANDING_ORDER_REJECT_MULTIPLE_FAIL, res.failed.length);\n    }\n\n    // Keep selected failed payments only\n    selections.selectedPayments = res.failed || [];\n    selections.selectedAll = false;\n  };\n\n  /**\n   * @name rejectMultiple\n   * @type {function}\n   *\n   * @description\n   * Request multiple standing orders rejection.\n   *\n   * @param {array} selectedPayments Collection of payments id\n   *\n   * @returns {Promise}\n   */\n  const rejectMultiple = selectedPayments =>\n    model.rejectMultiplePayments(selectedPayments)\n      .then(notifyOnMultipleRejectResult)\n      .then(reload)\n      .catch(error => {\n        state.error = error;\n      });\n\n  /**\n   * @name reject\n   * @type {function}\n   *\n   * @description\n   * Request standing order rejection.\n   *\n   * @param {string} paymentId Id of the standing order\n   *\n   * @returns {Promise}\n   */\n  const reject = paymentId =>\n    model.rejectPayment(paymentId)\n      .then(notifyOnRejectSuccess)\n      .then(reload)\n      .catch(notifyOnRejectFail);\n\n\n  /**\n   * @name notifyOnDeleteSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on deletion request's success.\n   *\n   * @fires bb.event.standing.order.delete.success\n   *\n   * @returns {object}\n   */\n  const notifyOnDeleteSuccess = (res) => {\n    bus.publish(Event.STANDING_ORDER_DELETE_SUCCESS, res);\n  };\n\n  /**\n   * @name notifyOnDeleteFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on deletion request's failure.\n   *\n   * @fires bb.event.standing.order.delete.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnDeleteFail = (err) => {\n    bus.publish(Event.STANDING_ORDER_DELETE_FAIL, err);\n  };\n\n  /**\n   * @name notifyOnMultipleDeleteResult\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on multiple deletion results.\n   *\n   * @fires bb.event.standing.order.delete.multiple.success\n   * @fires bb.event.standing.order.delete.multiple.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnMultipleDeleteResult = (res) => {\n    if (res.succeeded.length) {\n      bus.publish(Event.STANDING_ORDER_DELETE_MULTIPLE_SUCCESS, res.succeeded.length);\n    }\n\n    if (res.failed.length) {\n      bus.publish(Event.STANDING_ORDER_DELETE_MULTIPLE_FAIL, res.failed.length);\n    }\n\n    // Keep selected failed payments only\n    selections.selectedPayments = res.failed || [];\n    selections.selectedAll = false;\n  };\n\n  /**\n   * @name deleteMultiplePayments\n   * @type {function}\n   *\n   * @description\n   * Request multiple standing orders deletion.\n   *\n   * @param {array} selectedPayments Collection of payments id\n   *\n   * @returns {Promise}\n   */\n  const deleteMultiplePayments = selectedPayments =>\n    model.deleteMultiplePayments(selectedPayments)\n      .then(notifyOnMultipleDeleteResult)\n      .then(reload)\n      .catch(error => {\n        state.error = error;\n      });\n\n\n  /**\n   * @name deletePayment\n   * @type {function}\n   *\n   * @description\n   * Request payment deletion.\n   *\n   * @param {string} paymentId Id of the standing order\n   *\n   * @returns {Promise}\n   */\n  const deletePayment = (paymentId) => model.deletePayment(paymentId)\n      .then(notifyOnDeleteSuccess)\n      .then(reload)\n      .catch(notifyOnDeleteFail);\n\n  /**\n   * @name bindEvents\n   *\n   * @description\n   * Adds subscriptions to bus events\n   *\n   * @inner\n   * @type {function}\n   */\n  const bindEvents = () => {\n    bus.subscribe(Event.NOTIFICATION_EVENT, (notification) => {\n      state.notifications.push(notification);\n    });\n  };\n\n  /**\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name StandingOrderController#$onInit\n   * @type {function}\n   * @returns {Promise.<module:model-bb-payment-ng.Payments, ModelError>}\n   */\n  const $onInit = () => load(replace)\n    .then(() => {\n      state.initialLoading = false;\n    })\n    .then(bindEvents);\n\n  Object.assign($ctrl, {\n    state,\n    $onInit,\n    loadMore,\n    onSort,\n    dismissTime,\n    authorize,\n    authorizeMultiple,\n    reject,\n    rejectMultiple,\n    deletePayment,\n    deleteMultiplePayments,\n    selections,\n    changePage,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-standing-order-ng/scripts/controller.js","const Event = {\n  STANDING_ORDER_AUTH_SUCCESS: 'bb.event.standing.order.auth.success',\n  STANDING_ORDER_AUTH_FAIL: 'bb.event.standing.order.auth.fail',\n  STANDING_ORDER_AUTH_MULTIPLE_SUCCESS: 'bb.event.standing.order.multiple.auth.success',\n  STANDING_ORDER_AUTH_MULTIPLE_FAIL: 'bb.event.standing.order.multiple.auth.fail',\n  STANDING_ORDER_REJECT_SUCCESS: 'bb.event.standing.order.reject.success',\n  STANDING_ORDER_REJECT_FAIL: 'bb.event.standing.order.reject.fail',\n  STANDING_ORDER_REJECT_MULTIPLE_SUCCESS: 'bb.event.standing.order.multiple.reject.success',\n  STANDING_ORDER_REJECT_MULTIPLE_FAIL: 'bb.event.standing.order.multiple.reject.fail',\n  NOTIFICATION_EVENT: 'bb.event.notifications.notify',\n  STANDING_ORDER_DELETE_SUCCESS: 'bb.event.standing.order.delete.success',\n  STANDING_ORDER_DELETE_FAIL: 'bb.event.standing.order.delete.fail',\n  STANDING_ORDER_DELETE_MULTIPLE_SUCCESS: 'bb.event.standing.order.multiple.delete.success',\n  STANDING_ORDER_DELETE_MULTIPLE_FAIL: 'bb.event.standing.order.multiple.delete.fail',\n};\n\nexport default Event;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-standing-order-ng/scripts/constants.js","/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-bb-standing-order-ng\n */\n\n/**\n * @name processStandingOrders\n * @type {function}\n *\n * @description\n * Hook for processing standing orders.\n *\n * @param payments {array} Payments to process\n * @returns {array} Processed payments\n */\nexport const processStandingOrders = payments => payments;\n\n/**\n * @name defaultSortableColumn\n *\n * @description\n * defaultSortableColumn default hook\n *\n * @type {function}\n * @returns {?string}\n */\nexport const defaultSortableColumn = () => null;\n\n/**\n * @name defaultSortableDirection\n *\n * @description\n * defaultSortableDirection default hook\n *\n * @type {function}\n * @returns {?string}\n */\nexport const defaultSortableDirection = () => null;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-standing-order-ng/scripts/default-hooks.js"],"sourceRoot":""}