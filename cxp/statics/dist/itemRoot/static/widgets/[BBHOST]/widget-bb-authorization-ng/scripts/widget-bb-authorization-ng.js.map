{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6********","webpack:///webpack/bootstrap 22d24c31efc7cba15061?e34e********","webpack:///./widget-bb-authorization-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114***","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./widget-bb-authorization-ng/scripts/index.js","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"model-bb-payment-ng\"","webpack:///./widget-bb-authorization-ng/scripts/controller.js","webpack:///./widget-bb-authorization-ng/scripts/constants.js","webpack:///./widget-bb-authorization-ng/scripts/default-hooks.js"],"names":["defaultHooks","hooksKey","module","factory","controller","name","AuthorizationController","errorMessages","uiError","messageMap","modelError","message","code","selections","selectedPayments","DEFAULT_PAGE_SIZE","DEFAULT_MAX_NAV_PAGES","DEFAULT_PAGINATION_TYPE","model","hooks","bus","$ctrl","preferences","getPaymentPreferences","pageSize","authorizationPageSize","maxNavPages","paginationType","dismissTime","Math","abs","notificationDismissTime","authorizations","rawItems","params","from","size","orderBy","defaultSortableColumn","direction","state","notifications","data","loading","hasMore","error","pageParams","loadMorePromise","append","newItems","existingItems","replace","items","load","merge","requestParams","Object","assign","getPaymentsAuthorizations","then","raw","length","totalCount","totalItems","currentPage","processPayments","processedPayments","catch","loadMore","done","getRequestParams","changePage","currentParams","reload","onSort","bindEvents","subscribe","NOTIFICATION_EVENT","notification","push","$onInit","removeSelectedPayment","selected","index","findIndex","id","paymentId","splice","notifyOnAuthSuccess","publish","PAYMENT_AUTH_SUCCESS","res","notifyOnAuthFail","PAYMENT_AUTH_FAIL","err","notifyOnMultipleAuthResult","succeeded","PAYMENT_AUTH_MULTIPLE_SUCCESS","failed","PAYMENT_AUTH_MULTIPLE_FAIL","selectedAll","authorize","authorizePayment","authorizeMultiple","authorizeMultiplePayments","notifyOnRejectSuccess","PAYMENT_REJECT_SUCCESS","notifyOnRejectFail","PAYMENT_REJECT_FAIL","notifyOnMultipleRejectResult","PAYMENT_REJECT_MULTIPLE_SUCCESS","PAYMENT_REJECT_MULTIPLE_FAIL","reject","rejectPayment","rejectMultiple","rejectMultiplePayments","Event","payments"],"mappings":"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","file":"widget-bb-authorization-ng/scripts/widget-bb-authorization-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"model-bb-payment-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-authorization-ng\", [\"vendor-bb-angular\", \"lib-bb-model-errors\", \"lib-bb-widget-extension-ng\", \"lib-bb-event-bus-ng\", \"model-bb-payment-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-authorization-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"model-bb-payment-ng\"));\n\telse\n\t\troot[\"widget-bb-authorization-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"model-bb-payment-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_60__, __WEBPACK_EXTERNAL_MODULE_80__, __WEBPACK_EXTERNAL_MODULE_89__, __WEBPACK_EXTERNAL_MODULE_90__, __WEBPACK_EXTERNAL_MODULE_91__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 22d24c31efc7cba15061","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-authorization-ng/model.xml\n// module id = 0\n// module chunks = 9","module.exports = __WEBPACK_EXTERNAL_MODULE_60__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 60\n// module chunks = 5 6 7 8 9 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_80__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 80\n// module chunks = 6 9 10 11 12 13","/**\n * @module widget-bb-authorization-ng\n *\n * @description\n * Widget to authorize or reject payment orders\n *\n * @usage\n *  <div ng-controller=\"AuthorizationController as $ctrl\">\n *    <table>\n *      <thead>\n *        <tr>\n *          <th i18n-key=\"header.status\"></th>\n *          <th i18n-key=\"header.from\"></th>\n *          <th i18n-key=\"header.to\"></th>\n *          <th i18n-key=\"header.currency\"></th>\n *          <th i18n-key=\"header.amount\"></th>\n *        </tr>\n *      </thead>\n *      <tbody>\n *        <tr ng-repeat=\"payment in $ctrl.state.authorizations.data track by payment.id\">\n *          <td i18n-key=\"{{ ::payment.statusLabel }}\"></td>\n *          <td ng-bind=\"::payment.debitAccountIdentification.identification\"></td>\n *          <td ng-bind=\"::payment.creditAccountIdentification.identification\"></td>\n *          <td ng-bind=\"::payment.currency\"></td>\n *          <td ng-bind=\"::payment.amount | currency: ''\"></td>\n *        </tr>\n *      </tbody>\n *    </table>\n *  </div>\n */\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport bbEventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\n\nimport modelPaymentModuleKey, {\n  modelPaymentKey,\n} from 'model-bb-payment-ng';\n\nimport Controller from './controller';\nimport * as defaultHooks from './default-hooks';\n\nconst hooksKey = 'widget-bb-authorization-ng:hooks';\n\nexport default angular\n  .module('widget-bb-authorization-ng', [\n    modelPaymentModuleKey,\n    bbEventBusModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('AuthorizationController', [\n    // dependencies to inject\n    modelPaymentKey,\n    hooksKey,\n    eventBusKey,\n    /* into */\n    Controller,\n  ])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-authorization-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_89__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 89\n// module chunks = 9 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_90__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 90\n// module chunks = 9 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_91__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-payment-ng\"\n// module id = 91\n// module chunks = 9 10 11 12 13","import { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\nimport Event from './constants';\n\nconst errorMessages = {\n  [E_AUTH]: 'model.error.auth',\n  [E_CONNECTIVITY]: 'model.error.connectivity',\n  [E_USER]: 'model.error.user',\n  [E_UNEXPECTED]: 'model.error.unexpected',\n};\n\nconst uiError = (messageMap, modelError) => ({\n  message: messageMap[modelError.code],\n});\n\nconst selections = {\n  selectedPayments: [],\n};\n\n/**\n * Defines the default pageSize for the authorizations page\n * as defined in the widget model.xml\n * @type {int}\n */\nconst DEFAULT_PAGE_SIZE = 20;\n\n/**\n * Defines the default maxNavPages for the accounts page\n * as defined in the widget model.xml\n * @type {int}\n */\nconst DEFAULT_MAX_NAV_PAGES = 3;\n\n/**\n * Defines the default paginationType for the accounts page\n * as defined in the widget model.xml\n * @type {string}\n */\nconst DEFAULT_PAGINATION_TYPE = 'load-more';\n\n/**\n * @name AuthorizationController\n * @type {object}\n *\n * @description\n * Widget to authorize or reject payment orders\n *\n * @usage\n * <div ng-controller=\"AuthorizationController as $ctrl\">\n *   <!-- ... -->\n * </div>\n */\nexport default function AuthorizationController(model, hooks, bus) {\n  const $ctrl = this;\n  const preferences = model.getPaymentPreferences();\n  const pageSize = preferences.authorizationPageSize || DEFAULT_PAGE_SIZE;\n  const maxNavPages = preferences.maxNavPages || DEFAULT_MAX_NAV_PAGES;\n  const paginationType = preferences.paginationType || DEFAULT_PAGINATION_TYPE;\n  const dismissTime = Math.abs(preferences.notificationDismissTime) || 2;\n\n  const authorizations = {\n    rawItems: [],\n    params: {\n      from: 0,\n      size: pageSize,\n      maxNavPages,\n      paginationType,\n      orderBy: hooks.defaultSortableColumn(),\n      direction: null,\n    },\n  };\n  const state = {\n    notifications: [],\n    authorizations: {\n      data: null,\n      get orderBy() { return authorizations.params.orderBy; },\n      get direction() { return authorizations.params.direction; },\n      loading: false,\n      hasMore: false,\n      error: null,\n    },\n    pageParams: authorizations.params,\n  };\n\n  /**\n   * @type {promise.<void>} loadMorePromise\n   */\n  let loadMorePromise = null;\n\n  /**\n   * Merges new payments with existing payments\n   *\n   * @inner\n   * @name append\n   * @type {function}\n   * @returns {array} merged array of old and new payments\n   */\n  const append = (newItems, existingItems) => [...existingItems, ...newItems];\n\n  /**\n   * Replaces existing payments with new payments\n   *\n   * @inner\n   * @name replace\n   * @type {function}\n   * @returns {array} new payments\n   */\n  const replace = items => items;\n\n  /**\n   * @name load\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Get pending or partially auhtorized payment orders.\n   *\n   * @returns {Promise.<array>}\n   */\n  const load = (merge, params) => {\n    const requestParams = Object.assign({}, authorizations.params, params);\n    state.authorizations.error = null;\n    state.authorizations.loading = true;\n    return model\n      .getPaymentsAuthorizations(requestParams)\n      .then(raw => {\n        state.authorizations.loading = false;\n        authorizations.rawItems = merge(raw.data, authorizations.rawItems);\n        state.authorizations.hasMore = authorizations.rawItems.length < raw.totalCount;\n\n        state.pageParams.totalItems = raw.totalCount || 0;\n        state.pageParams.currentPage = requestParams.currentPage;\n\n        return authorizations.rawItems;\n      })\n      .then(hooks.processPayments)\n      .then(processedPayments => {\n        state.authorizations.data = processedPayments;\n      })\n      .catch(error => {\n        state.authorizations.loading = false;\n        state.authorizations.error = uiError(errorMessages, error);\n      });\n  };\n\n  /**\n   * @name loadMore\n   *\n   * @description\n   * Loads more payments if they are available.\n   *\n   * @type {function}\n   * @param {function} done Callback to stop loading\n   * @returns {Promise.<void>}\n   */\n  const loadMore = done => {\n    if (state.authorizations.loading) {\n      return loadMorePromise;\n    }\n\n    authorizations.params.from++;\n\n    loadMorePromise = load(append)\n      .then(() => {\n        loadMorePromise = null;\n        done();\n      })\n      .catch(() => {\n        loadMorePromise = null;\n        authorizations.params.from--;\n        done();\n      });\n\n    return loadMorePromise;\n  };\n\n  /**\n   * @description\n   * Get params for request.\n   *\n   * @name AuthorizationController#getRequestParams\n   *\n   * @inner\n   * @param {Object} params Custom params\n   * @type {function}\n   * @returns {Object} A request params\n   */\n  const getRequestParams = (params) => Object.assign({}, authorizations.params, {\n    // In BE services pagination starts from 0 page, but in bootstrap directive it's 1\n    from: params.currentPage - 1,\n  }, params);\n\n  /**\n   * @description\n   * Change page of displayed payment orders.\n   *\n   * @name AuthorizationController#changePage\n   * @type {function}\n   * @returns {Promise.<module:model-bb-payment-ng.Payments, ModelError>}\n   * A Promise with loaded payment orders\n   */\n  const changePage = (params = {}) => {\n    const currentParams = getRequestParams(params);\n\n    return load(replace, currentParams);\n  };\n\n  /**\n   * @name reload\n   *\n   * @description\n   * Reloads the current collection\n   *\n   * @inner\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const reload = () => {\n    const params = authorizations.params;\n    const from = state.pageParams.currentPage ? (state.pageParams.currentPage - 1) : 0;\n    const size = (params.from + 1) * params.size;\n    return load(replace, { from, size });\n  };\n\n  /**\n   * @name onSort\n   * @type {function}\n   * @description\n   * Loads sorted list of payments\n   * @param  {string} orderBy   Column key to sort\n   * @param  {string} direction Sort direction\n   */\n  const onSort = (orderBy, direction) => {\n    Object.assign(authorizations.params, {\n      orderBy,\n      direction,\n    });\n    reload();\n  };\n\n  /**\n   * @name bindEvents\n   *\n   * @description\n   * Adds subscriptions to bus events\n   *\n   * @inner\n   * @type {function}\n   */\n  const bindEvents = () => {\n    bus.subscribe(Event.NOTIFICATION_EVENT, (notification) => {\n      state.notifications.push(notification);\n    });\n  };\n\n  /**\n   * @name $onInit\n   * @type {function}\n   *\n   * @description\n   * Initialise the controller loading payment orders to authorize.\n   *\n   * @returns {Promise.<array>}\n   */\n  const $onInit = () => load(replace).then(bindEvents);\n\n  /**\n   * @name removeSelectedPayment\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Remove payment id from selected payments.\n   *\n   * @returns {void}\n   */\n  const removeSelectedPayment = paymentId => {\n    const selected = selections.selectedPayments;\n    const index = selected.findIndex(id => id === paymentId);\n    if (index > -1) {\n      selected.splice(index, 1);\n    }\n  };\n\n  /**\n   * @name notifyOnAuthSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's success.\n   *\n   * @fires bb.event.payment.auth.success\n   *\n   * @returns {object}\n   */\n  const notifyOnAuthSuccess = res => {\n    bus.publish(Event.PAYMENT_AUTH_SUCCESS, res);\n  };\n\n  /**\n   * @name notifyOnAuthFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's failure.\n   *\n   * @fires bb.event.payment.auth.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnAuthFail = err => {\n    bus.publish(Event.PAYMENT_AUTH_FAIL, err);\n  };\n\n  /**\n   * @name notifyOnMultipleAuthResult\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on multiple authorization results.\n   *\n   * @fires bb.event.payment.auth.multiple.success\n   * @fires bb.event.payment.auth.multiple.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnMultipleAuthResult = res => {\n    if (res.succeeded.length) {\n      bus.publish(Event.PAYMENT_AUTH_MULTIPLE_SUCCESS, res.succeeded.length);\n    }\n\n    if (res.failed.length) {\n      bus.publish(Event.PAYMENT_AUTH_MULTIPLE_FAIL, res.failed.length);\n    }\n\n    // Keep selected failed payments only\n    selections.selectedPayments = res.failed || [];\n    selections.selectedAll = false;\n  };\n\n  /**\n   * @name authorize\n   * @type {function}\n   *\n   * @description\n   * Request payment authorization.\n   *\n   * @param {string} paymentId Id of the payment\n   *\n   * @returns {Promise}\n   */\n  const authorize = paymentId =>\n    model.authorizePayment(paymentId)\n      .then(notifyOnAuthSuccess)\n      .then(() => removeSelectedPayment(paymentId))\n      .then(reload)\n      .catch(notifyOnAuthFail);\n\n  /**\n   * @name authorizeMultiple\n   * @type {function}\n   *\n   * @description\n   * Request list of payments authorization.\n   *\n   * @param {array} selectedPayments Collection of payments id\n   *\n   * @returns {Promise}\n   */\n  const authorizeMultiple = selectedPayments =>\n    model.authorizeMultiplePayments(selectedPayments)\n      .then(notifyOnMultipleAuthResult)\n      .then(reload)\n      .catch(error => {\n        state.error = error;\n      });\n\n  /**\n   * @name notifyOnRejectSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on rejection request's success.\n   *\n   * @fires bb.event.payment.reject.success\n   *\n   * @returns {object}\n   */\n  const notifyOnRejectSuccess = (res) => {\n    bus.publish(Event.PAYMENT_REJECT_SUCCESS, res);\n  };\n\n  /**\n   * @name notifyOnRejectFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on rejection request's failure.\n   *\n   * @fires bb.event.payment.reject.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnRejectFail = (err) => {\n    bus.publish(Event.PAYMENT_REJECT_FAIL, err);\n  };\n\n  /**\n   * @name notifyOnMultipleRejectResult\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on multiple rejection results.\n   *\n   * @fires bb.event.payment.reject.multiple.success\n   * @fires bb.event.payment.reject.multiple.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnMultipleRejectResult = (res) => {\n    if (res.succeeded.length) {\n      bus.publish(Event.PAYMENT_REJECT_MULTIPLE_SUCCESS, res.succeeded.length);\n    }\n\n    if (res.failed.length) {\n      bus.publish(Event.PAYMENT_REJECT_MULTIPLE_FAIL, res.failed.length);\n    }\n\n    // Keep selected failed payments only\n    selections.selectedPayments = res.failed || [];\n    selections.selectedAll = false;\n  };\n\n  /**\n   * @name reject\n   * @type {function}\n   *\n   * @description\n   * Request payment rejection.\n   *\n   * @param {string} paymentId Id of the payment\n   *\n   * @returns {Promise}\n   */\n  const reject = paymentId =>\n    model.rejectPayment(paymentId)\n      .then(notifyOnRejectSuccess)\n      .then(() => removeSelectedPayment(paymentId))\n      .then(reload)\n      .catch(notifyOnRejectFail);\n\n  /**\n   * @name rejectMultiple\n   * @type {function}\n   *\n   * @description\n   * Request multiple payments rejection.\n   *\n   * @param {array} selectedPayments Collection of payments id\n   *\n   * @returns {Promise}\n   */\n  const rejectMultiple = selectedPayments =>\n    model.rejectMultiplePayments(selectedPayments)\n      .then(notifyOnMultipleRejectResult)\n      .then(reload)\n      .catch(error => {\n        state.error = error;\n      });\n\n  Object.assign($ctrl, {\n    $onInit,\n    state,\n    loadMore,\n    onSort,\n    authorize,\n    authorizeMultiple,\n    reject,\n    rejectMultiple,\n    dismissTime,\n    selections,\n    changePage,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-authorization-ng/scripts/controller.js","const Event = {\n  PAYMENT_AUTH_SUCCESS: 'bb.event.payment.auth.success',\n  PAYMENT_AUTH_FAIL: 'bb.event.payment.auth.fail',\n  PAYMENT_AUTH_MULTIPLE_SUCCESS: 'bb.event.payment.multiple.auth.success',\n  PAYMENT_AUTH_MULTIPLE_FAIL: 'bb.event.payment.multiple.auth.fail',\n  PAYMENT_REJECT_SUCCESS: 'bb.event.payment.reject.success',\n  PAYMENT_REJECT_FAIL: 'bb.event.payment.reject.fail',\n  PAYMENT_REJECT_MULTIPLE_SUCCESS: 'bb.event.payment.multiple.reject.success',\n  PAYMENT_REJECT_MULTIPLE_FAIL: 'bb.event.payment.multiple.reject.fail',\n  NOTIFICATION_EVENT: 'bb.event.notifications.notify',\n};\n\nexport default Event;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-authorization-ng/scripts/constants.js","/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-bb-authorization-ng\n */\n\n/**\n * @name processPayments\n * @type {function}\n *\n * @description\n * Hook for processing payments.\n *\n * @param payments {array} Payments to process\n * @returns {array} Processed payments\n */\nexport const processPayments = payments => payments;\n\n/**\n * @name defaultSortableColumn\n *\n * @description\n * defaultSortableColumn default hook\n *\n * @type {function}\n * @returns {?string}\n */\nexport const defaultSortableColumn = () => null;\n\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-authorization-ng/scripts/default-hooks.js"],"sourceRoot":""}