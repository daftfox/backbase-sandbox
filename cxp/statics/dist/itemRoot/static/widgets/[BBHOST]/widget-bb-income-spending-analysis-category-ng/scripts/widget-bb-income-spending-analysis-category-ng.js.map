{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*****","webpack:///webpack/bootstrap 3ef30015219e38414ee1?dc48*****","webpack:///./widget-bb-income-spending-analysis-category-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114**","webpack:///external \"lib-bb-widget-ng\"?84ad*","webpack:///external \"lib-bb-model-errors\"?7567*","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/index.js","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"lib-bb-currency-ng\"","webpack:///external \"model-bb-income-spending-analysis-category-ng\"","webpack:///external \"model-bb-turnovers-ng\"","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"lib-bb-extension-helpers-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/controller.js","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/message.js","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/constants.js","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/default-hooks.js","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/helpers.js"],"names":["moduleKey","hooksKey","helpersKey","angular","module","widgetModuleKey","eventBusModuleKey","intentModuleKey","modelIncomeSpendingAnalysisCategoryModuleKey","modelTurnoversModuleKey","libBbCurrencyNgKey","bbExtensionHelpersModuleKey","factory","extensionHelpersContextKey","eventBusKey","bbCurrencyRuleKey","$compile","$rootScope","bus","getRule","defaultHooks","helpers","controller","modelIncomeSpendingAnalysisCategoryKey","modelTurnoversKey","bbIntentKey","widgetKey","Controller","run","widget","publish","id","getId","name","IncomeSpendingAnalysisCategoryController","PRODUCT_SELECTED","Message","PRODUCTS_SELECTED","ANALYSIS_CATEGORY_LOAD_FAILED","PERIOD_START_CHANGED","PERIOD_END_CHANGED","hooks","model","turnoversModel","bbIntent","$ctrl","analysisIndicator","getStringPreference","ANALYSIS_INDICATOR_PREF","SPENDING_ANALYSIS_INDICATOR","intentPreferencesArray","split","subCategoriesPreference","getBooleanPreference","SUB_CATEGORIES","isSpendingAnalysis","isSubCategories","intents","errorMessage","code","E_AUTH","E_CONNECTIVITY","E_USER","E_PARAMS","setSelectedAnalysisItem","item","selectedParentCategory","category","updateAnalysisData","selectedAnalysisItem","onSelectedItemChanged","selectAnalysisCategoryItem","selectAnalysisCategoryItemDeprecated","updateAnalysisCategories","validateAnalysisParameters","onAnalysisDataUpdate","creditDebitIndicator","arrangementIds","selectedProducts","map","product","periodStartDate","periodEndDate","parentCategory","then","loadAnalysisData","items","processAnalysisCategoryItems","loaded","series","processAnalysisCategorySeries","transformToSeries","catch","error","processLoadError","updateTurnovers","validateTurnoversParameters","onTurnoversUpdate","intervalDuration","intervalStartDay","loadTurnovers","turnoversItems","processTurnoverResponse","turnoversSeries","processTurnoverSeries","TURNOVERS_DATA_KEY","loadFirstLevelCategories","updateProductsSelected","processSelectedProducts","isFirstProductDefault","isMultipleAccount","setSelectedProducts","setSelectedProduct","onPeriodStartDateChanged","startDate","onPeriodEndDateChanged","endDate","onProductSelected","onProductsSelected","pfmIgnore","payload","products","PRODUCT_CHANGE_PFM_FLAG","initProductSelection","getSelectedProducts","getSelectedProduct","selected","onCategorySelected","open","subcategories","bindEvents","subscribe","selection","debounce","accountSelectionDebounce","initIntent","create","Intent","SELECT_ANALYSIS_ITEM","SELECT_ANALYSIS_ITEM_DEPRECATED","indexOf","UPDATE_ANALYSIS_VIEW","handle","init","initPeriodData","defaultPeriodStart","defaultPeriodEnd","defaultParentCategory","INTERVAL","MONTH","DEFAULT_START_DAY","updateProductsList","getFromStorage","getProductsArray","processProductsList","$onInit","isLoading","Object","assign","DAY","WEEK","YEAR","CURRENT_DATE_OBJECT","Date","CURRENT_YEAR","getFullYear","CURRENT_MONTH","getMonth","MS_IN_MIN","DEFAULT_PERIOD_START","DEFAULT_PERIOD_END","ACCOUNT_CHANGE_DEBOUNCE","DBIT","CRDT","data","params","getTime","getTimezoneOffset","toISOString","slice","$timeout","current","callback","time","cancel"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,0C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,iD;;;;;;;;;ACAA,iD;;;;;;;ACAA,iD;;;;;;;;;;;;;;;;;;;ACcA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAIA;;;;AAIA;;;;AAEA;;;;AAEA;;;;AAIA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAvCA;;;;;;;;;;;;;;AAyCA,KAAMA,YAAY,gDAAlB;AACA,KAAMC,WAAcD,SAAd,WAAN;AACA,KAAME,aAAgBF,SAAhB,aAAN;;mBAEeG,0BACZC,MADY,CACLJ,SADK,EACM,CACjBK,uBADiB,EAEjBC,yBAFiB,EAGjBC,uBAHiB,EAKjBC,iDALiB,EAMjBC,4BANiB,EAOjBC,yBAPiB,EAQjBC,iCARiB,CADN,EAYZC,OAZY,CAYJC,mDAZI,EAYwB,CACnC,UADmC,EAEnC,YAFmC,EAGnCC,4BAHmC,EAInCC,kCAJmC,EAKnC,UAACC,QAAD,EAAWC,UAAX,EAAuBC,GAAvB,EAA4BC,OAA5B;AAAA,UAAyC;AACvCH,uBADuC;AAEvCC,2BAFuC;AAGvCC,aAHuC;AAIvCC;AAJuC,IAAzC;AAAA,EALmC,CAZxB,EAyBZP,OAzBY,CAyBJX,QAzBI,EAyBM,sCAAYmB,sBAAZ,CAzBN,EA2BZR,OA3BY,CA2BJV,UA3BI,EA2BQ,CACnB,UADmB,EAEnBmB,iBAFmB,CA3BR,EAgCZC,UAhCY,CAgCD,0CAhCC,EAgC2C;AACtD;AACAR,6BAFsD,EAGtDb,QAHsD,EAItDC,UAJsD,EAKtDqB,+EALsD,EAMtDC,qCANsD,EAOtDC,0BAPsD,EAQtDC,wBARsD;AAStD;AACAC,qBAVsD,CAhC3C,EA6CZC,GA7CY,CA6CR,CAACd,4BAAD,EAAcY,wBAAd,EAAyB,UAACR,GAAD,EAAMW,MAAN,EAAiB;AAC7CX,OAAIY,OAAJ,CAAY,iBAAZ,EAA+B;AAC7BC,SAAIF,OAAOG,KAAP;AADyB,IAA/B;AAGD,EAJI,CA7CQ,EAmDZC,I;;;;;;AChGH,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;;;;;;mBC8BwBC,wC;;AAtBxB;;AACA;;;;AAEA;;;;mNAXA;;;;;;;;KAuBEC,gB,GAKEC,iB,CALFD,gB;KACAE,iB,GAIED,iB,CAJFC,iB;KACAC,6B,GAGEF,iB,CAHFE,6B;KACAC,oB,GAEEH,iB,CAFFG,oB;KACAC,kB,GACEJ,iB,CADFI,kB;AAGa,UAASN,wCAAT,CACbhB,GADa,EAEbuB,KAFa,EAGbpB,OAHa,EAIbqB,KAJa,EAKbC,cALa,EAMbC,QANa,EAObf,MAPa,EAQb;AACA,OAAMgB,QAAQ,IAAd;;AAEA;;;;;;;AAOA,OAAMC,oBACJjB,OAAOkB,mBAAP,CAA2BC,kCAA3B,EAAoDC,sCAApD,CADF;;AAGA;;;;;;;AAOA,OAAMC,yBACJrB,OAAOkB,mBAAP,CAA2B,SAA3B,EAAsCI,KAAtC,CAA4C,GAA5C,CADF;;AAGA;;;;;;;AAOA,OAAMC,0BAA0BvB,OAAOwB,oBAAP,CAA4BC,yBAA5B,CAAhC;;AAEA;;;;;;;AAOA,OAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,YAAMT,sBAAsBG,sCAA5B;AAAA,IAA3B;;AAEA;;;;;;;AAOA,OAAMO,kBAAkB,SAAlBA,eAAkB;AAAA,YAAMJ,uBAAN;AAAA,IAAxB;;AAEA;;;;;;;;AAQA,OAAMK,UAAU,EAAhB;;AAEA;;;;;;;;;;AAUA,OAAMC,eAAe,SAAfA,YAAe,CAACC,IAAD;AAAA;;AAAA,YAAW,oEAC7BC,wBAD6B,EACpB,iBADoB,0CAE7BC,gCAF6B,EAEZ,yBAFY,0CAG7BC,wBAH6B,EAGpB,iBAHoB,0CAI7BpB,MAAMqB,QAJuB,EAIZrB,MAAMqB,QAJM,0BAK9BJ,IAL8B,KAKrB,uBALU;AAAA,IAArB;;AAOA;;;;;;;;;;;;AAYA,OAAMK,0BAA0B,SAA1BA,uBAA0B,CAACC,IAAD,EAAU;AACxC,SAAIT,qBAAqB,CAACX,MAAMqB,sBAA5B,IAAsDD,IAA1D,EAAgE;AAC9DpB,aAAMqB,sBAAN,GAA+BD,KAAKE,QAAL,IAAiBtB,MAAMqB,sBAAtD;AACAE,4BAF8D,CAExC;AACvB,MAHD,MAGO;AACLvB,aAAMwB,oBAAN,GAA6B5B,MAAM6B,qBAAN,CAA4BL,IAA5B,CAA7B;AACAR,eAAQc,0BAAR,CAAmC1B,MAAMwB,oBAAzC;AACAZ,eAAQe,oCAAR,CAA6C3B,MAAMwB,oBAAnD;AACD;AACF,IATD;;AAWA;;;;;;;;AAQA,OAAMI,2BAA2B,SAA3BA,wBAA2B;AAAA,YAC/B/B,MAAMgC,0BAAN,CAAiCjC,MAAMkC,oBAAN,CAA2B;AAC1DC,6BAAsB9B,iBADoC;AAE1D+B,uBAAgBhC,MAAMiC,gBAAN,CAAuBC,GAAvB,CAA2B;AAAA,gBAAWC,QAAQjD,EAAnB;AAAA,QAA3B,CAF0C;AAG1DkD,wBAAiBpC,MAAMoC,eAHmC;AAI1DC,sBAAerC,MAAMqC,aAJqC;AAK1DC,uBAAgBtC,MAAMqB,sBAAN,IAAgC;AALU,MAA3B,CAAjC,EAOCkB,IAPD,CAOM1C,MAAM2C,gBAPZ,EAQCD,IARD,CAQM,kBAAU;AACdvC,aAAMyC,KAAN,GAAc7C,MAAM8C,4BAAN,CAAmCC,MAAnC,CAAd;AACA3C,aAAM4C,MAAN,GAAehD,MAAMiD,6BAAN,CAAoChD,MAAMiD,iBAAN,CAAwBH,MAAxB,CAApC,EAAqEA,MAArE,CAAf;AACA,cAAOA,MAAP;AACD,MAZD,EAaCI,KAbD,CAaO,iBAAS;AACd/C,aAAMgD,KAAN,GAAcpD,MAAMqD,gBAAN,CAAuBpC,aAAamC,MAAMlC,IAAnB,CAAvB,CAAd;AACAzC,WAAIY,OAAJ,CAAYQ,6BAAZ,EAA2C,EAAEuD,YAAF,EAA3C;AACD,MAhBD,CAD+B;AAAA,IAAjC;;AAmBA;;;;;;;;AAQA,OAAME,kBAAkB,SAAlBA,eAAkB;AAAA,YAAMpD,eAAeqD,2BAAf,CAA2CvD,MAAMwD,iBAAN,CAAwB;AAC/FpB,uBAAgBhC,MAAMiC,gBAAN,CAAuBC,GAAvB,CAA2B;AAAA,gBAAWC,QAAQjD,EAAnB;AAAA,QAA3B,CAD+E;AAE/FkD,wBAAiBpC,MAAMoC,eAFwE;AAG/FC,sBAAerC,MAAMqC,aAH0E;AAI/FgB,yBAAkBrD,MAAMqD,gBAAN,IAA0B,OAJmD;AAK/FC,yBAAkBtD,MAAMsD,gBAAN,IAA0B;AALmD,MAAxB,CAA3C,EAO7Bf,IAP6B,CAOxBzC,eAAeyD,aAPS,EAQ7BhB,IAR6B,CAQxB,kBAAU;AACdvC,aAAMgD,KAAN,GAAc,IAAd;AACAhD,aAAMwD,cAAN,GAAuB5D,MAAM6D,uBAAN,CAA8Bd,MAA9B,CAAvB;AACA3C,aAAM0D,eAAN,GAAwB9D,MAAM+D,qBAAN,CACtB7D,eAAegD,iBAAf,CAAiCH,MAAjC,EAAyCiB,8BAAmB3D,iBAAnB,CAAzC,CADsB,EAErB0C,MAFqB,CAAxB;AAGD,MAd6B,EAe7BI,KAf6B,CAevB,iBAAS;AACd/C,aAAMgD,KAAN,GAAcpD,MAAMqD,gBAAN,CAAuBpC,aAAamC,MAAMlC,IAAnB,CAAvB,CAAd;AACAzC,WAAIY,OAAJ,CAAYQ,6BAAZ,EAA2C,EAAEuD,YAAF,EAA3C;AACD,MAlB6B,CAAN;AAAA,IAAxB;;AAoBA;;;;;;;;AAQA,OAAMzB,qBAAqB,SAArBA,kBAAqB;AAAA,YACzBK,2BACGW,IADH,CACQW,eADR,EAEGX,IAFH,CAEQpB,wBAAwB,IAAxB,CAFR,CADyB;AAAA,IAA3B;;AAKA;;;;;;;;;;AAUA,OAAM0C,2BAA2B,SAA3BA,wBAA2B,GAAM;AACrC7D,WAAMqB,sBAAN,GAA+B,IAA/B;AACAE;AACD,IAHD;;AAKA;;;;;;;;;AASA,OAAMuC,yBAAyB,SAAzBA,sBAAyB,mBAAoB;AACjD9D,WAAMiC,gBAAN,GAAyBrC,MAAMmE,uBAAN,CAA8B9B,gBAA9B,CAAzB;AACA;AACA,SAAI,CAACpC,MAAMmE,qBAAN,EAAL,EAAoC;AAClC;AACD;;AAED,SAAInE,MAAMoE,iBAAN,EAAJ,EAA+B;AAC7BpE,aAAMqE,mBAAN,CAA0BlE,MAAMiC,gBAAhC;AACD,MAFD,MAEO;AACLpC,aAAMsE,kBAAN,CAAyBnE,MAAMiC,gBAAN,CAAuB,CAAvB,CAAzB;AACD;AACF,IAZD;;AAcA;;;;;;;;;AASA,OAAMmC,2BAA2B,SAA3BA,wBAA2B,CAACC,SAAD,EAAe;AAC9CrE,WAAMoC,eAAN,GAAwBiC,SAAxB;AACAhG,SAAIY,OAAJ,CAAYS,oBAAZ,EAAkCM,MAAMoC,eAAxC;AACD,IAHD;;AAKA;;;;;;;;;AASA,OAAMkC,yBAAyB,SAAzBA,sBAAyB,CAACC,OAAD,EAAa;AAC1CvE,WAAMqC,aAAN,GAAsBkC,OAAtB;AACAlG,SAAIY,OAAJ,CAAYU,kBAAZ,EAAgCK,MAAMqC,aAAtC;AACD,IAHD;;AAKA;;;;;;;;;AASA,OAAMmC,oBAAoB,SAApBA,iBAAoB,GAAM;AAC9BnG,SAAIY,OAAJ,CAAYK,gBAAZ,EAA8B;AAC5B6C,gBAASnC,MAAMiC,gBAAN,CAAuB,CAAvB;AADmB,MAA9B;AAGD,IAJD;;AAMA;;;;;;;;;;;;AAYA,OAAMwC,qBAAqB,SAArBA,kBAAqB,GAAuB;AAAA,SAAtBC,SAAsB,uEAAV,KAAU;;AAChD,SAAMC,UAAU;AACdC,iBAAU5E,MAAMiC;AADF,MAAhB;;AAIA,SAAIyC,SAAJ,EAAe;AACbC,eAAQE,kCAAR,IAAmCH,SAAnC;AACD;;AAEDrG,SAAIY,OAAJ,CAAYO,iBAAZ,EAA+BmF,OAA/B;AACD,IAVD;;AAYA;;;;;;;AAOA,OAAMG,uBAAuB,SAAvBA,oBAAuB,GAAM;AACjC,SAAIjF,MAAMoE,iBAAN,EAAJ,EAA+B;AAC7B,cAAOpE,MAAMkF,mBAAN,GACJxC,IADI,CACCuB,sBADD,EAEJvB,IAFI,CAEC,YAAM;AACV,aAAI1C,MAAMmE,qBAAN,EAAJ,EAAmC;AACjCS,8BAAmB,IAAnB;AACD;AACF,QANI,CAAP;AAOD;;AAED,YAAO5E,MAAMmF,kBAAN,GACJzC,IADI,CACC,oBAAY;AAChB,WAAI0C,QAAJ,EAAc;AACZnB,gCAAuB,CAACmB,QAAD,CAAvB;AACD;AACF,MALI,CAAP;AAMD,IAjBD;;AAmBA;;;;;;;AAOA,OAAMC,qBAAqB,SAArBA,kBAAqB,CAAC5D,QAAD,EAA4B;AAAA,SAAjB6D,IAAiB,uEAAV,KAAU;;AACrD;AACA,SAAIA,IAAJ,EAAU;AACR,cAAO,KAAP;AACD;;AAED,YAAOtF,MAAMgC,0BAAN,CAAiCjC,MAAMkC,oBAAN,CAA2B;AACjEC,6BAAsB9B,iBAD2C;AAEjE+B,uBAAgBhC,MAAMiC,gBAAN,CAAuBC,GAAvB,CAA2B;AAAA,gBAAWC,QAAQjD,EAAnB;AAAA,QAA3B,CAFiD;AAGjEkD,wBAAiBpC,MAAMoC,eAH0C;AAIjEC,sBAAerC,MAAMqC,aAJ4C;AAKjEC,uBAAgBhB,QALiD;AAMjE+B,yBAAkBrD,MAAMqD,gBANyC;AAOjEC,yBAAkBtD,MAAMsD;AAPyC,MAA3B,CAAjC,EASNf,IATM,CASD1C,MAAM2C,gBATL,EAUND,IAVM,CAUD,UAACI,MAAD,EAAY;AAChB3C,aAAMoF,aAAN,GAAsBxF,MAAM8C,4BAAN,CAAmCC,MAAnC,CAAtB;AACD,MAZM,CAAP;AAaD,IAnBD;;AAqBA;;;;;;AAMA,YAAS0C,UAAT,GAAsB;AACpBhH,SAAIiH,SAAJ,CAAchG,gBAAd,EAAgC,qBAAa;AAC3CwE,8BAAuB,CAACyB,UAAUpD,OAAX,CAAvB;AACAZ;AACD,MAHD;AAIAlD,SAAIiH,SAAJ,CAAc9F,iBAAd,EAAiC,qBAAa;AAC5C,WAAI+F,UAAUV,kCAAV,CAAJ,EAAwC;AACtC;AACD;;AAEDrG,eAAQgH,QAAR,CAAiB,YAAM;AACrB1B,gCAAuByB,UAAUX,QAAjC;AACArD;AACD,QAHD,EAGG3B,MAAM6F,wBAAN,EAHH;AAID,MATD;AAUApH,SAAIiH,SAAJ,CAAc5F,oBAAd,EAAoC,UAAC2E,SAAD,EAAe;AACjDrE,aAAMoC,eAAN,GAAwBiC,SAAxB;AACA9C;AACD,MAHD;AAIAlD,SAAIiH,SAAJ,CAAc3F,kBAAd,EAAkC,UAAC4E,OAAD,EAAa;AAC7CvE,aAAMqC,aAAN,GAAsBkC,OAAtB;AACAhD;AACD,MAHD;AAID;;AAED;;;;;;AAMA,OAAMmE,aAAa,SAAbA,UAAa,GAAM;AACvB;;;;;;;;AAQA9E,aAAQc,0BAAR,GACE3B,SAAS4F,MAAT,CAAgBC,kBAAOC,oBAAP,CAA4B5F,iBAA5B,CAAhB,CADF;;AAGA;;;;;;;;AAQAW,aAAQe,oCAAR,GACE5B,SAAS4F,MAAT,CAAgBC,kBAAOE,+BAAvB,CADF;;AAGA,SAAIzF,uBAAuB0F,OAAvB,CAA+BH,kBAAOI,oBAAtC,IAA8D,CAAC,CAAnE,EAAsE;AACpE;;;;;;AAMAjG,gBAASkG,MAAT,CAAgBL,kBAAOI,oBAAvB,EAA6C,YAAM;AACjDpE,oCACGW,IADH,CACQpB,wBAAwB,IAAxB,CADR;AAED,QAHD;AAID;;AAEDpB,cAASmG,IAAT,CAAc,YAAM,CAAE,CAAtB;AACD,IArCD;;AAuCA;;;;;;;;AAQA,OAAMC,iBAAiB,SAAjBA,cAAiB,GAAM;AAC3BnG,WAAMoC,eAAN,GAAwBxC,MAAMwG,kBAAN,EAAxB;AACApG,WAAMqC,aAAN,GAAsBzC,MAAMyG,gBAAN,EAAtB;AACArG,WAAMqB,sBAAN,GAA+BzB,MAAM0G,qBAAN,EAA/B;AACAtG,WAAMqD,gBAAN,GAAyBkD,oBAASC,KAAlC;AACAxG,WAAMsD,gBAAN,GAAyBmD,4BAAzB;AACD,IAND;;AAQA;;;;;;;;;AASA,OAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,cAAD;AAAA,YAAoB9G,MAAM+G,gBAAN,CAAuBD,cAAvB,EAC5CpE,IAD4C,CACvC,UAACqC,QAAD,EAAc;AAClB5E,aAAM4E,QAAN,GAAiBhF,MAAMiH,mBAAN,CAA0BjC,QAA1B,CAAjB;AACA,cAAO5E,MAAM4E,QAAb;AACD,MAJ4C,EAK5C7B,KAL4C,CAKtC,iBAAS;AACd/C,aAAMgD,KAAN,GAAcnC,aAAamC,MAAMlC,IAAnB,CAAd;AACAzC,WAAIY,OAAJ,CAAYQ,6BAAZ,EAA2C,EAAEuD,YAAF,EAA3C;AACD,MAR4C,CAApB;AAAA,IAA3B;;AAUA;;;;;;;;AAQA,OAAM8D,UAAU,SAAVA,OAAU,GAAM;AACpB9G,WAAM+G,SAAN,GAAkB,IAAlB;AACA,YAAOL,qBACJnE,IADI,CACCuC,oBADD,EAEJvC,IAFI,CAEC4D,cAFD,EAGJ5D,IAHI,CAGCmD,UAHD,EAIJnD,IAJI,CAICX,wBAJD,EAKJW,IALI,CAKCW,eALD,EAMJX,IANI,CAMC8C,UAND,EAOJ9C,IAPI,CAOC,YAAM;AAAEvC,aAAM+G,SAAN,GAAkB,KAAlB;AAA0B,MAPnC,CAAP;AAQD,IAVD;;AAYAC,UAAOC,MAAP,CAAcjH,KAAd,EAAqB;AACnB8G,qBADmB;;AAGnB;;;;;;;AAOA7E,uBAAkB,EAVC;;AAYnB;;;;;;;;AAQA2C,eAAU,EApBS;;AAsBnB;;;;;;;;AAQAnC,YAAO,IA9BY;;AAgCnB;;;;;;;;AAQA2C,oBAAe,IAxCI;;AA0CnB;;;;;;;;AAQA5B,qBAAgB,IAlDG;;AAoDnB;;;;;;;;;AASAZ,aAAQ,IA7DW;;AA+DnB;;;;;;;;;AASAc,sBAAiB,IAxEE;;AA0EnB;;;;;;;AAOAtB,sBAAiB,IAjFE;;AAmFnB;;;;;;;AAOAC,oBAAe,IA1FI;;AA4FnB;;;;;;;AAOAhB,6BAAwB,IAnGL;;AAqGnB;;;;;;;AAOAG,2BAAsB,IA5GH;AA6GnBL,qDA7GmB;AA8GnBT,2CA9GmB;;AAgHnBC,qCAhHmB;AAiHnBkD,uDAjHmB;;AAmHnB;;;;;;;AAOAkD,gBAAW,KA1HQ;AA2HnB3C,uDA3HmB;AA4HnBE,mDA5HmB;AA6HnBE,yCA7HmB;AA8HnBC,2CA9HmB;AA+HnB7C,uDA/HmB;AAgInBsB,qCAhImB;AAiInBgC,2CAjImB;;AAmInB;;;;;;;AAOAlC,YAAO;AA1IY,IAArB;AA4ID,E;;;;;;;;;;;mBC5nBc;AACd;;;;;AAKC1D,qBAAkB,2BANL;;AAQd;;;;;AAKCE,sBAAmB,4BAbN;;AAed;;;;;AAKCC,kCAA+B,4DApBlB;;AAsBd;;;;;AAKCC,yBAAsB,sDA3BT;;AA6Bd;;;;;AAKCC,uBAAoB;AAlCP,E;;;;;;;;;;;ACAf;;;;;AAKO,KAAM4G,8BAAW;AACtBW,QAAK,KADiB;AAEtBC,SAAM,MAFgB;AAGtBX,UAAO,OAHe;AAItBY,SAAM;AAJgB,EAAjB;;AAOP;;;;;AAKO,KAAMX,gDAAoB,CAA1B;;AAEP;;;;;;;;AAQA,KAAMY,sBAAsB,IAAIC,IAAJ,EAA5B;;AAEA;;;;;;;AAOA,KAAMC,eAAeF,oBAAoBG,WAApB,EAArB;;AAEA;;;;;;;AAOA,KAAMC,gBAAgBJ,oBAAoBK,QAApB,EAAtB;;AAEA;;;;;;AAMO,KAAMvH,4DAA0B,mBAAhC;;AAEP;;;;;;AAMO,KAAMC,oEAA8B,MAApC;;AAEP;;;;;;AAMO,KAAMK,0CAAiB,eAAvB;;AAEP;;;;;;AAMO,KAAMkH,gCAAY,KAAlB;;AAEP;;;;;;AAMO,KAAMC,sDAAuB,IAAIN,IAAJ,CAASC,YAAT,EAAuBE,aAAvB,EAAsC,CAAtC,CAA7B;;AAEP;;;;;;AAMO,KAAMI,kDAAqB,IAAIP,IAAJ,EAA3B;;AAEP;;;;;AAKO,KAAMQ,4DAA0B,CAAhC;;AAEP;;;;;;AAMO,KAAMlC,0BAAS;AACpB;AACA;AACAE,oCAAiC,oCAHb;AAIpBD,yBAAsB;AACpBkC,WAAM,uCADc;AAEpBC,WAAM;AAFc,IAJF;AAQpBhC,yBAAsB;AARF,EAAf;;AAWP;;;;;;AAMO,KAAMpC,kDAAqB;AAChCmE,SAAM,aAD0B;AAEhCC,SAAM;AAF0B,EAA3B;;AAKP;;;;;;;AAOO,KAAMnD,4DAA0B,YAAhC,C;;;;;;;;;;;;AChIP;;AAOA;;;;;;;;;;;;AAYA,KAAMnC,+BAA+B,SAA/BA,4BAA+B;AAAA,UAASD,SAAS,EAAlB;AAAA,EAArC;;AAEA;;;;;;;;;;;;AA9BA;AACA;;;;;;;;AAyCA,KAAMI,gCAAgC,SAAhCA,6BAAgC,CAACD,MAAD,EAASqF,IAAT;AAAA,UAAkBrF,UAAU,EAA5B;AAAA,EAAtC;;AAEA;;;;;;;;;;AAUA,KAAMd,uBAAuB,SAAvBA,oBAAuB;AAAA,UAAUoG,MAAV;AAAA,EAA7B;;AAEA;;;;;;;;;;AAUA,KAAM9E,oBAAoB,SAApBA,iBAAoB;AAAA,UAAU8E,MAAV;AAAA,EAA1B;;AAEA;;;;;;;;;;AAUA,KAAMzE,0BAA0B,SAA1BA,uBAA0B;AAAA,UAAQwE,IAAR;AAAA,EAAhC;;AAEA;;;;;;;;;;;AAWA,KAAMtE,wBAAwB,SAAxBA,qBAAwB,CAACf,MAAD,EAASqF,IAAT;AAAA,UAAkBrF,MAAlB;AAAA,EAA9B;;AAEA;;;;;;;;;AASA,KAAMmB,0BAA0B,SAA1BA,uBAA0B;AAAA,UAAYa,QAAZ;AAAA,EAAhC;;AAEA;;;;;;;;;;AAUA,KAAMiC,sBAAsB,SAAtBA,mBAAsB;AAAA,UAAYjC,QAAZ;AAAA,EAA5B;;AAEA;;;;;;;;;AASA,KAAMwB,qBAAqB,SAArBA,kBAAqB;AAAA,UACzB,IAAIkB,IAAJ,CAASM,gCAAqBO,OAArB,KAAkCP,gCAAqBQ,iBAArB,KAA2CT,oBAAtF,EACGU,WADH,GAEGC,KAFH,CAES,CAFT,EAEY,EAFZ,CADyB;AAAA,EAA3B;;AAKA;;;;;;;;;AASA,KAAMjC,mBAAmB,SAAnBA,gBAAmB;AAAA,UACvB,IAAIiB,IAAJ,CAASO,8BAAmBM,OAAnB,KAAgCN,8BAAmBO,iBAAnB,KAAyCT,oBAAlF,EACGU,WADH,GAEGC,KAFH,CAES,CAFT,EAEY,EAFZ,CADuB;AAAA,EAAzB;;AAKA;;;;;;;;;AASA,KAAMhC,wBAAwB,SAAxBA,qBAAwB;AAAA,UAAM,IAAN;AAAA,EAA9B;;AAEA;;;;;;;;;;AAUA,KAAMb,2BAA2B,SAA3BA,wBAA2B;AAAA,UAAMqC,kCAAN;AAAA,EAAjC;;AAEA;;;;;;;;;;AAUA,KAAMrG,wBAAwB,SAAxBA,qBAAwB;AAAA,UAAQL,IAAR;AAAA,EAA9B;;AAEA;;;;;;;;;;AAUA,KAAM6B,mBAAmB,SAAnBA,gBAAmB;AAAA,UAASD,KAAT;AAAA,EAAzB;;mBAEe;AACbN,6DADa;AAEbG,+DAFa;AAGbf,6CAHa;AAIbsB,uCAJa;AAKbK,mDALa;AAMbE,+CANa;AAObI,mDAPa;AAQb8C,2CARa;AASbT,yCATa;AAUbC,qCAVa;AAWbZ,qDAXa;AAYbxC,qCAZa;AAabxB,+CAba;AAcb6E;AAda,E;;;;;;;;;;;AC/Lf;;;;;;;AAOA,KAAM9H,UAAU,SAAVA,OAAU,CAAC+J,QAAD,EAAc;AAC5B;;;;;;AAMA,OAAIC,UAAU,IAAd;;AAEA,UAAO;AACLhD,eAAU,kBAACiD,QAAD,EAAWC,IAAX,EAAoB;AAC5B,WAAIF,OAAJ,EAAa;AACXD,kBAASI,MAAT,CAAgBH,OAAhB;AACD;;AAEDA,iBAAUD,SAASE,QAAT,EAAmBC,IAAnB,CAAV;AACD;AAPI,IAAP;AASD,EAlBD;;mBAoBelK,O","file":"widget-bb-income-spending-analysis-category-ng/scripts/widget-bb-income-spending-analysis-category-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-currency-ng\"), require(\"model-bb-income-spending-analysis-category-ng\"), require(\"model-bb-turnovers-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"lib-bb-intent-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-income-spending-analysis-category-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-model-errors\", \"lib-bb-event-bus-ng\", \"lib-bb-currency-ng\", \"model-bb-income-spending-analysis-category-ng\", \"model-bb-turnovers-ng\", \"lib-bb-widget-extension-ng\", \"lib-bb-extension-helpers-ng\", \"lib-bb-intent-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-income-spending-analysis-category-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-currency-ng\"), require(\"model-bb-income-spending-analysis-category-ng\"), require(\"model-bb-turnovers-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"lib-bb-intent-ng\"));\n\telse\n\t\troot[\"widget-bb-income-spending-analysis-category-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-currency-ng\"], root[\"model-bb-income-spending-analysis-category-ng\"], root[\"model-bb-turnovers-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-extension-helpers-ng\"], root[\"lib-bb-intent-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_37__, __WEBPACK_EXTERNAL_MODULE_38__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_40__, __WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_43__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3ef30015219e38414ee1","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-income-spending-analysis-category-ng/model.xml\n// module id = 0\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 22\n// module chunks = 3 4 5 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_26__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 26\n// module chunks = 3 4 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 28\n// module chunks = 3 4 6 7","/**\n * @module widget-bb-income-spending-analysis-category-ng\n *\n * @description\n * Income/Spending analysis by category widget\n *\n * @usage\n * <div ng-controller=\"IncomeSpendingAnalysisCategoryController as $ctrl\">\n *   <ui-bb-chartjs-chart-donut-ng\n *     data-series=\"$ctrl.series\"\n *   ></ui-bb-chartjs-chart-donut-ng>\n * </div>\n */\n\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\n\nimport libBbCurrencyNgKey, {\n  bbCurrencyRuleKey,\n} from 'lib-bb-currency-ng';\n\nimport modelIncomeSpendingAnalysisCategoryModuleKey, {\n  modelIncomeSpendingAnalysisCategoryKey,\n} from 'model-bb-income-spending-analysis-category-ng';\n\nimport modelTurnoversModuleKey, { modelTurnoversKey } from 'model-bb-turnovers-ng';\n\nimport extendHooks from 'lib-bb-widget-extension-ng';\n\nimport bbExtensionHelpersModuleKey, {\n  extensionHelpersContextKey,\n} from 'lib-bb-extension-helpers-ng';\n\nimport intentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\n\nimport Controller from './controller';\nimport defaultHooks from './default-hooks';\nimport helpers from './helpers';\n\nconst moduleKey = 'widget-bb-income-spending-analysis-category-ng';\nconst hooksKey = `${moduleKey}:hooks`;\nconst helpersKey = `${moduleKey}:helpers`;\n\nexport default angular\n  .module(moduleKey, [\n    widgetModuleKey,\n    eventBusModuleKey,\n    intentModuleKey,\n\n    modelIncomeSpendingAnalysisCategoryModuleKey,\n    modelTurnoversModuleKey,\n    libBbCurrencyNgKey,\n    bbExtensionHelpersModuleKey,\n  ])\n\n  .factory(extensionHelpersContextKey, [\n    '$compile',\n    '$rootScope',\n    eventBusKey,\n    bbCurrencyRuleKey,\n    ($compile, $rootScope, bus, getRule) => ({\n      $compile,\n      $rootScope,\n      bus,\n      getRule,\n    }),\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .factory(helpersKey, [\n    '$timeout',\n    helpers,\n  ])\n\n  .controller('IncomeSpendingAnalysisCategoryController', [\n    // dependencies to inject\n    eventBusKey,\n    hooksKey,\n    helpersKey,\n    modelIncomeSpendingAnalysisCategoryKey,\n    modelTurnoversKey,\n    bbIntentKey,\n    widgetKey,\n    /* into */\n    Controller,\n  ])\n\n  .run([eventBusKey, widgetKey, (bus, widget) => {\n    bus.publish('cxp.item.loaded', {\n      id: widget.getId(),\n    });\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_37__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 37\n// module chunks = 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_38__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-currency-ng\"\n// module id = 38\n// module chunks = 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-income-spending-analysis-category-ng\"\n// module id = 39\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_40__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-turnovers-ng\"\n// module id = 40\n// module chunks = 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 41\n// module chunks = 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-helpers-ng\"\n// module id = 42\n// module chunks = 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 43\n// module chunks = 6 7","/**\n * @module widget-bb-income-spending-analysis-category-ng\n * @name IncomeSpendingAnalysisCategoryController\n *\n * @description\n * Income/Spending analysis by category\n */\n\nimport { E_AUTH, E_CONNECTIVITY, E_USER } from 'lib-bb-model-errors';\nimport Message from './message';\n\nimport {\n  Intent,\n  ANALYSIS_INDICATOR_PREF,\n  SPENDING_ANALYSIS_INDICATOR,\n  TURNOVERS_DATA_KEY,\n  PRODUCT_CHANGE_PFM_FLAG,\n  SUB_CATEGORIES,\n  DEFAULT_START_DAY,\n  INTERVAL,\n} from './constants';\n\nconst {\n  PRODUCT_SELECTED,\n  PRODUCTS_SELECTED,\n  ANALYSIS_CATEGORY_LOAD_FAILED,\n  PERIOD_START_CHANGED,\n  PERIOD_END_CHANGED,\n} = Message;\n\nexport default function IncomeSpendingAnalysisCategoryController(\n  bus,\n  hooks,\n  helpers,\n  model,\n  turnoversModel,\n  bbIntent,\n  widget\n) {\n  const $ctrl = this;\n\n  /**\n   * @name analysisIndicator\n   * @type {string}\n   * @inner\n   * @description\n   * Credit/Debit indicator that will be used for analysis\n   */\n  const analysisIndicator =\n    widget.getStringPreference(ANALYSIS_INDICATOR_PREF, SPENDING_ANALYSIS_INDICATOR);\n\n  /**\n   * @name intentPreferencesArray\n   * @type {Array}\n   * @inner\n   * @description\n   * Array of available intents\n   */\n  const intentPreferencesArray =\n    widget.getStringPreference('intents').split(',');\n\n  /**\n   * @name subCategoriesPreference\n   * @type {boolean}\n   * @inner\n   * @description\n   * Indicator to mark that this widget uses 2 level categories\n   */\n  const subCategoriesPreference = widget.getBooleanPreference(SUB_CATEGORIES);\n\n  /**\n   * @name isSpendingAnalysis\n   * @type {function}\n   * @description\n   * Is current analysis spending analysis\n   * @returns {boolean}\n   */\n  const isSpendingAnalysis = () => analysisIndicator === SPENDING_ANALYSIS_INDICATOR;\n\n  /**\n   * @name isSubCategories\n   * @type {function}\n   * @description\n   * Is subcategories enabled\n   * @returns {boolean}\n   */\n  const isSubCategories = () => subCategoriesPreference;\n\n  /**\n   * @description\n   * A set of intents that the controller uses or handles\n   *\n   * @name intents\n   * @type {Object}\n   * @inner\n   */\n  const intents = {};\n\n  /**\n   * @description\n   * Converts error code to error message translation key\n   *\n   * @inner\n   * @name errorMessage\n   * @type {function}\n   * @param {string} code Error code\n   * @returns {string} Error message translation key\n   */\n  const errorMessage = (code) => ({\n    [E_AUTH]: 'error.load.auth',\n    [E_CONNECTIVITY]: 'error.load.connectivity',\n    [E_USER]: 'error.load.user',\n    [model.E_PARAMS]: model.E_PARAMS,\n  }[code] || 'error.load.unexpected');\n\n  /**\n   * @description\n   * Setter for the selected analysis category.\n   * It creates an 'intent.rb.transactions.dbit.list.view' or\n   * an 'intent.rb.transactions.crdt.list.view' intent\n   * that can be handled by transaction widget\n   *\n   * @name setSelectedAnalysisItem\n   * @param {any} item selected item\n   * @type {function}\n   * @returns {void}\n   */\n  const setSelectedAnalysisItem = (item) => {\n    if (isSubCategories() && !$ctrl.selectedParentCategory && item) {\n      $ctrl.selectedParentCategory = item.category || $ctrl.selectedParentCategory;\n      updateAnalysisData(); // eslint-disable-line\n    } else {\n      $ctrl.selectedAnalysisItem = hooks.onSelectedItemChanged(item);\n      intents.selectAnalysisCategoryItem($ctrl.selectedAnalysisItem);\n      intents.selectAnalysisCategoryItemDeprecated($ctrl.selectedAnalysisItem);\n    }\n  };\n\n  /**\n   *\n   * Updates analysis items list based on selected product\n   *\n   * @name updateAnalysisCategories\n   * @type {function}\n   * @returns {Promise} A Promise with spending data\n   */\n  const updateAnalysisCategories = () =>\n    model.validateAnalysisParameters(hooks.onAnalysisDataUpdate({\n      creditDebitIndicator: analysisIndicator,\n      arrangementIds: $ctrl.selectedProducts.map(product => product.id),\n      periodStartDate: $ctrl.periodStartDate,\n      periodEndDate: $ctrl.periodEndDate,\n      parentCategory: $ctrl.selectedParentCategory || null,\n    }))\n    .then(model.loadAnalysisData)\n    .then(loaded => {\n      $ctrl.items = hooks.processAnalysisCategoryItems(loaded);\n      $ctrl.series = hooks.processAnalysisCategorySeries(model.transformToSeries(loaded), loaded);\n      return loaded;\n    })\n    .catch(error => {\n      $ctrl.error = hooks.processLoadError(errorMessage(error.code));\n      bus.publish(ANALYSIS_CATEGORY_LOAD_FAILED, { error });\n    });\n\n  /**\n   * Updates turnovers list based on selected product\n   *\n   * @inner\n   * @name updateTurnovers\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const updateTurnovers = () => turnoversModel.validateTurnoversParameters(hooks.onTurnoversUpdate({\n    arrangementIds: $ctrl.selectedProducts.map(product => product.id),\n    periodStartDate: $ctrl.periodStartDate,\n    periodEndDate: $ctrl.periodEndDate,\n    intervalDuration: $ctrl.intervalDuration || 'MONTH',\n    intervalStartDay: $ctrl.intervalStartDay || 1,\n  }))\n  .then(turnoversModel.loadTurnovers)\n  .then(loaded => {\n    $ctrl.error = null;\n    $ctrl.turnoversItems = hooks.processTurnoverResponse(loaded);\n    $ctrl.turnoversSeries = hooks.processTurnoverSeries(\n      turnoversModel.transformToSeries(loaded, TURNOVERS_DATA_KEY[analysisIndicator]\n    ), loaded);\n  })\n  .catch(error => {\n    $ctrl.error = hooks.processLoadError(errorMessage(error.code));\n    bus.publish(ANALYSIS_CATEGORY_LOAD_FAILED, { error });\n  });\n\n  /**\n   * Updates analysis category and turnovers items at once\n   *\n   * @name updateAnalysisData\n   * @inner\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const updateAnalysisData = () =>\n    updateAnalysisCategories()\n      .then(updateTurnovers)\n      .then(setSelectedAnalysisItem(null));\n\n  /**\n   * @description\n   * Loads the parent level categories and\n   * and clears the flag that marks if a\n   * parent category is selected\n   *\n   * @name loadFirstLevelCategories\n   * @type {function}\n   * @returns {void}\n   */\n  const loadFirstLevelCategories = () => {\n    $ctrl.selectedParentCategory = null;\n    updateAnalysisData();\n  };\n\n  /**\n   * @description\n   * Updates selected product\n   *\n   * @inner\n   * @name updateProductsSelected\n   * @type {function}\n   * @param {module:model-bb-product-summary-ng.Product[]} selectedProducts Products to select\n   */\n  const updateProductsSelected = selectedProducts => {\n    $ctrl.selectedProducts = hooks.processSelectedProducts(selectedProducts);\n    // if this widget doesn't do the change in selection there is no need to update storage\n    if (!model.isFirstProductDefault()) {\n      return;\n    }\n\n    if (model.isMultipleAccount()) {\n      model.setSelectedProducts($ctrl.selectedProducts);\n    } else {\n      model.setSelectedProduct($ctrl.selectedProducts[0]);\n    }\n  };\n\n  /**\n   * @description\n   * Handler to be called on period start date change\n   *\n   * @name onPeriodStartDateChanged\n   * @type {function}\n   * @param {string} startDate Date as string in format yyyy-mm-dd\n   * @returns {void}\n   */\n  const onPeriodStartDateChanged = (startDate) => {\n    $ctrl.periodStartDate = startDate;\n    bus.publish(PERIOD_START_CHANGED, $ctrl.periodStartDate);\n  };\n\n  /**\n   * @description\n   * Handler to be called on period end date change\n   *\n   * @name onPeriodEndDateChanged\n   * @type {function}\n   * @param {string} endDate Date as string in format yyyy-mm-dd\n   * @returns {void}\n   */\n  const onPeriodEndDateChanged = (endDate) => {\n    $ctrl.periodEndDate = endDate;\n    bus.publish(PERIOD_END_CHANGED, $ctrl.periodEndDate);\n  };\n\n  /**\n   * @description\n   * Handler to be used on product selection, is using\n   * selected product value from {@link Hooks.processSelectedProducts} hook\n   *\n   * @name onProductSelected\n   * @type {function}\n   * @returns {void}\n   */\n  const onProductSelected = () => {\n    bus.publish(PRODUCT_SELECTED, {\n      product: $ctrl.selectedProducts[0],\n    });\n  };\n\n  /**\n   * @description\n   * Handler to be used on products selection, is using\n   * selected products value from {@link Hooks.processSelectedProducts} hook\n   *\n   * @name onProductsSelected\n   * @type {function}\n   * @param {?Boolean} pfmIgnore Flag to prevent reaction on an account selection change event.\n   * Can be use to ignore event that has originated\n   * from this widget durring the inital setup of the account selection\n   * @returns {void}\n   */\n  const onProductsSelected = (pfmIgnore = false) => {\n    const payload = {\n      products: $ctrl.selectedProducts,\n    };\n\n    if (pfmIgnore) {\n      payload[PRODUCT_CHANGE_PFM_FLAG] = pfmIgnore;\n    }\n\n    bus.publish(PRODUCTS_SELECTED, payload);\n  };\n\n  /**\n   * Reads product selection from storage\n   *\n   * @inner\n   * @name initProductSelection\n   * @type {function}\n   */\n  const initProductSelection = () => {\n    if (model.isMultipleAccount()) {\n      return model.getSelectedProducts()\n        .then(updateProductsSelected)\n        .then(() => {\n          if (model.isFirstProductDefault()) {\n            onProductsSelected(true);\n          }\n        });\n    }\n\n    return model.getSelectedProduct()\n      .then(selected => {\n        if (selected) {\n          updateProductsSelected([selected]);\n        }\n      });\n  };\n\n  /**\n   * Get all subcategories related to the selected category\n   *\n   * @name onCategorySelected\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const onCategorySelected = (category, open = false) => {\n    // If subcategories list is already open, nothing to do.\n    if (open) {\n      return false;\n    }\n\n    return model.validateAnalysisParameters(hooks.onAnalysisDataUpdate({\n      creditDebitIndicator: analysisIndicator,\n      arrangementIds: $ctrl.selectedProducts.map(product => product.id),\n      periodStartDate: $ctrl.periodStartDate,\n      periodEndDate: $ctrl.periodEndDate,\n      parentCategory: category,\n      intervalDuration: $ctrl.intervalDuration,\n      intervalStartDay: $ctrl.intervalStartDay,\n    }))\n    .then(model.loadAnalysisData)\n    .then((loaded) => {\n      $ctrl.subcategories = hooks.processAnalysisCategoryItems(loaded);\n    });\n  };\n\n  /**\n   * Adds subscriptions to bus events\n   * @inner\n   * @name bindEvents\n   * @type {function}\n   */\n  function bindEvents() {\n    bus.subscribe(PRODUCT_SELECTED, selection => {\n      updateProductsSelected([selection.product]);\n      updateAnalysisData();\n    });\n    bus.subscribe(PRODUCTS_SELECTED, selection => {\n      if (selection[PRODUCT_CHANGE_PFM_FLAG]) {\n        return;\n      }\n\n      helpers.debounce(() => {\n        updateProductsSelected(selection.products);\n        updateAnalysisData();\n      }, hooks.accountSelectionDebounce());\n    });\n    bus.subscribe(PERIOD_START_CHANGED, (startDate) => {\n      $ctrl.periodStartDate = startDate;\n      updateAnalysisData();\n    });\n    bus.subscribe(PERIOD_END_CHANGED, (endDate) => {\n      $ctrl.periodEndDate = endDate;\n      updateAnalysisData();\n    });\n  }\n\n  /**\n   * Wrapper function for creating and handling intents\n   * @inner\n   * @name initIntent\n   * @type {function}\n   */\n  const initIntent = () => {\n    /**\n     * @description\n     * The intent to select an analysis category item\n     *\n     * @name intents#selectAnalysisCategoryItem\n     * @type {function}\n     * @inner\n     */\n    intents.selectAnalysisCategoryItem =\n      bbIntent.create(Intent.SELECT_ANALYSIS_ITEM[analysisIndicator]);\n\n    /**\n     * @description\n     * Deprecated intent to select an analysis category item\n     *\n     * @name intents#selectAnalysisCategoryItemDeprecated\n     * @type {function}\n     * @inner\n     */\n    intents.selectAnalysisCategoryItemDeprecated =\n      bbIntent.create(Intent.SELECT_ANALYSIS_ITEM_DEPRECATED);\n\n    if (intentPreferencesArray.indexOf(Intent.UPDATE_ANALYSIS_VIEW) > -1) {\n      /**\n       * @description\n       * Set a intent handler for Intent.UPDATE_ANALYSIS_VIEW\n       *\n       * @inner\n       */\n      bbIntent.handle(Intent.UPDATE_ANALYSIS_VIEW, () => {\n        updateAnalysisCategories()\n          .then(setSelectedAnalysisItem(null));\n      });\n    }\n\n    bbIntent.init(() => {});\n  };\n\n  /**\n   * @description\n   * Initializes period data via hooks\n   *\n   * @inner\n   * @name initPeriodData\n   * @type {function}\n   */\n  const initPeriodData = () => {\n    $ctrl.periodStartDate = hooks.defaultPeriodStart();\n    $ctrl.periodEndDate = hooks.defaultPeriodEnd();\n    $ctrl.selectedParentCategory = hooks.defaultParentCategory();\n    $ctrl.intervalDuration = INTERVAL.MONTH;\n    $ctrl.intervalStartDay = DEFAULT_START_DAY;\n  };\n\n  /**\n   * @description\n   * Updates the products list for the ui-bb-account-selector.\n   *\n   * @inner\n   * @name updateProductsList\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const updateProductsList = (getFromStorage) => model.getProductsArray(getFromStorage)\n    .then((products) => {\n      $ctrl.products = hooks.processProductsList(products);\n      return $ctrl.products;\n    })\n    .catch(error => {\n      $ctrl.error = errorMessage(error.code);\n      bus.publish(ANALYSIS_CATEGORY_LOAD_FAILED, { error });\n    });\n\n  /**\n   * @description\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name $onInit\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const $onInit = () => {\n    $ctrl.isLoading = true;\n    return updateProductsList()\n      .then(initProductSelection)\n      .then(initPeriodData)\n      .then(initIntent)\n      .then(updateAnalysisCategories)\n      .then(updateTurnovers)\n      .then(bindEvents)\n      .then(() => { $ctrl.isLoading = false; });\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n\n    /**\n     * @description\n     * The product selection for analysis\n     *\n     * @name selectedProducts\n     * @type {module:model-bb-product-summary-ng.Product[]}\n     */\n    selectedProducts: [],\n\n    /**\n     * @description\n     * List of products to be used by account selector for the analysis.\n     * Is recieved from {@link Hooks.processProductsList}\n     *\n     * @name products\n     * @type {module:model-bb-product-summary-ng.Product[]}\n     */\n    products: [],\n\n    /**\n     * @description\n     * The value returned from {@link Hooks.processAnalysisCategoryItems} hook.\n     * null if the items aren't loaded.\n     *\n     * @name items\n     * @type {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData}\n     */\n    items: null,\n\n    /**\n     * @description\n     * Subcategories values returned from {@link Hooks.processAnalysisCategoryItems} hook.\n     * null if the items aren't loaded.\n     *\n     * @name subcategories\n     * @type {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData}\n     */\n    subcategories: null,\n\n    /**\n     * @description\n     * The value returned from {@link Hooks.processTurnoverResponse} hook.\n     * null if the data isn't loaded.\n     *\n     * @name turnoversItems\n     * @type {module:model-bb-turnovers-ng.Turnover}\n     */\n    turnoversItems: null,\n\n    /**\n     * @description\n     * The value returned from {@link Hooks.processAnalysisCategorySeries} hook.\n     * Formatted for use within chart UI component.\n     * null if the data isn't loaded\n     *\n     * @name series\n     * @type {object}\n     */\n    series: null,\n\n    /**\n     * @description\n     * The value returned from {@link Hooks.processTurnoverSeries} hook.\n     * Formatted for use within chart UI component.\n     * null if the data isn't loaded\n     *\n     * @name turnoversSeries\n     * @type {module:model-bb-turnovers-ng.BBSeries}\n     */\n    turnoversSeries: null,\n\n    /**\n     * @description\n     * Date of the analysis period start\n     *\n     * @name periodStartDate\n     * @type {string}\n     */\n    periodStartDate: null,\n\n    /**\n     * @description\n     * Date of the analysis period end\n     *\n     * @name periodEndDate\n     * @type {string}\n     */\n    periodEndDate: null,\n\n    /**\n     * @description\n     * Selected parent category from the chart\n     *\n     * @name selectedParentCategory\n     * @type {string}\n     */\n    selectedParentCategory: null,\n\n    /**\n     * @description\n     * selected analysis item\n     *\n     * @name selectedAnalysisItem\n     * @type {any}\n     */\n    selectedAnalysisItem: null,\n    setSelectedAnalysisItem,\n    isSpendingAnalysis,\n\n    isSubCategories,\n    loadFirstLevelCategories,\n\n    /**\n     * @description\n     * Loading status\n     *\n     * @name isLoading\n     * @type {boolean}\n     */\n    isLoading: false,\n    onPeriodStartDateChanged,\n    onPeriodEndDateChanged,\n    onProductSelected,\n    onProductsSelected,\n    updateAnalysisCategories,\n    updateTurnovers,\n    onCategorySelected,\n\n    /**\n     * @description\n     * The error encountered when attempting to fetch from the model\n     *\n     * @name SpendingController#error\n     * @type {module:lib-bb-model-errors.ModelError}\n     */\n    error: null,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/controller.js","export default {\n /**\n  * Triggered when product is selected.\n  * @event bb.event.product.selected\n  * @type {any}\n  */\n  PRODUCT_SELECTED: 'bb.event.product.selected',\n\n /**\n  * Triggered when products selection has changed\n  * @event bb.event.products.selected\n  * @type {any}\n  */\n  PRODUCTS_SELECTED: 'bb.event.products.selected',\n\n /**\n  * Triggered when spending widget fails to load.\n  * @event widget-bb-income-spending-analysis-category-ng.load.failed\n  * @type {any}\n  */\n  ANALYSIS_CATEGORY_LOAD_FAILED: 'widget-bb-income-spending-analysis-category-ng.load.failed',\n\n /**\n  * Triggered when period start date is changed.\n  * @event bb.event.analysis.category.period.start.date.changed\n  * @type {any}\n  */\n  PERIOD_START_CHANGED: 'bb.event.analysis.category.period.start.date.changed',\n\n /**\n  * Triggered when period end date is changed.\n  * @event bb.event.analysis.category.period.end.date.changed\n  * @type {any}\n  */\n  PERIOD_END_CHANGED: 'bb.event.analysis.category.period.end.date.changed',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/message.js","/**\n * Available intervals\n * @name INTERVAL\n * @type {Interval}\n */\nexport const INTERVAL = {\n  DAY: 'DAY',\n  WEEK: 'WEEK',\n  MONTH: 'MONTH',\n  YEAR: 'YEAR',\n};\n\n/**\n * Default start day for monthly interval\n * @name DEFAULT_START_DAY\n * @type {number}\n */\nexport const DEFAULT_START_DAY = 1;\n\n/**\n * @name CURRENT_DATE_OBJECT\n * @description\n * Current date\n * Cache the date object to negate possible miss synchronization\n * @type {object}\n * @inner\n */\nconst CURRENT_DATE_OBJECT = new Date();\n\n/**\n * @name CURRENT_YEAR\n * @description\n * Current year\n * @type {number}\n * @inner\n */\nconst CURRENT_YEAR = CURRENT_DATE_OBJECT.getFullYear();\n\n/**\n * @name CURRENT_MONTH\n * @description\n * Current month\n * @type {number}\n * @inner\n */\nconst CURRENT_MONTH = CURRENT_DATE_OBJECT.getMonth();\n\n/**\n * @name ANALYSIS_INDICATOR_PREF\n * @description\n * Name of analysis indicator preference in the model\n * @type {string}\n */\nexport const ANALYSIS_INDICATOR_PREF = 'analysisIndicator';\n\n/**\n * @name SPENDING_ANALYSIS_INDICATOR\n * @description\n * Analysis indicator value for spending analysis\n * @type {string}\n */\nexport const SPENDING_ANALYSIS_INDICATOR = 'DBIT';\n\n/**\n * @name SUB_CATEGORIES\n * @description\n * Indicator to mark that this widget uses 2 level categories\n * @type {string}\n */\nexport const SUB_CATEGORIES = 'subCategories';\n\n/**\n * @name MS_IN_MIN\n * @description\n * Amount of milliseconds in a minute\n * @type {number}\n */\nexport const MS_IN_MIN = 60000;\n\n/**\n * @name DEFAULT_PERIOD_START\n * @description\n * First day in the current month\n * @type {number}\n */\nexport const DEFAULT_PERIOD_START = new Date(CURRENT_YEAR, CURRENT_MONTH, 1);\n\n/**\n * @name DEFAULT_PERIOD_END\n * @description\n * Current day\n * @type {number}\n */\nexport const DEFAULT_PERIOD_END = new Date();\n\n/**\n * Delay for account selection change callback execution\n * @name ACCOUNT_CHANGE_DEBOUNCE\n * @type {number}\n */\nexport const ACCOUNT_CHANGE_DEBOUNCE = 0;\n\n/**\n * @name Intents\n * @description\n * An object with all the intents names\n * @type {Object}\n */\nexport const Intent = {\n  // view.account.category.transactions key is deprecated\n  // TODO: remove in 2.10.1\n  SELECT_ANALYSIS_ITEM_DEPRECATED: 'view.account.category.transactions',\n  SELECT_ANALYSIS_ITEM: {\n    DBIT: 'intent.rb.transactions.dbit.list.view',\n    CRDT: 'intent.rb.transactions.crdt.list.view',\n  },\n  UPDATE_ANALYSIS_VIEW: 'intent.rb.update.analysis.view',\n};\n\n/**\n * @name TURNOVERS_DATA_KEY\n * @description\n * An object with turnovers data keys for credit and debit amounts\n * @type {Object}\n */\nexport const TURNOVERS_DATA_KEY = {\n  DBIT: 'debitAmount',\n  CRDT: 'creditAmount',\n};\n\n/**\n * @name PRODUCT_CHANGE_PFM_FLAG\n * @description\n * Flag that is appended to the product update event to mark that the update happened\n * because of the setting to load first product by default\n * @type {string}\n */\nexport const PRODUCT_CHANGE_PFM_FLAG = 'pfm.update';\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/constants.js","/* eslint no-unused-vars: [\"error\", { \"args\": \"none\" }] */\n/**\n * @name default-hooks\n * @type {object}\n *\n * @description\n * Default hooks for widget-bb-income-spending-analysis-category-ng\n */\n\nimport {\n  DEFAULT_PERIOD_START,\n  DEFAULT_PERIOD_END,\n  ACCOUNT_CHANGE_DEBOUNCE,\n  MS_IN_MIN,\n} from './constants';\n\n/**\n * @name default-hooks#processAnalysisCategoryItems\n * @type {function}\n *\n * @description\n * Default hook for income/spending analysis by category collection post processing\n *\n * @param {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData} items\n * items to process\n * @returns {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData}\n * processed items\n */\nconst processAnalysisCategoryItems = items => items || [];\n\n/**\n * @name default-hooks#processAnalysisCategorySeries\n * @type {function}\n *\n * @description\n * Default hook for donut chart series object post processing\n *\n * @param {module:model-bb-income-spending-analysis-category-ng.BBSeries} series chart series data\n * @param {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData} data\n * original analysis object\n * @returns {object} processed series\n */\nconst processAnalysisCategorySeries = (series, data) => series || {};\n\n/**\n * @name default-hooks#onAnalysisDataUpdate\n * @type {function}\n *\n * @description\n * Process parameters before they are sent to the model's load method\n *\n * @param {object} params parameters to process\n * @returns {object} processed params\n */\nconst onAnalysisDataUpdate = params => params;\n\n/**\n * @name default-hooks#onTurnoversUpdate\n * @type {function}\n *\n * @description\n * Process parameters before they are sent to the model's load method\n *\n * @param {object} params to process\n * @returns {object} processed params\n */\nconst onTurnoversUpdate = params => params;\n\n/**\n * @name default-hooks#processTurnoverResponse\n * @type {function}\n *\n * @description\n * Default hook for turnovers response object post processing\n *\n * @param {module:model-bb-turnovers-ng.Turnover} data turnover object to process\n * @returns {module:model-bb-turnovers-ng.Turnover} turnover response object\n */\nconst processTurnoverResponse = data => data;\n\n/**\n * @name default-hooks#processTurnoverSeries\n * @type {function}\n *\n * @description\n * Default hook for turnovers chart series object post processing\n *\n * @param {module:model-bb-turnovers-ng.BBSeries} series chart series data\n * @param {module:model-bb-turnovers-ng.Turnover} data original turnover object\n * @returns {object} processed series\n */\nconst processTurnoverSeries = (series, data) => series;\n\n/**\n * @name default-hooks#processSelectedProducts\n * @type {function}\n *\n * @description\n * Default hook to process products when selection is changed\n * @param {module:model-bb-product-summary-ng.Product[]} products which are selected\n * @returns {module:model-bb-product-summary-ng.Product[]} products after processing\n */\nconst processSelectedProducts = products => products;\n\n/**\n * @name default-hooks#processProductsList\n * @type {function}\n *\n * @description\n * Process passed products list before passing it to the view.\n *\n * @param {module:model-bb-product-summary-ng.Product[]} products products to process\n * @returns {module:model-bb-product-summary-ng.Product[]} processed products\n */\nconst processProductsList = products => products;\n\n/**\n * @name default-hooks#defaultPeriodStart\n * @type {function}\n *\n * @description\n * Sets period start property on init\n *\n * @returns {string} Start period string in format yyyy-mm-dd\n */\nconst defaultPeriodStart = () =>\n  new Date(DEFAULT_PERIOD_START.getTime() - (DEFAULT_PERIOD_START.getTimezoneOffset() * MS_IN_MIN))\n    .toISOString()\n    .slice(0, 10);\n\n/**\n * @name default-hooks#defaultPeriodEnd\n * @type {function}\n *\n * @description\n * Sets period end property on init\n *\n * @returns {string} End period string in format yyyy-mm-dd\n */\nconst defaultPeriodEnd = () =>\n  new Date(DEFAULT_PERIOD_END.getTime() - (DEFAULT_PERIOD_END.getTimezoneOffset() * MS_IN_MIN))\n    .toISOString()\n    .slice(0, 10);\n\n/**\n * @name default-hooks#defaultParentCategory\n * @type {function}\n *\n * @description\n * Sets default parent category on init\n *\n * @returns {string}\n */\nconst defaultParentCategory = () => null;\n\n/**\n * @name default-hooks#accountSelectionDebounce\n * @type {function}\n *\n * @description\n * Used when multiple account selection is active. Defines account selection change\n * silence interval after which widget should send a new request and refresh\n *\n * @returns {number} Time in ms\n */\nconst accountSelectionDebounce = () => ACCOUNT_CHANGE_DEBOUNCE;\n\n/**\n * @name default-hooks#onSelectedItemChanged\n * @type {function}\n *\n * @description\n * Sets a selected analysis item\n *\n * @param {any} item selected analysis item\n * @returns {any} selected analysis item\n */\nconst onSelectedItemChanged = item => item;\n\n/**\n * @name default-hooks#processLoadError\n * @type {function}\n *\n * @description\n * Sets the error for missing parameters in the income/spending analysis request\n *\n * @param {error} error error passed\n * @returns {error} processed error\n */\nconst processLoadError = error => error;\n\nexport default {\n  processAnalysisCategoryItems,\n  processAnalysisCategorySeries,\n  onAnalysisDataUpdate,\n  onTurnoversUpdate,\n  processTurnoverResponse,\n  processTurnoverSeries,\n  processSelectedProducts,\n  processProductsList,\n  defaultPeriodStart,\n  defaultPeriodEnd,\n  accountSelectionDebounce,\n  processLoadError,\n  onSelectedItemChanged,\n  defaultParentCategory,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/default-hooks.js","/**\n * @name helpers\n * @description Controller helpers\n * @type {Object}\n *\n * @property {function} debounce Executes a callback after some time\n */\nconst helpers = ($timeout) => {\n  /**\n   * @name current\n   * @description Keeps current timeout identifier for debounce helper\n   * @inner\n   * @type {any}\n   */\n  let current = null;\n\n  return {\n    debounce: (callback, time) => {\n      if (current) {\n        $timeout.cancel(current);\n      }\n\n      current = $timeout(callback, time);\n    },\n  };\n};\n\nexport default helpers;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/helpers.js"],"sourceRoot":""}