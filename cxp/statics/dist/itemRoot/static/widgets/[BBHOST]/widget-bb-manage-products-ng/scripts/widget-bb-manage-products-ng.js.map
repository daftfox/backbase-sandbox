{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6********************","webpack:///webpack/bootstrap a983de776e3686600b94?4bc9********************","webpack:///./widget-bb-manage-products-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*****","webpack:///external \"lib-bb-widget-ng\"?84ad","webpack:///external \"lib-bb-model-errors\"?7567*","webpack:///external \"lib-bb-widget-extension-ng\"?b547","webpack:///external \"model-bb-product-summary-ng\"?4945","webpack:///external \"lib-bb-intent-ng\"?add1","webpack:///external \"lib-bb-event-bus-ng\"?8215","webpack:///./widget-bb-manage-products-ng/scripts/index.js","webpack:///./widget-bb-manage-products-ng/scripts/controller.js","webpack:///./widget-bb-manage-products-ng/scripts/constants.js","webpack:///./widget-bb-manage-products-ng/scripts/message.js","webpack:///./widget-bb-manage-products-ng/scripts/default-hooks.js"],"names":["moduleKey","hooksKey","angular","module","modelProductSummaryModuleKey","widgetModuleKey","eventBusModuleKey","bbIntentModuleKey","factory","defaultHooks","controller","modelProductSummaryKey","eventBusKey","bbIntentKey","Controller","run","widgetKey","bus","widget","bbIntent","publish","id","getId","init","name","ManageProductsController","model","hooks","$ctrl","state","status","productKinds","productSelected","showInput","isProductLoading","productKindsError","intents","getProducts","load","then","processKinds","catch","message","dataManageProductsErrorMessage","error","updateProduct","alias","visible","patchArrangement","UPDATED_PRODUCT_SUCCESS_KEY","isError","removeProductFromStorage","setProductSelected","checkSelectedProductFromStorage","product","getProductSelected","selectedProduct","viewProductSummary","initIntent","create","Intent","VIEW_PRODUCT_SUMMARY","handle","VIEW_MANAGE_PRODUCTS","$onInit","Object","assign","dismissTime","DEFAULT_DISMISS_TIME","errorMessages","E_AUTH","E_CONNECTIVITY","E_USER","E_UNEXPECTED","UPDATED_PRODUCT_ERROR_KEY","DataManageProductsErrorMessage","BadRequestError","ERR_ACCOUNT_ARRANGEMENT_NOT_EXIST","ERR_ACCOUNT_ARRANGEMENT_NO_PRIVILEGES","ERR_ACCOUNT_ARRANGEMENT_NOT_ENTITLED_TO_SEE","ERR_ACCOUNT_PRODUCT_NOT_EXIST","ERR_ACCOUNT_PRODUCT_UPDATE_SIZE","ERR_ARRANGEMENT_NOT_FOUND","ERR_ARRANGEMENT_NOT_EXIST_PRODUCT_KIND_NAME","modelError","codes","map","e","code"],"mappings":"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","file":"widget-bb-manage-products-ng/scripts/widget-bb-manage-products-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-product-summary-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-event-bus-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-manage-products-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-model-errors\", \"lib-bb-widget-extension-ng\", \"model-bb-product-summary-ng\", \"lib-bb-intent-ng\", \"lib-bb-event-bus-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-manage-products-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-product-summary-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-event-bus-ng\"));\n\telse\n\t\troot[\"widget-bb-manage-products-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-extension-ng\"], root[\"model-bb-product-summary-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-event-bus-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_99__, __WEBPACK_EXTERNAL_MODULE_103__, __WEBPACK_EXTERNAL_MODULE_105__, __WEBPACK_EXTERNAL_MODULE_119__, __WEBPACK_EXTERNAL_MODULE_121__, __WEBPACK_EXTERNAL_MODULE_122__, __WEBPACK_EXTERNAL_MODULE_124__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a983de776e3686600b94","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-manage-products-ng/model.xml\n// module id = 0\n// module chunks = 21","module.exports = __WEBPACK_EXTERNAL_MODULE_99__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 99\n// module chunks = 15 16 17 18 19 20 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_103__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 103\n// module chunks = 15 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_105__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 105\n// module chunks = 15 20 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_119__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 119\n// module chunks = 20 21 22","module.exports = __WEBPACK_EXTERNAL_MODULE_121__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-product-summary-ng\"\n// module id = 121\n// module chunks = 20 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_122__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 122\n// module chunks = 20 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_124__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 124\n// module chunks = 20 21 22 23 24","/**\n * @module widget-bb-manage-products-ng\n *\n * @description\n * Manage products\n */\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport modelProductSummaryModuleKey, {\n  modelProductSummaryKey,\n} from 'model-bb-product-summary-ng';\n\nimport Controller from './controller';\nimport defaultHooks from './default-hooks';\n\nconst moduleKey = 'widget-bb-manage-products-ng';\nconst hooksKey = `${moduleKey}:hooks`;\n\nexport default angular\n  .module(moduleKey, [\n    modelProductSummaryModuleKey,\n    widgetModuleKey,\n    eventBusModuleKey,\n    bbIntentModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('ManageProductsController', [\n    // dependencies to inject\n    modelProductSummaryKey,\n    eventBusKey,\n    hooksKey,\n    bbIntentKey,\n    /* into */\n    Controller,\n  ])\n\n  .run([eventBusKey, widgetKey, bbIntentKey, (bus, widget, bbIntent) => {\n    bus.publish('cxp.item.loaded', {\n      id: widget.getId(),\n    });\n    bbIntent.init();\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-manage-products-ng/scripts/index.js","import {\n  DEFAULT_DISMISS_TIME,\n  UPDATED_PRODUCT_SUCCESS_KEY,\n  Intent,\n} from './constants';\n\nimport message from './message';\n\n\n/**\n * @name ManageProductsController\n *\n * @description\n * Manage products widget controller\n *\n * @type {function}\n */\nexport default function ManageProductsController(model, bus, hooks, bbIntent) {\n  const $ctrl = this;\n\n  const state = {\n    status: null,\n    productKinds: null,\n    productSelected: { id: null, showInput: null },\n    isProductLoading: true,\n    productKindsError: null,\n  };\n\n  /**\n   * @description\n   * A set of intents that the controller uses or handles.\n   *\n   * @name ManageProductsController#intents\n   * @type {Object}\n   * @inner\n   */\n  const intents = {};\n\n  /**\n   * @name ManageProductsController#getProducts\n   *\n   * @description\n   * Gets all products from the model, track the loading\n   * and create error if there is error during the loading\n   *\n   * @type {function}\n   *\n   * @returns {Promise.<void>}\n   */\n  const getProducts = () => {\n    $ctrl.state.isProductLoading = true;\n\n    return model.load()\n      .then(({ productKinds }) => {\n        $ctrl.state.productKinds = hooks.processKinds(productKinds);\n        $ctrl.state.isProductLoading = false;\n      })\n      .catch(error => {\n        $ctrl.state.isProductLoading = false;\n        $ctrl.state.productKindsError = {\n          message: message.dataManageProductsErrorMessage(error),\n        };\n      });\n  };\n\n  /**\n   * @name ManageProductsController#updateProduct\n   *\n   * @description\n   * Updates the product,\n   * sets the status for the notification\n   * and reloads the products if the update is successful\n   *\n   * @type {function}\n   *\n   * @param {object} id product/account id\n   * @param {object} alias product/account alias\n   * @param {boolean} visible visibility property for the product/account\n   *\n   * @returns {Promise.<void>}\n   */\n  const updateProduct = (id, alias, visible) =>\n    model.patchArrangement({ id, alias, visible })\n      .then(() => {\n        $ctrl.state.status = { message: [UPDATED_PRODUCT_SUCCESS_KEY], isError: false };\n        $ctrl.state.productSelected = { id: null, showInput: null };\n        return getProducts();\n      })\n      .catch((error) => {\n        $ctrl.state.status = {\n          message: message.dataManageProductsErrorMessage(error),\n          isError: true,\n        };\n        $ctrl.state.productSelected = { id: null, showInput: null };\n        getProducts();\n      });\n\n  /**\n   * @name ManageProductsController#removeProductFromStorage\n   *\n   * @description\n   * Get selected product from storage and check if visibility changed\n   * and update accordingly\n   *\n   * @inner\n   * @type {function}\n   *\n   * @returns {Promise.<void>}\n   */\n  const removeProductFromStorage = () =>\n    model.setProductSelected()\n      .catch(error => {\n        $ctrl.state.productKindsError = { message: message.dataManageProductsErrorMessage(error) };\n      });\n\n  /**\n   * @name ManageProductsController#checkSelectedProductFromStorage\n   *\n   * @description\n   * Get selected product from storage and check if visibility changed\n   * and update accordingly\n   *\n   * @type {function}\n   *\n   * @returns {Promise.<void>}\n   */\n  const checkSelectedProductFromStorage = (product) =>\n    model.getProductSelected()\n      .then((selectedProduct) => {\n        if (product.id === selectedProduct.id && product.visible) {\n          removeProductFromStorage();\n        }\n      })\n      .catch(error => {\n        $ctrl.state.productKindsError = { message: message.dataManageProductsErrorMessage(error) };\n      });\n\n  /**\n   * @description\n   * Handles the intent to switch the view to product summary\n   *\n   * @type {function}\n   *\n   * @name ManageProductsController#viewProductSummary\n   */\n  const viewProductSummary = () => {\n    if (intents.viewProductSummary) {\n      intents.viewProductSummary();\n    }\n  };\n\n  /**\n   * @description\n   * Inits the bbIntent and adds intent handlers.\n   *\n   * @inner\n   * @name ManageProductsController#initIntent\n   * @type {function}\n   */\n  const initIntent = () => {\n    intents.viewProductSummary = bbIntent.create(Intent.VIEW_PRODUCT_SUMMARY);\n\n    bbIntent.handle(Intent.VIEW_MANAGE_PRODUCTS, () => {\n      getProducts();\n    });\n  };\n\n  /**\n   * @name ManageProductsController#$onInit\n   *\n   * @description\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @type {function}\n   *\n   * @returns {void}\n   */\n  const $onInit = () =>\n    getProducts()\n      .then(initIntent);\n\n  Object.assign($ctrl, {\n    state,\n    dismissTime: DEFAULT_DISMISS_TIME,\n    updateProduct,\n    getProducts,\n    $onInit,\n    viewProductSummary,\n    checkSelectedProductFromStorage,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-manage-products-ng/scripts/controller.js","import { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\n\n/**\n * @name errorMessages\n *\n * @description\n * Error messages keys for connectivity, user, auth and unexpected errors.\n *\n * @type {object}\n */\nexport const errorMessages = {\n  [E_AUTH]: 'model.error.auth',\n  [E_CONNECTIVITY]: 'model.error.connectivity',\n  [E_USER]: 'model.error.user',\n  [E_UNEXPECTED]: 'model.error.unexpected',\n};\n\n/**\n * @name DEFAULT_DISMISS_TIME\n *\n * @description\n * Default notification dismiss time.\n *\n * @type {number}\n */\nexport const DEFAULT_DISMISS_TIME = 3;\n\n/**\n * @name UPDATED_PRODUCT_SUCCESS_KEY\n *\n * @description\n * Key string for notification success message\n *\n * @type {string}\n */\nexport const UPDATED_PRODUCT_SUCCESS_KEY = 'product.notification.updated.success';\n\n/**\n * @name UPDATED_PRODUCT_ERROR_KEY\n *\n * @description\n * Key string for notification error message\n *\n * @type {string}\n */\nexport const UPDATED_PRODUCT_ERROR_KEY = 'product.notification.updated.error';\n\n/**\n * Widget intent enum\n * @type {object}\n */\nexport const Intent = {\n  VIEW_PRODUCT_SUMMARY: 'intent.bb.product.summary.view',\n  VIEW_MANAGE_PRODUCTS: 'intent.bb.manage.products.view',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-manage-products-ng/scripts/constants.js","import { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\nimport { BadRequestError } from 'model-bb-product-summary-ng';\n\n/**\n * @name MessageHandler#DataManageProductsErrorMessage\n * @description\n * Object for mapping errors used in extension\n * @type {Object}\n */\nexport const DataManageProductsErrorMessage = {\n  [E_AUTH]:\n    'model.error.auth',\n  [E_CONNECTIVITY]:\n    'model.error.connectivity',\n  [E_USER]:\n    'model.error.user',\n  [E_UNEXPECTED]:\n    'model.error.unexpected',\n  [BadRequestError.ERR_ACCOUNT_ARRANGEMENT_NOT_EXIST]:\n    'account.error.arrangement.not.exist',\n  [BadRequestError.ERR_ACCOUNT_ARRANGEMENT_NO_PRIVILEGES]:\n    'account.error.arrangement.no.privilege',\n  [BadRequestError.ERR_ACCOUNT_ARRANGEMENT_NOT_ENTITLED_TO_SEE]:\n    'account.error.arrangement.not.entitled.to.see',\n  [BadRequestError.ERR_ACCOUNT_PRODUCT_NOT_EXIST]:\n    'account.error.product.not.exist',\n  [BadRequestError.ERR_ACCOUNT_PRODUCT_UPDATE_SIZE]:\n    'account.error.product.size.between',\n\n  [BadRequestError.ERR_ARRANGEMENT_NOT_FOUND]:\n    'arrangements.error.not.found',\n  [BadRequestError.ERR_ARRANGEMENT_NOT_EXIST_PRODUCT_KIND_NAME]:\n    'arrangements.error.not.exist.product.kindName',\n};\n\n/**\n * @name MessageHandler#dataManageProductsErrorMessage\n * @description\n * Create error message array for update product\n * Checks if message has one or more then one error\n * @type {function}\n * @param {ModelError} modelError response error object\n * @returns {MessageArray} message array\n */\nconst dataManageProductsErrorMessage = modelError => {\n  if (modelError.codes) {\n    return modelError.codes.map(e => DataManageProductsErrorMessage[e]);\n  }\n\n  return [DataManageProductsErrorMessage[modelError.code]];\n};\n\n/**\n * @name MessageHandler\n * @type {object}\n * @description list of message handlers\n */\nexport default {\n  dataManageProductsErrorMessage,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-manage-products-ng/scripts/message.js","/**\n * @name Hooks\n *\n * @description\n * Hooks for widget-bb-manage-products-ng\n *\n * @type {object}\n */\n\n/**\n * @name processKinds\n *\n * @description\n * Hook for processing productKinds.\n *\n * @type {function}\n *\n * @param {module:model-bb-product-summary-ng.ProductKind[]} productKinds ProductKinds to process\n * @returns {module:model-bb-product-summary-ng.ProductKind[]} Processed  productKinds\n */\nconst processKinds = productKinds => productKinds;\n\nexport default {\n  processKinds,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-manage-products-ng/scripts/default-hooks.js"],"sourceRoot":""}