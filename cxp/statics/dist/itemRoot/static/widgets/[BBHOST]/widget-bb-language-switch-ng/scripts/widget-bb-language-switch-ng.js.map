{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6****************","webpack:///webpack/bootstrap 70daa42420248d0dae68?ba28****************","webpack:///./widget-bb-language-switch-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114********","webpack:///external \"ui-bb-i18n-ng\"?dc01*****","webpack:///external \"vendor-bb-uib-dropdown\"?68ee","webpack:///external \"lib-bb-widget-ng\"?84ad*","webpack:///./widget-bb-language-switch-ng/scripts/index.js","webpack:///./widget-bb-language-switch-ng/scripts/controller.js"],"names":["moduleKey","angular","module","widgetModuleKey","uiBbI18nNgKey","bbUibDropdown","controller","widgetKey","Controller","name","LanguageSwitchController","$window","widgetInstance","$ctrl","locales","prepareLocales","localesString","split","map","localeStr","lang","locale","label","$onInit","bbLocale","localStorage","getItem","preferenceLocales","getPreference","selectedLocale","find","item","Object","assign","switchLanguageTo","setItem","location","reload"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;ACAA,gD;;;;;;;ACAA,gD;;;;;;;ACAA,gD;;;;;;;ACAA,iD;;;;;;;;;;;;;ACOA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;AAEA,KAAMA,YAAY,8BAAlB,C,CAhBA;;;;;;;mBAkBeC,0BACZC,MADY,CACLF,SADK,EACM,CACjBG,uBADiB,EAEjBC,oBAFiB,EAGjBC,6BAHiB,CADN,EAOZC,UAPY,CAOD,0BAPC,EAO2B;AACtC;AACA,UAFsC,EAGtCC,wBAHsC;AAItC;AACAC,qBALsC,CAP3B,EAeZC,I;;;;;;;;;;;;;;;mBCpBqBC,wB;AAbxB;;;;;;AAMA;;;;;;;AAOe,UAASA,wBAAT,CAAkCC,OAAlC,EACkCC,cADlC,EACkD;AAC/D,OAAMC,QAAQ,IAAd;;AAEA;;;;;;;;AAQA,OAAMC,UAAU,EAAhB;;AAEA;;;;;;;;;;;AAWA,OAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,aAAD;AAAA,YACrBA,cAAcC,KAAd,CAAoB,GAApB,EACGC,GADH,CACO,qBAAa;AAAA,8BACOC,UAAUF,KAAV,CAAgB,GAAhB,CADP;AAAA;AAAA,WACTG,IADS;AAAA,WACHC,MADG;;AAEhB,cAAO;AACLC,gBAAOF,IADF;AAELC;AAFK,QAAP;AAID,MAPH,CADqB;AAAA,IAAvB;;AAWA;;;;;;;;;;;AAWA,OAAME,UAAU,SAAVA,OAAU,GAAM;AACpB,SAAMC,WAAWb,QAAQc,YAAR,CAAqBC,OAArB,CAA6B,WAA7B,CAAjB;AACA,SAAMC,oBAAoBZ,eAAeH,eAAegB,aAAf,CAA6B,SAA7B,CAAf,CAA1B;AACA,SAAMC,iBAAiBF,kBACpBG,IADoB,CACf;AAAA,cAAQC,KAAKV,MAAL,KAAgBG,QAAxB;AAAA,MADe,KACsBG,kBAAkB,CAAlB,CAD7C;;AAGAK,YAAOC,MAAP,CAAcpB,KAAd,EAAqB;AACnBC,gBAASa,iBADU;AAEnBN,eAAQQ;AAFW,MAArB;AAID,IAVD;;AAYA;;;;;;AAMA,OAAMK,mBAAmB,SAAnBA,gBAAmB,OAAgB;AAAA,SAAbb,MAAa,QAAbA,MAAa;;AACvCV,aAAQc,YAAR,CAAqBU,OAArB,CAA6B,WAA7B,EAA0Cd,MAA1C;AACAV,aAAQyB,QAAR,CAAiBC,MAAjB;AACD,IAHD;;AAKAL,UAAOC,MAAP,CAAcpB,KAAd,EAAqB;AACnBU,qBADmB;AAEnBW,uCAFmB;AAGnBpB;AAHmB,IAArB;AAKD,E","file":"widget-bb-language-switch-ng/scripts/widget-bb-language-switch-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"ui-bb-i18n-ng\"), require(\"vendor-bb-uib-dropdown\"), require(\"lib-bb-widget-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-language-switch-ng\", [\"vendor-bb-angular\", \"ui-bb-i18n-ng\", \"vendor-bb-uib-dropdown\", \"lib-bb-widget-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-language-switch-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"ui-bb-i18n-ng\"), require(\"vendor-bb-uib-dropdown\"), require(\"lib-bb-widget-ng\"));\n\telse\n\t\troot[\"widget-bb-language-switch-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"ui-bb-i18n-ng\"], root[\"vendor-bb-uib-dropdown\"], root[\"lib-bb-widget-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_53__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 70daa42420248d0dae68","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-language-switch-ng/model.xml\n// module id = 0\n// module chunks = 17","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0 9 10 11 12 13 14 15 16 17 18 19 21 22","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 7\n// module chunks = 1 2 4 5 6 7 17","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-dropdown\"\n// module id = 8\n// module chunks = 1 17","module.exports = __WEBPACK_EXTERNAL_MODULE_53__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 53\n// module chunks = 15 16 17 18 19 21 22","/**\n * @module widget-bb-language-switch-ng\n *\n * @description\n * Language switch\n */\n\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport uiBbI18nNgKey from 'ui-bb-i18n-ng';\n\nimport bbUibDropdown from 'vendor-bb-uib-dropdown';\n\nimport Controller from './controller';\n\nconst moduleKey = 'widget-bb-language-switch-ng';\n\nexport default angular\n  .module(moduleKey, [\n    widgetModuleKey,\n    uiBbI18nNgKey,\n    bbUibDropdown,\n  ])\n\n  .controller('LanguageSwitchController', [\n    // dependencies to inject\n    '$window',\n    widgetKey,\n    /* into */\n    Controller,\n  ])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-language-switch-ng/scripts/index.js","/**\n * @typedef {object} Locale\n * @property {string} label Language bound to locale, e.g. Nederlands\n * @property {string} locale Locale code, e.g. nl-NL\n */\n\n/**\n * @name LanguageSwitchController\n * @type {function}\n *\n * @description\n * Language switch\n */\nexport default function LanguageSwitchController($window,\n                                                 widgetInstance) {\n  const $ctrl = this;\n\n  /**\n   * @public\n   * @name LanguageSwitchController#locales\n   * @description\n   * List of locales available for selection\n   *\n   * @type {Array.<Locale>}\n   */\n  const locales = [];\n\n  /**\n   * @inner\n   * @name prepareLocales\n   * @description\n   * Transforms locales configured through preferences to\n   * array of locale objects\n   * @param localesString\n   * @type {function}\n   *\n   * @returns {Array}\n   */\n  const prepareLocales = (localesString) => (\n    localesString.split(';')\n      .map(localeStr => {\n        const [lang, locale] = localeStr.split(',');\n        return {\n          label: lang,\n          locale,\n        };\n      })\n  );\n\n  /**\n   * @public\n   * @description\n   * AngularJS Lifecycle hook used to initialize the controller\n   * Initializes locales available from widget preferences\n   * @type {function}\n   *\n   * @name LanguageSwitchController#$onInit\n   * @returns {void}\n   *\n   */\n  const $onInit = () => {\n    const bbLocale = $window.localStorage.getItem('bb-locale');\n    const preferenceLocales = prepareLocales(widgetInstance.getPreference('locales'));\n    const selectedLocale = preferenceLocales\n      .find(item => item.locale === bbLocale) || preferenceLocales[0];\n\n    Object.assign($ctrl, {\n      locales: preferenceLocales,\n      locale: selectedLocale,\n    });\n  };\n\n  /**\n   * @description\n   * Switches language\n   * @param {Object} locale wrapper containing locale field\n   * @type {function}\n   */\n  const switchLanguageTo = ({ locale }) => {\n    $window.localStorage.setItem('bb-locale', locale);\n    $window.location.reload();\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n    switchLanguageTo,\n    locales,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-language-switch-ng/scripts/controller.js"],"sourceRoot":""}