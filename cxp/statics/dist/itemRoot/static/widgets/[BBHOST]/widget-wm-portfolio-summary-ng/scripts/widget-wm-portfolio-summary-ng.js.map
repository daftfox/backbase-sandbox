{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*********************************","webpack:///webpack/bootstrap d0309a746b17cd403690?c295*********************************","webpack:///./widget-wm-portfolio-summary-ng/model.xml","webpack:///external \"lib-bb-state-container-ng\"?8d56******","webpack:///external \"lib-wm-portfolio-view-model-helper\"?8f7a******","webpack:///external \"vendor-bb-angular\"?a114************","webpack:///external \"lib-bb-widget-extension-ng\"?b547*****","webpack:///external \"model-wm-portfolio-summary-ng\"?e4f4*****","webpack:///external \"lib-bb-intent-ng\"?add1*","webpack:///external \"lib-bb-widget-ng\"?84ad","webpack:///./widget-wm-portfolio-summary-ng/scripts/index.js","webpack:///./widget-wm-portfolio-summary-ng/scripts/controller.js","webpack:///./widget-wm-portfolio-summary-ng/scripts/constants.js","webpack:///./widget-wm-portfolio-summary-ng/scripts/service.js","webpack:///./widget-wm-portfolio-summary-ng/scripts/view-model.js"],"names":["hooksKey","serviceKey","viewModelKey","angular","module","modelPortfolioSummaryModuleKey","widgetModuleKey","bbIntentModuleKey","stateContainerModuleKey","factory","defaultHooks","modelPortfolioSummaryKey","service","bbStateContainerKey","widgetKey","viewModel","controller","bbIntentKey","Controller","name","PortfolioSummaryController","widgetInstance","bbIntents","$ctrl","intents","viewPortfolioDetails","create","IntentsKeys","PORTFOLIO_DETAILS","getCustomListSelected","load","page","customListUuid","loadPortfolioSummary","setCustomListSelected","customList","setSelectedList","searchQuery","uuid","isFavorite","getState","pageParams","setDefaultListSelected","portfolioId","setPortfolioIdSelected","$onInit","init","loadCustomLists","then","list","portfolios","customLists","find","item","listItem","onSort","orderBy","direction","sort","Object","assign","deleteCustomList","removePortfolioFromList","createCustomList","renameCustomList","setPortfoliosToCustomList","togglePortfolioAsFavorite","state","errors","Preference","PAGE_SIZE","MAX_NAV_PAGES","DEFAULT_PAGE_SIZE","DEFAULT_MAX_NAV_PAGES","model","from","beforeLoadPortfolioSummary","currentParams","data","afterLoadPortfolioSummarySuccess","totalItems","totalCount","catch","error","afterLoadPortfolioSummaryError","loadCustomList","afterLoadCustomListsSuccess","afterLoadCustomListsError","afterSetPortfoliosToCustomListSuccess","afterDeleteCustomListsSuccess","requestData","deletePortfoliosFromCustomList","IBAN","updateFavoriteStatusOfPortfolio","stateContainer","hooks","pageSize","getLongPreference","maxNavPages","params","undefined","query","defaultSortableDirection","defaultSortableColumn","justFavorites","size","initialState","loading","initialLoading","portfoliosError","code","selectedList","porfolios","afterDeleteCustomListsError","afterRenameCustomListError","afterCreateCustomListError","afterRemovePorftfolioFromCustomListError","isAllChecked","keys","reduce","current","isChecked","afterSetPortfoliosToCustomListError","createAction","result","map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,2C;;;;;;;ACAA,iD;;;;;;;ACAA,iD;;;;;;;ACAA,iD;;;;;;;ACAA,kD;;;;;;;ACAA,kD;;;;;;;ACAA,kD;;;;;;;ACAA,kD;;;;;;;;;;;;;ACcA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AA5BA;;;;;;;;;;;;;;AA8BA,KAAMA,WAAW,sCAAjB;AACA,KAAMC,aAAa,wCAAnB;AACA,KAAMC,eAAe,0CAArB;;AAEA;;;;;mBAKeC,0BACZC,MADY,CACL,gCADK,EAC6B,CACxCC,mCADwC,EAExCC,uBAFwC,EAGxCC,uBAHwC,EAIxCC,+BAJwC,CAD7B,EAQZC,OARY,CAQJT,QARI,EAQM,sCAAYU,sBAAZ,CARN,EASZD,OATY,CASJR,UATI,EASQ,CACnBU,mDADmB,EAEnBT,YAFmB,EAGnBU,iBAHmB,CATR,EAcZH,OAdY,CAcJP,YAdI,EAcU,CACrBW,0CADqB,EAErBC,wBAFqB,EAGrBd,QAHqB,EAIrBe,mBAJqB,CAdV,EAsBZC,UAtBY,CAsBD,4BAtBC,EAsB6B,CACxCF,wBADwC,EAExCG,0BAFwC,EAGxChB,UAHwC,EAIxCC,YAJwC;AAKxC;AACAgB,qBANwC,CAtB7B,EA8BZC,I;;AAEH;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;AAOA;;;;;;AAMA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;;;;;;;;;;mBC3GwBC,0B;;AAVxB;;AAEA;;;;;;;;AAQe,UAASA,0BAAT,CACbC,cADa,EAEbC,SAFa,EAGbV,OAHa,EAIbG,SAJa,EAKb;AACA,OAAMQ,QAAQ,IAAd;;AAEA;;;;;;;;AAQA,OAAMC,UAAU;AACdC,2BAAsBH,UAAUI,MAAV,CAAiBC,uBAAYC,iBAA7B;AADR,IAAhB;;AAIA;;;;;;;;;AASA,OAAMC,wBAAwB,SAAxBA,qBAAwB;AAAA,YAAMjB,QAAQiB,qBAAR,EAAN;AAAA,IAA9B;;AAEA;;;;;;;;;;;AAWA,OAAMC,OAAO,SAAPA,IAAO;AAAA,oFAA4B,EAA5B;AAAA,SAAGC,IAAH,QAAGA,IAAH;AAAA,SAASC,cAAT,QAASA,cAAT;;AAAA,YACXpB,QAAQqB,oBAAR,CAA6B,EAAEF,UAAF,EAAQC,8BAAR,EAA7B,CADW;AAAA,IAAb;;AAGA;;;;;;;;;;AAUA,OAAME,wBAAwB,SAAxBA,qBAAwB;AAAA,YAActB,QAAQsB,qBAAR,CAA8BC,UAA9B,CAAd;AAAA,IAA9B;;AAEA;;;;;;;;;;AAUA,OAAMC,kBAAkB,SAAlBA,eAAkB,aAAc;AACpCxB,aAAQsB,qBAAR,CAA8BC,UAA9B;AACAZ,WAAMc,WAAN,GAAoB,EAApB;AACA,SAAIF,eAAeA,WAAWG,IAAX,IAAmBH,WAAWI,UAA7C,CAAJ,EAA8D;AAC5DxB,iBAAUqB,eAAV,CAA0BD,UAA1B;AACA,cAAOL,KAAKf,UAAUyB,QAAV,GAAqBC,UAA1B,CAAP;AACD;AACD1B,eAAU2B,sBAAV,CAAiCP,UAAjC;AACA,YAAOL,MAAP;AACD,IATD;;AAWA;;;;;;;;;AASA,OAAML,uBAAuB,SAAvBA,oBAAuB,CAACkB,WAAD,EAAiB;AAC5C/B,aAAQgC,sBAAR,CAA+BD,WAA/B;AACAnB,aAAQC,oBAAR;AACD,IAHD;;AAMA;;;;;AAKA,OAAMoB,UAAU,SAAVA,OAAU,GAAM;AACpB9B,eAAU+B,IAAV;AACA,YAAOlC,QAAQmC,eAAR,GACJC,IADI,CACC;AAAA,cAAMnB,uBAAN;AAAA,MADD,EAEJmB,IAFI,CAEC,UAACC,IAAD,EAAU;AACd,WAAIA,QAAQA,KAAKV,UAAjB,EAA6B;AAC3B,gBAAOU,IAAP;AACD;AACD,cAAOA,QAAQlC,UAAUyB,QAAV,GACZU,UADY,CACDC,WADC,CACWC,IADX,CACgB;AAAA,gBAAQC,KAAKf,IAAL,KAAcW,KAAKX,IAA3B;AAAA,QADhB,CAAf;AAED,MARI,EASJU,IATI,CASC,oBAAY;AAChB,WAAIM,QAAJ,EAAc;AACZvC,mBAAUqB,eAAV,CAA0BkB,QAA1B;AACD;AACD,cAAOxB,MAAP;AACD,MAdI,CAAP;AAeD,IAjBD;;AAmBA;;;;;;;;;AASA,OAAMyB,SAAS,SAATA,MAAS,CAACC,OAAD,EAAUC,SAAV,EAAwB;AACrC7C,aAAQ8C,IAAR,CAAaF,OAAb,EAAsBC,SAAtB;AACA,YAAO3B,MAAP;AACD,IAHD;;AAKA6B,UAAOC,MAAP,CAAcrC,KAAd,EAAqB;AACnBgC,mBADmB;AAEnB9B,+CAFmB;AAGnBsB,sBAAiBnC,QAAQmC,eAHN;AAInBc,uBAAkBjD,QAAQiD,gBAJP;AAKnBC,8BAAyBlD,QAAQkD,uBALd;AAMnBC,uBAAkBnD,QAAQmD,gBANP;AAOnBC,uBAAkBpD,QAAQoD,gBAPP;AAQnBC,gCAA2BrD,QAAQqD,yBARhB;AASnBC,gCAA2BtD,QAAQsD,yBAThB;AAUnBhC,iDAVmB;AAWnBL,iDAXmB;AAYnBO,qCAZmB;AAanBS,qBAbmB;AAcnBf;AAdmB,IAArB;;AAiBA,UAAO6B,OAAOC,MAAP,CACL;AACE,SAAIO,KAAJ,GAAY;AACV,cAAOpD,UAAUyB,QAAV,EAAP;AACD,MAHH;AAIE,SAAI4B,MAAJ,GAAa;AACX,cAAOrD,UAAUyB,QAAV,GAAqB4B,MAA5B;AACD;AANH,IADK,EASL7C,KATK,CAAP;AAWD,E,CA1KD,mB;;;;;;;;;;;;ACAA;;;;;;;;;;;;AAYO,KAAM8C,kCAAa;AACxBC,cAAW,8BADa;AAExBC,kBAAe,iCAFS;AAGxBC,sBAAmB,EAHK;AAIxBC,0BAAuB;AAJC,EAAnB;;AAOP;;;;;;;AAOO,KAAM9C,oCAAc;AACzBC,sBAAmB;AADM,EAApB,C;;;;;;;;;;;;;;;;;;;;AC1BP;mBACe,UAAC8C,KAAD,EAAQ3D,SAAR,EAAsB;AACnC;;;;;;;;;AASA,OAAMc,wBAAwB,SAAxBA,qBAAwB;AAAA,YAAM6C,MAAM7C,qBAAN,EAAN;AAAA,IAA9B;;AAEA;;;;;;;;;;AAUA,OAAMI,uBAAuB,SAAvBA,oBAAuB,GAGlB;AAAA,oFAAP,EAAO;AAAA,0BAFTF,IAES;AAAA,SAFTA,IAES,6BAFFhB,UAAUyB,QAAV,GAAqBC,UAArB,CAAgCkC,IAE9B;AAAA,oCADT3C,cACS;AAAA,SADTA,cACS,uCADQjB,UAAUyB,QAAV,GAAqBC,UAArB,CAAgCT,cACxC;;AACTjB,eAAU6D,0BAAV;;AAEA,SAAMC,gBAAgBlB,OAAOC,MAAP,CACpB,EADoB,EAEpB7C,UAAUyB,QAAV,GAAqBC,UAFD,EAGpB,EAAEkC,MAAM5C,IAAR,EAAcC,8BAAd,EAHoB,CAAtB;;AAMA,YAAO0C,MAAM5C,IAAN,CAAW+C,aAAX,EACJ7B,IADI,CACC,UAAC8B,IAAD,EAAU;AACd/D,iBAAUgE,gCAAV,CAA2C;AACzCC,qBAAYF,KAAKG,UADwB;AAEzCN,eAAM5C,IAFmC;AAGzC+C,eAAMA,KAAKA;AAH8B,QAA3C;AAKA,cAAOA,IAAP;AACD,MARI,EASJI,KATI,CASE,UAACC,KAAD,EAAW;AAChBpE,iBAAUqE,8BAAV,CAAyCD,KAAzC;AACA,aAAMA,KAAN;AACD,MAZI,CAAP;AAaD,IAzBD;;AA2BA;;;;;;;;;;AAUA,OAAMpC,kBAAkB,SAAlBA,eAAkB;AAAA,YACtB2B,MACGW,cADH,GAEGrC,IAFH,CAEQ,iBAAc;AAAA,WAAX8B,IAAW,SAAXA,IAAW;;AAClB/D,iBAAUuE,2BAAV,CAAsC,EAAER,UAAF,EAAtC;AACA,cAAOA,IAAP;AACD,MALH,EAMGI,KANH,CAMS,UAACC,KAAD,EAAW;AAChBpE,iBAAUwE,yBAAV,CAAoCJ,KAApC;AACA,aAAMA,KAAN;AACD,MATH,CADsB;AAAA,IAAxB;;AAYA,UAAO;AACLlD,+CADK;AAELc,qCAFK;;AAIL;;;;;;;AAOAH,2BAXK,kCAWkBD,WAXlB,EAW+B;AAClC+B,aAAM9B,sBAAN,CAA6BD,WAA7B;AACD,MAbI;;;AAeL;;;;;;;AAOAT,0BAtBK,iCAsBiBC,UAtBjB,EAsB6B;AAChCuC,aAAMxC,qBAAN,CAA4BC,UAA5B;AACD,MAxBI;;;AA0BLN,iDA1BK;AA2BL;;;;;;;;AAQA6B,SAnCK,gBAmCAF,OAnCA,EAmCSC,SAnCT,EAmCoB;AACvB1C,iBAAU2C,IAAV,CAAe,EAAEF,gBAAF,EAAWC,oBAAX,EAAf;AACD,MArCI;;;AAuCL;;;;;;;;;;;;AAYAQ,8BAnDK,qCAmDqB3B,IAnDrB,EAmD2BY,UAnD3B,EAmDuC;AAC1C,cAAOwB,MAAMT,yBAAN,CAAgC3B,IAAhC,EAAsCY,UAAtC,EACJF,IADI,CACC,UAAC8B,IAAD,EAAU;AACd/D,mBAAUyE,qCAAV,CAAgDV,IAAhD;AACA,gBAAOA,IAAP;AACD,QAJI,CAAP;AAKD,MAzDI;;;AA2DL;;;;;;;;;;;AAWAjB,qBAtEK,4BAsEYvB,IAtEZ,EAsEkB;AACrB,cAAOoC,MACJb,gBADI,CACavB,IADb,EAEJU,IAFI,CAEC,iBAAc;AAAA,aAAX8B,IAAW,SAAXA,IAAW;;AAClB/D,mBAAU0E,6BAAV,CAAwC,EAAEX,UAAF,EAAxC;AACA,gBAAO/B,kBAAkBC,IAAlB,CAAuB;AAAA,oCAAqB8B,IAArB,IAA2B3B,wBAA3B;AAAA,UAAvB,CAAP;AACD,QALI,CAAP;AAMD,MA7EI;;;AA+EL;;;;;;;;;;;AAWAY,qBA1FK,4BA0FY2B,WA1FZ,EA0FyB;AAC5B,cAAOhB,MACJX,gBADI,CACa2B,WADb,CAAP;AAED,MA7FI;;;AAgGL;;;;;;;;;;;;;AAaA1B,qBA7GK,4BA6GY1B,IA7GZ,EA6GkBW,IA7GlB,EA6GwB;AAC3B,cAAOyB,MACJV,gBADI,CACa1B,IADb,EACmBW,IADnB,CAAP;AAED,MAhHI;;;AAmHL;;;;;;;;;;;;;AAaAa,4BAhIK,mCAgImBZ,UAhInB,EAgI+BZ,IAhI/B,EAgIqC;AACxC,cAAOoC,MACJiB,8BADI,CAC2BzC,UAD3B,EACuCZ,IADvC,CAAP;AAED,MAnII;;;AAqIL;;;;;;;;;;;;AAYA4B,8BAjJK,qCAiJqB0B,IAjJrB,EAiJ2B;AAAA,WACtBrD,UADsB,GACPxB,UAAUyB,QAAV,GAAqBU,UAArB,CAAgCD,IAAhC,CAAqC2C,IAArC,CADO,CACtBrD,UADsB;;AAE9BxB,iBAAUmD,yBAAV,CAAoC,EAAE0B,UAAF,EAAQrD,YAAY,CAACA,UAArB,EAApC;AACA,cAAOmC,MACJmB,+BADI,CAC4BD,IAD5B,EACkC,CAACrD,UADnC,EAEJ2C,KAFI,CAEE,UAACC,KAAD,EAAW;AAChBpE,mBAAUmD,yBAAV,CAAoC,EAAE0B,UAAF,EAAQrD,YAAY,CAAC,CAACA,UAAtB,EAApC;AACA,eAAM4C,KAAN;AACD,QALI,CAAP;AAMD;AA1JI,IAAP;AA4JD,E;;;;;;;;;;;;;mBCjOc,UACbW,cADa,EAEbzE,cAFa,EAGb0E,KAHa,EAIb;AACA;;;;;;;AAOA,OAAMC,WACJ3E,eAAe4E,iBAAf,CAAiC5B,sBAAWC,SAA5C,KACAD,sBAAWG,iBAFb;;AAIA;;;;;;AAMA,OAAM0B,cACJ7E,eAAe4E,iBAAf,CAAiC5B,sBAAWE,aAA5C,KACAF,sBAAWI,qBAFb;;AAIA;;;;;;;;;;;;;;;;AAgBA,OAAMvB,aAAa;AACjBiD,aAAQ;AACNnE,uBAAgBoE,SADV;AAENC,cAAOD,SAFD;AAGN3C,kBAAWsC,MAAMO,wBAAN,EAHL;AAIN3B,aAAM,CAJA;AAKNnB,gBAASuC,MAAMQ,qBAAN,EALH;AAMNC,sBAAe,KANT;AAONC,aAAMT,QAPA;AAQNhB,mBAAY,CARN;AASNkB;AATM;AADS,IAAnB;;AAcA;;;;;;;;;AASA,OAAMQ,eAAe;AACnBxD,iBAAY;AACVC,oBAAa,EADH;AAEV2B,aAAM,EAFI;AAGV7B,aAAM,EAHI;AAIV0D,gBAAS;AAJC,MADO;AAOnBC,qBAAgB,IAPG;AAQnBnE,iBAAYS,WAAWiD,MARJ;AASnB/B,aAAQ;AACNyC,wBAAiB;AADX;AATW,IAArB;;AAcA;AACErE,eAAU;AAAA,cAAMsD,eAAetD,QAAf,EAAN;AAAA;AADZ,MAEK,gDAAYsD,cAAZ,EAA4B;AAC7BhD,WAAM;AAAA,WAACqB,KAAD,uEAASuC,YAAT;AAAA,cAA0BvC,KAA1B;AAAA,MADuB;AAE7BS,iCAA4B;AAAA,cAAO;AACjC1B,qBAAY;AACVyD,oBAAS;AADC;AADqB,QAAP;AAAA,MAFC;AAO7BvB,qCAAgC,wCAACjB,KAAD,EAAQgB,KAAR;AAAA,cAAmB;AACjDyB,yBAAgB,KADiC;AAEjD1D,qBAAY;AACV4B,iBAAM,IADI;AAEV6B,oBAAS;AAFC,UAFqC;AAMjDvC,iBAAQ;AACNyC,4BAAiB1B,MAAM2B;AADjB;AANyC,QAAnB;AAAA,MAPH;AAiB7BpD,WAAM,cAACS,KAAD;AAAA,WAAUX,OAAV,QAAUA,OAAV;AAAA,WAAmBC,SAAnB,QAAmBA,SAAnB;AAAA,cAAoC;AACxChB,qBAAY;AACVe,2BADU;AAEVC;AAFU;AAD4B,QAApC;AAAA,MAjBuB;AAuB7B6B,kCAA6B,qCAACnB,KAAD;AAAA,WAAUW,IAAV,SAAUA,IAAV;AAAA,cAAsB;AACjD5B,qBAAY;AACVC,wBAAa2B,IADH;AAEViC,yBAAc;AAFJ,UADqC;AAKjD3C,iBAAQ;AACNyC,4BAAiB;AADX;AALyC,QAAtB;AAAA,MAvBA;AAgC7BpB,oCAA+B;AAAA,cAAO;AACpCuB,oBAAW;AACTD,yBAAc;AADL,UADyB;AAIpCtE,qBAAY;AACVkC,iBAAM;AADI,UAJwB;AAOpCP,iBAAQ;AACNyC,4BAAiB;AADX;AAP4B,QAAP;AAAA,MAhCF;AA2C7BI,kCAA6B,qCAAC9C,KAAD,EAAQgB,KAAR;AAAA,cAAmB;AAC9Cf,iBAAQ;AACNyC,4BAAiB1B,MAAM2B;AADjB;AADsC,QAAnB;AAAA,MA3CA;AAgD7BI,iCAA4B,oCAAC/C,KAAD,EAAQgB,KAAR;AAAA,cAAmB;AAC7Cf,iBAAQ;AACNyC,4BAAiB1B,MAAM2B;AADjB;AADqC,QAAnB;AAAA,MAhDC;AAqD7BvB,gCAA2B,mCAACpB,KAAD,EAAQgB,KAAR;AAAA,cAAmB;AAC5CyB,yBAAgB,KAD4B;AAE5C1D,qBAAY;AACVC,wBAAa,IADH;AAEV4D,yBAAc;AAFJ,UAFgC;AAM5C3C,iBAAQ;AACNyC,4BAAiB1B,MAAM2B;AADjB;AANoC,QAAnB;AAAA,MArDE;AA+D7BK,iCAA4B;AAAA,cAAO;AACjCjE,qBAAY;AACVC,wBAAa;AADH;AADqB,QAAP;AAAA,MA/DC;AAoE7BiE,+CAA0C,kDAACjD,KAAD,EAAQgB,KAAR;AAAA,cAAmB;AAC3Df,iBAAQ;AACNyC,4BAAiB1B,MAAM2B;AADjB;AADmD,QAAnB;AAAA,MApEb;AAyE7BtB,4CAAuC;AAAA,cAAU;AAC/C6B,uBAAc,KADiC;AAE/CnE,qBAAY;AACVD,iBAAMU,OACH2D,IADG,CACEnD,MAAMjB,UAAN,CAAiBD,IADnB,EAEHsE,MAFG,CAEI,UAACtE,IAAD,EAAOuE,OAAP;AAAA,sCACHvE,IADG,sBAELuE,OAFK,oBAGDrD,MAAMjB,UAAN,CAAiBD,IAAjB,CAAsBuE,OAAtB,CAHC;AAIJC,0BAAW;AAJP;AAAA,YAFJ,EAQA,EARA;AADI;AAFmC,QAAV;AAAA,MAzEV;AAuF7BC,0CAAqC,6CAACvD,KAAD,EAAQgB,KAAR;AAAA,cAAmB;AACtDf,iBAAQ;AACNyC,4BAAiB1B,MAAM2B;AADjB;AAD8C,QAAnB;AAAA,MAvFR;AA4F7B5C,gCAA2B,mCAACC,KAAD;AAAA,WAAUyB,IAAV,SAAUA,IAAV;AAAA,WAAgBrD,UAAhB,SAAgBA,UAAhB;AAAA,cAAkC;AAC3DW,qBAAY;AACVD,qCACG2C,IADH,EACU;AACNrD;AADM,YADV;AADU;AAD+C,QAAlC;AAAA;AA5FE,IAA5B,CAFL;AAwGEwC,uCAAkCe,eAAe6B,YAAf,CAChC,UAACxD,KAAD,SAA2C;AAAA,WAAjCQ,IAAiC,SAAjCA,IAAiC;AAAA,WAA3BG,IAA2B,SAA3BA,IAA2B;AAAA,oCAArBE,UAAqB;AAAA,WAArBA,UAAqB,oCAAR,CAAQ;;AACzC,WAAM4C,2BACDzD,KADC;AAEJyC,yBAAgB,KAFZ;AAGJS,uBAAc,KAHV;AAIJ5E,uCACK0B,MAAM1B,UADX;AAEEuC,iCAFF;AAGEL;AAHF,WAJI;AASJzB,uCACKiB,MAAMjB,UADX;AAEE4B,iBAAMA,KAAK+C,GAAL,CAAS;AAAA,iBAAGjC,IAAH,SAAGA,IAAH;AAAA,oBAAcA,IAAd;AAAA,YAAT,CAFR;AAGE3C,iBAAM6B,KAAKyC,MAAL,CAAY,UAACtE,IAAD,EAAOuE,OAAP;AAAA,sCAAyBvE,IAAzB,sBAAgCuE,QAAQ5B,IAAxC,EAA+C4B,OAA/C;AAAA,YAAZ,EAAuE,EAAvE,CAHR;AAIEb,oBAAS;AAJX,WATI;AAeJvC,mCACKD,MAAMC,MADX;AAEEyC,4BAAiB;AAFnB;AAfI,SAAN;;AAqBA,cAAOe,MAAP;AACD,MAxB+B,CAxGpC;AAkIExF,sBAAiB0D,eAAe6B,YAAf,CAA4B,UAACxD,KAAD,EAAQlB,IAAR;AAAA,gCACxCkB,KADwC;AAE3CjB,uCACKiB,MAAMjB,UADX;AAEE6D,yBAAc9D;AAFhB,WAF2C;AAM3CR,uCACK0B,MAAM1B,UADX;AAEEkC,iBAAM,CAFR;AAGE6B,0BAAevD,KAAKV,UAAL,IAAmB,KAHpC;AAIEP,2BAAgBiB,KAAKX,IAAL,IAAa8D,SAJ/B;AAKEC,kBAAOD;AALT,WAN2C;AAa3ChC,mCACKD,MAAMC,MADX;AAEEyC,4BAAiB;AAFnB;AAb2C;AAAA,MAA5B,CAlInB;;AAqJEnE,6BAAwBoD,eAAe6B,YAAf,CAA4B,UAACxD,KAAD,EAAQlB,IAAR;AAAA,gCAC/CkB,KAD+C;AAElDjB,uCACKiB,MAAMjB,UADX;AAEE6D,yBAAc9D;AAFhB,WAFkD;AAMlDR,uCACK0B,MAAM1B,UADX;AAEEkC,iBAAM,CAFR;AAGE6B,0BAAe,KAHjB;AAIExE,2BAAgBoE,SAJlB;AAKEC,kBAAOD;AALT,WANkD;AAalDhC,mCACKD,MAAMC,MADX;AAEEyC,4BAAiB;AAFnB;AAbkD;AAAA,MAA5B;AArJ1B;AAwKD,E;;AA1PD;;AACA","file":"widget-wm-portfolio-summary-ng/scripts/widget-wm-portfolio-summary-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lib-bb-state-container-ng\"), require(\"lib-wm-portfolio-view-model-helper\"), require(\"vendor-bb-angular\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-wm-portfolio-summary-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-widget-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-wm-portfolio-summary-ng\", [\"lib-bb-state-container-ng\", \"lib-wm-portfolio-view-model-helper\", \"vendor-bb-angular\", \"lib-bb-widget-extension-ng\", \"model-wm-portfolio-summary-ng\", \"lib-bb-intent-ng\", \"lib-bb-widget-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-wm-portfolio-summary-ng\"] = factory(require(\"lib-bb-state-container-ng\"), require(\"lib-wm-portfolio-view-model-helper\"), require(\"vendor-bb-angular\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-wm-portfolio-summary-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-widget-ng\"));\n\telse\n\t\troot[\"widget-wm-portfolio-summary-ng\"] = factory(root[\"lib-bb-state-container-ng\"], root[\"lib-wm-portfolio-view-model-helper\"], root[\"vendor-bb-angular\"], root[\"lib-bb-widget-extension-ng\"], root[\"model-wm-portfolio-summary-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-widget-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_86__, __WEBPACK_EXTERNAL_MODULE_88__, __WEBPACK_EXTERNAL_MODULE_93__, __WEBPACK_EXTERNAL_MODULE_125__, __WEBPACK_EXTERNAL_MODULE_126__, __WEBPACK_EXTERNAL_MODULE_129__, __WEBPACK_EXTERNAL_MODULE_152__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d0309a746b17cd403690","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-wm-portfolio-summary-ng/model.xml\n// module id = 0\n// module chunks = 34","module.exports = __WEBPACK_EXTERNAL_MODULE_86__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container-ng\"\n// module id = 86\n// module chunks = 19 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_88__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-wm-portfolio-view-model-helper\"\n// module id = 88\n// module chunks = 19 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_93__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 93\n// module chunks = 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_125__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 125\n// module chunks = 28 29 30 31 32 33 34 35 36","module.exports = __WEBPACK_EXTERNAL_MODULE_126__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-wm-portfolio-summary-ng\"\n// module id = 126\n// module chunks = 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_129__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 129\n// module chunks = 28 33 34 35 36","module.exports = __WEBPACK_EXTERNAL_MODULE_152__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 152\n// module chunks = 33 34 35 37","/**\n * @module widget-wm-portfolio-summary-ng\n *\n * @description\n * Portfolio summary widget.\n *\n *\n * @example\n *  <div ng-controller=\"PortfolioSummaryController as $ctrl\">\n *    <ul>\n *       <li ng-repeat=\"portfolio in $ctrl.portfolios\">{{portfolio.id}}</li>\n *    </ul>\n *  </div>\n */\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport stateContainerModuleKey, { bbStateContainerKey } from 'lib-bb-state-container-ng';\nimport widgetModuleKey, {\n  widgetKey,\n} from 'lib-bb-widget-ng';\nimport modelPortfolioSummaryModuleKey, {\n  modelPortfolioSummaryKey,\n}\n  from 'model-wm-portfolio-summary-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport Controller from './controller';\nimport defaultHooks from './default-hooks';\nimport service from './service';\nimport viewModel from './view-model';\n\nconst hooksKey = 'widget-wm-portfolio-summary-ng:hooks';\nconst serviceKey = 'widget-wm-portfolio-summary-ng:service';\nconst viewModelKey = 'widget-wm-portfolio-summary-ng:viewModel';\n\n/**\n * @name default\n * @type {string}\n * @description Angular module name\n */\nexport default angular\n  .module('widget-wm-portfolio-summary-ng', [\n    modelPortfolioSummaryModuleKey,\n    widgetModuleKey,\n    bbIntentModuleKey,\n    stateContainerModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n  .factory(serviceKey, [\n    modelPortfolioSummaryKey,\n    viewModelKey,\n    service,\n  ])\n  .factory(viewModelKey, [\n    bbStateContainerKey,\n    widgetKey,\n    hooksKey,\n    viewModel,\n  ])\n\n\n  .controller('PortfolioSummaryController', [\n    widgetKey,\n    bbIntentKey,\n    serviceKey,\n    viewModelKey,\n    /* into */\n    Controller,\n  ])\n  .name;\n\n/**\n * Portfolio type definition\n * @typedef {Object} Portfolio\n * @property {string}        IBAN               - International Bank Account Number\n * @property {string}        clientName         - Client name\n * @property {string}        alias              - A portfolio name manually set by the client\n * @property {assetClass[]}  assetClasses       - Asset classes list for portfolio\n * @property {object}        valuation          - Total cost of all assets in the portfolio\n * @property {object}        inCashTotal        - Incoming cash for the period of time\n * @property {object}        outCashTotal       - Outgoing cash for the period of time\n * @property {number}        performanceMTD     - Portfolio performance for month\n * @property {number}        performanceMTDpct  - Portfolio performance for month in percents\n * @property {number}        performanceYTD     - Portfolio performance amount for year\n * @property {number}        performanceYTDpct  - Portfolio performance amount for year in percents\n * @property {string}        riskClass          - Risk of portfolio investement strategy\n * @property {manager[]}     managers           - Managers of portfolio\n * @property {attorney[]}    attorneys          - Attorneys of portfolio\n * @property {BBSeries[]}    dataseries         - data in format suitable for chart UI components\n */\n\n/**\n * BBSeries data object used to draw charts\n * @typedef {object} BBSeries\n * @property {string[]} labels Array chart slices labels\n * @property {Dataset[]} datasets Array of chart datasets\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} Dataset\n * @property {number[]} data Array of data points for chart slices\n */\n\n/**\n * Asset class object\n * @typedef {object} AssetClass\n * @property {string} name name of asset class\n * @property {number} valuePct value that represents percentage of asset\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} attorney\n * @property {string} id id of a portfolio manager\n * @property {string} name name of a portfolio manager\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} manager\n * @property {string} id id of a portfolio manager\n * @property {string} name name of a portfolio manager\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-portfolio-summary-ng/scripts/index.js","/* global angular*/\nimport { IntentsKeys } from './constants';\n\n/**\n * @name PortfolioSummaryController\n * @ngkey PortfolioSummaryController\n * @type {object}\n * @description\n * Portfolio summary controller.\n */\n\nexport default function PortfolioSummaryController(\n  widgetInstance,\n  bbIntents,\n  service,\n  viewModel\n) {\n  const $ctrl = this;\n\n  /**\n   * @description\n   * A set of intents that the Portfolio Summary controller uses or handles.\n   *\n   * @name intents\n   * @type {Object}\n   * @inner\n   */\n  const intents = {\n    viewPortfolioDetails: bbIntents.create(IntentsKeys.PORTFOLIO_DETAILS),\n  };\n\n  /**\n   * @name PortfolioSummaryController#getCustomListSelected\n   * @type {function}\n   *\n   * @description\n   * Get current selected custom list\n   *\n   * @returns {object}\n   */\n  const getCustomListSelected = () => service.getCustomListSelected();\n\n  /**\n   * @description\n   * Handles loading portfolios\n   *\n   * @public\n   * @name PortfolioSummaryController#load\n   * @type {function}\n   * @param {number} page - index of the page to load\n   * Load portfolios\n   * @returns {promise.<array>}\n   */\n  const load = ({ page, customListUuid } = {}) =>\n    service.loadPortfolioSummary({ page, customListUuid });\n\n  /**\n   * @name PortfolioSummaryController#setCustomListSelected\n   * @type {function}\n   *\n   * @description\n   * Set current selected custom list\n   *\n   * @param {string} customList custom list id to set selected\n   * @returns {void}\n   */\n  const setCustomListSelected = customList => service.setCustomListSelected(customList);\n\n  /**\n   * @name PortfolioSummaryController#setCustomListSelected\n   * @type {function}\n   *\n   * @description\n   * Set current selected custom list\n   *\n   * @param {string} customList custom list id to set selected\n   * @returns {Promise.<Array>}\n   */\n  const setSelectedList = customList => {\n    service.setCustomListSelected(customList);\n    $ctrl.searchQuery = '';\n    if (customList && (customList.uuid || customList.isFavorite)) {\n      viewModel.setSelectedList(customList);\n      return load(viewModel.getState().pageParams);\n    }\n    viewModel.setDefaultListSelected(customList);\n    return load();\n  };\n\n  /**\n   * @name viewPortfolioDetails\n   *\n   * @description\n   * Navigate to portfolio details\n   *\n   * @param {string} portfolioId ID of portfolio to load\n   * @type {function}\n   */\n  const viewPortfolioDetails = (portfolioId) => {\n    service.setPortfolioIdSelected(portfolioId);\n    intents.viewPortfolioDetails();\n  };\n\n\n  /*\n   * @description\n   * Widget initialization logic.\n   * Loads custom lists, preselects list selected previously, loads portfolio summary data\n   */\n  const $onInit = () => {\n    viewModel.init();\n    return service.loadCustomLists()\n      .then(() => getCustomListSelected())\n      .then((list) => {\n        if (list && list.isFavorite) {\n          return list;\n        }\n        return list && viewModel.getState()\n          .portfolios.customLists.find(item => item.uuid === list.uuid);\n      })\n      .then(listItem => {\n        if (listItem) {\n          viewModel.setSelectedList(listItem);\n        }\n        return load();\n      });\n  };\n\n  /**\n   * @name onSort\n   * @type {function}\n   * @description\n   * Loads sorted list of portfolios\n   * @param  {string} orderBy   Column key to sort\n   * @param  {string} direction Sort direction\n   * @returns {Promise.<array>}\n   */\n  const onSort = (orderBy, direction) => {\n    service.sort(orderBy, direction);\n    return load();\n  };\n\n  Object.assign($ctrl, {\n    onSort,\n    viewPortfolioDetails,\n    loadCustomLists: service.loadCustomLists,\n    deleteCustomList: service.deleteCustomList,\n    removePortfolioFromList: service.removePortfolioFromList,\n    createCustomList: service.createCustomList,\n    renameCustomList: service.renameCustomList,\n    setPortfoliosToCustomList: service.setPortfoliosToCustomList,\n    togglePortfolioAsFavorite: service.togglePortfolioAsFavorite,\n    setCustomListSelected,\n    getCustomListSelected,\n    setSelectedList,\n    $onInit,\n    load,\n  });\n\n  return Object.assign(\n    {\n      get state() {\n        return viewModel.getState();\n      },\n      get errors() {\n        return viewModel.getState().errors;\n      },\n    },\n    $ctrl\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-portfolio-summary-ng/scripts/controller.js","/**\n * @name Preference\n * @type {object}\n *\n * @description\n * Widget preferences enum\n *\n * @property {string} PAGE_SIZE             Number of items per page\n * @property {string} MAX_NAV_PAGES         Number of pagination items\n * @property {number} DEFAULT_PAGE_SIZE     Defines the default pageSize for the direct debits page\n * @property {number} DEFAULT_MAX_NAV_PAGES Defines the default maxNavPages for the accounts page\n */\nexport const Preference = {\n  PAGE_SIZE: 'bb.portfolioSummary.pageSize',\n  MAX_NAV_PAGES: 'bb.portfolioSummary.maxNavPages',\n  DEFAULT_PAGE_SIZE: 10,\n  DEFAULT_MAX_NAV_PAGES: 3,\n};\n\n/**\n * @description\n * Widget intents to be handled\n *\n * @name IntentsKeys\n * @type {object}\n */\nexport const IntentsKeys = {\n  PORTFOLIO_DETAILS: 'view.portfolio.details',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-portfolio-summary-ng/scripts/constants.js","/* global angular */\nexport default (model, viewModel) => {\n  /**\n   * @name getCustomListSelected\n   * @type {function}\n   *\n   * @description\n   * Get current selected custom list\n   *\n   * @returns {object}\n   */\n  const getCustomListSelected = () => model.getCustomListSelected();\n\n  /**\n   * @description\n   * Handles loading porfolio summary\n   * @public\n   * @name loadPortfolioSummary\n   * @param {Object} page index of the page to load\n   * @type {function}\n   * Load allocations\n   * @returns {promise.<array>}\n   */\n  const loadPortfolioSummary = ({\n    page = viewModel.getState().pageParams.from,\n    customListUuid = viewModel.getState().pageParams.customListUuid,\n  } = {}) => {\n    viewModel.beforeLoadPortfolioSummary();\n\n    const currentParams = Object.assign(\n      {},\n      viewModel.getState().pageParams,\n      { from: page, customListUuid }\n    );\n\n    return model.load(currentParams)\n      .then((data) => {\n        viewModel.afterLoadPortfolioSummarySuccess({\n          totalItems: data.totalCount,\n          from: page,\n          data: data.data,\n        });\n        return data;\n      })\n      .catch((error) => {\n        viewModel.afterLoadPortfolioSummaryError(error);\n        throw error;\n      });\n  };\n\n  /**\n   * @public\n   * @name loadCustomLists\n   *\n   * @description\n   * Loads all portfolio custom lists\n   *\n   * @type {function}\n   * @returns {promise.<array>}\n   */\n  const loadCustomLists = () =>\n    model\n      .loadCustomList()\n      .then(({ data }) => {\n        viewModel.afterLoadCustomListsSuccess({ data });\n        return data;\n      })\n      .catch((error) => {\n        viewModel.afterLoadCustomListsError(error);\n        throw error;\n      });\n\n  return {\n    loadPortfolioSummary,\n    loadCustomLists,\n\n    /**\n     * @name setPortfolioIdSelected\n     * @type {function}\n     * @description\n     * Set current selected portfolio id\n     * @param {string} portfolioId portfolio id to set selected\n     */\n    setPortfolioIdSelected(portfolioId) {\n      model.setPortfolioIdSelected(portfolioId);\n    },\n\n    /**\n     * @name setCustomListSelected\n     * @type {function}\n     * @description\n     * Persist selected custom list\n     * @param {object} customList Custom list object to persist\n     */\n    setCustomListSelected(customList) {\n      model.setCustomListSelected(customList);\n    },\n\n    getCustomListSelected,\n    /**\n     * @name sort\n     * @type {function}\n     * @description\n     * Loads sorted list of portfolios\n     * @param  {string} orderBy   Column key to sort\n     * @param  {string} direction Sort direction\n     */\n    sort(orderBy, direction) {\n      viewModel.sort({ orderBy, direction });\n    },\n\n    /**\n     * @public\n     * @name setPortfoliosToCustomList\n     *\n     * @description\n     * Sends all portfolios that will be added to given custom list\n     *\n     * @type {function}\n     * @param {string} uuid Identifier of custom list\n     * @param {array} List of portfolios\n     * @returns {promise.<string>} Uuid of custom list\n     */\n    setPortfoliosToCustomList(uuid, portfolios) {\n      return model.setPortfoliosToCustomList(uuid, portfolios)\n        .then((data) => {\n          viewModel.afterSetPortfoliosToCustomListSuccess(data);\n          return data;\n        });\n    },\n\n    /**\n     * @public\n     * @name deleteCustomList\n     *\n     * @param {string} uuid Identifier of custom list\n     * @description\n     * deletes custom list by uuid\n     *\n     * @type {function}\n     * @returns {promise.<array>}\n     */\n    deleteCustomList(uuid) {\n      return model\n        .deleteCustomList(uuid)\n        .then(({ data }) => {\n          viewModel.afterDeleteCustomListsSuccess({ data });\n          return loadCustomLists().then(customLists => ({ ...data, customLists }));\n        });\n    },\n\n    /**\n     * @public\n     * @name createCustomList\n     *\n     * @description\n     * Create custom list of portfolios.\n     *\n     * @type {function}\n     * @param {object} requestData request body data\n     * @returns {promise.<array>}\n     */\n    createCustomList(requestData) {\n      return model\n        .createCustomList(requestData);\n    },\n\n\n    /**\n     * @public\n     * @name renameCustomList\n     *\n     * @description\n     * Rename custom list\n     *\n     * @type {function}\n     * @param {string} uuid Identifier of custom list\n     * @param {object} list list with a name property\n     *\n     * @returns {promise.<array>}\n     */\n    renameCustomList(uuid, list) {\n      return model\n        .renameCustomList(uuid, list);\n    },\n\n\n    /**\n     * @public\n     * @name removePortfoliosFromList\n     *\n     * @description\n     * Removes portfolios from custom list\n     *\n     * @type {function}\n     * @param {array.<string>} portfolios list of portfolios ids to remove from custom list\n     * @param {string} uuid Identifier of custom list\n     *\n     * @returns {promise.<array>}\n     */\n    removePortfolioFromList(portfolios, uuid) {\n      return model\n        .deletePortfoliosFromCustomList(portfolios, uuid);\n    },\n\n    /**\n     * @public\n     * @name togglePortfolioAsFavorite\n     *\n     * @description\n     * Toggles portfolio Favorite status\n     *\n     * @type {function}\n     * @param {string} IBAN Portfolio`s IBAN\n     *\n     * @returns {promise.<array>}\n     */\n    togglePortfolioAsFavorite(IBAN) {\n      const { isFavorite } = viewModel.getState().portfolios.list[IBAN];\n      viewModel.togglePortfolioAsFavorite({ IBAN, isFavorite: !isFavorite });\n      return model\n        .updateFavoriteStatusOfPortfolio(IBAN, !isFavorite)\n        .catch((error) => {\n          viewModel.togglePortfolioAsFavorite({ IBAN, isFavorite: !!isFavorite });\n          throw error;\n        });\n    },\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-portfolio-summary-ng/scripts/service.js","import { wrapActions } from 'lib-wm-portfolio-view-model-helper';\nimport { Preference } from './constants';\n\nexport default function (\n  stateContainer,\n  widgetInstance,\n  hooks\n) {\n  /**\n   * @name pageSize\n   * @type {Number} pageSize\n   * @description\n   * Number of records to return per request\n   *\n   */\n  const pageSize =\n    widgetInstance.getLongPreference(Preference.PAGE_SIZE) ||\n    Preference.DEFAULT_PAGE_SIZE;\n\n  /**\n   * @name maxNavPages\n   * @type {Number} maxNaxPages\n   * @description\n   * Maximum number of navigation pages to display\n   */\n  const maxNavPages =\n    widgetInstance.getLongPreference(Preference.MAX_NAV_PAGES) ||\n    Preference.DEFAULT_MAX_NAV_PAGES;\n\n  /**\n   * @name portfolios\n   * @type {object}\n   *\n   * @inner\n   * @property {object} params\n   * @property {string} params.customListUuid Custom list uuid\n   * @property {string} params.query Portfolios search query\n   * @property {string} params.direction Sorting direction, `ASC` or `DESC`\n   * @property {number} params.from Index of page to load data from\n   * @property {string} params.orderBy Column key currently sorted\n   * @property {number} params.size Number of portfolios to retrieve\n   * @property {number} params.totalItems Number of total portfolios\n   * @property {number} params.maxNavPages Number of max. number navigation pages\n   * @property {number} params.justFavorites Flag to load just favorite portfolios\n   */\n  const portfolios = {\n    params: {\n      customListUuid: undefined,\n      query: undefined,\n      direction: hooks.defaultSortableDirection(),\n      from: 0,\n      orderBy: hooks.defaultSortableColumn(),\n      justFavorites: false,\n      size: pageSize,\n      totalItems: 0,\n      maxNavPages,\n    },\n  };\n\n  /**\n   * @name initialState\n   * @description Initial state of porfolios store\n   * @type {object}\n   * @property {object} portfolios      an object of portfolios\n   * @property {boolean} initialLoading Boolean flag of initial loading\n   * @property {object} pageParams      parameters of the page\n   * @property {object} errors          portfolios errors\n   */\n  const initialState = {\n    portfolios: {\n      customLists: [],\n      data: [],\n      list: {},\n      loading: false,\n    },\n    initialLoading: true,\n    pageParams: portfolios.params,\n    errors: {\n      portfoliosError: null,\n    },\n  };\n\n  return {\n    getState: () => stateContainer.getState(),\n    ...wrapActions(stateContainer, {\n      init: (state = initialState) => state,\n      beforeLoadPortfolioSummary: () => ({\n        portfolios: {\n          loading: true,\n        },\n      }),\n      afterLoadPortfolioSummaryError: (state, error) => ({\n        initialLoading: false,\n        portfolios: {\n          data: null,\n          loading: false,\n        },\n        errors: {\n          portfoliosError: error.code,\n        },\n      }),\n      sort: (state, { orderBy, direction }) => ({\n        pageParams: {\n          orderBy,\n          direction,\n        },\n      }),\n      afterLoadCustomListsSuccess: (state, { data }) => ({\n        portfolios: {\n          customLists: data,\n          selectedList: null,\n        },\n        errors: {\n          portfoliosError: null,\n        },\n      }),\n      afterDeleteCustomListsSuccess: () => ({\n        porfolios: {\n          selectedList: null,\n        },\n        pageParams: {\n          from: 0,\n        },\n        errors: {\n          portfoliosError: null,\n        },\n      }),\n      afterDeleteCustomListsError: (state, error) => ({\n        errors: {\n          portfoliosError: error.code,\n        },\n      }),\n      afterRenameCustomListError: (state, error) => ({\n        errors: {\n          portfoliosError: error.code,\n        },\n      }),\n      afterLoadCustomListsError: (state, error) => ({\n        initialLoading: false,\n        portfolios: {\n          customLists: null,\n          selectedList: null,\n        },\n        errors: {\n          portfoliosError: error.code,\n        },\n      }),\n      afterCreateCustomListError: () => ({\n        portfolios: {\n          customLists: null,\n        },\n      }),\n      afterRemovePorftfolioFromCustomListError: (state, error) => ({\n        errors: {\n          portfoliosError: error.code,\n        },\n      }),\n      afterSetPortfoliosToCustomListSuccess: state => ({\n        isAllChecked: false,\n        portfolios: {\n          list: Object\n            .keys(state.portfolios.list)\n            .reduce((list, current) => ({\n              ...list,\n              [current]: {\n                ...state.portfolios.list[current],\n                isChecked: false,\n              },\n            }), {}),\n        },\n      }),\n      afterSetPortfoliosToCustomListError: (state, error) => ({\n        errors: {\n          portfoliosError: error.code,\n        },\n      }),\n      togglePortfolioAsFavorite: (state, { IBAN, isFavorite }) => ({\n        portfolios: {\n          list: {\n            [IBAN]: {\n              isFavorite,\n            },\n          },\n        },\n      }),\n    }),\n    afterLoadPortfolioSummarySuccess: stateContainer.createAction(\n      (state, { from, data, totalItems = 0 }) => {\n        const result = {\n          ...state,\n          initialLoading: false,\n          isAllChecked: false,\n          pageParams: {\n            ...state.pageParams,\n            totalItems,\n            from,\n          },\n          portfolios: {\n            ...state.portfolios,\n            data: data.map(({ IBAN }) => IBAN),\n            list: data.reduce((list, current) => ({ ...list, [current.IBAN]: current }), {}),\n            loading: false,\n          },\n          errors: {\n            ...state.errors,\n            portfoliosError: null,\n          },\n        };\n\n        return result;\n      }\n    ),\n    setSelectedList: stateContainer.createAction((state, list) => ({\n      ...state,\n      portfolios: {\n        ...state.portfolios,\n        selectedList: list,\n      },\n      pageParams: {\n        ...state.pageParams,\n        from: 0,\n        justFavorites: list.isFavorite || false,\n        customListUuid: list.uuid || undefined,\n        query: undefined,\n      },\n      errors: {\n        ...state.errors,\n        portfoliosError: null,\n      },\n    })),\n\n    setDefaultListSelected: stateContainer.createAction((state, list) => ({\n      ...state,\n      portfolios: {\n        ...state.portfolios,\n        selectedList: list,\n      },\n      pageParams: {\n        ...state.pageParams,\n        from: 0,\n        justFavorites: false,\n        customListUuid: undefined,\n        query: undefined,\n      },\n      errors: {\n        ...state.errors,\n        portfoliosError: null,\n      },\n    })),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-portfolio-summary-ng/scripts/view-model.js"],"sourceRoot":""}