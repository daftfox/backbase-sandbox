{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*********","webpack:///webpack/bootstrap 110596ed019bd8a9816a?8523*********","webpack:///./widget-bbm-transactions-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114**","webpack:///external \"lib-bb-widget-ng\"?84ad*","webpack:///external \"lib-bb-model-errors\"?7567*","webpack:///external \"lib-bb-widget-extension-ng\"?b547","webpack:///external \"lib-bb-intent-ng\"?add1","webpack:///external \"lib-bb-event-bus-ng\"?8215","webpack:///external \"lib-bb-state-container-ng\"?8d56","webpack:///external \"model-bb-transactions-ng\"?7758","webpack:///external \"lib-bb-extension-helpers-ng\"?e731","webpack:///./widget-bbm-transactions-ng/scripts/index.js","webpack:///external \"lib-bb-extension-events-ng\"","webpack:///external \"lib-bb-extension-intents-ng\"","webpack:///./widget-bbm-transactions-ng/scripts/controllers/list.controller.js","webpack:///./widget-bbm-transactions-ng/scripts/controllers/details.controller.js","webpack:///./widget-bbm-transactions-ng/scripts/default-hooks.js","webpack:///./widget-bbm-transactions-ng/scripts/view-model/index.js","webpack:///./widget-bbm-transactions-ng/scripts/view-model/initial-state.js","webpack:///./widget-bbm-transactions-ng/scripts/view-model/list.js","webpack:///./widget-bbm-transactions-ng/scripts/view-model/helpers.js","webpack:///./widget-bbm-transactions-ng/scripts/view-model/product.js","webpack:///./widget-bbm-transactions-ng/scripts/view-model/transaction.js","webpack:///./widget-bbm-transactions-ng/scripts/view-model/search.js","webpack:///./widget-bbm-transactions-ng/scripts/service.js","webpack:///./widget-bbm-transactions-ng/scripts/constants.js"],"names":["defaultHooks","moduleKey","hooksKey","serviceKey","viewModelKey","angular","module","modelModuleKey","widgetModuleKey","eventBusModuleKey","intentModuleKey","stateContainerModuleKey","bbExtensionHelpersModuleKey","bbExtensionEventsModuleKey","bbExtensionIntentsModuleKey","factory","bbStateContainerKey","widgetKey","createViewModel","modelTransactionsKey","createService","extensionHelpersContextKey","bbIntentKey","bbIntent","service","extensionEventsContextKey","stateContainer","extensionIntentsContextKey","controller","ListController","DetailsController","run","eventBusKey","viewModel","bbIntents","eventBus","widget","init","then","publish","Event","CXP_ITEM_LOADED","id","getId","BB_ITEM_LOADED","name","TransactionsListController","TransactionsDetailsController","processRequestParams","params","processReloadRequestParams","processSearchRequestParams","DEFAULT_PAGE_SIZE","hooks","stateParams","pageSize","getLongPreference","initialState","createAction","state","getState","list","product","transaction","search","data","error","loading","searching","requestParams","from","size","query","totalCount","transactions","beforeLoad","afterLoadSuccess","response","afterLoadError","errorMessages","E_AUTH","E_CONNECTIVITY","E_USER","E_UNEXPECTED","uiError","message","code","setProduct","setTransaction","setSearch","beforeSearch","afterSearchSuccess","afterSearchError","cancel","model","getRequestParams","createSelector","getSearchRequestParams","getTransactions","getSelectedProduct","getSelectedTransaction","isAllTransactionsLoaded","Boolean","length","isAllSearchTransactionsLoaded","isSameProduct","productA","productB","getNextRequestParams","productId","getNextSearchRequestParams","getReloadRequestParams","recalculateRequestParams","Math","floor","uniqueArray","array","filter","itemOuter","index","findIndex","itemInner","appendTransactions","replaceTransactions","loadTransactions","load","mergeFn","catch","reloadTransactions","reloadRequestParams","searchTransactions","loadMoreTransactions","loadMoreTransactionsPromise","searchMoreTransactions","searchMoreTransactionsPromise","setSelectedProduct","selectedProduct","setSelectedTransaction","selectedTransaction","setSearchQuery","cancelSearch"],"mappings":"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","file":"widget-bbm-transactions-ng/scripts/widget-bbm-transactions-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-state-container-ng\"), require(\"model-bb-transactions-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"lib-bb-extension-events-ng\"), require(\"lib-bb-extension-intents-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bbm-transactions-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-model-errors\", \"lib-bb-widget-extension-ng\", \"lib-bb-intent-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-state-container-ng\", \"model-bb-transactions-ng\", \"lib-bb-extension-helpers-ng\", \"lib-bb-extension-events-ng\", \"lib-bb-extension-intents-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bbm-transactions-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-state-container-ng\"), require(\"model-bb-transactions-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"lib-bb-extension-events-ng\"), require(\"lib-bb-extension-intents-ng\"));\n\telse\n\t\troot[\"widget-bbm-transactions-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-state-container-ng\"], root[\"model-bb-transactions-ng\"], root[\"lib-bb-extension-helpers-ng\"], root[\"lib-bb-extension-events-ng\"], root[\"lib-bb-extension-intents-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_63__, __WEBPACK_EXTERNAL_MODULE_64__, __WEBPACK_EXTERNAL_MODULE_71__, __WEBPACK_EXTERNAL_MODULE_82__, __WEBPACK_EXTERNAL_MODULE_83__, __WEBPACK_EXTERNAL_MODULE_84__, __WEBPACK_EXTERNAL_MODULE_85__, __WEBPACK_EXTERNAL_MODULE_86__, __WEBPACK_EXTERNAL_MODULE_87__, __WEBPACK_EXTERNAL_MODULE_106__, __WEBPACK_EXTERNAL_MODULE_107__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 110596ed019bd8a9816a","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bbm-transactions-ng/model.xml\n// module id = 0\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_63__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 63\n// module chunks = 7 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_64__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 64\n// module chunks = 7 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_71__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 71\n// module chunks = 7 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_82__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 82\n// module chunks = 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_83__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 83\n// module chunks = 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_84__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 84\n// module chunks = 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_85__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container-ng\"\n// module id = 85\n// module chunks = 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_86__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-transactions-ng\"\n// module id = 86\n// module chunks = 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_87__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-helpers-ng\"\n// module id = 87\n// module chunks = 9 10","/**\n * @module widget-bbm-transactions-ng\n *\n * @description\n * Mobile Transactions widget.\n */\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport intentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport stateContainerModuleKey, { bbStateContainerKey } from 'lib-bb-state-container-ng';\nimport modelModuleKey, { modelTransactionsKey } from 'model-bb-transactions-ng';\n\nimport bbExtensionHelpersModuleKey, {\n  extensionHelpersContextKey,\n} from 'lib-bb-extension-helpers-ng';\n\nimport bbExtensionEventsModuleKey, {\n  extensionEventsContextKey,\n} from 'lib-bb-extension-events-ng';\n\nimport bbExtensionIntentsModuleKey, {\n  extensionIntentsContextKey,\n} from 'lib-bb-extension-intents-ng';\n\nimport ListController from './controllers/list.controller';\nimport DetailsController from './controllers/details.controller';\nimport * as defaultHooks from './default-hooks';\nimport createViewModel from './view-model/index';\nimport createService from './service';\nimport { Event } from './constants';\n\nconst moduleKey = 'widget-bbm-transactions-ng';\nconst hooksKey = `${moduleKey}:hooks`;\nconst serviceKey = `${moduleKey}:service`;\nconst viewModelKey = `${moduleKey}:viewModel`;\n\nexport default angular\n  .module(moduleKey, [\n    modelModuleKey,\n    widgetModuleKey,\n    eventBusModuleKey,\n    intentModuleKey,\n    stateContainerModuleKey,\n    bbExtensionHelpersModuleKey,\n    bbExtensionEventsModuleKey,\n    bbExtensionIntentsModuleKey,\n  ])\n  .factory(hooksKey, extendHooks(defaultHooks))\n  .factory(viewModelKey, [\n    bbStateContainerKey,\n    widgetKey,\n    hooksKey,\n    /* into */\n    createViewModel,\n  ])\n  .factory(serviceKey, [\n    modelTransactionsKey,\n    viewModelKey,\n    hooksKey,\n    bbStateContainerKey,\n    /* into */\n    createService,\n  ])\n  .factory(extensionHelpersContextKey, [\n    bbIntentKey,\n    serviceKey,\n    (bbIntent, service) => ({ bbIntent, service }),\n  ])\n  .factory(extensionEventsContextKey, [\n    bbIntentKey,\n    bbStateContainerKey,\n    serviceKey,\n    (bbIntent, stateContainer, service) => ({\n      bbIntent,\n      stateContainer,\n      service,\n    }),\n  ])\n  .factory(extensionIntentsContextKey, [\n    serviceKey,\n    (service) => ({ service }),\n  ])\n  .controller('TransactionsListController', [\n\n    /* into */\n    ListController,\n  ])\n  .controller('TransactionsDetailsController', [\n\n    /* into */\n    DetailsController,\n  ])\n  .run([\n    viewModelKey,\n    bbIntentKey,\n    eventBusKey,\n    widgetKey,\n    (viewModel, bbIntents, eventBus, widget) => {\n      viewModel.init();\n\n      bbIntents.init()\n        .then(() => {\n          /**\n           * This event (cxp.item.loaded) is deprecated in Mobile SDK version > 3.0\n           * and will be removed with the update to widget collection 3 (WC3)\n           */\n          eventBus.publish(Event.CXP_ITEM_LOADED, {\n            id: widget.getId(),\n          });\n\n          eventBus.publish(Event.BB_ITEM_LOADED, {\n            id: widget.getId(),\n          });\n        });\n    },\n  ])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_106__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-events-ng\"\n// module id = 106\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_107__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-intents-ng\"\n// module id = 107\n// module chunks = 10","/**\n * @name TransactionsListController\n * @ngkey TransactionsListController\n * @type {object}\n * @description\n * Transactions widget list controller\n */\nexport default function TransactionsListController() {}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/controllers/list.controller.js","/**\n * @name TransactionsDetailsController\n * @ngkey TransactionsDetailsController\n * @type {object}\n * @description\n * Transactions widget details controller\n */\nexport default function TransactionsDetailsController() {}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/controllers/details.controller.js","/**\n * @name defaultHooks\n * @type {object}\n *\n * @description\n * Default hooks for widget-bbm-transactions-ng\n */\n\n/**\n * @name defaultHooks#processRequestParams\n * @type {function}\n *\n * @description\n * Default hook for transactions query params processing/extending\n *\n * @param {object} params to process\n * @param {?number} params.from The page to list from\n * @param {?string} params.productId The product id\n * @param {?string} params.query The search term used to search for transactions\n * @param {?number} params.size The number of results per page\n * @returns {Object} Processed params\n */\nexport const processRequestParams = (params) => params;\n\n/**\n * @name defaultHooks#processReloadRequestParams\n * @type {function}\n *\n * @description\n * Default hook for transactions query params processing/extending\n *\n * @param {object} params to process\n * @param {?number} params.from The page to list from\n * @param {?string} params.productId The product id\n * @param {?string} params.query The search term used to search for transactions\n * @param {?number} params.size The number of results per page\n * @returns {Object} Processed params\n */\nexport const processReloadRequestParams = (params) => params;\n\n/**\n * @name defaultHooks#processSearchRequestParams\n * @type {function}\n *\n * @description\n * Default hook for transactions search query params processing/extending\n *\n * @param {object} params to process\n * @param {?number} params.from The page to list from\n * @param {?string} params.productId The product id\n * @param {?string} params.query The search term used to search for transactions\n * @param {?number} params.size The number of results per page\n * @returns {Object} Processed params\n */\nexport const processSearchRequestParams = (params) => params;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/default-hooks.js","// Combine state reducers\nimport createInitialState from './initial-state';\nimport createListReducers from './list';\nimport createProductReducers from './product';\nimport createTransactionReducers from './transaction';\nimport createSearchReducers from './search';\n\n/**\n * Defines the default page size for the transactions page\n * @type {number}\n * @inner\n */\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport default (stateContainer, widget, hooks) => {\n  const stateParams = {\n    pageSize: widget.getLongPreference('bb.transaction.pageSize') || DEFAULT_PAGE_SIZE,\n  };\n\n  const initialState = createInitialState(stateParams);\n\n  /**\n   * @name ViewModel\n   * @type {object}\n   * @ngKey widget-bb-transactions-ng:viewModel\n   * @inner\n   */\n  return {\n    /**\n     * @name ViewModel#init\n     * @description Initialises view model with initial state\n     * @type {function}\n     * @inner\n     * @return {ViewState}\n     */\n    init: stateContainer.createAction((state = initialState) => state),\n\n    /**\n     * @name ViewModel#getState\n     * @description Returns view state\n     * @type {function}\n     * @inner\n     * @return {ViewState}\n     */\n    getState: stateContainer.getState,\n\n    /**\n     * @name ViewModel#list\n     * @description\n     * Actions for updating the parts of the `ViewState` related to transactions list\n     * @type {ViewModelListActions}\n     * @inner\n     */\n    list: createListReducers(stateContainer),\n\n    /**\n     * @name ViewModel#product\n     * @description\n     * Actions for updating the parts of the `ViewState` related to product state\n     * @type {ViewModelProductActions}\n     * @inner\n     */\n    product: createProductReducers(stateContainer, hooks),\n\n    /**\n     * @name ViewModel#transaction\n     * @description\n     * Actions for updating the parts of the `ViewState` related to transaction state\n     * @type {ViewModelTransactionActions}\n     * @inner\n     */\n    transaction: createTransactionReducers(stateContainer),\n\n    /**\n     * @name ViewModel#search\n     * @description\n     * Actions for updating the parts of the `ViewState` related to transactions search\n     * @type {ViewModelSearchActions}\n     * @inner\n     */\n    search: createSearchReducers(stateContainer),\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/view-model/index.js","export default params => ({\n  product: {\n    data: null,\n    error: null,\n    loading: false,\n  },\n  searching: false,\n  search: {\n    data: null,\n    error: null,\n    loading: false,\n    requestParams: {\n      from: null,\n      size: params.pageSize,\n      query: null,\n    },\n    totalCount: 0,\n  },\n  transaction: {\n    data: null,\n    error: null,\n    loading: false,\n  },\n  transactions: {\n    data: null,\n    error: null,\n    loading: false,\n    requestParams: {\n      from: null,\n      size: params.pageSize,\n    },\n    totalCount: 0,\n  },\n});\n\n/**\n * @typedef {Object} ViewState\n * @description\n * The current state of the [ViewModel]{@link module:lib-bb-view-model-ng}.\n *\n * @property {Object} product\n * @property {Object} product.data Current product (arrangement) object\n * @property {Object} product.error The last encountered error\n * @property {String} product.error.message Error message\n * @property {boolean} product.loading Indicates if the product is being loaded\n *\n * @property {boolean} searching Indicates if transactions search is active at the moment\n *\n * @property {Object} search\n * @property {Object[]} search.data Collection of searched transactions\n * @property {Object} search.error The last encountered error\n * @property {string} search.error.message Error message\n * @property {boolean} search.loading Indicates if search transactions are loading at the moment\n * @property {RequestParams}\n * search.requestParams A set of request params for searching transactions\n * @property {number} search.totalCount Total number of search results\n *\n * @property {Object} transaction\n * @property {Object} transaction.data Current transaction object\n * @property {Object} transaction.error The last encountered error\n * @property {String} transaction.error.message Error message\n * @property {boolean} transaction.loading Indicates if the transaction is being loaded\n *\n * @property {Object} transactions\n * @property {Object[]} transactions.data Collection of transactions\n * @property {Object} transactions.error The last encountered error\n * @property {string} transactions.error.message Error message\n * @property {boolean} transactions.loading Indicates if transactions are loading at the moment\n * @property {RequestParams}\n * transactions.requestParams A set of request params for loading transactions\n * @property {number} transactions.totalCount Total number of transactions\n *\n */\n\n/**\n * @typedef {Object} RequestParams\n * @description\n * A set of request params that defines how to load the requested data.\n *\n * @property {number} from The current page (0 indexed), null from the start\n * @property {number} size The number of transactions in the page\n * @property {?string} query Query search parameter\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/view-model/initial-state.js","import { uiError } from './helpers';\n\nexport default stateContainer => ({\n  /**\n   * @name ViewModelListActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelListActions#beforeLoad\n   * @description Update the `ViewState` before loading transactions\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  init: stateContainer.createAction(state => ({\n    ...state,\n    transactions: {\n      ...state.transactions,\n      data: null,\n      error: null,\n      loading: false,\n      requestParams: {\n        ...state.transactions.requestParams,\n        from: null,\n      },\n      totalCount: 0,\n    },\n  })),\n\n  /**\n   * @name ViewModelListActions#beforeLoad\n   * @description Update the `ViewState` before loading transactions\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  beforeLoad: stateContainer.createAction(state => ({\n    ...state,\n    transactions: {\n      ...state.transactions,\n      error: null,\n      loading: true,\n    },\n  })),\n\n  /**\n   * @name ViewModelListActions#afterLoadSuccess\n   * @description Update the `ViewState` after successfully loading transactions\n   * @type {function}\n   * @inner\n   * @param {TransactionsResponse} response Transactions load response\n   * @return {void}\n   */\n  afterLoadSuccess: stateContainer.createAction((state, response) => ({\n    ...state,\n    transactions: {\n      ...state.transactions,\n      data: response.data,\n      error: null,\n      loading: false,\n      requestParams: {\n        ...state.transactions.requestParams,\n        from: response.requestParams.from,\n      },\n      totalCount: response.totalCount,\n    },\n  })),\n\n  /**\n   * @name ViewModelListActions#afterLoadError\n   * @description Update the `ViewState` after unsuccessful transactions load\n   * @type {function}\n   * @inner\n   * @param {module:lib-bb-model-errors.ModelError} error Response error\n   * @return {void}\n   */\n  afterLoadError: stateContainer.createAction((state, error) => ({\n    ...state,\n    transactions: {\n      ...state.transactions,\n      error: uiError(error),\n      loading: false,\n    },\n  })),\n});\n\n/**\n * @typedef {object} TransactionsResponse\n * @property {object[]} data Loaded transactions array\n * @property {number} totalCount Total number of transactions\n * @property {LoadRequestParams} requestParams Request parameters object\n */\n\n/**\n * @typedef {object} LoadRequestParams\n * @property {number} from Page number to load\n * @property {number} size Page size to load\n * @property {string} productId Product ID of transactions to load\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/view-model/list.js","/* eslint-disable import/prefer-default-export */\nimport { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\n\nconst errorMessages = {\n  [E_AUTH]: 'model.error.auth',\n  [E_CONNECTIVITY]: 'model.error.connectivity',\n  [E_USER]: 'model.error.user',\n  [E_UNEXPECTED]: 'model.error.unexpected',\n};\n\nexport const uiError = error => ({\n  message: errorMessages[error.code],\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/view-model/helpers.js","export default stateContainer => ({\n  /**\n   * @name ViewModelProductActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelProductActions#setProduct\n   * @description Update the `ViewState` with the given product\n   * @type {function}\n   * @inner\n   * @param {object|null} data New Product object\n   * @return {void}\n   */\n  setProduct: stateContainer.createAction((state, data) => ({\n    ...state,\n    product: {\n      ...state.product,\n      data,\n    },\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/view-model/product.js","export default stateContainer => ({\n  /**\n   * @name ViewModelTransactionActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelTransactionActions#setTransaction\n   * @description Update the `ViewState` with the selected transaction\n   * @type {function}\n   * @inner\n   * @param {object} data Transaction object\n   * @return {void}\n   */\n  setTransaction: stateContainer.createAction((state, data) => ({\n    ...state,\n    transaction: {\n      ...state.transaction,\n      data,\n    },\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/view-model/transaction.js","import { uiError } from './helpers';\n\nexport default stateContainer => ({\n  /**\n   * @name ViewModelSearchActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelSearchActions#setSearch\n   * @description Set the `ViewState` to prepare the search\n   * @type {function}\n   * @inner\n   * @param {SearchRequestParams} params Search request parameters\n   * @return {void}\n   */\n  setSearch: stateContainer.createAction((state, params) => ({\n    ...state,\n    search: {\n      ...state.search,\n      data: null,\n      requestParams: {\n        ...state.search.requestParams,\n        from: null, // reset from for each new search request\n        query: params.query || null,\n      },\n    },\n  })),\n\n  /**\n   * @name ViewModelSearchActions#beforeSearch\n   * @description Update the `ViewState` before search transactions\n   * @type {function}\n   * @inner\n   * @param {SearchRequestParams} params Search request parameters\n   * @return {void}\n   */\n  beforeSearch: stateContainer.createAction((state) => ({\n    ...state,\n    searching: true,\n    search: {\n      ...state.search,\n      error: null,\n      loading: true,\n    },\n  })),\n\n  /**\n   * @name ViewModelSearchActions#afterSearchSuccess\n   * @description Update the `ViewState` after successful transactions search\n   * @type {function}\n   * @inner\n   * @param {TransactionsSearchResponse} response Search response\n   * @return {void}\n   */\n  afterSearchSuccess: stateContainer.createAction((state, response) => ({\n    ...state,\n    search: {\n      ...state.search,\n      data: response.data,\n      error: null,\n      loading: false,\n      requestParams: {\n        ...state.search.requestParams,\n        from: response.requestParams.from,\n      },\n      totalCount: response.totalCount,\n    },\n  })),\n\n  /**\n   * @name ViewModelSearchActions#afterSearchError\n   * @description Update the `ViewState` after unsuccessful transactions search\n   * @type {function}\n   * @inner\n   * @param {module:lib-bb-model-errors.ModelError} error Response error\n   * @return {void}\n   */\n  afterSearchError: stateContainer.createAction((state, error) => ({\n    ...state,\n    search: {\n      ...state.search,\n      error: uiError(error),\n      loading: false,\n    },\n  })),\n\n  /**\n   * @name ViewModelSearchActions#cancel\n   * @description Update the `ViewState` when transactions search canceled\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  cancel: stateContainer.createAction(state => ({\n    ...state,\n    searching: false,\n    search: {\n      ...state.search,\n      error: null,\n      loading: false,\n      requestParams: {\n        ...state.search.requestParams,\n        from: null,\n        query: null,\n      },\n      totalCount: 0,\n    },\n  })),\n});\n\n/**\n * @typedef {object} TransactionsSearchResponse\n * @property {object[]} data Search transactions array\n * @property {number} totalCount Total number of found transactions\n * @property {SearchRequestParams} requestParams Request parameters object\n */\n\n/**\n * @typedef {object} SearchRequestParams\n * @property {number} from Page number to load\n * @property {number} size Page size to load\n * @property {string} productId Product ID of transactions to load\n * @property {?string} query Query search parameter\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/view-model/search.js","/* global window */\n/**\n * @name TransactionsService\n * @type {Object}\n * @ngkey widget-bbm-transactions-ng:service\n * @description\n * The service encapsulates the core functionality of the Transactions\n * Widget. It co-ordinates the communication of data from the `Model`\n * with the communication with the user by updating the {@link ViewState}.\n *\n * Asynchronous methods update the {@link ViewState} in 3 potential\n * stages; \"before\", \"success\", and \"error\", to allow the view to\n * provide feedback to the user.\n */\n\n/**\n * @name createTransactionsService\n * @inner\n * @type {function}\n * @param {module:model-bb-transactions-ng.transactionsModel} model Transactions model\n * @param {ViewModel} viewModel\n * @param {defaultHooks} hooks\n * @param {module:lib-bb-state-container-ng.StateContainer} stateContainer\n * @return {TransactionsService}\n */\nexport default (model, viewModel, hooks, stateContainer) => {\n  /**\n   * @name getRequestParams\n   * @type {function}\n   * @description\n   * returns the request params from the state\n   * @returns {Object} requestParams Request params from the state\n   * @inner\n   */\n  const getRequestParams = stateContainer.createSelector(state => state.transactions.requestParams);\n\n  /**\n   * @name getSearchRequestParams\n   * @type {function}\n   * @description\n   * returns the search request params from the state\n   * @returns {Object} requestParams Request params from the state\n   * @inner\n   */\n  const getSearchRequestParams = stateContainer.createSelector(state => state.search.requestParams);\n\n  /**\n   * @name getTransactions\n   * @type {function}\n   * @description\n   * returns the current list of `transactions`\n   * @returns {Array} transactions List of transactions from the state\n   * @inner\n   */\n  const getTransactions = stateContainer.createSelector(state => state.transactions.data);\n\n  /**\n   * @name getSelectedProduct\n   * @type {function}\n   * @description\n   * returns the current selected `product`\n   * @returns {Object} product Product from the state\n   * @inner\n   */\n  const getSelectedProduct = stateContainer.createSelector(state => state.product.data);\n\n  /**\n   * @name getSelectedTransaction\n   * @type {function}\n   * @description\n   * returns the current selected `transaction`\n   * @returns {Object} transaction Transaction from the state\n   * @inner\n   */\n  const getSelectedTransaction = stateContainer.createSelector(state => state.transaction.data);\n\n  /**\n   * @name isAllTransactionsLoaded\n   * @type {function}\n   * @description\n   * Calculates if all the transactions have been loaded\n   * @returns {boolean}\n   * @inner\n   */\n  const isAllTransactionsLoaded = stateContainer.createSelector(state => Boolean(\n    state.transactions.data &&\n    state.transactions.data.length >= state.transactions.totalCount\n  ));\n\n  /**\n   * @name isAllSearchTransactionsLoaded\n   * @type {function}\n   * @description\n   * Calculates if all the transactions for the current search query been loaded\n   * @returns {boolean}\n   * @inner\n   */\n  const isAllSearchTransactionsLoaded = stateContainer.createSelector(state => Boolean(\n      state.search.data &&\n      state.search.data.length >= state.search.totalCount\n  ));\n\n  /**\n   * @name isSameProduct\n   * @type {function}\n   * @description\n   * Checks whether the given products are the same\n   * @param {Object} productA Product to compare\n   * @param {Object} productB Product to compare\n   * @returns {Boolean}\n   * @inner\n   */\n  const isSameProduct = (productA, productB) => (\n    Boolean(\n      productA &&\n      productB &&\n      productA.id === productB.id\n    )\n  );\n\n  /**\n   * @name getNextRequestParams\n   * @type {function}\n   * @description\n   * Calculates the request params to load the data for the next request.\n   * Note: It also calculates the data for the first request. Therefore the\n   *       Initial from params need to be null and not 0.\n   * @returns {Object} params Processed request params\n   * @inner\n   */\n  const getNextRequestParams = () => {\n    const requestParams = getRequestParams();\n    const product = getSelectedProduct();\n\n    const from = requestParams.from === null ? 0 : requestParams.from + 1;\n    const size = requestParams.size;\n    const productId = product ? product.id : null;\n\n    return hooks.processRequestParams({\n      from,\n      size,\n      productId,\n    });\n  };\n\n  /**\n   * @name getNextSearchRequestParams\n   * @type {function}\n   * @description\n   * Calculates the request params to load the data for the next search request.\n   * Note: It also calculates the data for the first request. Therefore the\n   *       Initial from params need to be null and not 0.\n   * @returns {Object} params Processed search request params\n   * @inner\n   */\n  const getNextSearchRequestParams = () => {\n    const requestParams = getSearchRequestParams();\n    const product = getSelectedProduct();\n\n    const from = requestParams.from === null ? 0 : requestParams.from + 1;\n    const size = requestParams.size;\n    const productId = product ? product.id : null;\n    const query = requestParams.query;\n\n    return hooks.processSearchRequestParams({\n      from,\n      size,\n      productId,\n      query,\n    });\n  };\n\n  /**\n   * @name getReloadRequestParams\n   * @type {function}\n   * @description\n   * Calculates the request params to load the data for the next request.\n   * Note: It also calculates the data for the first request. Therefore the\n   *       Initial from params need to be null and not 0.\n   * @returns {Object} params Processed request params\n   * @inner\n   */\n  const getReloadRequestParams = () => {\n    const requestParams = getRequestParams();\n    const product = getSelectedProduct();\n\n    const from = 0;\n    const size = requestParams.from === null\n      ? requestParams.size\n      : requestParams.size * (requestParams.from + 1);\n    const productId = product ? product.id : null;\n\n    return hooks.processReloadRequestParams({\n      from,\n      size,\n      productId,\n    });\n  };\n\n  /**\n   * @name recalculateRequestParams\n   * @type {function}\n   * @description\n   * Recalculates the request params to load the data for the next request.\n   * @returns {Object} data Data used to calculate the request params\n   * @inner\n   */\n  const recalculateRequestParams = data => {\n    const requestParams = getRequestParams();\n    const product = getSelectedProduct();\n\n    const from = Math.floor(data.length / requestParams.size);\n    const size = requestParams.size;\n    const productId = product ? product.id : null;\n\n    return hooks.processRequestParams({\n      from,\n      size,\n      productId,\n    });\n  };\n\n  /**\n   * @name uniqueArray\n   * @type {function}\n   * @description\n   * Creates a duplicate-free version of an array\n   * @param {Array} array Array of items\n   * @inner\n   */\n  const uniqueArray = (array) => (\n    array.filter((itemOuter, index) =>\n      array.findIndex((itemInner) =>\n        itemOuter.id === itemInner.id) === index\n    )\n  );\n\n  /**\n   * @name appendTransactions\n   * @type {function}\n   * @description\n   * Appends the given list of `transactions` to the current list of `transactions`\n   * if this function is used as a merge strategy function\n   * @param {Array} transactions List of `transactions`\n   * @returns {Array} transactions Merged list of `transactions`\n   * @inner\n   */\n  const appendTransactions = transactions => uniqueArray(\n    [...getTransactions() || [], ...transactions]\n  );\n\n  /**\n   * @name replaceTransactions\n   * @type {function}\n   * @description\n   * Returns the given list of `transactions` immediately and therefore replaces\n   * the list of `transactions` if this function is used as a merge strategy function\n   * @param {Array} transactions List of `transactions`\n   * @returns {Array} transactions List of `transactions`\n   * @inner\n   */\n  const replaceTransactions = transactions => transactions;\n\n  /**\n   * @name loadTransactions\n   * @type {function}\n   * @description\n   * Fetch a `page` of `transactions` from the model and\n   * update the {@link ViewState} to display them.\n   * @param {function} mergeFn function defining the merge strategy\n   * @returns {Promise}\n   * @inner\n   */\n  const loadTransactions = mergeFn => {\n    const requestParams = getNextRequestParams();\n\n    viewModel.list.beforeLoad();\n\n    return model.load(requestParams)\n      .then(({ data, totalCount }) => {\n        viewModel.list.afterLoadSuccess({\n          data: mergeFn(data),\n          requestParams,\n          totalCount,\n        });\n      })\n      .catch(error => {\n        viewModel.list.afterLoadError(error);\n        throw error;\n      });\n  };\n\n  /**\n   * @name reloadTransactions\n   * @type {function}\n   * @description\n   * Fetch a `page` of `notifications` from the model and\n   * update the {@link ViewState} to display them.\n   * @returns {Promise}\n   * @inner\n   */\n  const reloadTransactions = () => {\n    const reloadRequestParams = getReloadRequestParams();\n\n    viewModel.list.beforeLoad();\n\n    return model.load(reloadRequestParams)\n      .then(({ data, totalCount }) => {\n        viewModel.list.afterLoadSuccess({\n          data: replaceTransactions(data),\n          requestParams: recalculateRequestParams(data),\n          totalCount,\n        });\n      })\n      .catch(error => {\n        viewModel.list.afterLoadError(error);\n        throw error;\n      });\n  };\n\n  /**\n   * @name searchTransactions\n   * @type {function}\n   * @description\n   * Fetch a `page` of `transactions` from the model that meet the given search query and\n   * update the {@link ViewState} to display them.\n   * @param {string} query Search query string\n   * @param {function} mergeFn function defining the merge strategy\n   * @returns {Promise}\n   * @inner\n   */\n  const searchTransactions = mergeFn => {\n    const requestParams = getNextSearchRequestParams();\n    viewModel.search.beforeSearch();\n\n    return model.load(requestParams)\n      .then(({ data, totalCount }) => {\n        viewModel.search.afterSearchSuccess({\n          data: mergeFn(data),\n          requestParams,\n          totalCount,\n        });\n      })\n      .catch(error => {\n        viewModel.search.afterSearchError(error);\n        throw error;\n      });\n  };\n\n  /**\n   * @name TransactionsService#loadMoreTransactions\n   * @type {function}\n   * @description\n   * Loads more `transactions` for the currently selected product.\n   */\n  const loadMoreTransactions = (() => {\n    let loadMoreTransactionsPromise;\n\n    return () => {\n      if (loadMoreTransactionsPromise || isAllTransactionsLoaded()) {\n        return loadMoreTransactionsPromise;\n      }\n\n      loadMoreTransactionsPromise = loadTransactions(appendTransactions)\n        .then(() => {\n          loadMoreTransactionsPromise = null;\n        })\n        .catch(error => {\n          loadMoreTransactionsPromise = null;\n          throw error;\n        });\n\n      return loadMoreTransactionsPromise;\n    };\n  })();\n\n  /**\n   * @name TransactionsService#searchMoreTransactions\n   * @type {function}\n   * @description\n   * Loads more `transactions` that meet the current search query.\n   */\n  const searchMoreTransactions = (() => {\n    let searchMoreTransactionsPromise;\n\n    return () => {\n      if (searchMoreTransactionsPromise || isAllSearchTransactionsLoaded()) {\n        return searchMoreTransactionsPromise;\n      }\n\n      searchMoreTransactionsPromise = searchTransactions(appendTransactions)\n        .then(() => {\n          searchMoreTransactionsPromise = null;\n        })\n        .catch(error => {\n          searchMoreTransactionsPromise = null;\n          throw error;\n        });\n\n      return searchMoreTransactionsPromise;\n    };\n  })();\n\n  /**\n   * @name TransactionsService#setSelectedProduct\n   * @type {function}\n   * @description\n   * Sets the selected product, loads the corresponding `transactions`\n   * and updates the {@link ViewState} to display them.\n   * @param {Object} product Product to select and load transactions for\n   */\n  const setSelectedProduct = product => {\n    const selectedProduct = getSelectedProduct();\n\n    if (isSameProduct(selectedProduct, product)) {\n      return reloadTransactions();\n    }\n\n    viewModel.list.init();\n    viewModel.product.setProduct(product);\n    return loadTransactions(replaceTransactions);\n  };\n\n  /**\n   * @name TransactionsService#setSelectedTransaction\n   * @type {function}\n   * @description\n   * Sets the selected transaction and updates the {@link ViewState} to display them.\n   * @param {Object} transaction Transaction to select\n   */\n  const setSelectedTransaction = transaction => {\n    const selectedTransaction = getSelectedTransaction();\n\n    if (!selectedTransaction || selectedTransaction.id !== transaction.id) {\n      viewModel.transaction.setTransaction(transaction);\n    }\n  };\n\n  /**\n   * @name TransactionsService#setSearchQuery\n   * @type {function}\n   * @description\n   * Prepares and starts the search on the {@link ViewState}.\n   */\n  const setSearchQuery = query => {\n    viewModel.search.setSearch({ query });\n    return searchTransactions(replaceTransactions);\n  };\n\n  /**\n   * @name TransactionsService#cancelSearch\n   * @type {function}\n   * @description\n   * Cancels the search and resets the search on the {@link ViewState}.\n   */\n  const cancelSearch = () => viewModel.search.cancel();\n\n  return {\n    cancelSearch,\n    loadMoreTransactions,\n    reloadTransactions,\n    searchMoreTransactions,\n    setSearchQuery,\n    setSelectedProduct,\n    setSelectedTransaction,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/service.js","/* eslint-disable import/prefer-default-export */\nexport const Event = {\n  /**\n   * The widget is bootstrapped (data may not be loaded).\n   * @event cxp.item.loaded\n   * @type {string}\n   * @property {string} id The widget ID\n   */\n  CXP_ITEM_LOADED: 'cxp.item.loaded',\n\n  /**\n   * The widget is bootstrapped (data may not be loaded).\n   * @event bb.item.loaded\n   * @type {string}\n   * @property {string} id The widget ID\n   */\n  BB_ITEM_LOADED: 'bb.item.loaded',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bbm-transactions-ng/scripts/constants.js"],"sourceRoot":""}