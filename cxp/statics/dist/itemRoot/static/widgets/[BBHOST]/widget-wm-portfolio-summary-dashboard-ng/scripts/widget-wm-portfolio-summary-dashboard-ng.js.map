{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6********************************","webpack:///webpack/bootstrap d0309a746b17cd403690?c295********************************","webpack:///./widget-wm-portfolio-summary-dashboard-ng/model.xml","webpack:///external \"lib-bb-state-container-ng\"?8d56*****","webpack:///external \"lib-wm-portfolio-view-model-helper\"?8f7a*****","webpack:///external \"vendor-bb-angular\"?a114***********","webpack:///external \"lib-bb-widget-extension-ng\"?b547****","webpack:///external \"model-wm-portfolio-summary-ng\"?e4f4****","webpack:///external \"lib-bb-intent-ng\"?add1","webpack:///./widget-wm-portfolio-summary-dashboard-ng/scripts/index.js","webpack:///external \"lib-bb-widget-ng\"","webpack:///./widget-wm-portfolio-summary-dashboard-ng/scripts/controller.js","webpack:///./widget-wm-portfolio-summary-dashboard-ng/scripts/constants.js","webpack:///./widget-wm-portfolio-summary-dashboard-ng/scripts/service.js","webpack:///./widget-wm-portfolio-summary-dashboard-ng/scripts/view-model.js"],"names":["hooksKey","serviceKey","viewModelKey","angular","module","modelPortfolioSummaryModuleKey","widgetModuleKey","bbIntentModuleKey","stateContainerModuleKey","factory","defaultHooks","modelPortfolioSummaryKey","service","bbStateContainerKey","widgetKey","viewModel","controller","bbIntentKey","Controller","name","PortfolioSummaryController","bbIntents","$ctrl","intents","viewPortfolioDetails","create","IntentsKeys","PORTFOLIO_DETAILS","load","loadPortfolioSummary","portfolioId","setPortfolioIdSelected","updatePortfolio","portfolio","savePortfolioAlias","IBAN","alias","then","response","catch","error","$onInit","init","saveOrder","order","prevSavedOrder","getState","portfolios","equals","savePortfoliosOrder","Object","assign","state","errors","MAX_SIZE_OF_PORTFOLIOS_COLLECTION","USER_ORDER","model","afterSavePortfoliosOrderSuccess","aliasName","afterSavePortfoliosAliasSuccess","beforeLoadPortfolioSummary","size","orderBy","data","afterLoadPortfolioSummarySuccess","afterLoadPortfolioSummaryError","stateContainer","initialState","list","loading","portfolioSelected","id","showInput","initialLoading","portfoliosError","code","createAction","map","reduce","current"],"mappings":"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","file":"widget-wm-portfolio-summary-dashboard-ng/scripts/widget-wm-portfolio-summary-dashboard-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lib-bb-state-container-ng\"), require(\"lib-wm-portfolio-view-model-helper\"), require(\"vendor-bb-angular\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-wm-portfolio-summary-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-widget-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-wm-portfolio-summary-dashboard-ng\", [\"lib-bb-state-container-ng\", \"lib-wm-portfolio-view-model-helper\", \"vendor-bb-angular\", \"lib-bb-widget-extension-ng\", \"model-wm-portfolio-summary-ng\", \"lib-bb-intent-ng\", \"lib-bb-widget-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-wm-portfolio-summary-dashboard-ng\"] = factory(require(\"lib-bb-state-container-ng\"), require(\"lib-wm-portfolio-view-model-helper\"), require(\"vendor-bb-angular\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-wm-portfolio-summary-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-widget-ng\"));\n\telse\n\t\troot[\"widget-wm-portfolio-summary-dashboard-ng\"] = factory(root[\"lib-bb-state-container-ng\"], root[\"lib-wm-portfolio-view-model-helper\"], root[\"vendor-bb-angular\"], root[\"lib-bb-widget-extension-ng\"], root[\"model-wm-portfolio-summary-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-widget-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_86__, __WEBPACK_EXTERNAL_MODULE_88__, __WEBPACK_EXTERNAL_MODULE_93__, __WEBPACK_EXTERNAL_MODULE_125__, __WEBPACK_EXTERNAL_MODULE_126__, __WEBPACK_EXTERNAL_MODULE_129__, __WEBPACK_EXTERNAL_MODULE_152__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d0309a746b17cd403690","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-wm-portfolio-summary-dashboard-ng/model.xml\n// module id = 0\n// module chunks = 33","module.exports = __WEBPACK_EXTERNAL_MODULE_86__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container-ng\"\n// module id = 86\n// module chunks = 19 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_88__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-wm-portfolio-view-model-helper\"\n// module id = 88\n// module chunks = 19 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_93__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 93\n// module chunks = 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_125__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 125\n// module chunks = 28 29 30 31 32 33 34 35 36","module.exports = __WEBPACK_EXTERNAL_MODULE_126__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-wm-portfolio-summary-ng\"\n// module id = 126\n// module chunks = 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_129__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 129\n// module chunks = 28 33 34 35 36","/**\n * @module widget-wm-portfolio-summary-dashboard-ng\n *\n * @description\n * Portfolio summary dashboard widget.\n *\n *\n * @example\n *  <div ng-controller=\"PortfolioSummaryController as $ctrl\">\n *    <ul>\n *       <li ng-repeat=\"portfolio in $ctrl.portfolios\">{{portfolio.id}}</li>\n *    </ul>\n *  </div>\n */\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport stateContainerModuleKey, { bbStateContainerKey } from 'lib-bb-state-container-ng';\nimport widgetModuleKey, {\n  widgetKey,\n} from 'lib-bb-widget-ng';\nimport modelPortfolioSummaryModuleKey, {\n  modelPortfolioSummaryKey,\n}\n  from 'model-wm-portfolio-summary-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport Controller from './controller';\nimport defaultHooks from './default-hooks';\nimport service from './service';\nimport viewModel from './view-model';\n\nconst hooksKey = 'widget-wm-portfolio-summary-dashboard-ng:hooks';\nconst serviceKey = 'widget-wm-portfolio-summary-dashboard-ng:service';\nconst viewModelKey = 'widget-wm-portfolio-summary-dashboard-ng:viewModel';\n\n/**\n * @name default\n * @type {string}\n * @description Angular module name\n */\nexport default angular\n  .module('widget-wm-portfolio-summary-dashboard-ng', [\n    modelPortfolioSummaryModuleKey,\n    widgetModuleKey,\n    bbIntentModuleKey,\n    stateContainerModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n  .factory(serviceKey, [\n    modelPortfolioSummaryKey,\n    viewModelKey,\n    service,\n  ])\n  .factory(viewModelKey, [\n    bbStateContainerKey,\n    widgetKey,\n    hooksKey,\n    viewModel,\n  ])\n\n  .controller('PortfolioSummaryController', [\n    bbIntentKey,\n    serviceKey,\n    viewModelKey,\n    /* into */\n    Controller,\n  ])\n  .name;\n\n/**\n * Portfolio type definition\n * @typedef {Object} Portfolio\n * @property {string}        IBAN               - International Bank Account Number\n * @property {string}        clientName         - Client name\n * @property {string}        alias              - A portfolio name manually set by the client\n * @property {assetClass[]}  assetClasses       - Asset classes list for portfolio\n * @property {object}        valuation          - Total cost of all assets in the portfolio\n * @property {object}        inCashTotal        - Incoming cash for the period of time\n * @property {object}        outCashTotal       - Outgoing cash for the period of time\n * @property {number}        performanceMTD     - Portfolio performance for month\n * @property {number}        performanceMTDpct  - Portfolio performance for month in percents\n * @property {number}        performanceYTD     - Portfolio performance amount for year\n * @property {number}        performanceYTDpct  - Portfolio performance amount for year in percents\n * @property {string}        riskClass          - Risk of portfolio investement strategy\n * @property {manager[]}     managers           - Managers of portfolio\n * @property {attorney[]}    attorneys          - Attorneys of portfolio\n * @property {BBSeries[]}    dataseries         - data in format suitable for chart UI components\n */\n\n/**\n * BBSeries data object used to draw charts\n * @typedef {object} BBSeries\n * @property {string[]} labels Array chart slices labels\n * @property {Dataset[]} datasets Array of chart datasets\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} Dataset\n * @property {number[]} data Array of data points for chart slices\n */\n\n/**\n * Asset class object\n * @typedef {object} AssetClass\n * @property {string} name name of asset class\n * @property {number} valuePct value that represents percentage of asset\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} attorney\n * @property {string} id id of a portfolio manager\n * @property {string} name name of a portfolio manager\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} manager\n * @property {string} id id of a portfolio manager\n * @property {string} name name of a portfolio manager\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-portfolio-summary-dashboard-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_152__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 152\n// module chunks = 33 34 35 37","/* global angular*/\nimport { IntentsKeys } from './constants';\n\n/**\n * @name PortfolioSummaryController\n * @ngkey PortfolioSummaryController\n * @type {object}\n * @description\n * Portfolio summary controller.\n */\n\nexport default function PortfolioSummaryController(\n  bbIntents,\n  service,\n  viewModel\n) {\n  const $ctrl = this;\n\n  /**\n   * @description\n   * A set of intents that the Portfolio Summary controller uses or handles.\n   *\n   * @name intents\n   * @type {Object}\n   * @inner\n   */\n  const intents = {\n    viewPortfolioDetails: bbIntents.create(IntentsKeys.PORTFOLIO_DETAILS),\n  };\n\n  /**\n   * @description\n   * Handles loading portfolios\n   *\n   * @public\n   * @name PortfolioSummaryController#load\n   * @type {function}\n   * Load portfolios\n   * @returns {promise.<array>}\n   */\n  const load = () => service.loadPortfolioSummary();\n\n  /**\n   * @name viewPortfolioDetails\n   *\n   * @description\n   * Navigate to portfolio details\n   *\n   * @param {string} portfolioId ID of portfolio to load\n   * @type {function}\n   */\n  const viewPortfolioDetails = (portfolioId) => {\n    service.setPortfolioIdSelected(portfolioId);\n    intents.viewPortfolioDetails();\n  };\n\n  /**\n   * @name updatePortfolio\n   *\n   * @description\n   * Saves portfolio with new alias.\n   *\n   * @param {object} portfolio Selected portfolio\n   * @type {function}\n   */\n  const updatePortfolio = (portfolio) =>\n    service.savePortfolioAlias(portfolio.IBAN, portfolio.alias)\n      .then((response) => {\n        if (!portfolio.alias) {\n          return load();\n        }\n        return response;\n      })\n      .catch((error) => {\n        throw error;\n      });\n\n  /*\n   * Widget initialization logic.\n   * Loads portfolios and portfolios order.\n   * @public\n   */\n  const $onInit = () => {\n    viewModel.init();\n    return load();\n  };\n\n  /**\n   * @name saveOrder\n   *\n   * @description\n   * Saves portfolios order.\n   *\n   * @param {Array.<string>} order Array of portfolios IBANs\n   * @type {function}\n   * @returns {promise.<Array.<string>>} Promise resolving to array of portfolios IBAN\n   */\n  const saveOrder = (order) => {\n    const prevSavedOrder = viewModel.getState().portfolios.order;\n    if (angular.equals(order, prevSavedOrder)) {\n      return false;\n    }\n    return service.savePortfoliosOrder(order);\n  };\n\n  Object.assign($ctrl, {\n    viewPortfolioDetails,\n    $onInit,\n    load,\n    updatePortfolio,\n    saveOrder,\n  });\n\n  return Object.assign(\n    {\n      get state() {\n        return viewModel.getState();\n      },\n      get errors() {\n        return viewModel.getState().errors;\n      },\n    },\n    $ctrl\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-portfolio-summary-dashboard-ng/scripts/controller.js","/**\n * @description\n * Widget intents to be handled\n *\n * @name IntentsKeys\n * @type {object}\n */\nexport const IntentsKeys = {\n  PORTFOLIO_DETAILS: 'view.portfolio.details',\n};\n\n/**\n * @description\n * Maximum size of client`s portfolios collection.\n * This value appears because of size default value 10 in BB traits.\n * This is because current widget uses end point requiring size param for pagination,\n * but not having pagination itself.\n *\n * @name MAX_SIZE_OF_PORTFOLIOS_COLLECTION\n * @type {number}\n */\nexport const MAX_SIZE_OF_PORTFOLIOS_COLLECTION = 1000;\n\n\n/**\n * @description\n * Key for portfolios order specified by user\n *\n * @name USER_ORDER\n * @type {string}\n */\nexport const USER_ORDER = 'userOrder';\n\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-portfolio-summary-dashboard-ng/scripts/constants.js","/* global angular */\nimport { MAX_SIZE_OF_PORTFOLIOS_COLLECTION, USER_ORDER } from './constants';\n\nexport default (model, viewModel) => {\n  /**\n   * @description\n   * Handles saving of portfolios order\n   * @public\n   * @name savePortfoliosOrder\n   * @type {function}\n   * @param {Array.<string>} order Array of portfolios IBANs\n   * @returns {promise.<array>}\n   */\n  const savePortfoliosOrder = (order) => {\n    viewModel.afterSavePortfoliosOrderSuccess(order);\n\n    return model.savePortfoliosOrder(order);\n  };\n\n  /**\n   * @description\n   * Handles saving of portfolio with new alias\n   * @public\n   * @name savePortfolioAlias\n   * @type {function}\n   * @param {string} IBAN Portfolio IBAN\n   * @param {string} aliasName New alias name\n   */\n  const savePortfolioAlias = (IBAN, aliasName) =>\n      model.savePortfolioAlias(IBAN, aliasName)\n        .then(() => {\n          viewModel.afterSavePortfoliosAliasSuccess({ IBAN, aliasName });\n        })\n        .catch((error) => { throw error; });\n\n  /**\n   * @description\n   * Handles loading porfolio summary\n   * @public\n   * @name loadPortfolioSummary\n   * @type {function}\n   * Load allocations\n   * @returns {promise.<array>}\n   */\n  const loadPortfolioSummary = () => {\n    viewModel.beforeLoadPortfolioSummary();\n    return model.load({ size: MAX_SIZE_OF_PORTFOLIOS_COLLECTION, orderBy: USER_ORDER })\n      .then((data) => {\n        viewModel.afterLoadPortfolioSummarySuccess({\n          data: data.data,\n        });\n        return data;\n      })\n      .catch((error) => {\n        viewModel.afterLoadPortfolioSummaryError(error);\n        throw error;\n      });\n  };\n\n  return {\n    loadPortfolioSummary,\n    savePortfoliosOrder,\n    savePortfolioAlias,\n\n    /**\n     * @name setPortfolioIdSelected\n     * @type {function}\n     * @description\n     * Set current selected portfolio id\n     * @param {string} portfolioId portfolio id to set selected\n     */\n    setPortfolioIdSelected(portfolioId) {\n      model.setPortfolioIdSelected(portfolioId);\n    },\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-portfolio-summary-dashboard-ng/scripts/service.js","import { wrapActions } from 'lib-wm-portfolio-view-model-helper';\n\nexport default function (stateContainer) {\n  /**\n   * @name initialState\n   * @description Initial state of porfolios store\n   * @type {object}\n   * @property {object} portfolios      an object of portfolios\n   * @property {boolean} initialLoading Boolean flag of initial loading\n   * @property {object} pageParams      parameters of the page\n   * @property {object} errors          portfolios errors\n   */\n  const initialState = {\n    portfolios: {\n      list: {},\n      order: [],\n      loading: false,\n      portfolioSelected: { id: null, showInput: false },\n    },\n    initialLoading: true,\n    errors: {\n      portfoliosError: null,\n    },\n  };\n\n  return {\n    getState: () => stateContainer.getState(),\n    ...wrapActions(stateContainer, {\n      init: (state = initialState) => state,\n      beforeLoadPortfolioSummary: () => ({\n        portfolios: {\n          loading: true,\n        },\n      }),\n      afterLoadPortfolioSummaryError: (state, error) => ({\n        initialLoading: false,\n        portfolios: {\n          loading: false,\n        },\n        errors: {\n          portfoliosError: error.code,\n        },\n      }),\n      afterSavePortfoliosOrderSuccess: (state, data) => ({\n        portfolios: {\n          order: data,\n        },\n      }),\n      afterSavePortfoliosAliasSuccess: (state, { IBAN, aliasName }) => ({\n        portfolios: {\n          list: {\n            [IBAN]: {\n              alias: aliasName,\n            },\n          },\n        },\n      }),\n    }),\n    afterLoadPortfolioSummarySuccess: stateContainer.createAction(\n      (state, { data }) => ({\n        ...state,\n        initialLoading: false,\n        portfolios: {\n          order: data.map(({ IBAN }) => IBAN),\n          list: data.reduce((list, current) => ({ ...list, [current.IBAN]: current }), {}),\n          loading: false,\n          portfolioSelected: { id: null, showInput: false },\n        },\n        errors: {\n          portfoliosError: null,\n        },\n      })\n    ),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-portfolio-summary-dashboard-ng/scripts/view-model.js"],"sourceRoot":""}