{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///webpack/bootstrap 661d8b4c9ef6c2bf3c28?8185*","webpack:///./widget-bb-transaction-categories-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./widget-bb-transaction-categories-ng/scripts/index.js","webpack:///external \"lib-bb-widget-ng\"","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"model-bb-transaction-categories-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///./widget-bb-transaction-categories-ng/scripts/controller.js","webpack:///./widget-bb-transaction-categories-ng/scripts/constants.js","webpack:///./widget-bb-transaction-categories-ng/scripts/default-hooks.js"],"names":["moduleKey","hooksKey","angular","module","widgetModuleKey","eventBusModuleKey","modelTransactionCategoriesModuleKey","bbIntentModuleKey","factory","defaultHooks","controller","eventBusKey","widgetKey","modelTransactionCategoriesKey","bbIntentKey","Controller","run","intents","init","name","TransactionCategoriesController","errorMessage","code","E_AUTH","E_CONNECTIVITY","bus","hooks","widget","model","bbIntent","$ctrl","intentResolve","selectedTransaction","intentPreferencesArray","getStringPreference","PreferencesKeys","INTENTS_LIST","split","subCategoriesPreference","getBooleanPreference","SUB_CATEGORIES","createIntentHandler","handle","intent","passedData","respond","selectedTransactionObject","isModalOpen","$onInit","isLoading","params","level","QueryLevelParams","ALL","PARENTS","getCategories","then","items","afterCategoriesLoad","loaded","data","publish","Event","CXP_ITEM_LOADED","id","getId","BB_ITEM_LOADED","indexOf","Intent","SHOW_CATEGORIES_HOME","SHOW_CATEGORIES_INSIGHTS","catch","error","Object","assign","isSubCategories","identity","a"],"mappings":"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","file":"widget-bb-transaction-categories-ng/scripts/widget-bb-transaction-categories-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-transaction-categories-ng\"), require(\"lib-bb-intent-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-transaction-categories-ng\", [\"vendor-bb-angular\", \"lib-bb-model-errors\", \"lib-bb-widget-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\", \"model-bb-transaction-categories-ng\", \"lib-bb-intent-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-transaction-categories-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-transaction-categories-ng\"), require(\"lib-bb-intent-ng\"));\n\telse\n\t\troot[\"widget-bb-transaction-categories-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"model-bb-transaction-categories-ng\"], root[\"lib-bb-intent-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 661d8b4c9ef6c2bf3c28","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-transaction-categories-ng/model.xml\n// module id = 0\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 12\n// module chunks = 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 16\n// module chunks = 1 2","/**\n * @module widget-bb-transaction-categories-ng\n *\n * @description\n * Transaction categories\n */\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport extendHooks from 'lib-bb-widget-extension-ng';\n\nimport modelTransactionCategoriesModuleKey, {\n  modelTransactionCategoriesKey,\n} from 'model-bb-transaction-categories-ng';\n\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\n\nimport Controller from './controller';\n\nimport defaultHooks from './default-hooks';\n\nconst moduleKey = 'widget-bb-transaction-categories-ng';\nconst hooksKey = `${moduleKey}:hooks`;\n\nexport default angular\n  .module(moduleKey, [\n    widgetModuleKey,\n    eventBusModuleKey,\n    modelTransactionCategoriesModuleKey,\n    bbIntentModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('TransactionCategoriesController', [\n    // dependencies to inject\n    eventBusKey,\n    hooksKey,\n    widgetKey,\n    modelTransactionCategoriesKey,\n    bbIntentKey,\n    /* into */\n    Controller,\n  ])\n\n  // Initialize intent library\n  .run([bbIntentKey, (intents) => {\n    intents.init();\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transaction-categories-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 19\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 20\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 21\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-transaction-categories-ng\"\n// module id = 22\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 23\n// module chunks = 2","/**\n * @module widget-bb-transaction-categories-ng\n * @name TransactionCategoriesController\n *\n * @description\n * Transaction categories\n */\n\nimport { E_AUTH, E_CONNECTIVITY } from 'lib-bb-model-errors';\nimport { Event, Intent, PreferencesKeys, QueryLevelParams } from './constants';\n\nconst errorMessage = (code) => ({\n  [E_AUTH]: 'error.load.auth',\n  [E_CONNECTIVITY]: 'error.load.connectivity',\n}[code] || 'error.load.unexpected');\n\nexport default function TransactionCategoriesController(bus, hooks, widget, model, bbIntent) {\n  const $ctrl = this;\n  let intentResolve;\n  let selectedTransaction;\n\n  const intentPreferencesArray =\n    widget.getStringPreference(PreferencesKeys.INTENTS_LIST).split(',');\n\n  const subCategoriesPreference =\n    widget.getBooleanPreference(PreferencesKeys.SUB_CATEGORIES);\n  /**\n   * @description\n   * Helper function to register an intent handler for\n   * changing categories\n   *\n   * @inner\n   * @name TransactionCategoriesController#createIntentHandler\n   * @param {string} intent Name of the intent to be handled\n   * @type {function}\n   */\n  const createIntentHandler = intent => bbIntent.handle(intent, (passedData, respond) => {\n    $ctrl.selectedTransaction = hooks.selectedTransactionObject(passedData);\n    $ctrl.isModalOpen = true;\n    $ctrl.intentResolve = respond;\n  });\n\n  /**\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name TransactionCategoriesController#$onInit\n   * @type {function}\n   * @returns {void}\n   */\n  const $onInit = () => {\n    $ctrl.isLoading = true;\n    const params = {\n      level: subCategoriesPreference ? QueryLevelParams.ALL : QueryLevelParams.PARENTS,\n    };\n\n    return model.getCategories(params)\n      .then(loaded => {\n        $ctrl.items = hooks.afterCategoriesLoad(loaded.data);\n      })\n      .then(() => {\n        $ctrl.isLoading = false;\n\n        bus.publish(Event.CXP_ITEM_LOADED, {\n          id: widget.getId(),\n        });\n\n        bus.publish(Event.BB_ITEM_LOADED, {\n          id: widget.getId(),\n        });\n\n        if (intentPreferencesArray.indexOf(Intent.SHOW_CATEGORIES_HOME) > -1) {\n          createIntentHandler(Intent.SHOW_CATEGORIES_HOME);\n        } else if (intentPreferencesArray.indexOf(Intent.SHOW_CATEGORIES_INSIGHTS) > -1) {\n          createIntentHandler(Intent.SHOW_CATEGORIES_INSIGHTS);\n        }\n      })\n      .catch(error => {\n        $ctrl.error = errorMessage(error.code);\n        bus.publish('widget-bb-transaction-categories-ng.load.failed', { error });\n      });\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n\n    /**\n     * @description\n     * The value returned from {@link Hooks.processItems} hook.\n     * null if the items aren't loaded.\n     *\n     * @name TransactionCategoriesController#items\n     * @type {any}\n     */\n    items: null,\n\n    /**\n     * @description\n     * Loading status\n     *\n     * @name TransactionCategoriesController#isLoading\n     * @type {boolean}\n     */\n    isLoading: false,\n\n    /**\n     * @description\n     * The error encountered when attempting to fetch from the model\n     *\n     * @name TransactionCategoriesController#error\n     * @type {ModelError}\n     */\n    error: null,\n\n    /**\n     * @description\n     * The value passed to model to get categories data with whether subcategories or one\n     * level categories\n     *\n     * @name TransactionCategoriesController#isSubCategories\n     * @type {boolean}\n     */\n    isSubCategories: subCategoriesPreference,\n\n    intentResolve,\n\n    selectedTransaction,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transaction-categories-ng/scripts/controller.js","/**\n * @name Event\n * @description\n * Widget events enum\n * @type {object}\n */\nexport const Event = {\n  CXP_ITEM_LOADED: 'cxp.item.loaded',\n  BB_ITEM_LOADED: 'bb.item.loaded',\n};\n\n/**\n * @name Intent\n * @description\n * Widget intent enum\n * @type {object}\n */\nexport const Intent = {\n  SHOW_CATEGORIES_HOME: 'intent.rb.categories.management.list.view',\n  SHOW_CATEGORIES_INSIGHTS: 'intent.rb.transaction.category.change',\n};\n\n/**\n * @name PreferencesKeys\n * @description\n * Preferences keys enum\n * @type {object}\n */\nexport const PreferencesKeys = {\n  INTENTS_LIST: 'intents',\n  SUB_CATEGORIES: 'subCategories',\n};\n\n/**\n * @name QueryLevelParams\n * @description\n * Categories level get param enum\n * @type {object}\n */\nexport const QueryLevelParams = {\n  ALL: 'ALL',\n  PARENTS: 'PARENTS',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transaction-categories-ng/scripts/constants.js","const identity = a => a;\n\nexport default {\n  /**\n   * @name afterCategoriesLoad\n   * @type {function}\n   * @description\n   * Default hook for setting the passed items from the model\n   *\n   * @param {array} items\n   * @returns {array}\n   */\n  afterCategoriesLoad: identity,\n\n  /**\n   * @name selectedTransactionObject\n   * @type {function}\n   * @description\n   * Default hook for setting the passed items from the model\n   *\n   * @param {object} transaction\n   * @returns {object}\n   */\n  selectedTransactionObject: identity,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transaction-categories-ng/scripts/default-hooks.js"],"sourceRoot":""}