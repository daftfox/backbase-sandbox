{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*********","webpack:///webpack/bootstrap 50256e16f76c6c9e44d8?45a5*********","webpack:///./widget-fx-trade-order-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114****","webpack:///external \"lib-bb-widget-extension-ng\"?b547**","webpack:///external \"lib-bb-widget-ng\"?84ad**","webpack:///external \"lib-bb-intent-ng\"?add1**","webpack:///external \"lib-bb-state-container-ng\"?8d56*","webpack:///external \"model-fx-trading-ng\"?0ca1*","webpack:///external \"lib-bb-event-bus-ng\"?8215*","webpack:///external \"lib-fx-trading-view-model-helper\"?bfd6*","webpack:///./widget-fx-trade-order-ng/scripts/index.js","webpack:///./widget-fx-trade-order-ng/scripts/controller.js","webpack:///./widget-fx-trade-order-ng/scripts/constants.js","webpack:///./widget-fx-trade-order-ng/scripts/service.js","webpack:///./widget-fx-trade-order-ng/scripts/view-model.js"],"names":["hooksKey","serviceKey","viewModelKey","angular","module","modelFxTradingModuleKey","widgetModuleKey","bbIntentModuleKey","eventBusModuleKey","stateContainerModuleKey","factory","defaultHooks","modelFxTradingKey","service","bbStateContainerKey","widgetKey","viewModel","controller","bbIntentKey","eventBusKey","Controller","name","FXTradeOrderController","widgetInstance","bbIntents","eventBus","$ctrl","intervalUpdateRates","getLongPreference","Preference","INTERVAL_UPDATE_RATES","load","show","showModal","bindEvents","subscribe","Event","SHOW_TRADE_ORDER","$onDestroy","stopRatesUpdate","cancel","$onInit","init","Object","assign","state","getState","errors","model","timerId","loadCurrencyRates","currentParams","currencypair","currencyPair","data","pairKey","then","afterLoadCurrencyRatesSuccess","catch","error","afterLoadCurrencyRatesError","clearInterval","getSelectedCurrencyPair","beforeLoadCurrencyPair","getSelectedCurrencyPairId","loadCurrencyPairDetails","currencyPairId","afterLoadCurrencyPairSuccess","setInterval","afterLoadCurrencyPairError","stateContainer","initialState","loading","currencyRates","initialLoading","isOpen","timestamp","currencyPairError","currencyRatesError","raw","Date","now","code"],"mappings":"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","file":"widget-fx-trade-order-ng/scripts/widget-fx-trade-order-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-state-container-ng\"), require(\"model-fx-trading-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-fx-trading-view-model-helper\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-fx-trade-order-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-extension-ng\", \"lib-bb-widget-ng\", \"lib-bb-intent-ng\", \"lib-bb-state-container-ng\", \"model-fx-trading-ng\", \"lib-bb-event-bus-ng\", \"lib-fx-trading-view-model-helper\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-fx-trade-order-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-state-container-ng\"), require(\"model-fx-trading-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-fx-trading-view-model-helper\"));\n\telse\n\t\troot[\"widget-fx-trade-order-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-state-container-ng\"], root[\"model-fx-trading-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-fx-trading-view-model-helper\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_38__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_40__, __WEBPACK_EXTERNAL_MODULE_45__, __WEBPACK_EXTERNAL_MODULE_46__, __WEBPACK_EXTERNAL_MODULE_47__, __WEBPACK_EXTERNAL_MODULE_53__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50256e16f76c6c9e44d8","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-fx-trade-order-ng/model.xml\n// module id = 0\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 27\n// module chunks = 5 6 7 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_38__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 38\n// module chunks = 7 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 39\n// module chunks = 7 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_40__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 40\n// module chunks = 7 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container-ng\"\n// module id = 45\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_46__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-fx-trading-ng\"\n// module id = 46\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 47\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_53__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-fx-trading-view-model-helper\"\n// module id = 53\n// module chunks = 8 9 10","/**\n * @module widget-fx-trade-order-ng\n *\n * @description\n * FX rate table details widget.\n *\n *\n * @example\n *  <div ng-controller=\"FXTradeOrderController as $ctrl\">\n *    <ul>\n *       <li data-ng-repeat=\"item in ext.helpers.currencyPairs()\">{{item.pairKey}}</li>\n *    </ul>\n *  </div>\n */\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport stateContainerModuleKey, { bbStateContainerKey } from 'lib-bb-state-container-ng';\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport modelFxTradingModuleKey, { modelFxTradingKey } from 'model-fx-trading-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport eventBusModuleKey, {\n  eventBusKey,\n} from 'lib-bb-event-bus-ng';\nimport Controller from './controller';\nimport defaultHooks from './default-hooks';\nimport service from './service';\nimport viewModel from './view-model';\n\nconst hooksKey = 'widget-fx-trade-order-ng:hooks';\nconst serviceKey = 'widget-fx-trade-order-ng:service';\nconst viewModelKey = 'widget-fx-trade-order-ng:viewModel';\n\n/**\n * @name default\n * @type {string}\n * @description Angular module name\n */\nexport default angular\n  .module('widget-fx-trade-order-ng', [\n    modelFxTradingModuleKey,\n    widgetModuleKey,\n    bbIntentModuleKey,\n    eventBusModuleKey,\n    stateContainerModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n  .factory(serviceKey, [\n    modelFxTradingKey,\n    viewModelKey,\n    service,\n  ])\n  .factory(viewModelKey, [\n    bbStateContainerKey,\n    widgetKey,\n    hooksKey,\n    viewModel,\n  ])\n\n\n  .controller('FXTradeOrderController', [\n    widgetKey,\n    bbIntentKey,\n    serviceKey,\n    viewModelKey,\n    eventBusKey,\n    /* into */\n    Controller,\n  ])\n  .name;\n\n/**\n * CurrencyPair type definition\n * @typedef {Object} CurrencyPair\n * @property {string}        pairKey          - Currency pair id\n */\n\n /**\n * CurrencyRate type definition\n * @typedef {Object} CurrencyRate\n * @property {string}        pairKey          - Currency pair id\n * @property {number}        price            - Last executed price for the currency pair\n * @property {number}        change           - Today's price change\n * @property {number}        changePct        - Today's price change in percent\n * @property {number}        bid              - Bid price available for the currency pair\n * @property {number}        ask              - Ask price available for the currency pair\n * @property {number}        ytdReturn        - Percentage of currency pair price change\n * @property {number}        wkRangeFrom      - A range from of price change for 52 recent weeks\n * @property {number}        wkRangeTo        - A range to of price change for 52 recent weeks\n * @property {number}        dayRangeFrom     - Today's range to of price change\n * @property {number}        dayRangeTo       - Today's range to of price change\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-fx-trade-order-ng/scripts/index.js","/* global angular*/\nimport { Preference, Event } from './constants';\n\n/**\n * @name FXTradeOrderController\n * @ngkey FXTradeOrderController\n * @type {object}\n * @description\n * FX trade order controller.\n */\nexport default function FXTradeOrderController(\n  widgetInstance,\n  bbIntents,\n  service,\n  viewModel,\n  eventBus\n) {\n  const $ctrl = this;\n\n  /**\n   * @name intervalUpdateRates\n   * @type {Number} intervalUpdateRates\n   * @description\n   * Delay of update rate details data\n   */\n  const intervalUpdateRates =\n    widgetInstance.getLongPreference(Preference.INTERVAL_UPDATE_RATES) * 1000;\n\n  /**\n   * @description\n   * Handles loading trading trade order data\n   *\n   * @public\n   * @name FXTradeOrderController#load\n   * @type {function}\n   * Load trade order data\n   * @returns {promise.<array>}\n   */\n  const load = () => service.load(intervalUpdateRates);\n\n  /**\n   * @description\n   * Show trade order modal\n   *\n   * @name FXTradeOrderController#show\n   * @type {function}\n   *\n   * @returns {Promise.<void>}\n   */\n  const show = () => {\n    viewModel.showModal();\n    return load();\n  };\n\n  /**\n   * @description\n   * Adds subscriptions to bus events\n   *\n   * @private\n   * @name FXTradeOrderController#bindEvents\n   * @type {function}\n   */\n  const bindEvents = () => {\n    eventBus.subscribe(Event.SHOW_TRADE_ORDER, show);\n  };\n\n  const $onDestroy = () => service.stopRatesUpdate();\n\n  /**\n   * @description\n   * Cancel trade order modal\n   *\n   * @name FXTradeOrderController#cancel\n   * @type {function}\n   *\n   * @returns {Promise.<void>}\n   */\n  const cancel = () => {\n    viewModel.cancel();\n    $onDestroy();\n  };\n\n  /*\n   * @description\n   * Widget initialization logic.\n   * Loads trade order data\n   */\n  const $onInit = () => {\n    viewModel.init();\n    bindEvents();\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n    $onDestroy,\n    load,\n    cancel,\n  });\n\n  return Object.assign(\n    {\n      get state() {\n        return viewModel.getState();\n      },\n      get errors() {\n        return viewModel.getState().errors;\n      },\n    },\n    $ctrl\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-fx-trade-order-ng/scripts/controller.js","/**\n * @name Preference\n * @type {object}\n *\n * @description\n * Widget preferences enum\n *\n * @property {string} INTERVAL_UPDATE_RATES Defines interval of update table rate details in seconds\n */\n// eslint-disable-next-line import/prefer-default-export\nexport const Preference = {\n  INTERVAL_UPDATE_RATES: 'bb.fxRate.intervalUpdateRates',\n};\n\nexport const Event = {\n  SHOW_TRADE_ORDER: 'bb.event.show.tradeOrder',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-fx-trade-order-ng/scripts/constants.js","/* global angular */\nexport default (model, viewModel) => {\n  let timerId;\n  /**\n   * @description\n   * Handles loading rate details data of currency pair\n   * @public\n   * @name loadCurrencyRates\n   * @type {function}\n   * Load currency rate details\n   * @returns {promise.<array>}\n   */\n  const loadCurrencyRates = () => {\n    const currentParams = {\n      currencypair: [viewModel.getState().currencyPair.data.pairKey],\n    };\n\n    return model.loadCurrencyRates(currentParams)\n      .then((data) => {\n        viewModel.afterLoadCurrencyRatesSuccess({\n          data: data.data,\n        });\n        return data;\n      })\n      .catch((error) => {\n        viewModel.afterLoadCurrencyRatesError(error);\n        throw error;\n      });\n  };\n\n  /**\n   * @description\n   * Method for stop rates auto update by interval\n   * @public\n   * @name stopRatesUpdate\n   * @type {function}\n   * Stop rates updates\n   */\n  const stopRatesUpdate = () => {\n    if (timerId) {\n      clearInterval(timerId);\n      timerId = null;\n    }\n  };\n\n  const getSelectedCurrencyPair = () => model.getSelectedCurrencyPair();\n\n  /**\n   * @description\n   * Handles loading currency details data\n   * @public\n   * @name load\n   * @param {number} intervalUpdateRates interval of currency details update\n   * @type {function}\n   * Load currency details\n   * @returns {promise.<array>}\n   */\n  const load = (intervalUpdateRates) => {\n    viewModel.beforeLoadCurrencyPair();\n    stopRatesUpdate();\n    return model.getSelectedCurrencyPairId()\n      .then(currencyPairId => model.loadCurrencyPairDetails(currencyPairId))\n      .then((data) => {\n        viewModel.afterLoadCurrencyPairSuccess({\n          data: data.data,\n        });\n        return data;\n      })\n      .then(() => {\n        loadCurrencyRates();\n      })\n      .then(() => {\n        timerId = setInterval(() => { loadCurrencyRates(); }, intervalUpdateRates);\n      })\n      .catch((error) => {\n        viewModel.afterLoadCurrencyPairError(error);\n        throw error;\n      });\n  };\n\n  return {\n    load,\n    loadCurrencyRates,\n    stopRatesUpdate,\n    getSelectedCurrencyPair,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-fx-trade-order-ng/scripts/service.js","import { wrapActions } from 'lib-fx-trading-view-model-helper';\n\nexport default function (\n  stateContainer\n) {\n  /**\n   * @name initialState\n   * @description Initial state of rate table store\n   * @type {object}\n   * @property {object}  currencyPairs      An object of currency pairs\n   * @property {boolean} initialLoading     Boolean flag of initial loading\n   * @property {object}  errors             currency pairs errors\n   */\n  const initialState = {\n    currencyPair: {\n      data: {},\n      loading: false,\n    },\n    currencyRates: {\n      data: {},\n    },\n    initialLoading: true,\n    isOpen: false,\n    timestamp: null,\n    errors: {\n      currencyPairError: null,\n      currencyRatesError: null,\n    },\n  };\n\n  return {\n    getState: () => stateContainer.getState(),\n    ...wrapActions(stateContainer, {\n      init: (state = initialState) => state,\n      beforeLoadCurrencyPair: () => ({\n        currencyPair: {\n          loading: true,\n        },\n      }),\n      afterLoadCurrencyPairSuccess: (state, raw) => ({\n        initialLoading: false,\n        currencyPair: {\n          loading: false,\n          data: raw.data,\n        },\n        timestamp: Date.now(),\n        errors: {\n          currencyPairError: null,\n        },\n      }),\n      afterLoadCurrencyPairError: (state, error) => ({\n        initialLoading: false,\n        currencyPair: {\n          loading: false,\n          data: {},\n        },\n        errors: {\n          currencyPairError: error.code,\n        },\n      }),\n      afterLoadCurrencyRatesSuccess: (state, raw) => ({\n        initialLoading: false,\n        currencyRates: {\n          data: raw.data[0],\n        },\n        errors: {\n          currencyRatesError: null,\n        },\n      }),\n      afterLoadCurrencyRatesError: (state, error) => ({\n        initialLoading: false,\n        currencyRates: {\n          data: {},\n        },\n        errors: {\n          currencyRatesError: error.code,\n        },\n      }),\n      showModal: () => ({\n        isOpen: true,\n      }),\n      cancel: () => ({\n        isOpen: false,\n      }),\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-fx-trade-order-ng/scripts/view-model.js"],"sourceRoot":""}