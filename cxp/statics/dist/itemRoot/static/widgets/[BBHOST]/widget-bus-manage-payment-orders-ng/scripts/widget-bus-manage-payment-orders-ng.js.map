{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6********************************","webpack:///webpack/bootstrap 70052c6c6190d07a36f3?d006********************************","webpack:///./widget-bus-manage-payment-orders-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114***********************","webpack:///external \"lib-bb-widget-ng\"?84ad****","webpack:///external \"lib-bb-model-errors\"?7567******","webpack:///external \"lib-bb-event-bus-ng\"?8215****","webpack:///external \"lib-bb-widget-extension-ng\"?b547*****","webpack:///external \"lib-bb-intent-ng\"?add1***","webpack:///external \"model-bb-payment-orders-ng\"?e196*****","webpack:///external \"lib-bb-permissions-ng\"?d9b0**","webpack:///./widget-bus-manage-payment-orders-ng/scripts/index.js","webpack:///./widget-bus-manage-payment-orders-ng/scripts/controller.js","webpack:///./widget-bus-manage-payment-orders-ng/scripts/constants.js","webpack:///./widget-bus-manage-payment-orders-ng/scripts/default-hooks.js"],"names":["defaultHooks","hooksKey","angular","module","modelPaymentOrdersModuleKey","widgetModuleKey","bbIntentModuleKey","bbPermissionsModuleKey","bbEventBusModuleKey","factory","controller","modelPaymentOrdersKey","widgetKey","bbPermissionsKey","eventBusKey","Controller","run","bbIntentKey","bbIntent","init","name","ManagePaymentOrderController","errorMessages","E_AUTH","E_USER","E_CONNECTIVITY","E_UNEXPECTED","DEFAULT_PAGE_SIZE","DEFAULT_MAX_NAV_PAGES","DEFAULT_PAGINATION_TYPE","DEFAULT_MESSAGE_DISMISS_TIME","uiError","error","modelError","code","message","model","widget","hooks","permissions","bus","$ctrl","size","getLongPreference","Preference","PAGE_SIZE","maxNavPages","MAX_NAV_PAGES","paginationType","getStringPreference","PAGINATION_TYPE","notificationDismissTime","NOTIFICATION_DISMISS","state","paymentOrders","rawItems","params","from","orderBy","defaultSortableColumn","direction","defaultSortableDirection","query","searching","search","notifications","currencies","data","loading","hasMore","pagination","currentPage","itemsPerPage","totalItems","filterParams","amountFrom","amountTo","currency","dateRange","startDate","endDate","status","fromAccount","identifier","initialLoading","selections","selectedPayments","selectedPaymentsIds","selectedPaymentsActionGrouped","bulkActionDetails","bulkActionNotification","isVisible","isLoading","loadMorePromise","append","newItems","existingItems","replace","items","getNormalizedDate","date","undefined","userOffset","getTimezoneOffset","Date","toISOString","slice","normalizeQueryParam","param","getParams","Object","assign","executionDateFrom","executionDateTo","getPermissions","Privileges","then","privileges","catch","load","merge","requestParams","getPaymentOrders","raw","length","totalCount","processPaymentOrders","processedPayments","err","Promise","reject","loadMore","done","changePage","onSort","pageSize","onSearchSubmit","queryHasValue","Boolean","trim","onSearchClear","getAccountsFrom","accounts","selectAccountFrom","onApplyFilter","updateLoadingState","updateBulkActionDetails","missingPaymentIdsList","update","filter","item","paymentOrder","map","payment","paymentOrderId","missingPaymentList","includes","id","updateSelectionStateByPaymentId","p","paymentId","Action","APPROVE","REJECT","forEach","Array","isArray","actions","indexOf","push","notifyOnAuthSuccess","publish","Event","PAYMENT_AUTH_SUCCESS","res","notifyOnAuthFail","PAYMENT_AUTH_FAIL","authorize","authorizePayment","notifyOnRejectSuccess","PAYMENT_REJECT_SUCCESS","notifyOnRejectFail","PAYMENT_REJECT_FAIL","rejectPayment","notifyOnCancelSuccess","PAYMENT_CANCEL_SUCCESS","notifyOnCancelFail","PAYMENT_CANCEL_FAIL","cancelPayment","version","requestPaymentCancel","notifyOnDeleteFail","PAYMENT_DELETE_FAIL","notifyOnDeleteSuccess","PAYMENT_DELETE_SUCCESS","deletePayment","clearPaymentSelection","notifyOnBulkApproveSuccess","failCount","PAYMENT_BULK_APPROVE_SUCCESS","notifyOnBulkApproveFail","PAYMENT_BULK_APPROVE_FAIL","approveBulk","requestBulkApprove","finally","notifyOnBulkRejectSuccess","PAYMENT_BULK_REJECT_SUCCESS","notifyOnBulkRejectFail","PAYMENT_BULK_REJECT_FAIL","rejectBulk","requestBulkReject","bindEvents","subscribe","NOTIFICATION_EVENT","notification","$onInit","resource","function","payments"],"mappings":"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","file":"widget-bus-manage-payment-orders-ng/scripts/widget-bus-manage-payment-orders-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"model-bb-payment-orders-ng\"), require(\"lib-bb-permissions-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bus-manage-payment-orders-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-model-errors\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\", \"lib-bb-intent-ng\", \"model-bb-payment-orders-ng\", \"lib-bb-permissions-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bus-manage-payment-orders-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"model-bb-payment-orders-ng\"), require(\"lib-bb-permissions-ng\"));\n\telse\n\t\troot[\"widget-bus-manage-payment-orders-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-intent-ng\"], root[\"model-bb-payment-orders-ng\"], root[\"lib-bb-permissions-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_142__, __WEBPACK_EXTERNAL_MODULE_148__, __WEBPACK_EXTERNAL_MODULE_193__, __WEBPACK_EXTERNAL_MODULE_194__, __WEBPACK_EXTERNAL_MODULE_195__, __WEBPACK_EXTERNAL_MODULE_196__, __WEBPACK_EXTERNAL_MODULE_197__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 70052c6c6190d07a36f3","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bus-manage-payment-orders-ng/model.xml\n// module id = 0\n// module chunks = 33","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 18\n// module chunks = 0 8 9 10 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_142__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 142\n// module chunks = 16 27 28 30 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_148__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 148\n// module chunks = 16 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_193__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 193\n// module chunks = 27 28 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_194__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 194\n// module chunks = 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_195__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 195\n// module chunks = 27 28 29 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_196__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-payment-orders-ng\"\n// module id = 196\n// module chunks = 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_197__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-permissions-ng\"\n// module id = 197\n// module chunks = 27 28 31 33","/**\n * @module widget-bus-manage-payment-orders-ng\n *\n * @description\n * Widget to manage payment orders\n */\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport modelPaymentOrdersModuleKey, {\n  modelPaymentOrdersKey,\n} from 'model-bb-payment-orders-ng';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport bbPermissionsModuleKey, { bbPermissionsKey } from 'lib-bb-permissions-ng';\nimport bbEventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\n\nimport Controller from './controller';\nimport * as defaultHooks from './default-hooks';\n\nconst hooksKey = 'widget-bus-manage-payment-orders-ng:hooks';\n\nexport default angular\n  .module('widget-bus-manage-payment-orders-ng', [\n    modelPaymentOrdersModuleKey,\n    widgetModuleKey,\n    bbIntentModuleKey,\n    bbPermissionsModuleKey,\n    bbEventBusModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('ManagePaymentOrderController', [\n    // dependencies to inject\n    modelPaymentOrdersKey,\n    widgetKey,\n    hooksKey,\n    bbPermissionsKey,\n    eventBusKey,\n    /* into */\n    Controller,\n  ])\n\n  .run([bbIntentKey, (bbIntent) => {\n    bbIntent.init();\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bus-manage-payment-orders-ng/scripts/index.js","import { E_AUTH, E_USER, E_CONNECTIVITY, E_UNEXPECTED } from 'lib-bb-model-errors';\nimport { Preference, Privileges, Event, Action } from './constants';\n\nconst errorMessages = {\n  [E_AUTH]: 'error.auth',\n  [E_USER]: 'error.user',\n  [E_CONNECTIVITY]: 'error.connectivity',\n  [E_UNEXPECTED]: 'error.unexpected',\n};\n\n/**\n * Defines the default pageSize for the payment orders page\n * as defined in the widget model.xml\n * @type {number}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n\n/**\n * Defines the default maxNavPages for the payment orders page\n * as defined in the widget model.xml\n * @type {number}\n */\nconst DEFAULT_MAX_NAV_PAGES = 3;\n\n/**\n * Defines the default paginationType for the payment orders page\n * as defined in the widget model.xml\n * @type {string}\n */\nconst DEFAULT_PAGINATION_TYPE = 'load-more';\n\n/**\n * Defines the default notificationDismissTime for the payment orders page\n * as defined in the widget model.xml\n * @type {number}\n */\nconst DEFAULT_MESSAGE_DISMISS_TIME = 3;\n\n/**\n * @description\n * Creates an error object for template\n *\n * @name uiError\n *\n * @inner\n * @param {object} modelError Error object\n * @type {function}\n * @returns {{message: string}}\n */\nconst uiError = modelError => {\n  let error = '';\n\n  if (modelError && modelError.code) {\n    error = errorMessages[modelError.code];\n  }\n\n  return {\n    message: error,\n  };\n};\n\n/**\n * @name ManagePaymentOrderController\n * @type {object}\n * @description\n * Controller for managing payment order\n *\n * @usage\n * <div ng-controller=\"ManagePaymentOrderController as $ctrl\">\n *   <!-- ... -->\n * </div>\n */\nexport default function ManagePaymentOrderController(model, widget, hooks, permissions, bus) {\n  const $ctrl = this;\n  const size =\n    widget.getLongPreference(Preference.PAGE_SIZE) || DEFAULT_PAGE_SIZE;\n  const maxNavPages =\n    widget.getLongPreference(Preference.MAX_NAV_PAGES) || DEFAULT_MAX_NAV_PAGES;\n  const paginationType =\n    widget.getStringPreference(Preference.PAGINATION_TYPE) || DEFAULT_PAGINATION_TYPE;\n  const notificationDismissTime =\n    widget.getLongPreference(Preference.NOTIFICATION_DISMISS) || DEFAULT_MESSAGE_DISMISS_TIME;\n\n  let state;\n\n  const paymentOrders = {\n    rawItems: [],\n    params: {\n      from: 0,\n      size,\n      orderBy: hooks.defaultSortableColumn(),\n      direction: hooks.defaultSortableDirection(),\n      get query() {\n        if (!state.paymentOrders.searching) {\n          return null;\n        }\n\n        return state.search.query;\n      },\n    },\n  };\n\n  state = {\n    notifications: [],\n    currencies: null,\n    paymentOrders: {\n      data: null,\n      get orderBy() { return paymentOrders.params.orderBy; },\n      get direction() { return paymentOrders.params.direction; },\n      loading: false,\n      searching: false,\n      hasMore: false,\n      error: null,\n    },\n    pagination: {\n      get currentPage() { return paymentOrders.params.from + 1; },\n      maxNavPages,\n      paginationType,\n      itemsPerPage: size,\n      totalItems: 0,\n    },\n    search: {\n      query: null,\n    },\n    filterParams: {\n      amountFrom: null,\n      amountTo: null,\n      currency: null,\n      dateRange: {\n        startDate: null,\n        endDate: null,\n      },\n      status: null,\n      fromAccount: {\n        identifier: null,\n        name: null,\n      },\n    },\n    initialLoading: true,\n    error: null,\n    notificationDismissTime,\n    selections: {\n      selectedPayments: [],\n      selectedPaymentsIds: [],\n      selectedPaymentsActionGrouped: {},\n    },\n    bulkActionDetails: {},\n    bulkActionNotification: {\n      isVisible: false,\n    },\n    isLoading: false,\n  };\n\n  /**\n   * @type {promise} loadMorePromise\n   */\n  let loadMorePromise = null;\n\n  /**\n   * Merges new payments with existing payments\n   *\n   * @inner\n   * @name append\n   * @type {function}\n   * @returns {array} Merged array of old and new payments\n   */\n  const append = (newItems, existingItems) => [...existingItems, ...newItems];\n\n  /**\n   * Replaces existing payments with new payments\n   *\n   * @inner\n   * @name replace\n   * @type {function}\n   * @returns {array} New payments\n   */\n  const replace = items => items;\n\n  /**\n   * @description\n   * Normalize date to required format.\n   *\n   * @inner\n   * @name ManagePaymentOrderController#getNormalizedDate\n   * @type {function}\n   *\n   * @param param {Date|null} Date to normalize\n   *\n   * @returns {Date|null} Date object or null\n   */\n  const getNormalizedDate = (date) => {\n    if (date === null || date === undefined) {\n      return null;\n    }\n\n    const userOffset = date.getTimezoneOffset() * 60000;\n    return `${new Date(date - userOffset).toISOString().slice(0, 10)}`;\n  };\n\n  /**\n   * @description\n   * Normalize search query param.\n   *\n   * @inner\n   * @name ManagePaymentOrderController#normalizeQueryParam\n   * @type {function}\n   *\n   * @param param {Object|null} Parameter to normalize\n   *\n   * @returns {Object|null} Object or null\n   */\n  const normalizeQueryParam = param => (param === '' ? null : param);\n\n  /**\n   * @description\n   * Get all filter params.\n   *\n   * @inner\n   * @name ManagePaymentOrderController#getParams\n   * @type {function}\n   *\n   * @returns {Promise} A Promise that adds values to a given argument\n   */\n  const getParams = () => Object.assign({}, {\n    executionDateFrom: getNormalizedDate($ctrl.state.filterParams.dateRange.startDate),\n    executionDateTo: getNormalizedDate($ctrl.state.filterParams.dateRange.endDate),\n    amountFrom: normalizeQueryParam($ctrl.state.filterParams.amountFrom),\n    amountTo: normalizeQueryParam($ctrl.state.filterParams.amountTo),\n    currency: normalizeQueryParam($ctrl.state.filterParams.currency),\n    status: normalizeQueryParam($ctrl.state.filterParams.status),\n  });\n\n  /**\n   * @name ManagePaymentOrderController#getPermissions\n   * @inner\n   * @type {function}\n   *\n   * @description\n   * Retrieve permissions for respective privilege set and store it\n   * into controller prop\n   *\n   * @return {Promise}\n   *\n   */\n  const getPermissions = () => permissions\n    .getPermissions(Privileges)\n    .then(privileges => {\n      $ctrl.privileges = privileges;\n    })\n    .catch(() => {\n      $ctrl.privileges = false;\n    });\n\n  /**\n   * @name ManagePaymentOrderController#load\n   *\n   * @description\n   * Load payment orders\n   *\n   * @type {function}\n   * @param {function} merge Replaces existing payments with new payments\n   * @param {object} params Request parameters\n   * @return\n   *  {Promise.<module:model-bb-payment-orders-ng.Payments, module:lib-bb-model-errors.ModelError>}\n   *  A promise\n   */\n  const load = (merge, params = {}) => {\n    const requestParams = Object.assign({}, paymentOrders.params, params);\n    state.paymentOrders.loading = true;\n    return model.getPaymentOrders(requestParams)\n      .then(raw => {\n        state.paymentOrders.loading = false;\n        paymentOrders.rawItems = merge(raw.data, paymentOrders.rawItems);\n        state.paymentOrders.hasMore = paymentOrders.rawItems.length < raw.totalCount;\n        state.pagination.totalItems = raw.totalCount || 0;\n\n        return paymentOrders.rawItems;\n      })\n      .then(hooks.processPaymentOrders)\n      .then(processedPayments => {\n        state.paymentOrders.data = processedPayments;\n      })\n      .catch(err => {\n        state.error = uiError(err);\n        state.paymentOrders.loading = false;\n\n        return Promise.reject(state.error);\n      });\n  };\n\n  /**\n   * @name ManagePaymentOrderController#loadMore\n   *\n   * @description\n   * Loads more payments if they are available.\n   *\n   * @type {function}\n   * @param {function} done Callback to stop loading\n   * @return\n   *  {Promise.<module:model-bb-payment-orders-ng.Payments, module:lib-bb-model-errors.ModelError>}\n   *  A promise\n   */\n  const loadMore = done => {\n    if (state.paymentOrders.loading) {\n      return loadMorePromise;\n    }\n\n    paymentOrders.params.from++;\n\n    loadMorePromise = load(append, getParams())\n      .then(() => {\n        loadMorePromise = null;\n      })\n      .catch(() => {\n        loadMorePromise = null;\n        paymentOrders.params.from--;\n      })\n      .then(done);\n\n    return loadMorePromise;\n  };\n\n  /**\n   * @description\n   * Change page of displayed payments.\n   *\n   * @name ManagePaymentOrderController#changePage\n   * @type {function}\n   * @returns\n   *  {Promise.<module:model-bb-payment-orders-ng.Payments, module:lib-bb-model-errors.ModelError>}\n   *  A Promise with loaded payments\n   */\n  const changePage = params => {\n    Object.assign(paymentOrders.params, {\n      from: params.currentPage - 1,\n    });\n\n    return load(replace, getParams());\n  };\n\n  /**\n   * @name ManagePaymentOrderController#onSort\n   * @type {function}\n   * @description\n   * Loads sorted list of payments\n   * @param  {string} orderBy   Column key to sort\n   * @param  {string} direction Sort direction\n   */\n  const onSort = (orderBy, direction) => {\n    Object.assign(paymentOrders.params, {\n      orderBy,\n      direction,\n    });\n\n    if (state.pagination.paginationType === DEFAULT_PAGINATION_TYPE) {\n      const pageSize = state.pagination.currentPage * state.pagination.itemsPerPage;\n      return load(replace, Object.assign({ from: 0, size: pageSize }, getParams()));\n    }\n\n    return load(replace, getParams());\n  };\n\n  /**\n   * @name ManagePaymentOrderController#onSearchSubmit\n   * @type {function}\n   * @description\n   * Enables searching mode and loads payment orders based on search query\n   * @return\n   *  {Promise.<module:model-bb-payment-orders-ng.Payments, module:lib-bb-model-errors.ModelError>}\n   *  A promise\n   */\n  const onSearchSubmit = () => {\n    const query = $ctrl.state.search.query;\n    const queryHasValue = Boolean(typeof query === 'string' && query.trim().length);\n    $ctrl.state.paymentOrders.searching = queryHasValue;\n    return load(replace);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#onSearchClear\n   * @type {function}\n   * @description\n   * Disables searching mode and resets payment orders\n   * @return\n   *  {Promise.<module:model-bb-payment-orders-ng.Payments, module:lib-bb-model-errors.ModelError>}\n   *  A promise\n   */\n  const onSearchClear = () => {\n    $ctrl.state.paymentOrders.searching = false;\n    return load(replace);\n  };\n\n  // TODO: Show currencies selector in filter form when search service supports it\n  // /**\n  //  * @description\n  //  * Request currencies list\n  //  *\n  //  * @inner\n  //  * @name ManagePaymentOrderController#getCurrencies\n  //  * @type {function}\n  //  * @returns {Array.<Object>} Currencies array\n  //  */\n  // const getCurrencies = () =>\n  //   model.getCurrencies()\n  //     .then(currencies => {\n  //       state.currencies = currencies;\n  //     })\n  //     .catch(err => {\n  //       state.error = uiError(err);\n  //     });\n\n  /**\n   * @description\n   * Load accounts available to payment from.\n   *\n   * @name ManagePaymentOrderController#getAccountsFrom\n   * @type {function}\n   *\n   * @param params\n   * @returns {Promise.<Object>} A Promise that returns a flat accounts list.\n   */\n  const getAccountsFrom = params => model.getAccountsFrom(params)\n    .then(accounts => ({ data: accounts, hasMore: accounts.hasMore, totalItems: accounts.length }))\n    .catch(err => {\n      state.error = uiError(err);\n    });\n\n  /**\n   * @name ManagePaymentOrderController#selectAccountFrom\n   *\n   * @description\n   * Assign selected fromAccount identifier to the filter form.\n   * @type {function}\n   *\n   * @param {String?} identifier  Account identifier IBAN/BBAN\n   * @param {String?} name        Account name\n   */\n  const selectAccountFrom = ({ identifier = null, name = null }) => {\n    Object.assign($ctrl.state.filterParams.fromAccount, { identifier, name });\n  };\n\n  /**\n   * @description\n   * Call filter method.\n   *\n   * @name ManagePaymentOrderController#onApplyFilter\n   * @type {function}\n   */\n  const onApplyFilter = () => {\n    $ctrl.state.paymentOrders.searching = true;\n    return load(replace, getParams());\n  };\n\n  /**\n   * @name ManagePaymentOrderController#updateLoadingState\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Update the loading state\n   *\n   * @param {Boolean} isLoading\n   */\n  const updateLoadingState = isLoading => Object.assign(state, { isLoading });\n\n  /**\n   * @name ManagePaymentOrderController#updateBulkActionDetails\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Update the state of the ctrl with bulk action details\n   *\n   * @param {Object} update the response data object of bulk request\n   */\n  const updateBulkActionDetails = update => {\n    const missingPaymentIdsList = update.paymentOrders\n      .filter(item => !item.paymentOrder)\n      .map(payment => payment.paymentOrderId);\n\n    const missingPaymentList = state.selections.selectedPayments\n      .filter(payment => missingPaymentIdsList.includes(payment.id));\n\n    Object.assign(update, {\n      paymentOrders: [\n        ...update.paymentOrders.filter(item => item.paymentOrder && item.status.code === 'ERROR'),\n        ...missingPaymentList,\n      ],\n    });\n\n    Object.assign(state, {\n      bulkActionDetails: update,\n      bulkActionNotification: {\n        isVisible: true,\n      },\n    });\n  };\n\n  /**\n   * @name ManagePaymentOrderController#updateSelectionStateByPaymentId\n   * @inner\n   *\n   * @description\n   * Find the payment by ID and remove it from the selected payments\n   *\n   * @type {function}\n   *\n   * @param {String} paymentId\n   */\n  const updateSelectionStateByPaymentId = paymentId => {\n    if (!state.selections.selectedPaymentsIds.length) { return; }\n\n    const {\n      selectedPayments,\n      selectedPaymentsIds,\n    } = state.selections;\n\n    const update = {\n      selectedPayments: [...selectedPayments.filter(p => p.id !== paymentId)],\n      selectedPaymentsIds: [...selectedPaymentsIds.filter(id => id !== paymentId)],\n      selectedPaymentsActionGrouped: {\n        [Action.APPROVE]: [],\n        [Action.REJECT]: [],\n      },\n    };\n\n    update.selectedPayments.forEach(payment => {\n      if (Array.isArray(payment.actions) && payment.actions.indexOf(Action.APPROVE) >= 0) {\n        update.selectedPaymentsActionGrouped[Action.APPROVE].push(payment);\n      }\n\n      if (Array.isArray(payment.actions) && payment.actions.indexOf(Action.REJECT) >= 0) {\n        update.selectedPaymentsActionGrouped[Action.REJECT].push(payment);\n      }\n    });\n\n    Object.assign(state, { selections: update });\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnAuthSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's success.\n   *\n   * @fires bb.event.payment.auth.success\n   *\n   * @returns {object}\n   */\n  const notifyOnAuthSuccess = res => {\n    bus.publish(Event.PAYMENT_AUTH_SUCCESS, res);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnAuthFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's failure.\n   *\n   * @fires bb.event.payment.auth.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnAuthFail = err => {\n    bus.publish(Event.PAYMENT_AUTH_FAIL, err);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#authorize\n   * @type {function}\n   *\n   * @description\n   * Requests payment authorization (approval).\n   *\n   * @param {String} paymentId Id of the payment\n   *\n   * @returns {Promise}\n   */\n  const authorize = paymentId => {\n    model.authorizePayment(paymentId)\n      .then(() => {\n        notifyOnAuthSuccess();\n        load(replace);\n      })\n      .catch(notifyOnAuthFail);\n\n    // Update selection state\n    updateSelectionStateByPaymentId(paymentId);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnRejectSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's success.\n   *\n   * @fires bb.event.payment.reject.success\n   *\n   * @returns {object}\n   */\n  const notifyOnRejectSuccess = res => {\n    bus.publish(Event.PAYMENT_REJECT_SUCCESS, res);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnRejectFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's failure.\n   *\n   * @fires bb.event.payment.reject.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnRejectFail = err => {\n    bus.publish(Event.PAYMENT_REJECT_FAIL, err);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#reject\n   * @type {function}\n   *\n   * @description\n   * Requests payment rejection.\n   *\n   * @param {String} paymentId Id of the payment\n   *\n   * @returns {Promise}\n   */\n  const reject = paymentId => {\n    model.rejectPayment(paymentId)\n    .then(() => {\n      notifyOnRejectSuccess();\n      load(replace);\n    })\n    .catch(notifyOnRejectFail);\n\n    // Update selection state\n    updateSelectionStateByPaymentId(paymentId);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnCancelSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on cancel request's success.\n   *\n   * @fires bb.event.payment.cancel.success\n   *\n   * @returns {object}\n   */\n  const notifyOnCancelSuccess = res => {\n    bus.publish(Event.PAYMENT_CANCEL_SUCCESS, res);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnCancelFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on cancel request's failure.\n   *\n   * @fires bb.event.payment.cancel.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnCancelFail = err => {\n    bus.publish(Event.PAYMENT_CANCEL_FAIL, err);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#cancelPayment\n   * @type {function}\n   *\n   * @description\n   * Requests payment cancel.\n   *\n   * @param {String} paymentId Id of the payment\n   * @param {Number} version property on payment Object\n   *\n   * @returns {Promise}\n   */\n  const cancelPayment = (paymentId, version) => {\n    model.requestPaymentCancel(paymentId, version)\n      .then(() => {\n        notifyOnCancelSuccess();\n        load(replace);\n      })\n      .catch(notifyOnCancelFail);\n\n    // Update selection state\n    updateSelectionStateByPaymentId(paymentId);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnDeleteFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on delete request's failure.\n   *\n   * @fires bb.event.payment.delete.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnDeleteFail = err => {\n    bus.publish(Event.PAYMENT_DELETE_FAIL, err);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnDeleteSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on delete request's success.\n   *\n   * @fires bb.event.payment.delete.success\n   *\n   * @returns {object}\n   */\n  const notifyOnDeleteSuccess = res => {\n    bus.publish(Event.PAYMENT_DELETE_SUCCESS, res);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#deletePayment\n   * @type {function}\n   *\n   * @description\n   * Requests payment delete.\n   *\n   * @param {String} paymentId Id of the payment\n   * @param {Number} version property on payment Object\n   *\n   * @returns {Promise}\n   */\n  const deletePayment = (paymentId, version) => {\n    model.deletePayment(paymentId, version)\n      .then(() => {\n        notifyOnDeleteSuccess();\n        load(replace);\n      })\n      .catch(notifyOnDeleteFail);\n\n    // Update selection state\n    updateSelectionStateByPaymentId(paymentId);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#clearPaymentSelection\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * de-select payments by updating selection state\n   */\n  const clearPaymentSelection = () => {\n    Object.assign(state, {\n      selections: {\n        selectedPayments: [],\n        selectedPaymentsIds: [],\n        selectedPaymentsActionGrouped: {},\n      },\n    });\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnBulkApproveSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on bulk approve request's success.\n   *\n   * @fires bb.event.payment.bulk.approve.success\n   *\n   * @returns {object}\n   */\n  const notifyOnBulkApproveSuccess = res => {\n    if (res.failCount > 0) {\n      updateBulkActionDetails(res);\n    } else {\n      bus.publish(Event.PAYMENT_BULK_APPROVE_SUCCESS, res);\n    }\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnBulkApproveFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on bulk approve request's failure.\n   *\n   * @fires bb.event.payment.bulk.approve.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnBulkApproveFail = err => {\n    bus.publish(Event.PAYMENT_BULK_APPROVE_FAIL, err);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#approveBulk\n   * @type {function}\n   *\n   * @description\n   * Request approving the selected payments.\n   *\n   * @returns {Promise}\n   */\n  const approveBulk = () => {\n    updateLoadingState(true);\n\n    model.requestBulkApprove(state.selections.selectedPaymentsIds)\n      .then(({ data }) => {\n        notifyOnBulkApproveSuccess(data);\n        clearPaymentSelection();\n        load(replace);\n      })\n      .catch(notifyOnBulkApproveFail)\n      .finally(() => updateLoadingState(false));\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnBulkRejectSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on bulk reject request's success.\n   *\n   * @fires bb.event.payment.bulk.reject.success\n   *\n   * @returns {object}\n   */\n  const notifyOnBulkRejectSuccess = res => {\n    if (res.failCount > 0) {\n      updateBulkActionDetails(res);\n    } else {\n      bus.publish(Event.PAYMENT_BULK_REJECT_SUCCESS, res);\n    }\n  };\n\n  /**\n   * @name ManagePaymentOrderController#notifyOnBulkRejectFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on bulk reject request's failure.\n   *\n   * @fires bb.event.payment.bulk.reject.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnBulkRejectFail = err => {\n    bus.publish(Event.PAYMENT_BULK_REJECT_FAIL, err);\n  };\n\n  /**\n   * @name ManagePaymentOrderController#rejectBulk\n   * @type {function}\n   *\n   * @description\n   * Request rejecting the selected payments.\n   *\n   * @returns {Promise}\n   */\n  const rejectBulk = () => {\n    updateLoadingState(true);\n\n    model.requestBulkReject(state.selections.selectedPaymentsIds)\n      .then(({ data }) => {\n        notifyOnBulkRejectSuccess(data);\n        clearPaymentSelection();\n        load(replace);\n      })\n      .catch(notifyOnBulkRejectFail)\n      .finally(() => updateLoadingState(false));\n  };\n\n  /**\n   * @name ManagePaymentOrderController#bindEvents\n   *\n   * @description\n   * Adds subscriptions to bus events\n   *\n   * @inner\n   * @type {function}\n   */\n  const bindEvents = () => {\n    bus.subscribe(Event.NOTIFICATION_EVENT, (notification) => {\n      state.notifications.push(notification);\n    });\n  };\n\n  /**\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name ManagePaymentOrderController#$onInit\n   * @type {function}\n   * @returns\n   *  {Promise.<module:model-bb-payment-orders-ng.Payments, module:lib-bb-model-errors.ModelError>}\n   *  A promise\n   */\n  const $onInit = () => load(replace)\n    .then(bindEvents)\n    .then(() => {\n      state.initialLoading = false;\n      getPermissions();\n    })\n    // TODO: Show currencies selector in filter form when search service supports it\n    // .then(() => getCurrencies())\n    .catch(() => {\n      state.initialLoading = false;\n    });\n\n  Object.assign($ctrl, {\n    state,\n\n    /**\n     * @description\n     * Container to store retrieved privileges state\n     *\n     * @name ManagePaymentOrderController#privileges\n     * @type {object}\n     */\n    privileges: null,\n\n    $onInit,\n    loadMore,\n    onSort,\n    changePage,\n    onSearchSubmit,\n    onSearchClear,\n    getAccountsFrom,\n    onApplyFilter,\n    selectAccountFrom,\n    authorize,\n    reject,\n    cancelPayment,\n    deletePayment,\n    approveBulk,\n    rejectBulk,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bus-manage-payment-orders-ng/scripts/controller.js","/**\n * Widget preferences enum\n * @name Preference\n * @type {object}\n */\nexport const Preference = {\n  PAGE_SIZE: 'bb.payment.pageSize',\n  MAX_NAV_PAGES: 'bb.payment.maxNavPages',\n  PAGINATION_TYPE: 'bb.payment.paginationType',\n  NOTIFICATION_DISMISS: 'bb.payment.notificationDismissTime',\n};\n\n/**\n * @description\n * Config for retrieving user privileges\n *\n * @type {object}\n */\nexport const Privileges = [\n  {\n    resource: 'Payments',\n    function: 'SEPA CT',\n    privileges: ['approve'],\n  },\n];\n\n/**\n * @description\n * List of events to be handled in controller\n *\n * @type {Object}\n */\nexport const Event = {\n  PAYMENT_AUTH_SUCCESS: 'bb.event.payment.auth.success',\n  PAYMENT_AUTH_FAIL: 'bb.event.payment.auth.fail',\n  PAYMENT_REJECT_SUCCESS: 'bb.event.payment.reject.success',\n  PAYMENT_REJECT_FAIL: 'bb.event.payment.reject.fail',\n  PAYMENT_CANCEL_SUCCESS: 'bb.event.payment.cancel.success',\n  PAYMENT_CANCEL_FAIL: 'bb.event.payment.cancel.fail',\n  PAYMENT_DELETE_SUCCESS: 'bb.event.payment.delete.success',\n  PAYMENT_DELETE_FAIL: 'bb.event.payment.delete.fail',\n  PAYMENT_BULK_REJECT_SUCCESS: 'bb.event.payment.bulk.reject.success',\n  PAYMENT_BULK_REJECT_FAIL: 'bb.event.payment.bulk.reject.fail',\n  PAYMENT_BULK_APPROVE_SUCCESS: 'bb.event.payment.bulk.approve.success',\n  PAYMENT_BULK_APPROVE_FAIL: 'bb.event.payment.bulk.approve.fail',\n  NOTIFICATION_EVENT: 'bb.event.notifications.notify',\n};\n\n/**\n * Payment actions enum\n * @name Action\n * @type {Object}\n */\nexport const Action = {\n  APPROVE: 'APPROVE',\n  REJECT: 'REJECT',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bus-manage-payment-orders-ng/scripts/constants.js","/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-bus-manage-payment-orders-ng\n */\n\n/**\n * @name Hooks#processPaymentOrders\n * @type {function}\n *\n * @description\n * Hook for processing payment orders.\n *\n * @param payments {array} Payments to process\n * @returns {array} Processed payments\n */\nexport const processPaymentOrders = payments => payments;\n\n/**\n * @name Hooks#defaultSortableColumn\n *\n * @description\n * defaultSortableColumn default hook\n *\n * @type {function}\n * @returns {?string}\n */\nexport const defaultSortableColumn = () => null;\n\n/**\n * @name Hooks#defaultSortableDirection\n *\n * @description\n * defaultSortableDirection default hook\n *\n * @type {function}\n * @returns {?string}\n */\nexport const defaultSortableDirection = () => null;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bus-manage-payment-orders-ng/scripts/default-hooks.js"],"sourceRoot":""}