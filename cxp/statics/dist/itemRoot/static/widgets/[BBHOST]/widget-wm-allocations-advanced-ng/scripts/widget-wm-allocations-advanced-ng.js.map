{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6***************************","webpack:///webpack/bootstrap d0309a746b17cd403690?c295***************************","webpack:///./widget-wm-allocations-advanced-ng/model.xml","webpack:///external \"lib-bb-state-container-ng\"?8d56*","webpack:///external \"lib-wm-portfolio-view-model-helper\"?8f7a*","webpack:///external \"vendor-bb-angular\"?a114*******","webpack:///external \"lib-bb-event-bus-ng\"?8215","webpack:///./widget-wm-allocations-advanced-ng/scripts/index.js","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"model-wm-portfolio-summary-ng\"","webpack:///external \"lib-bb-currency-ng\"","webpack:///external \"lib-wm-portfolio-router-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///./widget-wm-allocations-advanced-ng/scripts/controller.js","webpack:///./widget-wm-allocations-advanced-ng/scripts/constants.js","webpack:///./widget-wm-allocations-advanced-ng/scripts/view-model.js","webpack:///./widget-wm-allocations-advanced-ng/scripts/service.js"],"names":["viewModelKey","allocationsServiceKey","angular","module","modelPortfolioSummaryModuleKey","stateContainerModuleKey","routerModuleKey","bbIntentModuleKey","eventBusModuleKey","factory","bbStateContainerKey","ViewModel","modelPortfolioSummaryKey","AllocationsService","extensionContextKey","bbCurrencyRuleKey","allocationsService","getRule","controller","routerKey","bbIntentKey","eventBusKey","Controller","run","viewModel","init","name","AllocationsController","CURRENCIES_ROUTE","ASSET_CLASSES_ROUTE","router","bbIntents","eventBus","$ctrl","unsubscribe","intents","viewAssetsInPositions","create","IntentsKeys","ASSETS_IN_POSITIONS","switchAllocations","getRoute","goto","load","currentRoute","loadCurrencies","loadAssetClasses","item","params","assetClassName","publish","$onInit","subscribe","loadPortfolioDetails","$onDestroy","Object","assign","state","getState","errors","initialState","allocations","data","additions","loading","portfolioDetails","allocationsError","route","initialLoading","stateContainer","beforeLoadAssetClasses","afterLoadAssetClassesSuccess","raw","afterLoadAssetClassesError","error","code","beforeLoadCurrencies","afterLoadCurrenciesSuccess","afterLoadCurrenciesError","beforeLoadPortfolioDetails","afterLoadPortfolioDetailsSuccess","afterLoadPortfolioDetailsError","model","getSelectedPortfolioId","then","loadPortfolioSummaryRecord","portfolioId","catch","loadAllocationClasses","loadAllocationCurrencies"],"mappings":"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","file":"widget-wm-allocations-advanced-ng/scripts/widget-wm-allocations-advanced-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lib-bb-state-container-ng\"), require(\"lib-wm-portfolio-view-model-helper\"), require(\"vendor-bb-angular\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-wm-portfolio-summary-ng\"), require(\"lib-bb-currency-ng\"), require(\"lib-wm-portfolio-router-ng\"), require(\"lib-bb-intent-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-wm-allocations-advanced-ng\", [\"lib-bb-state-container-ng\", \"lib-wm-portfolio-view-model-helper\", \"vendor-bb-angular\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\", \"model-wm-portfolio-summary-ng\", \"lib-bb-currency-ng\", \"lib-wm-portfolio-router-ng\", \"lib-bb-intent-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-wm-allocations-advanced-ng\"] = factory(require(\"lib-bb-state-container-ng\"), require(\"lib-wm-portfolio-view-model-helper\"), require(\"vendor-bb-angular\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-wm-portfolio-summary-ng\"), require(\"lib-bb-currency-ng\"), require(\"lib-wm-portfolio-router-ng\"), require(\"lib-bb-intent-ng\"));\n\telse\n\t\troot[\"widget-wm-allocations-advanced-ng\"] = factory(root[\"lib-bb-state-container-ng\"], root[\"lib-wm-portfolio-view-model-helper\"], root[\"vendor-bb-angular\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"model-wm-portfolio-summary-ng\"], root[\"lib-bb-currency-ng\"], root[\"lib-wm-portfolio-router-ng\"], root[\"lib-bb-intent-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_86__, __WEBPACK_EXTERNAL_MODULE_88__, __WEBPACK_EXTERNAL_MODULE_93__, __WEBPACK_EXTERNAL_MODULE_120__, __WEBPACK_EXTERNAL_MODULE_125__, __WEBPACK_EXTERNAL_MODULE_126__, __WEBPACK_EXTERNAL_MODULE_127__, __WEBPACK_EXTERNAL_MODULE_128__, __WEBPACK_EXTERNAL_MODULE_129__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d0309a746b17cd403690","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-wm-allocations-advanced-ng/model.xml\n// module id = 0\n// module chunks = 28","module.exports = __WEBPACK_EXTERNAL_MODULE_86__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container-ng\"\n// module id = 86\n// module chunks = 19 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_88__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-wm-portfolio-view-model-helper\"\n// module id = 88\n// module chunks = 19 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_93__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 93\n// module chunks = 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_120__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 120\n// module chunks = 27 28 35 36","/**\n * @module widget-wm-allocations-advanced-ng\n *\n * @description\n * Allocations widget.\n *\n *\n * @example\n *  <div ng-controller=\"AllocationsController as $ctrl\">\n *    <ul>\n *       <li ng-repeat=\"allocation in $ctrl.allocations\">{{allocation.id}}</li>\n *    </ul>\n *  </div>\n */\nimport angular from 'vendor-bb-angular';\nimport { extensionContextKey } from 'lib-bb-widget-extension-ng';\nimport modelPortfolioSummaryModuleKey, {\n  modelPortfolioSummaryKey,\n}\n  from 'model-wm-portfolio-summary-ng';\nimport { bbCurrencyRuleKey } from 'lib-bb-currency-ng';\nimport routerModuleKey, { routerKey } from 'lib-wm-portfolio-router-ng';\nimport stateContainerModuleKey, { bbStateContainerKey } from 'lib-bb-state-container-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport Controller from './controller';\nimport ViewModel from './view-model';\nimport AllocationsService from './service';\n\n\nconst viewModelKey = 'viewModel';\nconst allocationsServiceKey = 'allocationsService';\n\n/**\n * @name default\n * @type {string}\n * @description Angular module name\n */\nexport default angular\n  .module('widget-wm-allocations-advanced-ng', [\n    modelPortfolioSummaryModuleKey,\n    stateContainerModuleKey,\n    routerModuleKey,\n    bbIntentModuleKey,\n    eventBusModuleKey,\n  ])\n\n  .factory(viewModelKey, [bbStateContainerKey, ViewModel])\n  .factory(allocationsServiceKey, [modelPortfolioSummaryKey, viewModelKey, AllocationsService])\n  .factory(extensionContextKey, [\n    allocationsServiceKey,\n    bbCurrencyRuleKey,\n    (allocationsService, getRule) => ({ allocationsService, getRule }),\n  ])\n\n  .controller('AllocationsController', [\n    viewModelKey,\n    allocationsServiceKey,\n    routerKey,\n    bbIntentKey,\n    eventBusKey,\n    /* into */\n    Controller,\n  ])\n\n  .run([viewModelKey, viewModel => {\n    viewModel.init();\n  }])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-allocations-advanced-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_125__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 125\n// module chunks = 28 29 30 31 32 33 34 35 36","module.exports = __WEBPACK_EXTERNAL_MODULE_126__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-wm-portfolio-summary-ng\"\n// module id = 126\n// module chunks = 28 29 30 31 32 33 34 35 36 37","module.exports = __WEBPACK_EXTERNAL_MODULE_127__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-currency-ng\"\n// module id = 127\n// module chunks = 28 37","module.exports = __WEBPACK_EXTERNAL_MODULE_128__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-wm-portfolio-router-ng\"\n// module id = 128\n// module chunks = 28 29 37","module.exports = __WEBPACK_EXTERNAL_MODULE_129__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 129\n// module chunks = 28 33 34 35 36","import { IntentsKeys } from './constants';\n\nexport const CURRENCIES_ROUTE = 'currencies';\nexport const ASSET_CLASSES_ROUTE = 'asset-classes';\n\n/**\n * @name AllocationsController\n * @ngkey AllocationsController\n * @type {object}\n * @description\n * Allocations controller.\n */\nexport default function AllocationsController(\n  viewModel,\n  allocationsService,\n  router,\n  bbIntents,\n  eventBus\n) {\n  const $ctrl = this;\n  let unsubscribe;\n\n  /**\n   * @description\n   * A set of intents that Allocations controller uses or handles.\n   *\n   * @name intents\n   * @type {Object}\n   * @inner\n   */\n  const intents = {\n    viewAssetsInPositions: bbIntents.create(IntentsKeys.ASSETS_IN_POSITIONS),\n  };\n\n  /**\n   * @description\n   * Redirects widget depending on current route\n   *\n   * @public\n   * @name AllocationsController#switchAllocations\n   * @type {function}\n   */\n  const switchAllocations = () => {\n    if (router.getRoute() !== CURRENCIES_ROUTE) {\n      router.goto(CURRENCIES_ROUTE);\n    } else {\n      router.goto(ASSET_CLASSES_ROUTE);\n    }\n  };\n\n  /**\n   * @description\n   * Loads allocations currencies data or allocations asset classes\n   *  data depending on current application route\n   *\n   * @public\n   * @name AllocationsController#load\n   * @type {function}\n   * @returns {promise.<array.<Allocation>>}\n   */\n  const load = (currentRoute) => {\n    switch (currentRoute) {\n      case CURRENCIES_ROUTE:\n        return allocationsService.loadCurrencies();\n      default:\n        return allocationsService.loadAssetClasses();\n    }\n  };\n\n  /**\n   * @name viewAssetsInPositions\n   *\n   * @description\n   * Navigate to positions with selected asset class\n   *\n   * @param {object} item Asset class to open\n   * @type {function}\n   */\n  const viewAssetsInPositions = (item) => {\n    const params = { assetClassName: item.name };\n\n    // @FIXME Publish event here in order tabs container can catch it and open needed tab.\n    // Once tabs container can understand intents (in the future), we will remove this part.\n    eventBus.publish(IntentsKeys.ASSETS_IN_POSITIONS, params);\n    intents.viewAssetsInPositions(params);\n  };\n\n  /**\n   * @description\n   * Widget initialization logic.\n   * Subscribes to changing of the route.\n   * Invokes initial loading of data\n   */\n  const $onInit = () => {\n    unsubscribe = router.subscribe((currentRoute) => {\n      load(currentRoute);\n    });\n\n    allocationsService.loadPortfolioDetails();\n    return load();\n  };\n\n  const $onDestroy = () => unsubscribe();\n\n  Object.assign($ctrl, {\n    load,\n    switchAllocations,\n    viewAssetsInPositions,\n    $onInit,\n    $onDestroy,\n  });\n\n  return Object.assign(\n    {\n      get state() {\n        return viewModel.getState();\n      },\n      get errors() {\n        return viewModel.getState().errors;\n      },\n    },\n    $ctrl\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-allocations-advanced-ng/scripts/controller.js","/**\n * @description\n * Widget intents to be handled\n *\n * @name IntentsKeys\n * @type {object}\n */\n// eslint-disable-next-line import/prefer-default-export\nexport const IntentsKeys = {\n  ASSETS_IN_POSITIONS: 'view.portfolio.positions.assets',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-allocations-advanced-ng/scripts/constants.js","import { wrapActions } from 'lib-wm-portfolio-view-model-helper';\n\n/**\n * @name initialState\n * @description Initial state of widgets store\n * @type {object}\n * @property {Object} allocations Allocations data\n * @property {object} portfolioDetails an object of portfolio details\n * @property {errors} errors Errors model\n * @property {boolean} initialLoading Boolean flag of initial loading\n * @property {object} route Router model\n */\nconst initialState = {\n  allocations: {\n    data: {\n      allocations: [],\n      additions: {},\n    },\n    loading: false,\n  },\n  portfolioDetails: {\n    data: null,\n    loading: false,\n  },\n  errors: {\n    allocationsError: null,\n  },\n  route: {\n    name: 'asset-classes',\n    params: {},\n  },\n  initialLoading: true,\n};\n\nexport default (stateContainer) => ({\n  getState: stateContainer.getState,\n  ...wrapActions(stateContainer, {\n    init: (state = initialState) => state,\n    beforeLoadAssetClasses: () => ({\n      allocations: {\n        loading: true,\n      },\n    }),\n    afterLoadAssetClassesSuccess: (state, raw) => ({\n      initialLoading: false,\n      allocations: {\n        loading: false,\n        data: raw.data,\n      },\n      errors: {\n        allocationsError: null,\n      },\n    }),\n    afterLoadAssetClassesError: (state, error) => ({\n      initialLoading: false,\n      allocations: {\n        loading: false,\n        data: [],\n      },\n      errors: {\n        allocationsError: error.code,\n      },\n    }),\n    beforeLoadCurrencies: () => ({\n      allocations: {\n        loading: true,\n      },\n    }),\n    afterLoadCurrenciesSuccess: (state, raw) => ({\n      initialLoading: false,\n      allocations: {\n        loading: false,\n        data: raw.data,\n      },\n      errors: {\n        allocationsError: null,\n      },\n    }),\n    afterLoadCurrenciesError: (state, error) => ({\n      initialLoading: false,\n      allocations: {\n        loading: false,\n        data: [],\n      },\n      errors: {\n        allocationsError: error.code,\n      },\n    }),\n    beforeLoadPortfolioDetails: () => ({\n      portfolioDetails: {\n        loading: true,\n      },\n    }),\n    afterLoadPortfolioDetailsSuccess: (state, raw) => ({\n      portfolioDetails: {\n        loading: false,\n        data: raw.data,\n      },\n      errors: {\n        allocationsError: null,\n      },\n    }),\n    afterLoadPortfolioDetailsError: (state, error) => ({\n      portfolioDetails: {\n        loading: false,\n        data: null,\n      },\n      errors: {\n        allocationsError: error.code,\n      },\n    }),\n  }),\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-allocations-advanced-ng/scripts/view-model.js","export default (model, viewModel) => ({\n  /**\n   * @description\n   * Handles loading of portfolio details\n   *\n   * @public\n   * @name loadPortfolioDetails\n   * @type {function}\n   * @returns {promise.<array>}\n   */\n  loadPortfolioDetails: () => {\n    viewModel.beforeLoadPortfolioDetails();\n    return model.getSelectedPortfolioId()\n      .then(portfolioId => model.loadPortfolioSummaryRecord(portfolioId))\n      .then(viewModel.afterLoadPortfolioDetailsSuccess)\n      .catch(viewModel.afterLoadPortfolioDetailsError);\n  },\n\n  /**\n   * @description\n   * Initial state of porfolio details store\n   *\n   * @public\n   * @name AllocationsController#loadAssetClasses\n   * @type {function}\n   * Load allocations\n   * @returns {promise.<array>}\n   */\n  loadAssetClasses: () => {\n    viewModel.beforeLoadAssetClasses();\n\n    return model.getSelectedPortfolioId()\n      .then(model.loadAllocationClasses)\n      .then(viewModel.afterLoadAssetClassesSuccess)\n      .catch((error) => {\n        viewModel.afterLoadAssetClassesError(error);\n        throw error;\n      });\n  },\n\n  /**\n   * @description\n   * Handles loading allocations currencies data\n   *\n   * @public\n   * @name AllocationsController#loadCurrencies\n   * @type {function}\n   * Load allocations\n   * @returns {promise.<array>}\n   */\n  loadCurrencies: () => {\n    viewModel.beforeLoadCurrencies();\n\n    return model.getSelectedPortfolioId()\n      .then(model.loadAllocationCurrencies)\n      .then(viewModel.afterLoadCurrenciesSuccess)\n      .catch(viewModel.afterLoadCurrenciesError);\n  },\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./widget-wm-allocations-advanced-ng/scripts/service.js"],"sourceRoot":""}