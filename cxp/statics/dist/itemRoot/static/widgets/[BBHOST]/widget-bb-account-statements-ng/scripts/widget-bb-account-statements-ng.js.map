{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*****","webpack:///webpack/bootstrap 336d4234ba418df68efe?1e5a*****","webpack:///./widget-bb-account-statements-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114***","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./widget-bb-account-statements-ng/scripts/index.js","webpack:///external \"lib-bb-widget-ng\"","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"model-bb-account-statements-ng\"","webpack:///./widget-bb-account-statements-ng/scripts/controller.js","webpack:///./widget-bb-account-statements-ng/scripts/constants.js","webpack:///./widget-bb-account-statements-ng/scripts/default-hooks.js"],"names":["defaultHooks","moduleKey","hooksKey","module","factory","controller","run","bus","widget","publish","id","getId","name","AccountStatementsController","ErrorMessage","ERROR_AUTH","ERROR_CONNECTION","ERROR_UNEXPECTED","ERROR_USER","E_PREFERENCE","ERROR_PREFERENCE","uiError","modelError","data","error","code","message","DEFAULT_PAGE_SIZE","DEFAULT_MAX_NAV_PAGES","DEFAULT_DISMISS_MESSAGE_TIME","DEFAULT_MULTI_CATEGORY","DEFAULT_SHOW_CATEGORY","DEFAULT_SHOW_DESCRIPTION","DEFAULT_MULTISELECT","DEFAULT_RELATIVE_DATE","hooks","model","$ctrl","initialError","validAbsNumberPreference","key","value","getLongPreference","pageSize","PAGE_SIZE","maxNavPages","MAX_NAV_PAGES","dismissMessageTime","DISMISS_MESSAGE_TIME","accountsPageSize","ACCOUNT_PAGE_SIZE","multiCategoryPreference","getBooleanPreference","FILTER_MULTI_CATEGORY","multiSelectPreference","MULTISELECT","showCategoryPreference","SHOW_CATEGORIES","showDescriptionPreference","SHOW_DESCRIPTION","dateRelativePreference","DATE_RELATIVE","dateAbsolutePreference","getStringPreference","DATE_ABSOLUTE","isMultiCategory","undefined","isMultiSelect","showCategory","showDescription","accountStatements","rawItems","params","orderBy","defaultSortableColumn","direction","defaultSortableDirection","from","size","accountId","category","dateFrom","dateTo","accounts","query","state","categories","selected","totalItems","loading","notifications","currentPage","downloading","initialLoading","selectedStatements","selectAll","indeterminate","datePickerConfig","maxDate","minDate","load","replace","requestParams","Object","assign","then","raw","concat","totalCount","processAccountStatements","catch","loadAccounts","processAccounts","loadCategories","getCategories","result","updateAccounts","options","isLoadMore","searchQuery","onPageChange","onSort","toggleStatementCheckInOut","stm","statements","uid","statementId","indexOf","currentStatement","filter","statement","splice","isChecked","push","length","toggleSelectAll","i","onFilter","onAccountSelect","setupSelectedAccount","getSelectedAccountId","find","item","getDownloadUrl","getStatementUrl","bindEvents","subscribe","NOTIFICATION_EVENT","notification","ACCOUNT_SELECTED","product","updateDatepickerConfig","Date","dateSplitRegex","split","year","month","day","parseInt","getFullYear","getMonth","getDate","$onInit","onUpdate","BB_ITEM_LOADED","ErrorKeys","MessageKey","Event","DOWNLOAD_FAIL","DOWNLOAD_SUCCESS","Preference","processSelectedAccount","account"],"mappings":"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","file":"widget-bb-account-statements-ng/scripts/widget-bb-account-statements-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-account-statements-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-account-statements-ng\", [\"vendor-bb-angular\", \"lib-bb-model-errors\", \"lib-bb-widget-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\", \"model-bb-account-statements-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-account-statements-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-account-statements-ng\"));\n\telse\n\t\troot[\"widget-bb-account-statements-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"model-bb-account-statements-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_25__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_43__, __WEBPACK_EXTERNAL_MODULE_44__, __WEBPACK_EXTERNAL_MODULE_45__, __WEBPACK_EXTERNAL_MODULE_46__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 336d4234ba418df68efe","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-account-statements-ng/model.xml\n// module id = 0\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_25__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 25\n// module chunks = 2 3 4 5 6","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 30\n// module chunks = 2 6","/**\n * @module widget-bb-account-statements-ng\n *\n * @description\n * Account statements widget\n */\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport extendHooks from 'lib-bb-widget-extension-ng';\n\nimport modelAccountStatementsModuleKey, {\n  modelAccountStatementsKey,\n} from 'model-bb-account-statements-ng';\n\nimport Controller from './controller';\n\nimport * as defaultHooks from './default-hooks';\n\nconst moduleKey = 'widget-bb-account-statements-ng';\nconst hooksKey = `${moduleKey}:hooks`;\n\nexport default angular\n  .module(moduleKey, [\n    widgetModuleKey,\n    eventBusModuleKey,\n    modelAccountStatementsModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('AccountStatementsController', [\n    // dependencies to inject\n    eventBusKey,\n    hooksKey,\n    modelAccountStatementsKey,\n    widgetKey,\n    /* into */\n    Controller,\n  ])\n\n  .run([eventBusKey, widgetKey, (bus, widget) => {\n    bus.publish('cxp.item.loaded', {\n      id: widget.getId(),\n    });\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-account-statements-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 43\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_44__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 44\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 45\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_46__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-account-statements-ng\"\n// module id = 46\n// module chunks = 6","import { E_AUTH, E_USER, E_CONNECTIVITY, E_UNEXPECTED } from 'lib-bb-model-errors';\nimport { MessageKey, Event, Preference, ErrorKeys } from './constants';\n\nconst ErrorMessage = {\n  [E_AUTH]: MessageKey.ERROR_AUTH,\n  [E_CONNECTIVITY]: MessageKey.ERROR_CONNECTION,\n  [E_UNEXPECTED]: MessageKey.ERROR_UNEXPECTED,\n  [E_USER]: MessageKey.ERROR_USER,\n  [ErrorKeys.E_PREFERENCE]: MessageKey.ERROR_PREFERENCE,\n};\n\n/**\n * @description\n * Creates an error object for template\n *\n * @name uiError\n *\n * @inner\n * @param {Object} modelError Error object\n * @param {Object} data In case the message has dynamic replacement \"{some}\"\n * @type {Function}\n * @returns {{message: string}}\n */\nconst uiError = (modelError, data = {}) => {\n  let error = '';\n\n  if (modelError && modelError.code) {\n    error = ErrorMessage[modelError.code];\n  }\n\n  return {\n    message: error,\n    data,\n  };\n};\n\n/**\n * Defines the default pageSize for the statements page\n * as defined in the widget model.xml\n * @name DEFAULT_PAGE_SIZE\n * @type {number}\n */\nconst DEFAULT_PAGE_SIZE = 24;\n\n/**\n * Defines the default maxNavPages for the statements page\n * as defined in the widget model.xml\n * @name DEFAULT_MAX_NAV_PAGES\n * @type {int}\n */\nconst DEFAULT_MAX_NAV_PAGES = 3;\n\n/**\n * Defines the default dismissMessageTime for the statements widget\n * as defined in the widget model.xml\n * @name DEFAULT_DISMISS_MESSAGE_TIME\n * @type {int}\n */\nconst DEFAULT_DISMISS_MESSAGE_TIME = 3;\n\n/**\n * Defines the category filter will be multiple or single selection\n * @name DEFAULT_MULTI_CATEGORY\n * @type {boolean}\n */\nconst DEFAULT_MULTI_CATEGORY = true;\n\n/**\n * Defines show/hide category filter and column\n * @name DEFAULT_SHOW_CATEGORY\n * @type {boolean}\n */\nconst DEFAULT_SHOW_CATEGORY = true;\n\n/**\n * Defines show/hide description column\n * @name DEFAULT_SHOW_DESCRIPTION\n * @type {boolean}\n */\nconst DEFAULT_SHOW_DESCRIPTION = true;\n\n/**\n * Defines account statements will be multiple select or not\n * @name DEFAULT_MULTISELECT\n * @type {boolean}\n */\nconst DEFAULT_MULTISELECT = false;\n\n/**\n * Defines the default relative date to be used in the widget filter\n * @name DEFAULT_RELATIVE_DATE\n * @type {number}\n */\nconst DEFAULT_RELATIVE_DATE = 24;\n\nexport default function AccountStatementsController(bus, hooks, model, widget) {\n  /**\n   * @name AccountStatementsController\n   * @ngkey AccountStatementsController\n   *\n   * @description\n   * Account statements controller.\n   *\n   * @type {Object}\n   */\n  const $ctrl = this;\n\n  /**\n   * @name AccountStatementsController#state#initialError\n   * @description\n   * When something went wrong, this variable should be filled with\n   * the return of uiError fn\n   * @type {boolean | Object}\n   */\n  let initialError = false;\n\n  /**\n   * @name AccountStatementsController#validAbsNumberPreference\n   * @description\n   * Get a number preference and returns it if it is more than 0\n   *\n   * @inner\n   * @type {Function}\n   * @param {string} key the name/key of the preference\n   * @return {number} the value\n   */\n  const validAbsNumberPreference = (key) => {\n    const value = widget.getLongPreference(key);\n\n    if (!value || value < 0) {\n      initialError = uiError(\n        { code: ErrorKeys.E_PREFERENCE },\n        { key, value }\n      );\n    }\n\n    return value;\n  };\n\n  const pageSize = validAbsNumberPreference(Preference.PAGE_SIZE) || DEFAULT_PAGE_SIZE;\n  const maxNavPages = validAbsNumberPreference(Preference.MAX_NAV_PAGES) || DEFAULT_MAX_NAV_PAGES;\n  const dismissMessageTime =\n    validAbsNumberPreference(Preference.DISMISS_MESSAGE_TIME) || DEFAULT_DISMISS_MESSAGE_TIME;\n  const accountsPageSize =\n    validAbsNumberPreference(Preference.ACCOUNT_PAGE_SIZE) || DEFAULT_PAGE_SIZE;\n  const multiCategoryPreference = widget.getBooleanPreference(Preference.FILTER_MULTI_CATEGORY);\n  const multiSelectPreference = widget.getBooleanPreference(Preference.MULTISELECT);\n  const showCategoryPreference = widget.getBooleanPreference(Preference.SHOW_CATEGORIES);\n  const showDescriptionPreference = widget.getBooleanPreference(Preference.SHOW_DESCRIPTION);\n  const dateRelativePreference =\n    widget.getLongPreference(Preference.DATE_RELATIVE) || DEFAULT_RELATIVE_DATE;\n  const dateAbsolutePreference = widget.getStringPreference(Preference.DATE_ABSOLUTE) || '';\n\n  const isMultiCategory = multiCategoryPreference !== undefined ?\n                                  multiCategoryPreference : DEFAULT_MULTI_CATEGORY;\n  const isMultiSelect = multiSelectPreference !== undefined ?\n                                  multiSelectPreference : DEFAULT_MULTISELECT;\n\n  const showCategory = showCategoryPreference !== undefined ?\n                                  showCategoryPreference : DEFAULT_SHOW_CATEGORY;\n  const showDescription = showDescriptionPreference !== undefined ?\n                                  showDescriptionPreference : DEFAULT_SHOW_DESCRIPTION;\n\n  const accountStatements = {\n    rawItems: [],\n    params: {\n      orderBy: hooks.defaultSortableColumn(),\n      direction: hooks.defaultSortableDirection(),\n      from: 0,\n      size: pageSize,\n      accountId: null,\n      category: [],\n      dateFrom: null,\n      dateTo: null,\n    },\n  };\n\n  const accounts = {\n    rawItems: [],\n    params: {\n      from: 0,\n      size: accountsPageSize,\n      query: '',\n    },\n  };\n\n  const state = {\n    category: {\n      categories: [],\n      isMultiCategory,\n    },\n    accounts: {\n      data: [],\n      selected: null,\n      totalItems: 0,\n      loading: false,\n      error: null,\n    },\n    notifications: [],\n    accountStatements: {\n      data: [],\n      get orderBy() { return accountStatements.params.orderBy; },\n      get direction() { return accountStatements.params.direction; },\n      currentPage: 1,\n      get pageSize() { return accountStatements.params.size; },\n      totalItems: 0,\n      maxNavPages,\n      loading: false,\n      downloading: false,\n      error: null,\n      isMultiSelect,\n    },\n    initialError,\n    initialLoading: true,\n    selectedStatements: [],\n    selectAll: false,\n    indeterminate: false,\n    showCategory,\n    showDescription,\n    datePickerConfig: {\n      maxDate: null,\n      minDate: null,\n    },\n  };\n\n  /**\n   * @name AccountStatementsController#load\n   *\n   * @description\n   * Loading available account statements\n   *\n   * @inner\n   * @type {Function}\n   * @param {Object} params The request parameters object\n   * @param {Boolean} replace Watherer or not should replace previous account statements\n   * @return {Promise.<loadResponce, module:lib-bb-model-errors.ModelError>} A Promise with\n   *   available account statements\n   */\n  const load = (params = {}, replace = true) => {\n    const requestParams = Object.assign({}, accountStatements.params, params);\n    state.accountStatements.loading = true;\n\n    return model.load(requestParams)\n      .then((raw) => {\n        accountStatements.rawItems = (replace ? [] : accountStatements.rawItems).concat(raw.data);\n        state.accountStatements.totalItems = raw.totalCount || 0;\n        state.accountStatements.currentPage = requestParams.from + 1;\n        state.accountStatements.data = hooks.processAccountStatements(accountStatements.rawItems);\n      })\n      .then(() => {\n        Object.assign(accountStatements.params, requestParams);\n        state.accountStatements.loading = false;\n      })\n      .catch((error) => {\n        state.accountStatements.error = uiError(error);\n        state.accountStatements.loading = false;\n\n        throw error;\n      });\n  };\n\n  /**\n   * @name AccountStatementsController#load\n   *\n   * @description\n   * Get accounts.\n   *\n   * @inner\n   * @type {Function}\n   * @param {Object} params The request parameters object\n   * @param {Boolean} replace Watherer or not should replace previous accounts\n   * @return {Promise.<loadAccountsResponce, module:lib-bb-model-errors.ModelError>} A Promise with\n   *   available accounts\n   */\n  const loadAccounts = (params = {}, replace = true) => {\n    const requestParams = Object.assign({}, accounts.params, params);\n    state.accounts.loading = true;\n\n    return model.loadAccounts(requestParams)\n      .then((raw) => {\n        accounts.rawItems = (replace ? [] : accounts.rawItems).concat(raw.data);\n        state.accounts.totalItems = raw.totalCount || 0;\n        state.accounts.data = hooks.processAccounts(accounts.rawItems);\n      })\n      .then(() => {\n        Object.assign(accounts.params, requestParams);\n        state.accounts.loading = false;\n      })\n      .catch(error => {\n        state.accounts.error = uiError(error);\n        state.accounts.loading = false;\n\n        throw error;\n      });\n  };\n\n  /**\n   * @name AccountStatementsController#loadCategories\n   *\n   * @description\n   * Load categories from model.\n   *\n   * @type {Function}\n   * @param {Object} params The request parameters object\n   *\n   */\n  const loadCategories = (params = {}) => {\n    model.getCategories(params)\n      .then(result => {\n        state.category.categories = result.data.categories;\n      }).catch(error => {\n        throw error;\n      });\n  };\n\n  /**\n   * @name AccountStatementsController#updateAccounts\n   *\n   * @description\n   * Loads accounts depending on options.\n   *\n   * @type {Function}\n   * @param {?Object} options Optional object with loading params\n   */\n  const updateAccounts = (options = {}) => {\n    loadAccounts({\n      from: options.isLoadMore ? accounts.params.from + 1 : 0,\n      query: options.searchQuery || '',\n    }, !options.isLoadMore);\n  };\n\n  /**\n   * @name AccountStatementsController#onPageChange\n   *\n   * @description\n   * Change page of displayed accounts.\n   *\n   * @type {Function}\n   * @param {Object} params The request parameters object\n   * @param {Number} params.currentPage Current page number\n   */\n  const onPageChange = ({ currentPage }) => {\n    load({ from: currentPage - 1 });\n  };\n\n  /**\n   * @name AccountStatementsController#onSort\n   *\n   * @description\n   * Loads sorted list of account statements\n   *\n   * @type {Function}\n   * @param {string} orderBy Column key to sort\n   * @param {string} direction Sort direction\n   */\n  const onSort = (orderBy, direction) => {\n    load({ orderBy, direction });\n  };\n\n  /**\n   * @name AccountStatementsController#toggleStatementCheckInOut\n   *\n   * @description\n   * Functionality to checkin and checkout the statements in multiselect\n   *\n   * @param {object} stm\n   * @type {function}\n   * @returns {void}\n   */\n  const toggleStatementCheckInOut = (stm) => {\n    const id = stm.statements[0].uid;\n    const statementId = state.selectedStatements.indexOf(id);\n    const currentStatement = state.accountStatements.data\n      .filter(statement => statement.statements[0].uid);\n\n    if (statementId > -1) {\n      state.selectedStatements.splice(statementId, 1);\n      currentStatement.isChecked = false;\n    } else {\n      state.selectedStatements.push(id);\n      currentStatement.isChecked = true;\n    }\n\n    // changing the state of the select all checkbox between checked, unchecked, and indeterminate\n    if (state.selectedStatements.length === 0) {\n      state.selectAll = false;\n      state.indeterminate = false;\n    } else if (state.selectedStatements.length === state.accountStatements.data.length) {\n      state.selectAll = true;\n      state.indeterminate = false;\n    } else if (state.selectedStatements.length < state.accountStatements.data.length) {\n      state.selectAll = false;\n      state.indeterminate = true;\n    }\n  };\n\n  /**\n   * @name AccountStatementsController#toggleSelectAll\n   *\n   * @description\n   * Functionality to select all statements in the list\n   *\n   * @type {function}\n   * @returns {void}\n   */\n  const toggleSelectAll = () => {\n    const statements = state.accountStatements.data;\n    if (state.selectedStatements.length === statements.length) {\n      state.selectedStatements.splice(0, state.selectedStatements.length);\n      for (let i = 0; i < statements.length; i++) {\n        statements[i].isChecked = false;\n      }\n    } else {\n      state.selectedStatements.splice(0, state.selectedStatements.length);\n      for (let i = 0; i < statements.length; i++) {\n        state.selectedStatements.push(statements[i].statements[0].uid);\n        statements[i].isChecked = true;\n      }\n    }\n    state.indeterminate = false;\n  };\n\n  /**\n   * @description\n   * Filter account statements.\n   *\n   * @name AccountStatementsController#onFilter\n   * @type {function}\n   * @param {Object} params Filter params\n   */\n  const onFilter = (params = {}) => {\n    load({ from: 0, ...params });\n  };\n\n  /**\n   * @description\n   * Handles selection of account\n   *\n   * @name AccountStatementsController#onAccountSelect\n   * @type {Function}\n   */\n  const onAccountSelect = () => {\n    onFilter({ accountId: state.accounts.selected ? state.accounts.selected.id : null });\n  };\n\n  /**\n   * @description\n   * Sets selected account\n   *\n   * @inner\n   * @name AccountStatementsController#setupSelectedAccount\n   * @returns {promise.<object>}\n   */\n  const setupSelectedAccount = () => loadAccounts()\n    .then(model.getSelectedAccountId)\n    .then((accountId) => {\n      state.accounts.selected = {\n        ...(state.accounts.data.find((item) => item.id === accountId) || state.accounts.data[0]),\n      };\n    })\n    .then(onAccountSelect)\n    .then(loadCategories);\n\n  /**\n   * @name AccountStatementsController#getDownloadUrl\n   *\n   * @description\n   * Retrive the download url from the model module.\n   *\n   * @type {Function}\n   * @param {string} uid the statement id\n   * @returns {string} the download url\n   */\n  const getDownloadUrl = (uid) => model.getStatementUrl(uid);\n\n  /**\n   * @name AccountStatementsController#bindEvents\n   *\n   * @description\n   * Adds subscriptions to bus events\n   *\n   * @inner\n   * @type {Function}\n   */\n  const bindEvents = () => {\n    bus.subscribe(Event.NOTIFICATION_EVENT, (notification) => {\n      state.notifications.push(notification);\n    });\n    bus.subscribe(Event.ACCOUNT_SELECTED, ({ product }) => {\n      state.accounts.selected = product ? { ...product } : null;\n      onAccountSelect();\n    });\n  };\n\n  /**\n   * @name AccountStatementsController#updateDatepickerConfig\n   *\n   * @description\n   * Updates the datePicker configuration object based on preferences set\n   *\n   * @inner\n   * @type {Function}\n   */\n  const updateDatepickerConfig = () => {\n    const maxDate = new Date();\n    const dateSplitRegex = /[./-]/;\n    const [year, month, day] = dateAbsolutePreference.split(dateSplitRegex);\n    const minDate = dateAbsolutePreference\n      ? new Date(parseInt(year, 10), parseInt(month, 10) - 1, parseInt(day, 10))\n      : new Date(\n          maxDate.getFullYear(),\n          maxDate.getMonth() - dateRelativePreference,\n          maxDate.getDate()\n        );\n    state.datePickerConfig = Object.assign(state.datePickerConfig, { minDate, maxDate });\n  };\n\n  /**\n   * @name AccountStatementsController#$onInit\n   *\n   * @description\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @type {Function}\n   * @returns {Promise.<loadAccountsResponce, module:lib-bb-model-errors.ModelError>}\n   * A Promise with available account statements\n   */\n  const $onInit = () => {\n    updateDatepickerConfig();\n    widget.onUpdate(updateDatepickerConfig);\n    return setupSelectedAccount()\n    .then(bindEvents)\n    .then(() => {\n      bus.publish(Event.BB_ITEM_LOADED, {\n        id: widget.getId(),\n      });\n    })\n    .then(() => {\n      state.initialLoading = false;\n    })\n    .catch((error) => {\n      state.initialError = uiError(error);\n      state.initialLoading = false;\n    });\n  };\n\n  Object.assign($ctrl, {\n    state,\n    dismissMessageTime,\n    $onInit,\n    onSort,\n    onPageChange,\n    onFilter,\n    updateAccounts,\n    onAccountSelect,\n    toggleSelectAll,\n    toggleStatementCheckInOut,\n    getDownloadUrl,\n  });\n}\n\n/**\n * @typedef {Object} loadResponce\n * @property {module:data-bb-account-statements-ng.AccountStatementsData.AccountStatement[]} data\n *   array of Account statements\n * @property {?Number} totalCount total count of account statements if needed\n */\n\n/**\n * @typedef {Object} loadAccountsResponce\n * @property {module:data-bb-product-summary-ng.ProductSummaryData.ProductsummaryItem[]} data\n *   array of Account statements\n * @property {?Number} totalCount total count of account statements if needed\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-account-statements-ng/scripts/controller.js","/**\n * @description\n * Custom error keys for widget static error messages\n *\n * @name ErrorKeys\n * @enum {string}\n */\nexport const ErrorKeys = {\n  E_PREFERENCE: 'E_PREFERENCE',\n};\n\n/**\n * @description\n * Widget static messages for the template\n *\n * @name MessageKey\n * @enum {string}\n */\nexport const MessageKey = {\n  ERROR_AUTH: 'message.error.auth',\n  ERROR_CONNECTION: 'message.error.connection',\n  ERROR_UNEXPECTED: 'message.error.unexpected',\n  ERROR_USER: 'message.error.user',\n  ERROR_PREFERENCE: 'message.error.preference',\n};\n\n/**\n * @description\n * Widget events enum\n *\n * @name Event\n * @enum {string}\n */\nexport const Event = {\n  DOWNLOAD_FAIL: 'bb.event.account.statement.download.fail',\n  DOWNLOAD_SUCCESS: 'bb.event.account.statement.download.success',\n  NOTIFICATION_EVENT: 'bb.event.notifications.notify',\n  ACCOUNT_SELECTED: 'bb.event.product.selected',\n  BB_ITEM_LOADED: 'bb.item.loaded',\n};\n\n/**\n * Widget preferences enum\n *\n * @name Preference\n * @enum {string}\n */\nexport const Preference = {\n  PAGE_SIZE: 'bb.accountStatement.pageSize',\n  ACCOUNT_PAGE_SIZE: 'bb.accountStatement.account.pageSize',\n  MAX_NAV_PAGES: 'bb.accountStatement.maxNavPages',\n  DISMISS_MESSAGE_TIME: 'bb.accountStatement.dismissMessageTime',\n  FILTER_MULTI_CATEGORY: 'bb.accountStatement.filter.multiCategory',\n  MULTISELECT: 'bb.accountStatement.multiSelect',\n  SHOW_CATEGORIES: 'bb.accountStatement.showCategory',\n  SHOW_DESCRIPTION: 'bb.accountStatement.showDescription',\n  DATE_RELATIVE: 'bb.accountStatement.dateRelative',\n  DATE_ABSOLUTE: 'bb.accountStatement.dateAbsolute',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-account-statements-ng/scripts/constants.js","/**\n * @name DefaultHooks\n *\n * @description\n * Default for widget-bb-account-statements-ng\n *\n * @type {Object}\n */\n\n/**\n * @name DefaultHooks#processAccountStatements\n * @type {Function}\n *\n * @description\n * Hook for processing account statements\n *\n * @param {Array} accountStatements Array of account statements to process\n * @returns {Array} Processed account statements\n */\nexport const processAccountStatements = (accountStatements) => accountStatements;\n\n/**\n * @name DefaultHooks#processAccounts\n * @type {Function}\n *\n * @description\n * processSelectedAccount default hook\n *\n * @param {Array} accounts Array of accounts to process\n * @returns {Array} Processed account\n */\nexport const processAccounts = (accounts) => accounts;\n\n/**\n * @name DefaultHooks#processSelectedAccount\n * @type {Function}\n *\n * @description\n * Hook for processing selected account.\n *\n * @param {module:data-bb-product-summary-http-ng.ProductSummaryData.ProductsummaryItem} account\n *   Account to process\n * @returns {module:data-bb-product-summary-http-ng.ProductSummaryData.ProductsummaryItem}\n *   Processed account\n */\nexport const processSelectedAccount = account => account;\n\n/**\n * @name DefaultHooks#defaultSortableColumn\n *\n * @description\n * defaultSortableColumn default hook\n *\n * @type {Function}\n * @returns {?String} Sortable column\n */\nexport const defaultSortableColumn = () => null;\n\n/**\n * @name DefaultHooks#defaultSortableDirection\n *\n * @description\n * defaultSortableDirection default hook\n *\n * @type {Function}\n * @returns {?String}\n */\nexport const defaultSortableDirection = () => null;\n\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-account-statements-ng/scripts/default-hooks.js"],"sourceRoot":""}