{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6********","webpack:///webpack/bootstrap f3d2485eec67eb2fdf62?1eb6********","webpack:///./widget-bb-billpay-manage-payee-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/index.js","webpack:///external \"lib-bb-widget-ng\"","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///external \"lib-bb-state-container-ng\"","webpack:///external \"lib-bb-storage-ng\"","webpack:///external \"lib-bb-extension-helpers-ng\"","webpack:///external \"model-bb-billpay-ng\"","webpack:///external \"lib-bb-billpay-errors\"","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/manage.controller.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/constants.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/edit-payee-manual.controller.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/edit-payee-electronic.controller.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/create-payee-search.controller.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/create-payee-manual.controller.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/create-payee-electronic.controller.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/service.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/view-model/index.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/view-model/create.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/view-model/update.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/view-model/get.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/view-model/manage.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/view-model/remove.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/view-model/initial-state.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/router.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/default-hooks.js","webpack:///./widget-bb-billpay-manage-payee-ng/scripts/events.js"],"names":["moduleKey","hooksKey","serviceKey","viewModelKey","eventServiceKey","routerKey","errorHelperUtilitiesKey","errorHookUtilitiesKey","angular","module","widgetModuleKey","eventBusModuleKey","bbExtensionHelpersModuleKey","modelBillpayModuleKey","stateContainerModuleKey","bbIntentModuleKey","bbStorageModuleKey","factory","eventBusKey","widgetEvents","defaultHooks","modelBillpayKey","widgetKey","bbIntentKey","Service","bbStateContainerKey","Router","ErrorHelperUtilities","ErrorHookUtilities","ViewModel","extensionHelpersContextKey","viewModel","service","bbIntent","state","router","errorHelperUtilities","controller","bbStorageServiceKey","Controller","CreatePayeeSearchController","CreatePayeeManualController","CreatePayeeElectronicController","EditPayeeManualController","EditPayeeElectronicController","run","init","name","BillpayManagePayeeController","bus","widget","stateContainer","payeeService","bbStorage","manage","$ctrl","viewBillpaySummaryIntent","createSingleBillIntent","create","createRecurringBillIntent","goToDefaultState","getItem","STORAGE_PAYEE_EDIT_DATA","then","data","JSON","parse","id","electronic","editRoute","goto","$onInit","publish","getId","handle","removeItem","setItem","stringify","initHandler","callCreateRecurringBillIntent","isEditRoute","createdPayee","callCreateSingleBillIntent","callViewBillpaySummaryIntent","payee","searchPayees","catch","goToCreateNewPayee","resetForm","showDeleteModal","payeeId","getPendingPayments","payeeID","status","toggleDeleteModal","resetDeleteModal","deletePendingPayments","undefined","exitManagePayee","Object","assign","BillpayEditPayeeManualController","cloneState","phoneNumber","address","accountNumber","nickName","newState","modifyPendingPayments","transformPayeeDataForPut","address1","address2","city","postalCode","trim","length","getParams","getPayeeRecord","getState","submitPayeeDataForm","isFormValid","putPayeesRecord","removePayee","successMessage","cancelPendingPayments","removePayeeRecord","notification","message","BillpayEditPayeeElectronicController","stateData","getPayeesElectronicRecord","putPayeesElectronicRecord","removePayeeElectronicRecord","BillpayCreatePayeeSearchController","getPayees","options","searchQuery","totalItems","selectPayee","afterPayeeElectronicSelected","goToCreatePayeeManual","BillpayCreatePayeeManualController","transformPayeeDataForPost","postPayeesRecord","goToCreatePayeeSearch","BillpayCreatePayeeElectronicController","clearForm","merchantZipCode","merchantID","postPayeesElectronicRecord","clearErrorMap","ManagePayeeService","model","events","update","get","remove","beforeCreatePayee","afterCreatePayeeSuccess","error","afterCreatePayeeError","beforeUpdatePayee","afterUpdatePayeeSuccess","afterUpdatePayeeError","beforeSearchPayees","afterSearchPayeesSuccess","afterSearchPayeesError","beforeGetPayeeRecord","afterGetPayeeRecordSuccess","afterGetPayeeRecordError","params","beforeGetPendingPayments","getPayments","payments","afterGetPendingPaymentsSuccess","afterGetPendingPaymentsError","getCurrencyCode","getStringPreference","route","getRoute","includes","beforeRemovePayeeRecord","deletePayeesRecord","afterRemovePayeeRecordSuccess","afterRemovePayeeRecordError","deletePayeesElectronicRecord","hooks","errorHookUtilities","createAction","current","Create","isCreatingPayee","successMessageViewed","errorMap","transformPayee","thisError","transformErrorMap","getErrorMap","errors","Update","isUpdatingPayee","updatedPayee","Get","filterPendingStatusPayments","payment","isGettingPayee","afterPayeeSelected","isLoadingPaymentsForPayee","pendingPayments","filteredPendingPayments","filter","transformPendingPayments","afterRemovePayeeError","Manage","isLoadingPayees","payees","clearBackendError","inputName","Remove","isRemovingPayee","subscribers","setRoute","notifySubscribers","forEach","subscriber","createSelector","subscribe","callback","sub","identity","any","Events","BEFORE_CREATE_PAYEE_RECORD","AFTER_CREATE_PAYEE_RECORD","AFTER_CREATE_PAYEE_RECORD_ERROR","BEFORE_UPDATE_PAYEE_RECORD","AFTER_UPDATE_PAYEE_RECORD","AFTER_UPDATE_PAYEE_RECORD_ERROR","BEFORE_SEARCH_PAYEES","AFTER_SEARCH_PAYEES","AFTER_SEARCH_PAYEES_ERROR"],"mappings":"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","file":"widget-bb-billpay-manage-payee-ng/scripts/widget-bb-billpay-manage-payee-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-state-container-ng\"), require(\"lib-bb-storage-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"model-bb-billpay-ng\"), require(\"lib-bb-billpay-errors\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-billpay-manage-payee-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\", \"lib-bb-intent-ng\", \"lib-bb-state-container-ng\", \"lib-bb-storage-ng\", \"lib-bb-extension-helpers-ng\", \"model-bb-billpay-ng\", \"lib-bb-billpay-errors\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-billpay-manage-payee-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-state-container-ng\"), require(\"lib-bb-storage-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"model-bb-billpay-ng\"), require(\"lib-bb-billpay-errors\"));\n\telse\n\t\troot[\"widget-bb-billpay-manage-payee-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-state-container-ng\"], root[\"lib-bb-storage-ng\"], root[\"lib-bb-extension-helpers-ng\"], root[\"model-bb-billpay-ng\"], root[\"lib-bb-billpay-errors\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_47__, __WEBPACK_EXTERNAL_MODULE_54__, __WEBPACK_EXTERNAL_MODULE_55__, __WEBPACK_EXTERNAL_MODULE_56__, __WEBPACK_EXTERNAL_MODULE_57__, __WEBPACK_EXTERNAL_MODULE_58__, __WEBPACK_EXTERNAL_MODULE_59__, __WEBPACK_EXTERNAL_MODULE_60__, __WEBPACK_EXTERNAL_MODULE_61__, __WEBPACK_EXTERNAL_MODULE_62__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f3d2485eec67eb2fdf62","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-billpay-manage-payee-ng/model.xml\n// module id = 0\n// module chunks = 9","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 47\n// module chunks = 7 8 9 10 11","/**\n * @module widget-bb-billpay-manage-payee-ng\n *\n * @description\n * Bill Pay - Manage Payee\n */\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport stateContainerModuleKey, { bbStateContainerKey } from 'lib-bb-state-container-ng';\nimport bbStorageModuleKey, { bbStorageServiceKey } from 'lib-bb-storage-ng';\n\nimport bbExtensionHelpersModuleKey, {\n  extensionHelpersContextKey,\n} from 'lib-bb-extension-helpers-ng';\n\nimport modelBillpayModuleKey, {\n  modelBillpayKey,\n} from 'model-bb-billpay-ng';\n\nimport { ErrorHelperUtilities, ErrorHookUtilities } from 'lib-bb-billpay-errors';\n\nimport Controller from './manage.controller';\nimport EditPayeeManualController from './edit-payee-manual.controller';\nimport EditPayeeElectronicController from './edit-payee-electronic.controller';\nimport CreatePayeeSearchController from './create-payee-search.controller';\nimport CreatePayeeManualController from './create-payee-manual.controller';\nimport CreatePayeeElectronicController from './create-payee-electronic.controller';\nimport Service from './service';\nimport ViewModel from './view-model';\n\nimport Router from './router';\nimport defaultHooks from './default-hooks';\nimport widgetEvents from './events';\n\nconst moduleKey = 'widget-bb-billpay-manage-payee-ng';\nconst hooksKey = `${moduleKey}:hooks`;\nconst serviceKey = `${moduleKey}:service`;\nconst viewModelKey = `${moduleKey}:view-model`;\nconst eventServiceKey = `${moduleKey}:events`;\nconst routerKey = `${moduleKey}:router`;\nconst errorHelperUtilitiesKey = `${moduleKey}:errorHelperUtilities`;\nconst errorHookUtilitiesKey = `${moduleKey}:errorHookUtilities`;\n\nexport default angular\n  .module(moduleKey, [\n    widgetModuleKey,\n    eventBusModuleKey,\n    bbExtensionHelpersModuleKey,\n    modelBillpayModuleKey,\n    stateContainerModuleKey,\n    bbIntentModuleKey,\n    bbStorageModuleKey,\n  ])\n\n  .factory(eventServiceKey, [\n    eventBusKey,\n    /* into */\n    widgetEvents,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .factory(serviceKey, [\n    viewModelKey,\n    modelBillpayKey,\n    eventServiceKey,\n    widgetKey,\n    routerKey,\n    bbIntentKey,\n    /* into */\n    Service,\n  ])\n\n  .factory(routerKey, [\n    bbStateContainerKey,\n    /* into */\n    Router,\n  ])\n\n  .factory(errorHelperUtilitiesKey, [\n    /* into */\n    ErrorHelperUtilities,\n  ])\n\n  .factory(errorHookUtilitiesKey, [\n    /* into */\n    ErrorHookUtilities,\n  ])\n\n  .factory(viewModelKey, [\n    bbStateContainerKey,\n    hooksKey,\n    errorHookUtilitiesKey,\n    /* into */\n    ViewModel,\n  ])\n\n  // Add `model` and `service` to the `context` provided to the extension `helpers` key\n  .factory(extensionHelpersContextKey, [\n    viewModelKey,\n    serviceKey,\n    bbIntentKey,\n    bbStateContainerKey,\n    routerKey,\n    errorHelperUtilitiesKey,\n    /* into */\n    (viewModel, service, bbIntent, state, router, errorHelperUtilities) => ({\n      viewModel,\n      service,\n      bbIntent,\n      state,\n      router,\n      errorHelperUtilities,\n    }),\n  ])\n\n  .controller('BillpayManagePayeeController', [\n    // dependencies to inject\n    eventBusKey,\n    widgetKey,\n    bbStateContainerKey,\n    serviceKey,\n    bbIntentKey,\n    viewModelKey,\n    routerKey,\n    bbStorageServiceKey,\n    /* into */\n    Controller,\n  ])\n\n\n  .controller('BillpayCreatePayeeSearchController', [\n    // dependencies to inject\n    bbStateContainerKey,\n    serviceKey,\n    routerKey,\n    viewModelKey,\n    /* into */\n    CreatePayeeSearchController,\n  ])\n\n  .controller('BillpayCreatePayeeManualController', [\n    // dependencies to inject\n    bbStateContainerKey,\n    serviceKey,\n    routerKey,\n    /* into */\n    CreatePayeeManualController,\n  ])\n\n  .controller('BillpayCreatePayeeElectronicController', [\n    // dependencies to inject\n    bbStateContainerKey,\n    serviceKey,\n    routerKey,\n    viewModelKey,\n    /* into */\n    CreatePayeeElectronicController,\n  ])\n\n  .controller('BillpayEditPayeeManualController', [\n    // dependencies to inject\n    bbStateContainerKey,\n    serviceKey,\n    routerKey,\n    bbStorageServiceKey,\n    viewModelKey,\n    /* into */\n    EditPayeeManualController,\n  ])\n\n  .controller('BillpayEditPayeeElectronicController', [\n    // dependencies to inject\n    bbStateContainerKey,\n    serviceKey,\n    routerKey,\n    bbStorageServiceKey,\n    viewModelKey,\n    /* into */\n    EditPayeeElectronicController,\n  ])\n\n  .run([\n    viewModelKey,\n    (viewModel) => {\n      // Initialize the viewModel with an initial state\n      viewModel.init();\n    },\n  ])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_54__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 54\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_55__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 55\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_56__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 56\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_57__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 57\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_58__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container-ng\"\n// module id = 58\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_59__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-storage-ng\"\n// module id = 59\n// module chunks = 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_60__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-helpers-ng\"\n// module id = 60\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_61__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-billpay-ng\"\n// module id = 61\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_62__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-billpay-errors\"\n// module id = 62\n// module chunks = 9 10","import {\n  STORAGE_PAYEE_EDIT_DATA,\n} from './constants';\n/**\n * @module widget-bb-billpay-manage-payee-ng\n * @name BillpayManageController\n *\n * @param {object} bus Event bus\n * @param {object} widget Widget instance\n * @param {object} stateContainer\n * @param {module:widget-bb-billpay-manage-payee-ng.ManagePayeeService} payeeService\n *   Manage Payee service\n * @param {module:lib-bb-intent-ng.BbIntentProvider} bbIntent Widget navigation\n * @param {ViewModel} viewModel view model\n * @param {object} viewModel.manage view model manage\n * @param {Router} router\n * @param {module:lib-bb-storage-ng.bbStorage} bbStorage\n * @description Billpay - manage payee controller\n */\n\nexport default function BillpayManagePayeeController(\n  bus,\n  widget,\n  stateContainer,\n  payeeService,\n  bbIntent,\n  { manage },\n  router,\n  bbStorage\n) {\n  const $ctrl = this;\n  const viewBillpaySummaryIntent = payeeService.viewBillpaySummaryIntent;\n  const createSingleBillIntent = bbIntent.create('intent.rb.billpay.single-bill.create');\n  const createRecurringBillIntent = bbIntent.create('intent.rb.billpay.recurring-bill.create');\n\n  /**\n   * @name goToDefaultState\n   * @type {function}\n   * @description Trigger default action to go to create payee\n   * @inner\n   */\n  const goToDefaultState = () =>\n    bbStorage.getItem(STORAGE_PAYEE_EDIT_DATA).then((data) => {\n      if (data) {\n        const { id, electronic } = JSON.parse(data);\n        if (id) {\n          const editRoute = electronic ? 'editPayeeElectronic' : 'editPayeeManual';\n          return router.goto(editRoute, id);\n        }\n      }\n      return router.goto('createPayeeSearch');\n    });\n\n  /**\n   * @name BillpayManagePayeeController#$onInit\n   * @type {function}\n   * @description AngularJS Lifecycle hook used to initialize the controller\n   */\n  const $onInit = () => {\n    // Deprecated in Mobile SDK 3.0\n    bus.publish('cxp.item.loaded', {\n      id: widget.getId(),\n    });\n\n    bus.publish('bb.item.loaded', {\n      id: widget.getId(),\n    });\n\n    bbIntent.handle('intent.rb.billpay.payee.create', () => {\n      bbStorage.removeItem(STORAGE_PAYEE_EDIT_DATA);\n      router.goto('createPayeeSearch');\n    });\n\n    bbIntent.handle('intent.rb.billpay.payee.edit', ({ id, electronic }) => {\n      bbStorage.setItem(STORAGE_PAYEE_EDIT_DATA, JSON.stringify({ id, electronic }));\n      if (electronic) {\n        router.goto('editPayeeElectronic', id);\n      } else {\n        router.goto('editPayeeManual', id);\n      }\n    });\n\n    // if no intent is found then this will be called\n    bbIntent.initHandler(goToDefaultState);\n\n    bbIntent.init();\n  };\n\n  /**\n   * @name BillpayManagePayeeController#callCreateRecurringBillIntent\n   * @type {function}\n   * @param {ViewState} state - current view state\n   * @description Publish create recurring bill intent\n   */\n  const callCreateRecurringBillIntent = (state) =>\n    (payeeService.isEditRoute()\n      ? createRecurringBillIntent(state.data.id)\n      : createRecurringBillIntent(state.createdPayee.id));\n\n  /**\n   * @name BillpayManagePayeeController#callCreateSingleBillIntent\n   * @type {function}\n   * @param {ViewState} state - current view state\n   * @description Publish create single bill intent\n   */\n  const callCreateSingleBillIntent = (state) =>\n    (payeeService.isEditRoute()\n      ? createSingleBillIntent()\n      : createSingleBillIntent(state.createdPayee.id));\n\n  /**\n   * @name BillpayManagePayeeController#callViewBillpaySummaryIntent\n   * @type {function}\n   * @param {Payee} [payee]\n   * @param {String} [payee.id] New Payee id\n   * @description Publish view billpay summary intent\n   */\n  const callViewBillpaySummaryIntent = (payee) => {\n    viewBillpaySummaryIntent({\n      ...!!payee && { payee: payee.id },\n    });\n  };\n\n  /**\n   * @name BillpayManagePayeeController#searchPayees\n   * @type {function}\n   * @param {string} name the name value being searched for\n   * @description Search for payees\n   */\n  const searchPayees = (name) => {\n    payeeService.searchPayees(name)\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n  };\n\n  /**\n   * @name BillpayManagePayeeController#goToCreateNewPayee\n   * @description Reset the form to an initial state\n   *   from having already added a payee\n   * @type {function}\n   */\n  const goToCreateNewPayee = () => {\n    manage.resetForm();\n    router.goto('createPayeeSearch');\n  };\n\n  /**\n   * @name BillpayManagePayeeController#showDeleteModal\n   * @description Show the delete payee modal\n   * @param {string} payeeId Id of payee to delete\n   * @type {function}\n   */\n  const showDeleteModal = (payeeId) =>\n    payeeService.getPendingPayments({ payeeID: payeeId, status: 'PENDING' })\n      .then(() => {\n        manage.toggleDeleteModal();\n      })\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n\n  /**\n   * @name BillpayManagePayeeController#resetDeleteModal\n   * @description Reset the delete modal state, deletePendingPayments value\n   * @type {function}\n   */\n  const resetDeleteModal = () => {\n    $ctrl.deletePendingPayments = undefined;\n  };\n\n  /**\n   * @name BillpayManagePayeeController#exitManagePayee\n   * @description Remove storage data for manage payee when exiting widget via cancel\n   *   and call intent to view billpay summary\n   * @type {function}\n   */\n  const exitManagePayee = () => {\n    bbStorage.removeItem(STORAGE_PAYEE_EDIT_DATA);\n    callViewBillpaySummaryIntent();\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n    searchPayees,\n    goToCreateNewPayee,\n    showDeleteModal,\n    callCreateRecurringBillIntent,\n    callCreateSingleBillIntent,\n    callViewBillpaySummaryIntent,\n    resetDeleteModal,\n    exitManagePayee,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/manage.controller.js","/* eslint-disable import/prefer-default-export */\nexport const STORAGE_PAYEE_EDIT_DATA = 'billpay.managePayee.editPayeeData';\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/constants.js","import { STORAGE_PAYEE_EDIT_DATA } from './constants';\n\n/**\n * @module widget-bb-billpay-manage-payee-ng\n * @name BillpayEditPayeeManualController\n *\n * @param {object} stateContainer\n * @param {module:widget-bb-billpay-manage-payee-ng.ManagePayeeService} payeeService\n *   Manage Payee service\n * @param {Router} router\n * @param {module:lib-bb-storage-ng.bbStorage} bbStorage\n * @param {ViewModel} viewModel view model\n * @param {object} viewModel.manage view model manage\n * @description Billpay - edit payee manual controller\n */\nexport default function BillpayEditPayeeManualController(\n  stateContainer,\n  payeeService,\n  router,\n  bbStorage,\n  { manage }\n) {\n  const $ctrl = this;\n  const viewBillpaySummaryIntent = payeeService.viewBillpaySummaryIntent;\n\n  /**\n   * @name cloneState\n   * @type {function}\n   * @description Local copy of the control state\n   * @param {ViewState} viewState - current view state\n   * @param {object} viewState.data - current view state payee data\n   * @inner\n   */\n  const cloneState = ({ data }) => {\n    const {\n      id,\n      name,\n      phoneNumber,\n      address,\n      accountNumber,\n      nickName,\n    } = data;\n\n    const newState = {\n      data: {\n        id,\n        name,\n        phoneNumber,\n        address,\n        accountNumber,\n        nickName,\n        modifyPendingPayments: true,\n      },\n    };\n    Object.assign($ctrl, newState);\n  };\n\n  /**\n   * @name transformPayeeDataForPut\n   * @type {function}\n   * @description Filter out any falsy values from the payee data to send\n   * @param {Object} data payee data\n   * @return {Object} containing only data that is part of the request\n   * @inner\n   */\n  const transformPayeeDataForPut = ({\n    name,\n    phoneNumber,\n    address: {\n      address1,\n      address2,\n      city,\n      state,\n      postalCode,\n    },\n    modifyPendingPayments,\n    accountNumber,\n    nickName,\n  }) => ({\n    name,\n    phoneNumber,\n    address: {\n      address1,\n      city,\n      state,\n      postalCode,\n      // optional field\n      ...address2 && address2.trim().length && {\n        address2,\n      },\n    },\n    modifyPendingPayments,\n    // optional fields\n    ...accountNumber && accountNumber.trim().length && {\n      accountNumber,\n    },\n    ...nickName && nickName.trim().length && {\n      nickName,\n    },\n  });\n\n  /**\n   * @name BillpayEditPayeeManualController#$onInit\n   * @type {function}\n   * @description AngularJS Lifecycle hook used to initialize the controller\n   *   not yet fully implemented\n   */\n  const $onInit = () => {\n    const id = router.getParams();\n\n    payeeService.getPayeeRecord(id)\n      .then(() => {\n        cloneState(stateContainer.getState());\n      })\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n  };\n\n  /**\n   * @name BillpayEditPayeeManualController#submitPayeeDataForm\n   * @type {function}\n   * @description Create new payee\n   * @param {boolean} isFormValid Validation of the form\n   * @param {Object} data data from the form that needs transforming\n   */\n  const submitPayeeDataForm = (isFormValid, data) => {\n    if (!isFormValid) {\n      return;\n    }\n    const payee = transformPayeeDataForPut(data);\n    payeeService.putPayeesRecord(data.id, { payee })\n      .then(() => {\n        bbStorage.removeItem(STORAGE_PAYEE_EDIT_DATA);\n        router.goto('editPayeeConfirmation');\n      })\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n  };\n\n  /**\n   * @name BillpayEditPayeeManualController#removePayee\n   * @description send the request for deleting a payee\n   * @param {string} payeeId Id of payee to delete\n   * @param {string} successMessage Success message to display to user\n   * @param {boolean} [cancelPendingPayments=false] Flag to delete pending\n   *  payments for the payee\n   * @type {function}\n   */\n  const removePayee = (payeeId, successMessage, cancelPendingPayments = false) =>\n    payeeService.removePayeeRecord(payeeId, { cancelPendingPayments })\n      .then(() => {\n        bbStorage.removeItem(STORAGE_PAYEE_EDIT_DATA);\n        viewBillpaySummaryIntent({\n          notification: {\n            status: 'success',\n            message: successMessage,\n          },\n        });\n      })\n      .catch(manage.toggleDeleteModal);\n\n  Object.assign($ctrl, {\n    $onInit,\n    submitPayeeDataForm,\n    removePayee,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/edit-payee-manual.controller.js","import { STORAGE_PAYEE_EDIT_DATA } from './constants';\n\n/**\n * @module widget-bb-billpay-manage-payee-ng\n * @name BillpayEditPayeeElectronicController\n *\n * @param {object} stateContainer\n * @param {module:widget-bb-billpay-manage-payee-ng.ManagePayeeService} payeeService\n *   Manage Payee service\n * @param {Router} router\n * @param {module:lib-bb-storage-ng.bbStorage} bbStorage\n * @param {ViewModel} viewModel view model\n * @param {object} viewModel.manage view model manage\n * @description Billpay - edit payee electronic controller\n */\nexport default function BillpayEditPayeeElectronicController(\n  stateContainer,\n  payeeService,\n  router,\n  bbStorage,\n  { manage }\n) {\n  const $ctrl = this;\n  const viewBillpaySummaryIntent = payeeService.viewBillpaySummaryIntent;\n\n  /**\n   * @name cloneState\n   * @type {function}\n   * @description Local copy of the control state\n   * @param {ViewState} viewState - current view state\n   * @param {object} viewState.data - current view state payee data\n   * @inner\n   */\n  const cloneState = ({ data }) => {\n    const {\n      id,\n      accountNumber,\n      nickName,\n    } = data;\n\n    const newState = {\n      data: {\n        id,\n        accountNumber,\n        nickName,\n        modifyPendingPayments: true,\n      },\n    };\n    Object.assign($ctrl, newState);\n  };\n\n  /**\n   * @name transformPayeeDataForPut\n   * @type {function}\n   * @description Filter out any falsy values from the payee data to send\n   * @param {Object} data payee data\n   * @return {Object} containing only data that is part of the request\n   * @inner\n   */\n  const transformPayeeDataForPut = ({\n    accountNumber,\n    modifyPendingPayments,\n    nickName,\n  }) => {\n    const stateData = stateContainer.getState();\n    return {\n      name: stateData.data.name,\n      accountNumber,\n      modifyPendingPayments,\n      // optional fields\n      ...nickName && nickName.trim().length && { nickName },\n    };\n  };\n\n  /**\n   * @name BillpayEditPayeeElectronicController#$onInit\n   * @type {function}\n   * @description AngularJS Lifecycle hook used to initialize the controller\n   *   not yet fully implemented\n   */\n  const $onInit = () => {\n    const id = router.getParams();\n\n    payeeService.getPayeesElectronicRecord(id)\n      .then(() => {\n        cloneState(stateContainer.getState());\n      })\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n  };\n\n  /**\n   * @name BillpayEditPayeeElectronicController#submitPayeeDataForm\n   * @type {function}\n   * @description Update electronic payee information\n   * @param {boolean} isFormValid Validation of the form\n   * @param {Object} data data from the form that needs transforming\n   */\n  const submitPayeeDataForm = (isFormValid, data) => {\n    if (!isFormValid) {\n      return;\n    }\n    const payee = transformPayeeDataForPut(data);\n    payeeService.putPayeesElectronicRecord(data.id, { payee })\n      .then(() => {\n        bbStorage.removeItem(STORAGE_PAYEE_EDIT_DATA);\n        router.goto('editPayeeConfirmation');\n      })\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n  };\n\n  /**\n   * @name BillpayEditPayeeElectronicController#removePayee\n   * @description send the request for deleting an electronic payee\n   * @param {string} payeeId Id of electronic payee to delete\n   * @param {string} successMessage Success message to display to user\n   * @param {boolean} [cancelPendingPayments=false] Flag to delete pending\n   *  payments for the electronic payee\n   * @type {function}\n   */\n  const removePayee = (payeeId, successMessage, cancelPendingPayments = false) =>\n    payeeService.removePayeeElectronicRecord(payeeId, { cancelPendingPayments })\n      .then(() => {\n        bbStorage.removeItem(STORAGE_PAYEE_EDIT_DATA);\n        viewBillpaySummaryIntent({\n          notification: {\n            status: 'success',\n            message: successMessage,\n          },\n        });\n      })\n      .catch(manage.toggleDeleteModal);\n\n  Object.assign($ctrl, {\n    $onInit,\n    submitPayeeDataForm,\n    removePayee,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/edit-payee-electronic.controller.js","/**\n * @module widget-bb-billpay-manage-payee-ng\n * @name BillpayCreatePayeeSearchController\n *\n * @param {object} stateContainer\n * @param {module:widget-bb-billpay-manage-payee-ng.ManagePayeeService} payeeService Payee service\n * @param {Router} router\n * @description Billpay - create payee search controller\n */\n\nexport default function BillpayCreatePayeeSearchController(\n  stateContainer,\n  payeeService,\n  router,\n  { create }\n) {\n  const $ctrl = this;\n\n  /**\n   * @name BillpayCreatePayeeSearchController#getPayees\n   * @type {function}\n   * @description Fetch a list of payees matching the typeahead query\n   * @param {object} typeaheadData options from the typeahead event\n   * @param {object} typeaheadData.options options from the event data\n   */\n  const getPayees = ({ options }) =>\n    payeeService.searchPayees(options.searchQuery)\n      .then((data) => ({ data, totalItems: data.length || 0 }))\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n\n  /**\n   * @name BillpayCreatePayeeSearchController#selectPayee\n   * @type {function}\n   * @description Select a payee to add and route to the create payee form\n   *   with that payee data\n   * @param {Object} payee data from the search step\n   */\n  const selectPayee = (payee) => {\n    create.afterPayeeElectronicSelected(payee);\n    router.goto('createPayeeElectronic');\n  };\n\n  /**\n   * @name BillpayCreatePayeeSearchController#goToCreatePayeeManual\n   * @type {function}\n   * @description Routes the user to the create payee manual form\n   */\n  const goToCreatePayeeManual = () => {\n    router.goto('createPayeeManual');\n  };\n\n  Object.assign($ctrl, {\n    getPayees,\n    selectPayee,\n    goToCreatePayeeManual,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/create-payee-search.controller.js","/**\n * @module widget-bb-billpay-manage-payee-ng\n * @name BillpayCreatePayeeManualController\n *\n * @param {object} stateContainer\n * @param {module:widget-bb-billpay-manage-payee-ng.ManagePayeeService} payeeService Payee service\n * @param {Router} router\n * @description Billpay - create payee manual controller\n */\n\nexport default function BillpayCreatePayeeManualController(\n  stateContainer,\n  payeeService,\n  router\n) {\n  const $ctrl = this;\n\n  /**\n   * @name resetForm\n   * @type {function}\n   * @description Clear the state payee data\n   * @inner\n   */\n  const resetForm = () => {\n    $ctrl.data = {};\n  };\n\n  /**\n   * @name transformPayeeDataForPost\n   * @type {function}\n   * @description Filter out any falsy values from the payee data to send\n   * @param {Object} data payee data\n   * @return {Object} containing only data that is part of the request\n   * @inner\n   */\n  const transformPayeeDataForPost = ({\n    name,\n    phoneNumber,\n    address: {\n      address1,\n      address2,\n      city,\n      state,\n      postalCode,\n    },\n    modifyPendingPayments,\n    accountNumber,\n    nickName,\n  }) => ({\n    name,\n    phoneNumber,\n    address: {\n      address1,\n      city,\n      state,\n      postalCode,\n      // optional field\n      ...address2 && address2.trim().length && {\n        address2,\n      },\n    },\n    modifyPendingPayments,\n    // optional fields\n    ...accountNumber && accountNumber.trim().length && {\n      accountNumber,\n    },\n    ...nickName && nickName.trim().length && {\n      nickName,\n    },\n  });\n\n  const $onInit = () => {\n    resetForm();\n  };\n\n  /**\n   * @name BillpayCreatePayeeManualController#submitPayeeDataForm\n   * @type {function}\n   * @description Create new payee\n   * @param {boolean} isFormValid Validation of the form\n   * @param {Object} data data from the form that needs transforming\n   */\n  const submitPayeeDataForm = (isFormValid, data) => {\n    if (!isFormValid) {\n      return;\n    }\n\n    const payee = transformPayeeDataForPost(data);\n    payeeService.postPayeesRecord({ payee })\n      .then(() => {\n        router.goto('createPayeeConfirmation');\n      })\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n  };\n\n  /**\n   * @name BillpayCreatePayeeManualController#goToCreatePayeeSearch\n   * @type {function}\n   * @description Routes the user to the payee search state form\n   */\n  const goToCreatePayeeSearch = () => {\n    router.goto('createPayeeSearch');\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n    submitPayeeDataForm,\n    goToCreatePayeeSearch,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/create-payee-manual.controller.js","/**\n * @module widget-bb-billpay-manage-payee-ng\n * @name BillpayCreatePayeeElectronicController\n *\n * @param {object} stateContainer\n * @param {module:widget-bb-billpay-manage-payee-ng.ManagePayeeService} payeeService Payee service\n * @param {Router} router\n * @param {ViewModel} viewModel view model\n * @param {object} viewModel.manage view model manage\n * @description Billpay - create electronic payee\n */\n\nexport default function BillpayCreatePayeeElectronicController(\n  stateContainer,\n  payeeService,\n  router,\n  { manage }\n) {\n  const $ctrl = this;\n\n  /**\n   * @name clearForm\n   * @type {function}\n   * @description Clear form from controller state for new inputs\n   * @inner\n   */\n  const clearForm = () => {\n    Object.assign($ctrl, { data: {} });\n  };\n\n  /**\n   * @name transformPayeeDataForPost\n   * @type {function}\n   * @description Filter out any falsy values from the electronic payee data to send\n   * @param {Object} data electronic payee data\n   * @return {Object} containing only data that is part of the request\n   * @inner\n   */\n  const transformPayeeDataForPost = ({\n    accountNumber,\n    merchantZipCode,\n    nickName,\n  }) => {\n    const stateData = stateContainer.getState();\n    return {\n      name: stateData.data.name,\n      merchantID: stateData.data.merchantID,\n      accountNumber,\n      merchantZipCode,\n      // optional fields\n      ...nickName && nickName.trim().length && {\n        nickName,\n      },\n    };\n  };\n\n  /**\n   * @name BillpayCreatePayeeElectronicController#$onInit\n   * @type {function}\n   * @description Clone the current state with values that are relevant\n   */\n  const $onInit = () => {\n    clearForm();\n  };\n\n  /**\n   * @name BillpayCreatePayeeElectronicController#submitPayeeDataForm\n   * @type {function}\n   * @description Create new payee\n   * @param {boolean} isFormValid Validation of the form\n   * @param {Object} data data from the form that needs transforming\n   */\n  const submitPayeeDataForm = (isFormValid, data) => {\n    if (!isFormValid) {\n      return;\n    }\n\n    const payee = transformPayeeDataForPost(data);\n    payeeService.postPayeesElectronicRecord({ payee })\n      .then(() => {\n        router.goto('createPayeeConfirmation');\n      })\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n  };\n\n  /**\n   * @name BillpayCreatePayeeElectronicController#goToCreatePayeeSearch\n   * @type {function}\n   * @description Routes the user to the payee search state form\n   */\n  const goToCreatePayeeSearch = () => {\n    manage.clearErrorMap();\n    router.goto('createPayeeSearch');\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n    submitPayeeDataForm,\n    goToCreatePayeeSearch,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/create-payee-electronic.controller.js","/**\n* The purpose of this module is to provide the main structure of the\n* Add a Payee widget. Outlining the workflows, connecting the data from the\n* model to the view via the customizations provided by the extension.\n*\n* @constructor ManagePayeeService\n* @description The core functionality of the Manage Payee widget\n*/\nexport default function ManagePayeeService(\n  { create, update, get, manage, remove },\n  model,\n  events,\n  widget,\n  router,\n  bbIntent\n) {\n  const viewBillpaySummaryIntent = bbIntent.create('intent.rb.billpay.summary.view');\n  return {\n    /**\n     * @name ManagePayeeService#postPayeesRecord\n     * @type {function}\n     * @param {Payee} data Payee data\n     * @return {Promise<void>}\n     * @description Create new payee\n     */\n    postPayeesRecord(data) {\n      create.beforeCreatePayee();\n      events.beforeCreatePayee();\n      return model.postPayeesRecord(data)\n        .then(({ id }) => {\n          const payee = Object.assign(data.payee, { id });\n          create.afterCreatePayeeSuccess({ ...data, payee });\n          events.afterCreatePayeeSuccess(data);\n        })\n        .catch((error) => {\n          create.afterCreatePayeeError(error);\n          events.afterCreatePayeeError(error);\n          throw error;\n        });\n    },\n\n    /**\n     * @name ManagePayeeService#putPayeesRecord\n     * @type {function}\n     * @param {string} id Payee id to put\n     * @param {Payee} data Payee data\n     * @return {Promise<void>}\n     * @description Update payee\n     */\n    putPayeesRecord(id, data) {\n      update.beforeUpdatePayee();\n      events.beforeUpdatePayee();\n      return model.putPayeesRecord(id, data)\n        .then(() => {\n          const payee = Object.assign(data.payee, { id });\n          update.afterUpdatePayeeSuccess({ ...data, payee });\n          events.afterUpdatePayeeSuccess(data);\n        })\n        .catch((error) => {\n          update.afterUpdatePayeeError(error);\n          events.afterUpdatePayeeError(error);\n          throw error;\n        });\n    },\n\n    /**\n     * @name ManagePayeeService#searchPayees\n     * @type {function}\n     * @description Search for payees\n     * @param {string} name The name that will be searched\n     * @return {Promise<object>}\n     */\n    searchPayees(name) {\n      manage.beforeSearchPayees();\n      events.beforeSearchPayees();\n      return model.searchPayees({ name })\n        .then((data) => {\n          manage.afterSearchPayeesSuccess(data);\n          events.afterSearchPayeesSuccess(data);\n          return data;\n        })\n        .catch((error) => {\n          manage.afterSearchPayeesError(error);\n          events.afterSearchPayeesError(error);\n          throw error;\n        });\n    },\n\n    /**\n     * @name ManagePayeeService#getPayeeRecord\n     * @type {function}\n     * @param {string} id Payee ID\n     * @return {Promise<void>}\n     * @description Update the view with the payee loaded from the data source\n     */\n    getPayeeRecord(id) {\n      get.beforeGetPayeeRecord();\n      return model.getPayeeRecord(id)\n        .then(({ payee }) => {\n          get.afterGetPayeeRecordSuccess(payee);\n        })\n        .catch((error) => {\n          get.afterGetPayeeRecordError(error);\n          throw error;\n        });\n    },\n\n    /**\n     * @name ManagePayeeService#getPendingPayments\n     * @type {function}\n     * @param {object} params params for request\n     * @return {Promise<void>}\n     * @description Update the view with the pending payments for this payee\n     *   payments with PENDING status only, not IN_PROGRESS\n     */\n    getPendingPayments(params) {\n      get.beforeGetPendingPayments();\n      return model.getPayments(params)\n        .then((payments) => {\n          get.afterGetPendingPaymentsSuccess(payments);\n        })\n        .catch((error) => {\n          get.afterGetPendingPaymentsError(error);\n        });\n    },\n\n    /**\n     * @name ManagePayeeService#getCurrencyCode\n     * @type {function}\n     * @return {string}\n     * @description Return the currency code from widget preferences\n     */\n    getCurrencyCode() {\n      return widget.getStringPreference('currency');\n    },\n\n    /**\n     * @name ManagePayeeService#isEditRoute\n     * @type {function}\n     * @description is the route edit payee\n     * @return {boolean} if the route is edit payee\n     * @inner\n     */\n    isEditRoute() {\n      const route = router.getRoute();\n      return ['editPayeeManual', 'editPayeeElectronic', 'editPayeeConfirmation']\n        .includes(route);\n    },\n\n    /**\n     * @name ManagePayeeService#removePayeeRecord\n     * @type {function}\n     * @param {string} id Payee Id\n     * @param {object} params params for delete request\n     * @return {Promise<void>}\n     * @description Update the view for a payee deletion\n     */\n    removePayeeRecord(id, params) {\n      remove.beforeRemovePayeeRecord();\n      return model.deletePayeesRecord(id, params)\n        .then(() => {\n          remove.afterRemovePayeeRecordSuccess();\n        }).catch((error) => {\n          remove.afterRemovePayeeRecordError(error);\n          throw error;\n        });\n    },\n\n    // electronic payee methods\n    /**\n     * @name ManagePayeeService#postPayeesElectronicRecord\n     * @type {function}\n     * @param {module:model-bb-billpay-ng.ElectronicPayeePost} data Electronic payee data\n     * @return {Promise<void>}\n     * @description Create new electronic payee\n     */\n    postPayeesElectronicRecord(data) {\n      create.beforeCreatePayee();\n      events.beforeCreatePayee();\n      return model.postPayeesElectronicRecord(data)\n        .then(({ id }) => {\n          const payee = Object.assign(data.payee, { id });\n          create.afterCreatePayeeSuccess({ ...data, payee });\n          events.afterCreatePayeeSuccess(data);\n        })\n        .catch((error) => {\n          create.afterCreatePayeeError(error);\n          events.afterCreatePayeeError(error);\n          throw error;\n        });\n    },\n\n    /**\n     * @name ManagePayeeService#getPayeesElectronicRecord\n     * @type {function}\n     * @param {string} id Electronic payee ID\n     * @return {Promise<void>}\n     * @description Update the view with the electronic payee loaded from the data source\n     */\n    getPayeesElectronicRecord(id) {\n      get.beforeGetPayeeRecord();\n      return model.getPayeesElectronicRecord(id)\n        .then(({ payee }) => {\n          get.afterGetPayeeRecordSuccess(payee);\n        })\n        .catch((error) => {\n          get.afterGetPayeeRecordError(error);\n          throw error;\n        });\n    },\n\n    /**\n     * @name ManagePayeeService#putPayeesElectronicRecord\n     * @type {function}\n     * @param {string} id Electronic payee ID to put\n     * @param {module:model-bb-billpay-ng.ElectronicPayeePut} data Electronic payee data\n     * @return {Promise<void>}\n     * @description Update an electronic payee\n     */\n    putPayeesElectronicRecord(id, data) {\n      update.beforeUpdatePayee();\n      events.beforeUpdatePayee();\n      return model.putPayeesElectronicRecord(id, data)\n        .then(() => {\n          const payee = Object.assign(data.payee, { id });\n          update.afterUpdatePayeeSuccess({ ...data, payee });\n          events.afterUpdatePayeeSuccess(data);\n        })\n        .catch((error) => {\n          update.afterUpdatePayeeError(error);\n          events.afterUpdatePayeeError(error);\n          throw error;\n        });\n    },\n\n    /**\n     * @name ManagePayeeService#removePayeeElectronicRecord\n     * @type {function}\n     * @param {string} id Electronic payee ID\n     * @param {object} params params for delete request\n     * @return {Promise<void>}\n     * @description Update the view for an electronic payee deletion\n     */\n    removePayeeElectronicRecord(id, params) {\n      remove.beforeRemovePayeeRecord();\n      return model.deletePayeesElectronicRecord(id, params)\n        .then(() => {\n          remove.afterRemovePayeeRecordSuccess();\n        }).catch((error) => {\n          remove.afterRemovePayeeRecordError(error);\n          throw error;\n        });\n    },\n\n    /**\n     * @name ManagePayeeService#viewBillpaySummaryIntent\n     * @type {function}\n     * @description Intent for viewing bill pay summary\n     */\n    viewBillpaySummaryIntent,\n  };\n}\n\n/**\n * Payee type definition\n * @typedef {Object} Payee\n * @property {string} name - Payee name\n * @property {string} nickName - Payee nickname\n * @property {string} phoneNumber - Payee phone number\n * @property {object} address - Payee complete address\n * @property {string} address.address1 - Payee address1\n * @property {string} address.address2 - Payee address2\n * @property {string} address.city - Payee city\n * @property {string} address.state - Payee state\n * @property {string} address.postalCode - Payee postal code\n * @property {string} accountNumber - Payee nickname\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/service.js","import create from './create';\nimport update from './update';\nimport get from './get';\nimport manage from './manage';\nimport remove from './remove';\nimport createInitialState from './initial-state';\n\n/**\n * @constructor ViewModel\n * @param {module:lib-bb-state-container-ng.StateContainer} stateContainer\n * @param {Hooks} hooks\n * @param {object} errorHookUtilities\n */\nexport default function ViewModel(stateContainer, hooks, errorHookUtilities) {\n  return {\n    /**\n     * @name ViewModel#init\n     * @type {function}\n     * @description Initialize the container with the initial state if\n     * it isn't already initialized (i.e. the current state is `undefined`)\n     * @return {ViewState} The new state of the widget\n     */\n    init: stateContainer.createAction((current = createInitialState()) => current),\n\n    /**\n     * @name ViewModel#create\n     * @type {object}\n     * @description expose create viewmodel\n     */\n    create: create(stateContainer, hooks, errorHookUtilities),\n\n    /**\n     * @name ViewModel#update\n     * @type {object}\n     * @description expose update viewmodel\n     */\n    update: update(stateContainer, hooks, errorHookUtilities),\n\n    /**\n     * @name ViewModel#get\n     * @type {object}\n     * @description expose get viewmodel\n     */\n    get: get(stateContainer, hooks, errorHookUtilities),\n\n    /**\n     * @name ViewModel#manage\n     * @type {object}\n     * @description expose manage viewmodel\n     */\n    manage: manage(stateContainer, hooks, errorHookUtilities),\n\n    /**\n     * @name ViewModel#remove\n     * @type {object}\n     * @description expose remove viewmodel\n     */\n    remove: remove(stateContainer, hooks, errorHookUtilities),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/view-model/index.js","/**\n *\n * @constructor Create\n * @param {module:lib-bb-state-container-ng.StateContainer} stateContainer\n * @param {Hooks} hooks\n * @param {object} errorHookUtilities\n */\nexport default function Create(stateContainer, hooks, errorHookUtilities) {\n  /**\n   * @name Create\n   * @type {Object}\n   */\n  return {\n    /**\n     * @name Create#afterPayeeElectronicSelected\n     * @type {function}\n     * @param {object} payee the selected payee data\n     * @description Amend the state to include the selected payee data\n     */\n    afterPayeeElectronicSelected: stateContainer.createAction((current, payee) => ({\n      ...current,\n      data: payee,\n    })),\n\n    /**\n     * @name Create#beforeCreatePayee\n     * @type {function}\n     * @description Change the indication that the payee is being created\n     */\n    beforeCreatePayee: stateContainer.createAction((current) => ({\n      ...current,\n      isCreatingPayee: true,\n      successMessageViewed: false,\n    })),\n\n    /**\n     * @name Create#afterCreatePayeeSuccess\n     * @type {function}\n     * @param {object} data Payee data\n     * @description Update the `ViewState` after creating a payee\n     */\n    afterCreatePayeeSuccess: stateContainer.createAction((current, data) => ({\n      ...current,\n      isCreatingPayee: false,\n      errorMap: {},\n      createdPayee: hooks.transformPayee(data),\n    })),\n\n    /**\n     * @name Create#afterCreatePayeeError\n     * @type {function}\n     * @param {object} error Create payee record error\n     * @description Amend the view to show the error encountered when creating a payee\n     */\n    afterCreatePayeeError: stateContainer.createAction((current, error) => {\n      const thisError = errorHookUtilities.transformErrorMap(error);\n      return hooks.afterCreatePayeeError({\n        ...current,\n        isCreatingPayee: false,\n        error: thisError,\n        errorMap: errorHookUtilities.getErrorMap(thisError.errors),\n      });\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/view-model/create.js","/**\n *\n * @constructor Update\n * @param {module:lib-bb-state-container-ng.StateContainer} stateContainer\n * @param {Hooks} hooks\n * @param {object} errorHookUtilities\n */\nexport default function Update(stateContainer, hooks, errorHookUtilities) {\n  /**\n   * @name Update\n   * @type {Object}\n   */\n  return {\n    /**\n     * @name Update#beforeUpdatePayee\n     * @type {function}\n     * @description Change the indication that the payee is being updated\n     */\n    beforeUpdatePayee: stateContainer.createAction((current) => ({\n      ...current,\n      isUpdatingPayee: true,\n      successMessageViewed: false,\n    })),\n\n    /**\n     * @name Update#afterUpdatePayeeSuccess\n     * @type {function}\n     * @param {object} data Payee data\n     * @description Update the `ViewState` after updating a payee\n     */\n    afterUpdatePayeeSuccess: stateContainer.createAction((current, data) => ({\n      ...current,\n      isUpdatingPayee: false,\n      errorMap: {},\n      updatedPayee: hooks.transformPayee(data),\n    })),\n\n    /**\n     * @name Update#afterUpdatePayeeError\n     * @type {function}\n     * @param {object} error Update payee record error\n     * @description Amend the view to show the error encountered when updating a payee\n     */\n    afterUpdatePayeeError: stateContainer.createAction((current, error) => {\n      const thisError = errorHookUtilities.transformErrorMap(error);\n      return hooks.afterCreatePayeeError({\n        ...current,\n        isUpdatingPayee: false,\n        error: thisError,\n        errorMap: errorHookUtilities.getErrorMap(thisError.errors),\n      });\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/view-model/update.js","/**\n *\n * @constructor Get\n * @param {module:lib-bb-state-container-ng.StateContainer} stateContainer\n * @param {Hooks} hooks\n * @param {object} errorHookUtilities\n */\nexport default function Get(stateContainer, hooks, errorHookUtilities) {\n  /**\n   * @name filterPendingStatusPayments\n   * @type {function}\n   * @description Check if payment has a status of PENDING\n   * @return {boolean}\n   * @inner\n   */\n  const filterPendingStatusPayments = (payment) =>\n    payment.status === 'PENDING';\n\n  /**\n   * @name Get\n   * @type {Object}\n   */\n  return {\n\n    /**\n     * @name Get#beforeGetPayeeRecord\n     * @type {function}\n     * @description Change the indication that the payee is being retrieved\n     */\n    beforeGetPayeeRecord: stateContainer.createAction((current) => ({\n      ...current,\n      isGettingPayee: true,\n    })),\n\n    /**\n     * @name Get#afterGetPayeeRecordSuccess\n     * @type {function}\n     * @param {module:data-bb-bill-pay-http-ng.BillPayData.PayeeGetResponse} payee Retrieved payee\n     * @description Amend the state to show the retrieved payee\n     */\n    afterGetPayeeRecordSuccess: stateContainer.createAction((current, payee) =>\n      hooks.afterPayeeSelected({\n        ...current,\n        isGettingPayee: false,\n        data: {\n          ...current.data,\n          ...payee,\n        },\n      })),\n\n    /**\n     * @name Get#afterGetPayeeRecordError\n     * @type {function}\n     * @param {object} error Get payee error\n     * @description Amend the state to include the error encountered when retrieving payee\n     */\n    afterGetPayeeRecordError: stateContainer.createAction((current, error) => ({\n      ...current,\n      isGettingPayee: false,\n      error,\n    })),\n\n    /**\n     * @name Get#beforeGetPendingPayments\n     * @type {function}\n     * @description Amend the state to indicate that the payments are being fetched\n     */\n    beforeGetPendingPayments: stateContainer.createAction((current) => ({\n      ...current,\n      isLoadingPaymentsForPayee: true,\n      pendingPayments: [],\n    })),\n\n    /**\n     * @name Get#afterGetPendingPaymentsSuccess\n     * @type {function}\n     * @param {object} payments The pending payments retrieved\n     * @description Amend the state to include a list of pending payments\n     */\n    afterGetPendingPaymentsSuccess: stateContainer.createAction((current, pendingPayments) => {\n      const filteredPendingPayments = pendingPayments.filter(filterPendingStatusPayments);\n      return {\n        ...current,\n        isLoadingPaymentsForPayee: false,\n        pendingPayments: filteredPendingPayments,\n        ...hooks.transformPendingPayments(filteredPendingPayments),\n      };\n    }),\n\n    /**\n     * @name Get#afterGetPendingPaymentsError\n     * @type {function}\n     * @param {object} error Get pending payments error\n     * @description Amend the state to include the error encountered when\n     *   retrieving pending payments\n     */\n    afterGetPendingPaymentsError: stateContainer.createAction((current, error) => {\n      const thisError = errorHookUtilities.transformErrorMap(error);\n      return hooks.afterRemovePayeeError({\n        ...current,\n        isLoadingPaymentsForPayee: false,\n        pendingPayments: [],\n        error,\n        errorMap: errorHookUtilities.getErrorMap(thisError.errors),\n      });\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/view-model/get.js","/**\n *\n * @constructor Manage\n * @param {module:lib-bb-state-container-ng.StateContainer} stateContainer\n * @param {Hooks} hooks\n * @param {object} errorHookUtilities\n */\nexport default function Manage(stateContainer, hooks, errorHookUtilities) {\n  /**\n   * @name Manage\n   * @type {Object}\n   */\n  return {\n    /**\n     * @name manage#beforeSearchPayees\n     * @type {function}\n     * @description Change the indication that the payees are being searched\n     */\n    beforeSearchPayees: stateContainer.createAction((current) => ({\n      ...current,\n      isLoadingPayees: true,\n      payees: [],\n    })),\n\n    /**\n     * @name manage#afterSearchPayeesSuccess\n     * @type {function}\n     * @param {object[]} payees List of payees\n     * @description Update the `ViewState` after getting the payees\n     */\n    afterSearchPayeesSuccess: stateContainer.createAction((current, payees) => ({\n      ...current,\n      isLoadingPayees: false,\n      payees,\n    })),\n\n    /**\n     * @name manage#afterSearchPayeesError\n     * @type {function}\n     * @param {object} error Search payees error\n     * @description Amend the state to include the error encountered when searching for payees\n     */\n    afterSearchPayeesError: stateContainer.createAction((current, error) => ({\n      ...current,\n      isLoadingPayees: false,\n      error,\n    })),\n\n    /**\n     * @name manage#resetForm\n     * @type {function}\n     * @description Amend the state to be clear and ready for adding a new Payee\n     */\n    resetForm: stateContainer.createAction((current) => ({\n      ...current,\n      data: {},\n      successMessageViewed: false,\n    })),\n\n    /**\n     * @name manage#toggleDeleteModal\n     * @type {function}\n     * @description Amend the state to toggle showing the delete modal\n     */\n    toggleDeleteModal: stateContainer.createAction((current) => ({\n      ...current,\n      showDeleteModal: !current.showDeleteModal,\n    })),\n\n    /**\n     * @name ViewModel#clearBackendError\n     * @type {function}\n     * @param {string} inputName the input to clear error against\n     * @description Amend the state to clear an input error\n     */\n    clearBackendError: stateContainer.createAction((current, inputName) => ({\n      ...current,\n      errorMap: errorHookUtilities.clearBackendError(inputName, current),\n    })),\n\n    /**\n     * @name ViewModel#clearErrorMap\n     * @type {function}\n     * @description Amend the state to clear an input error\n     */\n    clearErrorMap: stateContainer.createAction((current) => ({\n      ...current,\n      errorMap: {},\n    })),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/view-model/manage.js","/**\n *\n * @constructor Remove\n * @param {module:lib-bb-state-container-ng.StateContainer} stateContainer\n * @param {Hooks} hooks\n * @param {object} errorHookUtilities\n\n */\nexport default function Remove(stateContainer, hooks, errorHookUtilities) {\n  /**\n   * @name Remove\n   * @type {Object}\n   */\n  return {\n    /**\n     * @name Remove#beforeRemovePayeeRecord\n     * @type {function}\n     * @description Amend the state before a payee is removed\n     */\n    beforeRemovePayeeRecord: stateContainer.createAction((current) => ({\n      ...current,\n      isRemovingPayee: true,\n    })),\n\n    /**\n     * @name Remove#afterRemovePayeeRecordSuccess\n     * @type {function}\n     * @description Amend the state after a payee is removed successfully\n     */\n    afterRemovePayeeRecordSuccess: stateContainer.createAction((current) => ({\n      ...current,\n      isRemovingPayee: false,\n    })),\n\n    /**\n     * @name Remove#afterRemovePayeeRecordError\n     * @type {function}\n     * @param {object} error Remove payee error\n     * @description Amend the state to include the error encountered when\n     *   removing payee\n     */\n    afterRemovePayeeRecordError: stateContainer.createAction((current, error) => {\n      const thisError = errorHookUtilities.transformErrorMap(error);\n      return hooks.afterRemovePayeeError({\n        ...current,\n        isRemovingPayee: false,\n        error: thisError,\n        errorMap: errorHookUtilities.getErrorMap(thisError.errors),\n      });\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/view-model/remove.js","export default () => ({\n  data: {\n    name: '',\n    phoneNumber: '',\n    address: {},\n    modifyPendingPayments: true,\n    accountNumber: '',\n    nickName: '',\n  },\n  payees: [],\n  error: null,\n  isCreatingPayee: false,\n  isLoadingPayees: false,\n  route: {\n    name: 'addPayee',\n    params: {},\n  },\n});\n\n/**\n * @typedef {object} ViewState\n * @description\n * The current state of the [ViewModel]{@link module:lib-bb-view-model-ng}.\n * @property {object} route Indicates current router state\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/view-model/initial-state.js","/**\n * The router service of the BillpayManagePayee widget\n *\n * @constructor Router\n * @param {StateContainer} stateContainer\n */\nexport default (stateContainer) => {\n  let subscribers = [];\n\n  /**\n   * @name setRoute\n   *\n   * @inner\n   * @description Inner method to update state with a new route\n   * @type {function}\n   * @param {{name: string, params: object}} route New route object\n   * @returns {ViewState}\n   */\n  const setRoute = stateContainer.createAction((state, { name, params }) => ({\n    ...state,\n    route: {\n      name,\n      params,\n    },\n  }));\n\n  /**\n   * @name notifySubscribers\n   *\n   * @inner\n   * @description Inner method to notify subscribers\n   * @type {function}\n   * @param {string} name New route name\n   * @param {object} params New route parameters object\n   */\n  const notifySubscribers = (name, params) => {\n    subscribers.forEach(subscriber => {\n      subscriber(name, params);\n    });\n  };\n\n  return {\n    /**\n     * @name Router#goto\n     *\n     * @description Method to navigate to a specific route\n     * @type {function}\n     * @param {string} name New route name\n     * @param {object} params New route parameters object\n     */\n    goto: (name, params = {}) => {\n      setRoute({ name, params });\n      notifySubscribers(name, params);\n    },\n\n    /**\n     * @name Router#getParams\n     *\n     * @description Method to get current route params from the {@link ViewState}\n     * @type {function}\n     * @returns {object} current parameters object\n     */\n    getParams: stateContainer.createSelector(state => state.route.params),\n\n    /**\n     * @name Router#getRoute\n     *\n     * @description Method to get current route name from the state\n     * @type {function}\n     */\n    getRoute: stateContainer.createSelector(state => state.route.name),\n\n    /**\n     * @name Router#subscribe\n     *\n     * @description Method to subscribe to a route change\n     * @type {function}\n     * @param {function} callback A callback to be subscribed\n     * @returns {function} The method to unsubscribe\n     */\n    subscribe: (callback) => {\n      subscribers = [...subscribers, callback];\n      return () => {\n        subscribers = subscribers.filter(sub => sub !== callback);\n      };\n    },\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/router.js","\nconst identity = any => any;\n\nexport default {\n  /**\n   * @name Hooks#afterPayeeSelected\n   * @type {function}\n   * @description Hook for processing the state after selecting a payee\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  afterPayeeSelected: identity,\n\n  /**\n   * @name Hooks#afterCreatePayeeError\n   * @type {function}\n   * @description Hook for processing the state after creating a payee fails\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  afterCreatePayeeError: identity,\n\n  /**\n   * @name Hooks#afterUpdatePayeeError\n   * @type {function}\n   * @description Hook for processing the state after updating a payee fails\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  afterUpdatePayeeError: identity,\n\n  /**\n   * @name Hooks#transformPayee\n   * @type {function}\n   * @description Make any modifications needed to the loaded payee\n   * @param {PayeeSummary} payee The current state of the payee\n   * @return {Object} The transformed payee\n   */\n  transformPayee: identity,\n\n  /**\n   * @name Hooks#transformErrorMap\n   * @type {function}\n   * @description Hook for processing the state after creating or updating a payee fails\n   * @param {ViewState} current The current state of the view model\n   * @param {module:lib-bb-model-errors.ModelError} modelError\n   * @return {ViewState} The new state of the view model\n   */\n  transformErrorMap: identity,\n\n  /**\n   * @name Hooks#afterRemovePayeeError\n   * @type {function}\n   * @description Hook for processing the state after deleting a payee fails\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  afterRemovePayeeError: identity,\n\n  /**\n   * @name Hooks#transformPendingPayments\n   * @type {function}\n   * @description Hook for processing data for displaying pending payments\n   *   with a group of headings and grouped payments returned\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  transformPendingPayments: identity,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/default-hooks.js","/**\n * @description Events that the widget fires\n * @type {object}\n */\nconst Events = {\n  BEFORE_CREATE_PAYEE_RECORD: 'bb.event.createPayeeRecord.before',\n  AFTER_CREATE_PAYEE_RECORD: 'bb.event.createPayeeRecord.after',\n  AFTER_CREATE_PAYEE_RECORD_ERROR: 'bb.event.createPayeeRecord.error',\n  BEFORE_UPDATE_PAYEE_RECORD: 'bb.event.updatePayeeRecord.before',\n  AFTER_UPDATE_PAYEE_RECORD: 'bb.event.updatePayeeRecord.after',\n  AFTER_UPDATE_PAYEE_RECORD_ERROR: 'bb.event.updatePayeeRecord.error',\n  BEFORE_SEARCH_PAYEES: 'bb.event.searchPayees.before',\n  AFTER_SEARCH_PAYEES: 'bb.event.searchPayees.after',\n  AFTER_SEARCH_PAYEES_ERROR: 'bb.event.searchPayees.error',\n};\n\nexport default (bus) => ({\n\n  /**\n   * @name beforeCreatePayee\n   * @type {function}\n   * @description Before create payee record\n   */\n  beforeCreatePayee: () => {\n    bus.publish(Events.BEFORE_CREATE_PAYEE_RECORD);\n  },\n\n  /**\n   * @name afterCreatePayeeSuccess\n   * @type {function}\n   * @param {object} data Payee data\n   * @description After create payee record\n   */\n  afterCreatePayeeSuccess: (data) => {\n    bus.publish(Events.AFTER_CREATE_PAYEE_RECORD, { data });\n  },\n\n  /**\n   * @name afterCreatePayeeError\n   * @type {function}\n   * @param {object} error Error while creating a payee\n   * @description After create payee error\n   */\n  afterCreatePayeeError: (error) => {\n    bus.publish(Events.AFTER_CREATE_PAYEE_RECORD_ERROR, { error });\n  },\n\n  /**\n   * @name beforeUpdatePayee\n   * @type {function}\n   * @description Before update payee record\n   */\n  beforeUpdatePayee: () => {\n    bus.publish(Events.BEFORE_UPDATE_PAYEE_RECORD);\n  },\n\n  /**\n   * @name afterUpdatePayeeSuccess\n   * @type {function}\n   * @param {object} data Payee data\n   * @description After update payee record\n   */\n  afterUpdatePayeeSuccess: (data) => {\n    bus.publish(Events.AFTER_UPDATE_PAYEE_RECORD, { data });\n  },\n\n  /**\n   * @name afterUpdatePayeeError\n   * @type {function}\n   * @param {object} error Error while updating a payee\n   * @description After update payee error\n   */\n  afterUpdatePayeeError: (error) => {\n    bus.publish(Events.AFTER_UPDATE_PAYEE_RECORD_ERROR, { error });\n  },\n\n  /**\n   * @name beforeSearchPayees\n   * @type {function}\n   * @description Before searching payees\n   */\n  beforeSearchPayees: () => {\n    bus.publish(Events.BEFORE_SEARCH_PAYEES);\n  },\n\n  /**\n   * @name afterSearchPayeesSuccess\n   * @type {function}\n   * @param {object[]} payees List of payees\n   * @description After successful payees search\n   */\n  afterSearchPayeesSuccess: (payees) => {\n    bus.publish(Events.AFTER_SEARCH_PAYEES, { payees });\n  },\n\n  /**\n   * @name afterSearchPayeesError\n   * @type {function}\n   * @param {object} error Error while searching payees\n   * @description After search payees error\n   */\n  afterSearchPayeesError: (error) => {\n    bus.publish(Events.AFTER_SEARCH_PAYEES_ERROR, { error });\n  },\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-manage-payee-ng/scripts/events.js"],"sourceRoot":""}