{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******************************","webpack:///webpack/bootstrap 70052c6c6190d07a36f3?d006******************************","webpack:///./widget-bb-standing-payment-orders-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*********************","webpack:///external \"lib-bb-model-errors\"?7567****","webpack:///external \"lib-bb-event-bus-ng\"?8215**","webpack:///external \"lib-bb-widget-extension-ng\"?b547***","webpack:///external \"model-bb-payment-orders-ng\"?e196***","webpack:///external \"lib-bb-permissions-ng\"?d9b0*","webpack:///./widget-bb-standing-payment-orders-ng/scripts/index.js","webpack:///./widget-bb-standing-payment-orders-ng/scripts/controller.js","webpack:///./widget-bb-standing-payment-orders-ng/scripts/constants.js","webpack:///./widget-bb-standing-payment-orders-ng/scripts/default-hooks.js"],"names":["defaultHooks","hooksKey","angular","module","modelPaymentOrdersModuleKey","bbEventBusModuleKey","bbPermissionsModuleKey","factory","controller","modelPaymentOrdersKey","eventBusKey","bbPermissionsKey","Controller","name","StandingOrdersController","errorMessages","E_AUTH","E_USER","E_CONNECTIVITY","E_UNEXPECTED","DEFAULT_PAGE_SIZE","DEFAULT_MAX_NAV_PAGES","DEFAULT_PAGINATION_TYPE","uiError","error","modelError","code","message","model","hooks","bus","permissions","$ctrl","preferences","getStandingOrdersPreferences","pageSize","standingOrdersPageSize","maxNavPages","standingOrdersMaxNavPages","paginationType","standingOrdersPaginationType","dismissTime","Math","abs","standingOrdersNotificationDismissTime","state","standingOrders","rawItems","params","from","size","currentPage","totalItems","orderBy","defaultSortableColumn","direction","defaultSortableDirection","query","searching","search","notifications","currencies","data","loading","hasMore","pageParams","filterParams","amountFrom","amountTo","currency","dateRange","startDate","endDate","status","transferFrequency","fromAccount","identifier","initialLoading","selections","selectedPayments","selectedPaymentsIds","selectedPaymentsActionGrouped","bulkActionDetails","bulkActionNotification","isVisible","isLoading","loadMorePromise","append","newItems","existingItems","replace","items","getNormalizedDate","date","undefined","userOffset","getTimezoneOffset","Date","toISOString","slice","normalizeQueryParam","param","getParams","Object","assign","nextExecutionDateFrom","nextExecutionDateTo","getPermissions","Privileges","then","privileges","catch","load","merge","requestParams","truncateParams","getStandingOrders","raw","length","totalCount","processStandingOrders","processedPayments","loadMore","done","getRequestParams","changePage","currentParams","reload","onSort","onSearchSubmit","queryHasValue","Boolean","trim","onSearchClear","getAccountsFrom","accounts","err","selectAccountFrom","onApplyFilter","updateLoadingState","updateBulkActionDetails","missingPaymentIdsList","update","paymentOrders","filter","item","paymentOrder","map","payment","paymentOrderId","missingPaymentList","includes","id","updateSelectionStateByPaymentId","p","paymentId","Action","APPROVE","REJECT","forEach","Array","isArray","actions","indexOf","push","notifyOnAuthSuccess","publish","Event","PAYMENT_AUTH_SUCCESS","res","notifyOnAuthFail","PAYMENT_AUTH_FAIL","authorize","authorizePayment","notifyOnRejectSuccess","PAYMENT_REJECT_SUCCESS","notifyOnRejectFail","PAYMENT_REJECT_FAIL","reject","rejectPayment","notifyOnCancelSuccess","PAYMENT_CANCEL_SUCCESS","notifyOnCancelFail","PAYMENT_CANCEL_FAIL","cancelPayment","version","requestPaymentCancel","notifyOnDeleteFail","PAYMENT_DELETE_FAIL","notifyOnDeleteSuccess","PAYMENT_DELETE_SUCCESS","deletePayment","clearPaymentSelection","notifyOnBulkApproveSuccess","failCount","PAYMENT_BULK_APPROVE_SUCCESS","notifyOnBulkApproveFail","PAYMENT_BULK_APPROVE_FAIL","approveBulk","requestBulkApprove","finally","notifyOnBulkRejectSuccess","PAYMENT_BULK_REJECT_SUCCESS","notifyOnBulkRejectFail","PAYMENT_BULK_REJECT_FAIL","rejectBulk","requestBulkReject","bindEvents","subscribe","NOTIFICATION_EVENT","notification","$onInit","resource","function","payments"],"mappings":"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","file":"widget-bb-standing-payment-orders-ng/scripts/widget-bb-standing-payment-orders-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-payment-orders-ng\"), require(\"lib-bb-permissions-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-standing-payment-orders-ng\", [\"vendor-bb-angular\", \"lib-bb-model-errors\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\", \"model-bb-payment-orders-ng\", \"lib-bb-permissions-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-standing-payment-orders-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-payment-orders-ng\"), require(\"lib-bb-permissions-ng\"));\n\telse\n\t\troot[\"widget-bb-standing-payment-orders-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"model-bb-payment-orders-ng\"], root[\"lib-bb-permissions-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_148__, __WEBPACK_EXTERNAL_MODULE_193__, __WEBPACK_EXTERNAL_MODULE_194__, __WEBPACK_EXTERNAL_MODULE_196__, __WEBPACK_EXTERNAL_MODULE_197__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 70052c6c6190d07a36f3","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-standing-payment-orders-ng/model.xml\n// module id = 0\n// module chunks = 31","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 18\n// module chunks = 0 8 9 10 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_148__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 148\n// module chunks = 16 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_193__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 193\n// module chunks = 27 28 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_194__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 194\n// module chunks = 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_196__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-payment-orders-ng\"\n// module id = 196\n// module chunks = 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_197__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-permissions-ng\"\n// module id = 197\n// module chunks = 27 28 31 33","/**\n * @module widget-bb-standing-payment-orders-ng\n *\n * @description\n * Shows standing orders list\n */\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport modelPaymentOrdersModuleKey, {\n  modelPaymentOrdersKey,\n} from 'model-bb-payment-orders-ng';\nimport bbEventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport bbPermissionsModuleKey, { bbPermissionsKey } from 'lib-bb-permissions-ng';\n\nimport Controller from './controller';\nimport * as defaultHooks from './default-hooks';\n\nconst hooksKey = 'widget-bb-payment-order-ng:hooks';\n\nexport default angular\n  .module('widget-bb-standing-payment-orders-ng', [\n    modelPaymentOrdersModuleKey,\n    bbEventBusModuleKey,\n    bbPermissionsModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('StandingOrdersController', [\n    // dependencies to inject\n    modelPaymentOrdersKey,\n    hooksKey,\n    eventBusKey,\n    bbPermissionsKey,\n    /* into */\n    Controller,\n  ])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-standing-payment-orders-ng/scripts/index.js","import { E_AUTH, E_USER, E_CONNECTIVITY, E_UNEXPECTED } from 'lib-bb-model-errors';\nimport { Privileges, Event, Action } from './constants';\n\nconst errorMessages = {\n  [E_AUTH]: 'error.auth',\n  [E_USER]: 'error.user',\n  [E_CONNECTIVITY]: 'error.connectivity',\n  [E_UNEXPECTED]: 'error.unexpected',\n};\n\n/**\n * Defines the default pageSize for the standing orders page\n * as defined in the widget model.xml\n * @type {number}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n\n/**\n * Defines the default maxNavPages for the accounts page\n * as defined in the widget model.xml\n * @type {int}\n */\nconst DEFAULT_MAX_NAV_PAGES = 3;\n\n/**\n * Defines the default paginationType for the accounts page\n * as defined in the widget model.xml\n * @type {string}\n */\nconst DEFAULT_PAGINATION_TYPE = 'load-more';\n\n/**\n * @description\n * Creates an error object for template\n *\n * @name uiError\n *\n * @inner\n * @param {object} modelError Error object\n * @type {function}\n * @returns {{message: string}}\n */\nconst uiError = modelError => {\n  let error = '';\n\n  if (modelError && modelError.code) {\n    error = errorMessages[modelError.code];\n  }\n\n  return {\n    message: error,\n  };\n};\n\n/**\n * @name StandingOrdersController\n * @type {object}\n * @description\n * Shows standing orders list\n *\n * @usage\n * <div ng-controller=\"StandingOrdersController as $ctrl\">\n *   <!-- ... -->\n * </div>\n */\nexport default function StandingOrdersController(model, hooks, bus, permissions) {\n  const $ctrl = this;\n  const preferences = model.getStandingOrdersPreferences();\n  const pageSize = preferences.standingOrdersPageSize || DEFAULT_PAGE_SIZE;\n  const maxNavPages = preferences.standingOrdersMaxNavPages || DEFAULT_MAX_NAV_PAGES;\n  const paginationType = preferences.standingOrdersPaginationType || DEFAULT_PAGINATION_TYPE;\n  const dismissTime = Math.abs(preferences.standingOrdersNotificationDismissTime) || 3;\n\n  let state;\n\n  const standingOrders = {\n    rawItems: [],\n    params: {\n      from: 0,\n      size: pageSize,\n      currentPage: 1,\n      totalItems: 0,\n      maxNavPages,\n      paginationType,\n      orderBy: hooks.defaultSortableColumn(),\n      direction: hooks.defaultSortableDirection(),\n      get query() {\n        if (!state.standingOrders.searching) {\n          return null;\n        }\n\n        return state.search.query;\n      },\n    },\n  };\n\n  state = {\n    notifications: [],\n    currencies: null,\n    standingOrders: {\n      data: [],\n      get orderBy() { return standingOrders.params.orderBy; },\n      get direction() { return standingOrders.params.direction; },\n      loading: false,\n      searching: false,\n      hasMore: false,\n      error: null,\n    },\n    pageParams: standingOrders.params,\n    search: {\n      query: null,\n    },\n    filterParams: {\n      amountFrom: null,\n      amountTo: null,\n      currency: null,\n      dateRange: {\n        startDate: null,\n        endDate: null,\n      },\n      status: null,\n      transferFrequency: null,\n      fromAccount: {\n        identifier: null,\n        name: null,\n      },\n    },\n    initialLoading: true,\n    error: null,\n    selections: {\n      selectedPayments: [],\n      selectedPaymentsIds: [],\n      selectedPaymentsActionGrouped: {},\n    },\n    bulkActionDetails: {},\n    bulkActionNotification: {\n      isVisible: false,\n    },\n    isLoading: false,\n  };\n\n  /**\n   * @type {promise.<void>} loadMorePromise\n   */\n  let loadMorePromise = null;\n\n  /**\n   * Merges new orders with existing ones\n   *\n   * @inner\n   * @name append\n   * @type {function}\n   * @returns {array} Merged array of old and new orders\n   */\n  const append = (newItems, existingItems) => [...existingItems, ...newItems];\n\n  /**\n   * Replaces existing orders with new ones\n   *\n   * @inner\n   * @name replace\n   * @type {function}\n   * @returns {array} New payments\n   */\n  const replace = items => items;\n\n  /**\n   * @description\n   * Normalize date to required format.\n   *\n   * @inner\n   * @name StandingOrdersController#getNormalizedDate\n   * @type {function}\n   *\n   * @param param {Date|null} Date to normalize\n   *\n   * @returns {Date|null} Date object or null\n   */\n  const getNormalizedDate = (date) => {\n    if (date === null || date === undefined) {\n      return null;\n    }\n\n    const userOffset = date.getTimezoneOffset() * 60000;\n    return `${new Date(date - userOffset).toISOString().slice(0, 10)}`;\n  };\n\n  /**\n   * @description\n   * Normalize search query param.\n   *\n   * @inner\n   * @name StandingOrdersController#normalizeQueryParam\n   * @type {function}\n   *\n   * @param param {Object|null} Parameter to normalize\n   *\n   * @returns {Object|null}     Object or null\n   */\n  const normalizeQueryParam = param => (param === '' ? null : param);\n\n  /**\n   * @description\n   * Get all filter params.\n   *\n   * @inner\n   * @name StandingOrdersController#getParams\n   * @type {function}\n   *\n   * @returns {Promise} A Promise that adds values to a given argument\n   */\n  const getParams = () => Object.assign({}, {\n    nextExecutionDateFrom: getNormalizedDate($ctrl.state.filterParams.dateRange.startDate),\n    nextExecutionDateTo: getNormalizedDate($ctrl.state.filterParams.dateRange.endDate),\n    amountFrom: normalizeQueryParam($ctrl.state.filterParams.amountFrom),\n    amountTo: normalizeQueryParam($ctrl.state.filterParams.amountTo),\n    currency: normalizeQueryParam($ctrl.state.filterParams.currency),\n    status: normalizeQueryParam($ctrl.state.filterParams.status),\n    transferFrequency: normalizeQueryParam($ctrl.state.filterParams.transferFrequency),\n  });\n\n  /**\n   * @name StandingOrdersController#getPermissions\n   * @inner\n   * @type {function}\n   *\n   * @description\n   * Retrieve permissions for respective privilege set and store it\n   * into controller prop\n   *\n   * @return {Promise}\n   *\n   */\n  const getPermissions = () => permissions\n    .getPermissions(Privileges)\n    .then(privileges => {\n      $ctrl.privileges = privileges;\n    })\n    .catch(() => {\n      $ctrl.privileges = false;\n    });\n\n  /**\n   * @name load\n   *\n   * @description\n   * Loading standing orders\n   *\n   * @inner\n   * @type {function}\n   *\n   * @param {function} merge\n   * @param {object} params\n   * @return {Promise.<module:model-bb-payment-ng.Payments, ModelError>} A promise\n   */\n  const load = (merge, params) => {\n    const requestParams = Object.assign({}, hooks.truncateParams(standingOrders.params), params);\n    state.standingOrders.loading = true;\n\n    return model.getStandingOrders(requestParams)\n      .then(raw => {\n        state.standingOrders.loading = false;\n        standingOrders.rawItems = merge(raw.data, standingOrders.rawItems);\n        state.standingOrders.hasMore = standingOrders.rawItems.length < raw.totalCount;\n\n        state.pageParams.totalItems = raw.totalCount || 0;\n        state.pageParams.currentPage = requestParams.currentPage;\n\n        return standingOrders.rawItems;\n      })\n      .then(hooks.processStandingOrders)\n      .then(processedPayments => {\n        state.standingOrders.data = processedPayments;\n      })\n      .catch(error => {\n        state.error = uiError(error);\n        state.standingOrders.loading = false;\n      });\n  };\n\n  /**\n   * @name StandingOrdersController#loadMore\n   *\n   * @description\n   * Loads more standing orders if they are available.\n   *\n   * @type {function}\n   * @param {function} done Callback to stop loading\n   * @return {Promise.<module:model-bb-payment-ng.Payments, ModelError>} A promise\n   */\n  const loadMore = done => {\n    if (state.standingOrders.loading) {\n      return loadMorePromise;\n    }\n\n    standingOrders.params.from++;\n\n    loadMorePromise = load(append, getParams())\n      .then(() => {\n        loadMorePromise = null;\n        done();\n      })\n      .catch(() => {\n        loadMorePromise = null;\n        standingOrders.params.from--;\n        done();\n      });\n\n    return loadMorePromise;\n  };\n\n  /**\n   * @description\n   * Get params for request.\n   *\n   * @name getRequestParams\n   *\n   * @inner\n   * @param {Object} params Custom params\n   * @type {function}\n   * @returns {Object} A request params\n   */\n  const getRequestParams = (params) => Object.assign({}, standingOrders.params, {\n    // In BE services pagination starts from 0 page, but in bootstrap directive it's 1\n    from: params.currentPage - 1,\n  }, params);\n\n  /**\n   * @description\n   * Change page of displayed accounts.\n   *\n   * @name StandingOrdersController#changePage\n   * @type {function}\n   * @returns {Promise.<module:model-bb-product-summary-ng.Accounts, ModelError>}\n   * A Promise with loaded accounts\n   */\n  const changePage = (params = {}) => {\n    const currentParams = Object.assign(getRequestParams(params), getParams());\n\n    return load(replace, currentParams);\n  };\n\n  /**\n   * @name reload\n   *\n   * @description\n   * Reloads the current collection\n   *\n   * @inner\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const reload = () => {\n    const params = standingOrders.params;\n    const from = state.pageParams.currentPage ? (state.pageParams.currentPage - 1) : 0;\n    const size = (params.from + 1) * params.size;\n    return load(replace, Object.assign({ from, size }, getParams()));\n  };\n\n  /**\n   * @name StandingOrdersController#onSort\n   * @type {function}\n   * @description\n   * Loads sorted list of payments\n   * @param  {string} orderBy   Column key to sort\n   * @param  {string} direction Sort direction\n   */\n  const onSort = (orderBy, direction) => {\n    Object.assign(standingOrders.params, {\n      orderBy,\n      direction,\n    });\n    reload();\n  };\n\n  /**\n   * @name StandingOrdersController#onSearchSubmit\n   * @type {function}\n   * @description\n   * Enables searching mode and loads payment orders based on search query\n   * @return\n   *  {Promise.<module:model-bb-payment-orders-ng.Payments, module:lib-bb-model-errors.ModelError>}\n   *  A promise\n   */\n  const onSearchSubmit = () => {\n    const query = $ctrl.state.search.query;\n    const queryHasValue = Boolean(typeof query === 'string' && query.trim().length);\n    $ctrl.state.standingOrders.searching = queryHasValue;\n    return load(replace);\n  };\n\n  /**\n   * @name StandingOrdersController#onSearchClear\n   * @type {function}\n   * @description\n   * Disables searching mode and resets payment orders\n   * @return\n   *  {Promise.<module:model-bb-payment-orders-ng.Payments, module:lib-bb-model-errors.ModelError>}\n   *  A promise\n   */\n  const onSearchClear = () => {\n    $ctrl.state.standingOrders.searching = false;\n    return load(replace);\n  };\n\n  // TODO: Show currencies selector in filter form when search service supports it\n  // /**\n  //  * @description\n  //  * Request currencies list\n  //  *\n  //  * @inner\n  //  * @name StandingOrdersController#getCurrencies\n  //  * @type {function}\n  //  * @returns {Array.<Object>} Currencies array\n  //  */\n  // const getCurrencies = () =>\n  //   model.getCurrencies()\n  //     .then(currencies => {\n  //       state.currencies = currencies;\n  //     })\n  //     .catch(err => {\n  //       state.error = uiError(err);\n  //     });\n\n  /**\n   * @description\n   * Load accounts available to payment from.\n   *\n   * @name StandingOrdersController#getAccountsFrom\n   * @type {function}\n   *\n   * @param params\n   * @returns {Promise.<Object>} A Promise that returns a flat accounts list.\n   */\n  const getAccountsFrom = params => model.getAccountsFrom(params)\n    .then(accounts => ({ data: accounts, hasMore: accounts.hasMore, totalItems: accounts.length }))\n    .catch(err => {\n      state.error = uiError(err);\n    });\n\n  /**\n   * @name StandingOrdersController#selectAccountFrom\n   *\n   * @description\n   * Assign selected fromAccount identifier to the filter form.\n   * @type {function}\n   *\n   * @param {String?} identifier  Account identifier IBAN/BBAN\n   * @param {String?} name        Account name\n   */\n  const selectAccountFrom = ({ identifier = null, name = null }) => {\n    Object.assign($ctrl.state.filterParams.fromAccount, { identifier, name });\n  };\n\n  /**\n   * @description\n   * Call filter method.\n   *\n   * @name StandingOrdersController#onApplyFilter\n   * @type {function}\n   */\n  const onApplyFilter = () => {\n    $ctrl.state.standingOrders.searching = true;\n    return load(replace, getParams());\n  };\n\n  /**\n   * @name StandingOrdersController#updateLoadingState\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Update the loading state\n   *\n   * @param {Boolean} isLoading\n   */\n  const updateLoadingState = isLoading => Object.assign(state, { isLoading });\n\n  /**\n   * @name StandingOrdersController#updateBulkActionDetails\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Update the state of the ctrl with bulk action details\n   *\n   * @param {Object} update the response data object of bulk request\n   */\n  const updateBulkActionDetails = update => {\n    const missingPaymentIdsList = update.paymentOrders\n      .filter(item => !item.paymentOrder)\n      .map(payment => payment.paymentOrderId);\n\n    const missingPaymentList = state.selections.selectedPayments\n      .filter(payment => missingPaymentIdsList.includes(payment.id));\n\n    Object.assign(update, {\n      paymentOrders: [\n        ...update.paymentOrders.filter(item => item.paymentOrder && item.status.code === 'ERROR'),\n        ...missingPaymentList,\n      ],\n    });\n\n    Object.assign(state, {\n      bulkActionDetails: update,\n      bulkActionNotification: {\n        isVisible: true,\n      },\n    });\n  };\n\n  /**\n   * @name StandingOrdersController#updateSelectionStateByPaymentId\n   * @inner\n   *\n   * @description\n   * Find the payment by ID and remove it from the selected payments\n   *\n   * @type {function}\n   *\n   * @param {String} paymentId\n   */\n  const updateSelectionStateByPaymentId = paymentId => {\n    if (!state.selections.selectedPaymentsIds.length) { return; }\n\n    const {\n      selectedPayments,\n      selectedPaymentsIds,\n    } = state.selections;\n\n    const update = {\n      selectedPayments: [...selectedPayments.filter(p => p.id !== paymentId)],\n      selectedPaymentsIds: [...selectedPaymentsIds.filter(id => id !== paymentId)],\n      selectedPaymentsActionGrouped: {\n        [Action.APPROVE]: [],\n        [Action.REJECT]: [],\n      },\n    };\n\n    update.selectedPayments.forEach(payment => {\n      if (Array.isArray(payment.actions) && payment.actions.indexOf(Action.APPROVE) >= 0) {\n        update.selectedPaymentsActionGrouped[Action.APPROVE].push(payment);\n      }\n\n      if (Array.isArray(payment.actions) && payment.actions.indexOf(Action.REJECT) >= 0) {\n        update.selectedPaymentsActionGrouped[Action.REJECT].push(payment);\n      }\n    });\n\n    Object.assign(state, { selections: update });\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnAuthSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's success.\n   *\n   * @fires bb.event.payment.auth.success\n   */\n  const notifyOnAuthSuccess = res => {\n    bus.publish(Event.PAYMENT_AUTH_SUCCESS, res);\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnAuthFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's failure.\n   *\n   * @fires bb.event.payment.auth.fail\n   */\n  const notifyOnAuthFail = err => {\n    bus.publish(Event.PAYMENT_AUTH_FAIL, err);\n  };\n\n  /**\n   * @name StandingOrdersController#authorize\n   * @type {function}\n   *\n   * @description\n   * Requests payment authorization (approval).\n   *\n   * @param {String} paymentId Id of the payment\n   *\n   * @returns {Promise}\n   */\n  const authorize = paymentId => {\n    model.authorizePayment(paymentId)\n      .then(() => {\n        notifyOnAuthSuccess();\n        load(replace);\n      })\n      .catch(notifyOnAuthFail);\n\n    // Update selection state\n    updateSelectionStateByPaymentId(paymentId);\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnRejectSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's success.\n   *\n   * @fires bb.event.payment.reject.success\n   */\n  const notifyOnRejectSuccess = res => {\n    bus.publish(Event.PAYMENT_REJECT_SUCCESS, res);\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnRejectFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on authorization request's failure.\n   *\n   * @fires bb.event.payment.reject.fail\n   */\n  const notifyOnRejectFail = err => {\n    bus.publish(Event.PAYMENT_REJECT_FAIL, err);\n  };\n\n  /**\n   * @name StandingOrdersController#reject\n   * @type {function}\n   *\n   * @description\n   * Requests payment rejection.\n   *\n   * @param {String} paymentId Id of the payment\n   *\n   * @returns {Promise}\n   */\n  const reject = paymentId => {\n    model.rejectPayment(paymentId)\n      .then(() => {\n        notifyOnRejectSuccess();\n        load(replace);\n      })\n      .catch(notifyOnRejectFail);\n\n    // Update selection state\n    updateSelectionStateByPaymentId(paymentId);\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnCancelSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on cancel request's success.\n   *\n   * @fires bb.event.payment.cancel.success\n   */\n  const notifyOnCancelSuccess = res => {\n    bus.publish(Event.PAYMENT_CANCEL_SUCCESS, res);\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnCancelFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on cancel request's failure.\n   *\n   * @fires bb.event.payment.cancel.fail\n   */\n  const notifyOnCancelFail = err => {\n    bus.publish(Event.PAYMENT_CANCEL_FAIL, err);\n  };\n\n  /**\n   * @name StandingOrdersController#cancel\n   * @type {function}\n   *\n   * @description request payment cancel\n   *\n   * @param {string} paymentId Id of the payment\n   * @param {number} version property on payment Object\n   *\n   * @returns {Promise}\n   */\n  const cancelPayment = (paymentId, version) => {\n    model.requestPaymentCancel(paymentId, version)\n      .then(() => {\n        notifyOnCancelSuccess();\n        load(replace);\n      })\n      .catch(notifyOnCancelFail);\n\n    // Update selection state\n    updateSelectionStateByPaymentId(paymentId);\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnDeleteFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on delete request's failure.\n   *\n   * @fires bb.event.payment.delete.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnDeleteFail = err => {\n    bus.publish(Event.PAYMENT_DELETE_FAIL, err);\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnDeleteSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on delete request's success.\n   *\n   * @fires bb.event.payment.delete.success\n   *\n   * @returns {object}\n   */\n  const notifyOnDeleteSuccess = res => {\n    bus.publish(Event.PAYMENT_DELETE_SUCCESS, res);\n  };\n\n  /**\n   * @name StandingOrdersController#deletePayment\n   * @type {function}\n   *\n   * @description\n   * Requests payment delete.\n   *\n   * @param {String} paymentId Id of the payment\n   * @param {Number} version property on payment Object\n   *\n   * @returns {Promise}\n   */\n  const deletePayment = (paymentId, version) => {\n    model.deletePayment(paymentId, version)\n      .then(() => {\n        notifyOnDeleteSuccess();\n        load(replace);\n      })\n      .catch(notifyOnDeleteFail);\n\n    // Update selection state\n    updateSelectionStateByPaymentId(paymentId);\n  };\n\n  /**\n   * @name StandingOrdersController#clearPaymentSelection\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * de-select payments by updating selection state\n   */\n  const clearPaymentSelection = () => {\n    Object.assign(state, {\n      selections: {\n        selectedPayments: [],\n        selectedPaymentsIds: [],\n        selectedPaymentsActionGrouped: {},\n      },\n    });\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnBulkApproveSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on bulk approve request's success.\n   *\n   * @fires bb.event.payment.bulk.approve.success\n   *\n   * @returns {object}\n   */\n  const notifyOnBulkApproveSuccess = res => {\n    if (res.failCount > 0) {\n      updateBulkActionDetails(res);\n    } else {\n      bus.publish(Event.PAYMENT_BULK_APPROVE_SUCCESS, res);\n    }\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnBulkApproveFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on bulk approve request's failure.\n   *\n   * @fires bb.event.payment.bulk.approve.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnBulkApproveFail = err => {\n    bus.publish(Event.PAYMENT_BULK_APPROVE_FAIL, err);\n  };\n\n  /**\n   * @name StandingOrdersController#approveBulk\n   * @type {function}\n   *\n   * @description\n   * Request approving the selected payments.\n   *\n   * @returns {Promise}\n   */\n  const approveBulk = () => {\n    updateLoadingState(true);\n\n    model.requestBulkApprove(state.selections.selectedPaymentsIds)\n      .then(({ data }) => {\n        notifyOnBulkApproveSuccess(data);\n        clearPaymentSelection();\n        load(replace);\n      })\n      .catch(notifyOnBulkApproveFail)\n      .finally(() => updateLoadingState(false));\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnBulkRejectSuccess\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on bulk reject request's success.\n   *\n   * @fires bb.event.payment.bulk.reject.success\n   *\n   * @returns {object}\n   */\n  const notifyOnBulkRejectSuccess = res => {\n    if (res.failCount > 0) {\n      updateBulkActionDetails(res);\n    } else {\n      bus.publish(Event.PAYMENT_BULK_REJECT_SUCCESS, res);\n    }\n  };\n\n  /**\n   * @name StandingOrdersController#notifyOnBulkRejectFail\n   * @type {function}\n   * @inner\n   *\n   * @description\n   * Emit events based on bulk reject request's failure.\n   *\n   * @fires bb.event.payment.bulk.reject.fail\n   *\n   * @returns {object}\n   */\n  const notifyOnBulkRejectFail = err => {\n    bus.publish(Event.PAYMENT_BULK_REJECT_FAIL, err);\n  };\n\n  /**\n   * @name StandingOrdersController#approveBulk\n   * @type {function}\n   *\n   * @description\n   * Request rejecting the selected payments.\n   *\n   * @returns {Promise}\n   */\n  const rejectBulk = () => {\n    updateLoadingState(true);\n\n    model.requestBulkReject(state.selections.selectedPaymentsIds)\n      .then(({ data }) => {\n        notifyOnBulkRejectSuccess(data);\n        clearPaymentSelection();\n        load(replace);\n      })\n      .catch(notifyOnBulkRejectFail)\n      .finally(() => updateLoadingState(false));\n  };\n\n  /**\n   * @name StandingOrdersController#bindEvents\n   *\n   * @description\n   * Adds subscriptions to bus events\n   *\n   * @inner\n   * @type {function}\n   */\n  const bindEvents = () => {\n    bus.subscribe(Event.NOTIFICATION_EVENT, (notification) => {\n      state.notifications.push(notification);\n    });\n  };\n\n  /**\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name StandingOrdersController#$onInit\n   * @type {function}\n   * @returns {Promise.<module:model-bb-payment-orders-ng.Payments, ModelError>}\n   */\n  const $onInit = () => load(replace)\n    .then(bindEvents)\n    .then(() => {\n      state.initialLoading = false;\n      getPermissions();\n    })\n    // TODO: Show currencies selector in filter form when search service supports it\n    // .then(() => getCurrencies())\n    .catch(() => {\n      state.initialLoading = false;\n    });\n\n  Object.assign($ctrl, {\n    state,\n    dismissTime,\n\n    /**\n     * @description\n     * Container to store retrieved privileges state\n     *\n     * @name StandingOrdersController#privileges\n     * @type {object}\n     */\n    privileges: null,\n\n    $onInit,\n    loadMore,\n    onSort,\n    changePage,\n    onSearchSubmit,\n    onSearchClear,\n    getAccountsFrom,\n    onApplyFilter,\n    selectAccountFrom,\n    authorize,\n    reject,\n    deletePayment,\n    approveBulk,\n    rejectBulk,\n    cancelPayment,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-standing-payment-orders-ng/scripts/controller.js","/**\n * @description\n * Config for retrieving user privileges\n *\n * @type {object}\n */\nexport const Privileges = [\n  {\n    resource: 'Payments',\n    function: 'SEPA CT',\n    privileges: ['approve'],\n  },\n];\n\n/**\n * @description\n * List of events to be handled in controller\n *\n * @type {Object}\n */\nexport const Event = {\n  PAYMENT_AUTH_SUCCESS: 'bb.event.standing.auth.success',\n  PAYMENT_AUTH_FAIL: 'bb.event.standing.auth.fail',\n  PAYMENT_REJECT_SUCCESS: 'bb.event.standing.reject.success',\n  PAYMENT_REJECT_FAIL: 'bb.event.standing.reject.fail',\n  PAYMENT_CANCEL_SUCCESS: 'bb.event.standing.cancel.success',\n  PAYMENT_CANCEL_FAIL: 'bb.event.standing.cancel.fail',\n  PAYMENT_DELETE_SUCCESS: 'bb.event.standing.delete.success',\n  PAYMENT_DELETE_FAIL: 'bb.event.standing.delete.fail',\n  PAYMENT_BULK_REJECT_SUCCESS: 'bb.event.standing.bulk.reject.success',\n  PAYMENT_BULK_REJECT_FAIL: 'bb.event.standing.bulk.reject.fail',\n  PAYMENT_BULK_APPROVE_SUCCESS: 'bb.event.standing.bulk.approve.success',\n  PAYMENT_BULK_APPROVE_FAIL: 'bb.event.standing.bulk.approve.fail',\n  NOTIFICATION_EVENT: 'bb.event.notifications.notify',\n};\n\n/**\n * Payment actions enum\n * @name Action\n * @type {Object}\n */\nexport const Action = {\n  APPROVE: 'APPROVE',\n  REJECT: 'REJECT',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-standing-payment-orders-ng/scripts/constants.js","/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-bb-standing-payment-orders-ng\n */\n\n/**\n * @name Hooks#processStandingOrders\n * @type {function}\n *\n * @description\n * Hook for processing standing orders.\n *\n * @param payments {array} Payments to process\n * @returns {array} Processed payments\n */\nexport const processStandingOrders = payments => payments;\n\n/**\n * @name Hooks#defaultSortableColumn\n *\n * @description\n * defaultSortableColumn default hook\n *\n * @type {function}\n * @returns {?string}\n */\nexport const defaultSortableColumn = () => null;\n\n/**\n * @name Hooks#defaultSortableDirection\n *\n * @description\n * defaultSortableDirection default hook\n *\n * @type {function}\n * @returns {?string}\n */\nexport const defaultSortableDirection = () => null;\n\n/**\n * @name Hooks#truncateParams\n *\n * @description\n * truncateParams default hook\n *\n * @type {function}\n * @returns {object}\n */\nexport const truncateParams = params => params;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-standing-payment-orders-ng/scripts/default-hooks.js"],"sourceRoot":""}