{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6********","webpack:///webpack/bootstrap 50256e16f76c6c9e44d8?45a5********","webpack:///./widget-fx-rate-table-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114***","webpack:///external \"lib-bb-widget-extension-ng\"?b547*","webpack:///external \"lib-bb-widget-ng\"?84ad*","webpack:///external \"lib-bb-intent-ng\"?add1*","webpack:///external \"lib-bb-state-container-ng\"?8d56","webpack:///external \"model-fx-trading-ng\"?0ca1","webpack:///external \"lib-bb-event-bus-ng\"?8215","webpack:///external \"lib-fx-trading-view-model-helper\"?bfd6","webpack:///./widget-fx-rate-table-ng/scripts/index.js","webpack:///./widget-fx-rate-table-ng/scripts/controller.js","webpack:///./widget-fx-rate-table-ng/scripts/constants.js","webpack:///./widget-fx-rate-table-ng/scripts/service.js","webpack:///./widget-fx-rate-table-ng/scripts/view-model.js"],"names":["hooksKey","serviceKey","viewModelKey","angular","module","modelFxTradingModuleKey","widgetModuleKey","bbIntentModuleKey","eventBusModuleKey","stateContainerModuleKey","factory","defaultHooks","modelFxTradingKey","service","bbStateContainerKey","widgetKey","viewModel","controller","bbIntentKey","eventBusKey","Controller","name","FXRateTableController","widgetInstance","bbIntents","eventBus","$ctrl","intervalUpdateRates","getLongPreference","Preference","INTERVAL_UPDATE_RATES","intents","viewCurrencyPairDetails","create","IntentsKeys","CURRENCYPAIR_DETAILS","load","page","currencyPairId","setCurrencyPairIdSelected","viewTradeOrder","publish","SHOW_TRADE_ORDER","$onInit","init","$onDestroy","stopRatesUpdate","Object","assign","state","getState","errors","PAGE_SIZE","MAX_NAV_PAGES","DEFAULT_PAGE_SIZE","DEFAULT_MAX_NAV_PAGES","model","timerId","loadCurrencyRates","currentParams","currencypair","currencyPairs","data","map","item","pairKey","then","afterLoadCurrencyRatesSuccess","catch","error","afterLoadCurrencyRatesError","clearInterval","setPageNumberSelected","beforeLoadCurrencyPairs","pageParam","getPageNumberSelected","pageNumber","pageParams","from","loadCurrencyPairs","afterLoadCurrencyPairsSuccess","totalItems","totalCount","setInterval","afterLoadCurrencyPairsError","stateContainer","pageSize","maxNavPages","params","size","initialState","loading","currencyRates","initialLoading","currencyPairsError","currencyRatesError","raw","code"],"mappings":"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","file":"widget-fx-rate-table-ng/scripts/widget-fx-rate-table-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-state-container-ng\"), require(\"model-fx-trading-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-fx-trading-view-model-helper\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-fx-rate-table-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-extension-ng\", \"lib-bb-widget-ng\", \"lib-bb-intent-ng\", \"lib-bb-state-container-ng\", \"model-fx-trading-ng\", \"lib-bb-event-bus-ng\", \"lib-fx-trading-view-model-helper\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-fx-rate-table-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-state-container-ng\"), require(\"model-fx-trading-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-fx-trading-view-model-helper\"));\n\telse\n\t\troot[\"widget-fx-rate-table-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-state-container-ng\"], root[\"model-fx-trading-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-fx-trading-view-model-helper\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_38__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_40__, __WEBPACK_EXTERNAL_MODULE_45__, __WEBPACK_EXTERNAL_MODULE_46__, __WEBPACK_EXTERNAL_MODULE_47__, __WEBPACK_EXTERNAL_MODULE_53__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50256e16f76c6c9e44d8","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-fx-rate-table-ng/model.xml\n// module id = 0\n// module chunks = 9","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 27\n// module chunks = 5 6 7 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_38__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 38\n// module chunks = 7 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 39\n// module chunks = 7 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_40__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 40\n// module chunks = 7 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container-ng\"\n// module id = 45\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_46__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-fx-trading-ng\"\n// module id = 46\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 47\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_53__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-fx-trading-view-model-helper\"\n// module id = 53\n// module chunks = 8 9 10","/**\n * @module widget-fx-rate-table-ng\n *\n * @description\n * FX rate table widget.\n *\n *\n * @example\n *  <div ng-controller=\"FXRateTableController as $ctrl\">\n *    <ul>\n *       <li data-ng-repeat=\"item in ext.helpers.currencyPairs()\">{{item.pairKey}}</li>\n *    </ul>\n *  </div>\n */\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport stateContainerModuleKey, { bbStateContainerKey } from 'lib-bb-state-container-ng';\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport modelFxTradingModuleKey, { modelFxTradingKey } from 'model-fx-trading-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport Controller from './controller';\nimport defaultHooks from './default-hooks';\nimport service from './service';\nimport viewModel from './view-model';\n\nconst hooksKey = 'widget-fx-rate-table-ng:hooks';\nconst serviceKey = 'widget-fx-rate-table-ng:service';\nconst viewModelKey = 'widget-fx-rate-table-ng:viewModel';\n\n/**\n * @name default\n * @type {string}\n * @description Angular module name\n */\nexport default angular\n  .module('widget-fx-rate-table-ng', [\n    modelFxTradingModuleKey,\n    widgetModuleKey,\n    bbIntentModuleKey,\n    eventBusModuleKey,\n    stateContainerModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n  .factory(serviceKey, [\n    modelFxTradingKey,\n    viewModelKey,\n    service,\n  ])\n  .factory(viewModelKey, [\n    bbStateContainerKey,\n    widgetKey,\n    hooksKey,\n    viewModel,\n  ])\n\n\n  .controller('FXRateTableController', [\n    widgetKey,\n    bbIntentKey,\n    serviceKey,\n    viewModelKey,\n    eventBusKey,\n    /* into */\n    Controller,\n  ])\n  .name;\n\n/**\n * CurrencyPair type definition\n * @typedef {Object} CurrencyPair\n * @property {string}        pairKey          - Currency pair id\n */\n\n /**\n * CurrencyRate type definition\n * @typedef {Object} CurrencyRate\n * @property {string}        pairKey          - Currency pair id\n * @property {number}        price            - Last executed price for the currency pair\n * @property {number}        change           - Today's price change\n * @property {number}        changePct        - Today's price change in percent\n * @property {number}        bid              - Bid price available for the currency pair\n * @property {number}        ask              - Ask price available for the currency pair\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-fx-rate-table-ng/scripts/index.js","/* global angular*/\nimport { Preference, IntentsKeys } from './constants';\n\n/**\n * @name FXRateTableController\n * @ngkey FXRateTableController\n * @type {object}\n * @description\n * FX rate table controller.\n */\nexport default function FXRateTableController(\n  widgetInstance,\n  bbIntents,\n  service,\n  viewModel,\n  eventBus\n) {\n  const $ctrl = this;\n\n  /**\n   * @name intervalUpdateRates\n   * @type {Number} intervalUpdateRates\n   * @description\n   * Delay of update table rates\n   */\n  const intervalUpdateRates =\n    widgetInstance.getLongPreference(Preference.INTERVAL_UPDATE_RATES) * 1000;\n\n  /**\n   * @description\n   * A set of intents that the Portfolio Summary controller uses or handles.\n   *\n   * @name intents\n   * @type {Object}\n   * @inner\n   */\n  const intents = {\n    viewCurrencyPairDetails: bbIntents.create(IntentsKeys.CURRENCYPAIR_DETAILS),\n  };\n\n  /**\n   * @description\n   * Handles loading trading rate table data\n   *\n   * @public\n   * @name FXRateTableController#load\n   * @type {function}\n   * @param {number} page - index of the page to load\n   * Load rate table data\n   * @returns {promise.<array>}\n   */\n  const load = ({ page } = {}) =>\n    service.load({ page }, intervalUpdateRates);\n\n  /**\n   * @name viewCurrencyPairDetails\n   *\n   * @description\n   * Navigate to currency pair details\n   *\n   * @param {string} currencyPairId ID of currency pair to load\n   * @type {function}\n   */\n  const viewCurrencyPairDetails = (currencyPairId) => {\n    service.setCurrencyPairIdSelected(currencyPairId);\n    intents.viewCurrencyPairDetails();\n  };\n\n  /**\n   * @name viewTradeOrder\n   *\n   * @description\n   * view trade order modal\n   *\n   * @param {string} currencyPairId currency pair id\n   * @type {function}\n   */\n  const viewTradeOrder = (currencyPairId) => {\n    service.setCurrencyPairIdSelected(currencyPairId);\n    eventBus.publish(IntentsKeys.SHOW_TRADE_ORDER);\n  };\n\n  /*\n   * @description\n   * Widget initialization logic.\n   * Loads rate table data\n   */\n  const $onInit = () => {\n    viewModel.init();\n    return load();\n  };\n\n  const $onDestroy = () => service.stopRatesUpdate();\n\n  Object.assign($ctrl, {\n    viewCurrencyPairDetails,\n    viewTradeOrder,\n    $onInit,\n    $onDestroy,\n    load,\n  });\n\n  return Object.assign(\n    {\n      get state() {\n        return viewModel.getState();\n      },\n      get errors() {\n        return viewModel.getState().errors;\n      },\n    },\n    $ctrl\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-fx-rate-table-ng/scripts/controller.js","/**\n * @name Preference\n * @type {object}\n *\n * @description\n * Widget preferences enum\n *\n * @property {string} PAGE_SIZE             Number of items per page\n * @property {string} MAX_NAV_PAGES         Number of pagination items\n * @property {number} DEFAULT_PAGE_SIZE     Defines the default pageSize for the direct debits page\n * @property {number} DEFAULT_MAX_NAV_PAGES Defines the default maxNavPages for the accounts page\n */\n// eslint-disable-next-line import/prefer-default-export\nexport const Preference = {\n  PAGE_SIZE: 'bb.fxRateTable.pageSize',\n  MAX_NAV_PAGES: 'bb.fxRateTable.maxNavPages',\n  INTERVAL_UPDATE_RATES: 'bb.fxRateTable.intervalUpdateRates',\n  DEFAULT_PAGE_SIZE: 10,\n  DEFAULT_MAX_NAV_PAGES: 3,\n};\n\n/**\n * @description\n * Widget intents to be handled\n *\n * @name IntentsKeys\n * @type {object}\n */\nexport const IntentsKeys = {\n  CURRENCYPAIR_DETAILS: 'view.currencypair.details',\n  SHOW_TRADE_ORDER: 'bb.event.show.tradeOrder',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-fx-rate-table-ng/scripts/constants.js","/* global angular */\nexport default (model, viewModel) => {\n  let timerId;\n  /**\n   * @description\n   * Handles loading rates of currency pairs data\n   * @public\n   * @name loadCurrencyRates\n   * @type {function}\n   * Load currency rates\n   * @returns {promise.<array>}\n   */\n  const loadCurrencyRates = () => {\n    const currentParams = {\n      currencypair: viewModel.getState().currencyPairs.data.map(item => item.pairKey),\n    };\n\n    return model.loadCurrencyRates(currentParams)\n      .then((data) => {\n        viewModel.afterLoadCurrencyRatesSuccess({\n          data: data.data,\n        });\n        return data;\n      })\n      .catch((error) => {\n        viewModel.afterLoadCurrencyRatesError(error);\n        throw error;\n      });\n  };\n\n  /**\n   * @description\n   * Method for stop rates auto update by interval\n   * @public\n   * @name stopRatesUpdate\n   * @type {function}\n   * Stop rates updates\n   */\n  const stopRatesUpdate = () => {\n    if (timerId) {\n      clearInterval(timerId);\n      timerId = null;\n    }\n  };\n\n  /**\n   * @name setPageNumberSelected\n   * @type {function}\n   * @description\n   * Set current selected page number\n   * @param {string} page number of page to set selected\n   */\n  const setPageNumberSelected = (page) => {\n    model.setPageNumberSelected(page);\n  };\n\n  /**\n   * @description\n   * Handles loading rate table data\n   * @public\n   * @name load\n   * @param {Object} page index of the page to load\n   * @param {number} intervalUpdateRates interval of rates update\n   * @type {function}\n   * Load rate table data\n   * @returns {promise.<array>}\n   */\n  const load = ({ page } = {}, intervalUpdateRates) => {\n    viewModel.beforeLoadCurrencyPairs();\n    let pageParam;\n    stopRatesUpdate();\n\n    return model.getPageNumberSelected()\n      .then((pageNumber) => {\n        if (page || page === 0) {\n          pageParam = page;\n        } else if (pageNumber) {\n          pageParam = pageNumber;\n        } else {\n          pageParam = viewModel.getState().pageParams.from;\n        }\n        const currentParams = Object.assign(\n          {},\n          viewModel.getState().pageParams,\n          { from: pageParam }\n        );\n        setPageNumberSelected(pageParam);\n        return model.loadCurrencyPairs(currentParams);\n      })\n      .then((data) => {\n        viewModel.afterLoadCurrencyPairsSuccess({\n          totalItems: data.totalCount,\n          from: pageParam,\n          data: data.data,\n        });\n        return data;\n      })\n      .then(() => {\n        loadCurrencyRates();\n      })\n      .then(() => {\n        timerId = setInterval(() => { loadCurrencyRates(); }, intervalUpdateRates);\n      })\n      .catch((error) => {\n        viewModel.afterLoadCurrencyPairsError(error);\n        throw error;\n      });\n  };\n\n  /**\n   * @name setCurrencyPairIdSelected\n   * @type {function}\n   * @description\n   * Set current selected currency pair id\n   * @param {string} currencyPairId currency pair id to set selected\n   */\n  const setCurrencyPairIdSelected = (currencyPairId) => {\n    model.setCurrencyPairIdSelected(currencyPairId);\n  };\n\n  return {\n    load,\n    loadCurrencyRates,\n    stopRatesUpdate,\n    setCurrencyPairIdSelected,\n    setPageNumberSelected,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-fx-rate-table-ng/scripts/service.js","import { wrapActions } from 'lib-fx-trading-view-model-helper';\nimport { Preference } from './constants';\n\nexport default function (\n  stateContainer,\n  widgetInstance\n) {\n  /**\n   * @name pageSize\n   * @type {Number} pageSize\n   * @description\n   * Number of records to return per request\n   *\n   */\n  const pageSize =\n    widgetInstance.getLongPreference(Preference.PAGE_SIZE) ||\n    Preference.DEFAULT_PAGE_SIZE;\n\n  /**\n   * @name maxNavPages\n   * @type {Number} maxNaxPages\n   * @description\n   * Maximum number of navigation pages to display\n   */\n  const maxNavPages =\n    widgetInstance.getLongPreference(Preference.MAX_NAV_PAGES) ||\n    Preference.DEFAULT_MAX_NAV_PAGES;\n\n  /**\n   * @name currencyPairs\n   * @type {object}\n   *\n   * @inner\n   * @property {object} params\n   * @property {number} params.from Index of page to load data from\n   * @property {number} params.size Number of currency pairs to retrieve\n   * @property {number} params.totalItems Number of total currency pairs\n   * @property {number} params.maxNavPages Number of max. number navigation pages\n   */\n  const currencyPairs = {\n    params: {\n      from: 0,\n      size: pageSize,\n      totalItems: 0,\n      maxNavPages,\n    },\n  };\n\n  /**\n   * @name initialState\n   * @description Initial state of rate table store\n   * @type {object}\n   * @property {object} currencyPairs      An object of currency pairs\n   * @property {boolean} initialLoading    Boolean flag of initial loading\n   * @property {object} pageParams         parameters of the page\n   * @property {object} errors             currency pairs errors\n   */\n  const initialState = {\n    currencyPairs: {\n      data: [],\n      loading: false,\n    },\n    currencyRates: {\n      data: [],\n    },\n    initialLoading: true,\n    pageParams: currencyPairs.params,\n    errors: {\n      currencyPairsError: null,\n      currencyRatesError: null,\n    },\n  };\n\n  return {\n    getState: () => stateContainer.getState(),\n    ...wrapActions(stateContainer, {\n      init: (state = initialState) => state,\n      beforeLoadCurrencyPairs: () => ({\n        currencyPairs: {\n          loading: true,\n        },\n      }),\n      afterLoadCurrencyPairsSuccess: (state, raw) => ({\n        initialLoading: false,\n        currencyPairs: {\n          loading: false,\n          data: raw.data,\n        },\n        pageParams: {\n          totalItems: raw.totalItems,\n          from: raw.from,\n        },\n        errors: {\n          currencyPairsError: null,\n        },\n      }),\n      afterLoadCurrencyPairsError: (state, error) => ({\n        initialLoading: false,\n        currencyPairs: {\n          loading: false,\n          data: [],\n        },\n        errors: {\n          currencyPairsError: error.code,\n        },\n      }),\n      afterLoadCurrencyRatesSuccess: (state, raw) => ({\n        currencyRates: {\n          data: raw.data,\n        },\n        errors: {\n          currencyRatesError: null,\n        },\n      }),\n      afterLoadCurrencyRatesError: (state, error) => ({\n        currencyRates: {\n          data: [],\n        },\n        errors: {\n          currencyRatesError: error.code,\n        },\n      }),\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-fx-rate-table-ng/scripts/view-model.js"],"sourceRoot":""}