{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**********","webpack:///webpack/bootstrap f3d2485eec67eb2fdf62?1eb6**********","webpack:///./widget-bb-billpay-view-payments-ng/model.xml","webpack:///external \"lib-bb-model-errors\"?7567**","webpack:///external \"vendor-bb-angular\"?a114***","webpack:///external \"lib-bb-widget-ng\"?84ad*","webpack:///external \"lib-bb-event-bus-ng\"?8215*","webpack:///external \"lib-bb-widget-extension-ng\"?b547*","webpack:///external \"lib-bb-intent-ng\"?add1*","webpack:///external \"lib-bb-state-container-ng\"?8d56*","webpack:///external \"lib-bb-extension-helpers-ng\"?e731*","webpack:///external \"model-bb-billpay-ng\"?1f93*","webpack:///./widget-bb-billpay-view-payments-ng/scripts/index.js","webpack:///external \"lib-bb-extension-intents-ng\"","webpack:///./widget-bb-billpay-view-payments-ng/scripts/controller.js","webpack:///./widget-bb-billpay-view-payments-ng/scripts/service.js","webpack:///./widget-bb-billpay-view-payments-ng/scripts/view-model/index.js","webpack:///./widget-bb-billpay-view-payments-ng/scripts/view-model/remove.js","webpack:///./widget-bb-billpay-view-payments-ng/scripts/view-model/helpers.js","webpack:///./widget-bb-billpay-view-payments-ng/scripts/view-model/list.js","webpack:///./widget-bb-billpay-view-payments-ng/scripts/view-model/initial-state.js","webpack:///./widget-bb-billpay-view-payments-ng/scripts/router.js","webpack:///./widget-bb-billpay-view-payments-ng/scripts/default-hooks.js","webpack:///./widget-bb-billpay-view-payments-ng/scripts/events.js"],"names":["moduleKey","hooksKey","serviceKey","eventServiceKey","viewModelKey","routerKey","angular","module","widgetModuleKey","eventBusModuleKey","modelBillpayModuleKey","bbExtensionHelpersModuleKey","stateContainerModuleKey","bbIntentModuleKey","bbExtensionIntentsModuleKey","factory","eventBusKey","widgetEvents","defaultHooks","modelBillpayKey","widgetKey","BillpayViewPaymentsService","extensionIntentsContextKey","model","bbStateContainerKey","Router","BillpayViewPaymentsViewModel","extensionHelpersContextKey","billpayViewPaymentsService","router","controller","bbIntentKey","Controller","extensionContextKey","service","run","bbIntent","bbStateContainer","eventBus","widget","viewModel","init","name","BillpayViewPaymentsController","unsubscribe","$ctrl","$onInit","getPayments","catch","subscribe","route","handle","then","publish","id","getId","$onDestroy","deletePayment","paymentToDelete","recurring","Object","assign","isDeleteDialogOpen","openDeleteDialog","payment","events","list","beforeGetPayments","status","response","afterGetPaymentsSuccess","error","afterGetPaymentsError","remove","beforeRemovePayment","deleteRecurringPaymentRecord","deletePaymentRecord","afterRemovePaymentSuccess","afterRemovePaymentError","getCurrencyCode","getStringPreference","ViewModel","stateContainer","hooks","createAction","current","Remove","isRemovingPayment","showSuccessMessage","errorMessages","E_AUTH","E_CONNECTIVITY","E_USER","E_UNEXPECTED","uiError","modelError","message","code","List","isLoadingPayments","payments","map","transformPayment","params","subscribers","setRoute","state","notifySubscribers","forEach","subscriber","goto","getParams","createSelector","getRoute","callback","filter","sub","identity","any","setState","Events","BEFORE_GET_PAYMENTS","AFTER_GET_PAYMENTS","AFTER_GET_PAYMENTS_ERROR","BEFORE_REMOVE_PAYMENT","AFTER_REMOVE_PAYMENT","AFTER_REMOVE_PAYMENT_ERROR","bus"],"mappings":"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","file":"widget-bb-billpay-view-payments-ng/scripts/widget-bb-billpay-view-payments-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lib-bb-model-errors\"), require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-state-container-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"model-bb-billpay-ng\"), require(\"lib-bb-extension-intents-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-billpay-view-payments-ng\", [\"lib-bb-model-errors\", \"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\", \"lib-bb-intent-ng\", \"lib-bb-state-container-ng\", \"lib-bb-extension-helpers-ng\", \"model-bb-billpay-ng\", \"lib-bb-extension-intents-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-billpay-view-payments-ng\"] = factory(require(\"lib-bb-model-errors\"), require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-state-container-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"model-bb-billpay-ng\"), require(\"lib-bb-extension-intents-ng\"));\n\telse\n\t\troot[\"widget-bb-billpay-view-payments-ng\"] = factory(root[\"lib-bb-model-errors\"], root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-state-container-ng\"], root[\"lib-bb-extension-helpers-ng\"], root[\"model-bb-billpay-ng\"], root[\"lib-bb-extension-intents-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_45__, __WEBPACK_EXTERNAL_MODULE_47__, __WEBPACK_EXTERNAL_MODULE_54__, __WEBPACK_EXTERNAL_MODULE_55__, __WEBPACK_EXTERNAL_MODULE_56__, __WEBPACK_EXTERNAL_MODULE_57__, __WEBPACK_EXTERNAL_MODULE_58__, __WEBPACK_EXTERNAL_MODULE_60__, __WEBPACK_EXTERNAL_MODULE_61__, __WEBPACK_EXTERNAL_MODULE_97__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f3d2485eec67eb2fdf62","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-billpay-view-payments-ng/model.xml\n// module id = 0\n// module chunks = 11","module.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 45\n// module chunks = 6 7 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 47\n// module chunks = 7 8 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_54__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 54\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_55__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 55\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_56__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 56\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_57__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 57\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_58__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container-ng\"\n// module id = 58\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_60__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-helpers-ng\"\n// module id = 60\n// module chunks = 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_61__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-billpay-ng\"\n// module id = 61\n// module chunks = 9 10 11","/**\n * @module widget-bb-billpay-view-payments-ng\n *\n * @description\n * Billpay view payments\n */\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport extendHooks, { extensionContextKey } from 'lib-bb-widget-extension-ng';\nimport stateContainerModuleKey, { bbStateContainerKey } from 'lib-bb-state-container-ng';\n\nimport bbExtensionHelpersModuleKey, {\n  extensionHelpersContextKey,\n} from 'lib-bb-extension-helpers-ng';\n\nimport modelBillpayModuleKey, {\n  modelBillpayKey,\n} from 'model-bb-billpay-ng';\n\nimport bbIntentModuleKey, {\n  bbIntentKey,\n} from 'lib-bb-intent-ng';\n\nimport bbExtensionIntentsModuleKey, {\n  extensionIntentsContextKey,\n} from 'lib-bb-extension-intents-ng';\n\nimport Controller from './controller';\nimport BillpayViewPaymentsService from './service';\nimport BillpayViewPaymentsViewModel from './view-model';\nimport Router from './router';\nimport defaultHooks from './default-hooks';\nimport widgetEvents from './events';\n\nconst moduleKey = 'widget-bb-billpay-view-payments-ng';\nconst hooksKey = `${moduleKey}:hooks`;\nconst serviceKey = `${moduleKey}:service`;\nconst eventServiceKey = `${moduleKey}:events`;\nconst viewModelKey = `${moduleKey}:view-model`;\nconst routerKey = `${moduleKey}:router`;\n\nexport default angular\n  .module(moduleKey, [\n    widgetModuleKey,\n    eventBusModuleKey,\n    modelBillpayModuleKey,\n    bbExtensionHelpersModuleKey,\n    stateContainerModuleKey,\n    bbIntentModuleKey,\n    bbExtensionIntentsModuleKey,\n  ])\n\n  .factory(eventServiceKey, [\n    eventBusKey,\n    /* into */\n    widgetEvents,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .factory(serviceKey, [\n    viewModelKey,\n    modelBillpayKey,\n    eventServiceKey,\n    widgetKey,\n    /* into */\n    BillpayViewPaymentsService,\n  ])\n\n  .factory(extensionIntentsContextKey, [\n    modelBillpayKey,\n    (model) => ({\n      model,\n    }),\n  ])\n\n  .factory(routerKey, [\n    bbStateContainerKey,\n    /* into */\n    Router,\n  ])\n\n  .factory(viewModelKey, [\n    bbStateContainerKey,\n    hooksKey,\n    /* into */\n    BillpayViewPaymentsViewModel,\n  ])\n\n  .factory(extensionHelpersContextKey, [\n    serviceKey,\n    routerKey,\n    /* into */\n    (billpayViewPaymentsService, router) => ({\n      billpayViewPaymentsService,\n      router,\n    }),\n  ])\n\n  .controller('BillpayViewPaymentsController', [\n    eventBusKey,\n    widgetKey,\n    serviceKey,\n    routerKey,\n    bbIntentKey,\n    /* into */\n    Controller,\n  ])\n\n  // Add `service` to the `context` object\n  // provided to the extension `helpers`, `events`, and `intents`\n  .factory(extensionContextKey, [\n    serviceKey,\n    routerKey,\n    /* into */\n    (service, router) => ({\n      service,\n      router,\n    }),\n  ])\n\n  .run([\n    bbIntentKey, bbStateContainerKey, eventBusKey, widgetKey, viewModelKey,\n    (bbIntent, bbStateContainer, eventBus, widget, viewModel) => {\n      // Initialize the viewModel with an initial state\n      viewModel.init();\n    },\n  ])\n\n  .name;\n\n/**\n * @typedef HelperContext\n * @type {object}\n * @extends module:lib-bb-extension-helpers-ng.HelperContext\n * @property {BillpayViewPaymentsService} service\n */\n\n/**\n * @typedef IntentContext\n * @type {object}\n * @extends module:lib-bb-extension-intents-ng.IntentContext\n * @property {BillpayViewPaymentsService} service\n */\n\n/**\n * @typedef EventContext\n * @type {object}\n * @extends module:lib-bb-extension-events-ng.EventContext\n * @property {BillpayViewPaymentsService} service\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_97__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-intents-ng\"\n// module id = 97\n// module chunks = 11","/**\n * @module widget-bb-billpay-view-payments-ng\n * @name BillpayViewPaymentsController\n *\n * @description\n * Billpay View Payments widget controller\n *\n * @param {BillpayViewPaymentsService} service\n * @param {Router} router\n */\nexport default function BillpayViewPaymentsController(\n  eventBus,\n  widget,\n  service,\n  router,\n  bbIntent) {\n  let unsubscribe = null;\n  const $ctrl = this;\n\n  /**\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name BillpayViewPaymentsController#$onInit\n   * @type {function}\n   * @returns {void}\n   */\n  const $onInit = () => {\n    service.getPayments()\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n\n    unsubscribe = router.subscribe(route => {\n      if (route !== 'list') return;\n      service.getPayments()\n        .catch(() => {\n          // error handling is dealt with in the service\n        });\n    });\n\n    // Handle any incoming intents\n    bbIntent.handle('intent.rb.billpay.pending-payments.refresh', () => {\n      service.getPayments()\n        .catch(() => {\n          // error handling is dealt with in the service\n        });\n    });\n\n    bbIntent.init().then(() => {\n      // Mobile SDK < 3.0\n      eventBus.publish('cxp.item.loaded', {\n        id: widget.getId(),\n      });\n\n      // Mobile SDK >= 3.0\n      eventBus.publish('bb.item.loaded', {\n        id: widget.getId(),\n      });\n    });\n  };\n\n  /**\n   * AngularJS Lifecycle hook used to destroy the controller\n   *\n   * @name BillpayViewPaymentsController#$onDestroy\n   * @type {function}\n   * @returns {void}\n   */\n  const $onDestroy = () => {\n    if (unsubscribe) unsubscribe();\n  };\n\n  /**\n   * @name BillpayViewPaymentsController#deletePayment\n   * @type {function}\n   * @description deletes the payment\n   * @param {Object} ctrl current controller\n   */\n  const deletePayment = () => {\n    const { id, recurring } = $ctrl.paymentToDelete;\n    return service.deletePayment(id, recurring)\n      .then(() => {\n        Object.assign($ctrl, { isDeleteDialogOpen: false });\n        service.getPayments()\n          .catch(() => {\n            // error handling is dealt with in the service\n          });\n      })\n      .catch(() => {\n        // error handling is dealt with in the service\n      });\n  };\n\n  /**\n   * @name BillpayViewPaymentsController#openDeleteDialog\n   * @type {function}\n   * @description opens the delete dialog\n   * @param {Object} payment the payment to be deleted\n   */\n  const openDeleteDialog = (payment) => {\n    Object.assign($ctrl, { isDeleteDialogOpen: true, paymentToDelete: payment });\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n    $onDestroy,\n    deletePayment,\n    openDeleteDialog,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/controller.js","/**\n * @constructor BillpayViewPaymentsService\n * @param {ViewModel} viewModel\n * @param {object} viewModel.list\n * @param {object} viewModel.remove\n * @param {BillpayModel} model\n * @param {object} events\n * @param {object} widget\n * @description\n * The service encapsulates the core functionality of the BillpayViewPayments\n * Widget. It co-ordinates the communication of data from the `Model`\n * with the communication with the user by updating the {@link ViewState}.\n *\n * Asynchronous methods update the {@link ViewState} in 3 potential\n * stages; \"before\", \"success\", and \"error\", to allow the view to\n * provide feedback to the user.\n */\nexport default function BillpayViewPaymentsService(viewModel, model, events, widget) {\n  return {\n    /**\n     * @name BillpayViewPaymentsService#getPayments\n     * @type {function}\n     * @return {Promise<void>}\n     * @description Update the view with a list of payments loaded from the data source\n     */\n    getPayments() {\n      viewModel.list.beforeGetPayments();\n      events.beforeGetPayments();\n      return model.getPayments({ status: 'PENDING' })\n        .then((response) => {\n          viewModel.list.afterGetPaymentsSuccess(response);\n          events.afterGetPaymentsSuccess(response);\n        })\n        .catch((error) => {\n          viewModel.list.afterGetPaymentsError(error);\n          events.afterGetPaymentsError(error);\n          throw error;\n        });\n    },\n\n    /**\n     * @name BillpayViewPaymentsService#deletePayment\n     * @type {function}\n     * @param id payment ID\n     * @param recurring is the payment a recurring payment\n     * @return {Promise<void>}\n     * @description Delete a payment and update the view with remaining payments\n     */\n    deletePayment(id, recurring) {\n      viewModel.remove.beforeRemovePayment();\n      events.beforeRemovePayment();\n      const deletePayment = recurring\n        ? model.deleteRecurringPaymentRecord\n        : model.deletePaymentRecord;\n      return (deletePayment(id))\n        .then(() => {\n          viewModel.remove.afterRemovePaymentSuccess();\n          events.afterRemovePaymentSuccess(id, recurring);\n        })\n        .catch((error) => {\n          viewModel.remove.afterRemovePaymentError(error);\n          events.afterRemovePaymentError(error);\n          throw error;\n        });\n    },\n\n    /**\n     * @name BillpayViewPaymentsService#getCurrencyCode\n     * @type {function}\n     * @return {string}\n     * @description Return the currency code from widget preferences\n     */\n    getCurrencyCode() {\n      return widget.getStringPreference('currency');\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/service.js","import remove from './remove';\nimport list from './list';\nimport createInitialState from './initial-state';\n\n/**\n * @constructor ViewModel\n * @param {module:lib-bb-state-container-ng.StateContainer} stateContainer\n * @param {Hooks} hooks\n */\nexport default function ViewModel(stateContainer, hooks) {\n  return {\n    /**\n     * @name ViewModel#init\n     * @type {function}\n     * @description Initialize the container with the initial state if\n     * it isn't already initialized (i.e. the current state is `undefined`)\n     * @return {ViewState} The new state of the widget\n     */\n    init: stateContainer.createAction((current = createInitialState()) => current),\n\n    /**\n     * @name ViewModel#list\n     * @type {object}\n     * @description expose list viewmodel\n     */\n    list: list(stateContainer, hooks),\n\n    /**\n     * @name ViewModel#remove\n     * @type {object}\n     * @description expose remove viewmodel\n     */\n    remove: remove(stateContainer, hooks),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/view-model/index.js","import { uiError } from './helpers';\n\n/**\n *\n * @constructor Remove\n * @param {module:lib-bb-state-container-ng.StateContainer} stateContainer\n * @param {Hooks} hooks\n */\nexport default function Remove(stateContainer, hooks) {\n  /**\n   * @name Remove\n   * @type {Object}\n   */\n  return {\n    /**\n     * @name Remove#beforeRemovePayment\n     * @type {function}\n     * @description Amend the view to inform the user the payment is being removed\n     * @return {ViewState} The new state of the view model\n     */\n    beforeRemovePayment: stateContainer.createAction((current) =>\n      hooks.beforeRemovePayment({\n        ...current,\n        isRemovingPayment: true,\n      })\n    ),\n\n    /**\n     * @name Remove#afterRemovePaymentSuccess\n     * @type {function}\n     * @description Amend the view to display the list of payments\n     * @return {ViewState} The new state of the view model\n     * @param id payment ID\n     * @param recurring is the payment a recurring payment\n     */\n    afterRemovePaymentSuccess: stateContainer.createAction((current) =>\n      hooks.afterRemovePaymentSuccess({\n        ...current,\n        isRemovingPayment: false,\n        showSuccessMessage: true,\n      })\n    ),\n\n    /**\n     * @name Remove#afterRemovePaymentError\n     * @type {function}\n     * @description Amend the view to display the error encountered when removing the payment\n     * @param {module:lib-bb-model-errors.ModelError} error\n     * @return {ViewState} The new state of the view model\n     */\n    afterRemovePaymentError: stateContainer.createAction((current, error) =>\n      hooks.afterRemovePaymentError({\n        ...current,\n        error: uiError(error),\n        isRemovingPayment: false,\n      })\n    ),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/view-model/remove.js","/* eslint-disable import/prefer-default-export */\nimport { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\n\nconst errorMessages = {\n  [E_AUTH]: 'billpay.model.error.auth',\n  [E_CONNECTIVITY]: 'billpay.model.error.connectivity',\n  [E_USER]: 'billpay.model.error.user',\n  [E_UNEXPECTED]: 'billpay.model.error.unexpected',\n};\n\n/**\n * @name uiError\n *\n * @inner\n * @type {function}\n * @description Creates an error object for template\n * @param {object} modelError Error object\n * @returns {{message: string}}\n */\nexport const uiError = (modelError) => {\n  let message = '';\n\n  if (modelError && modelError.code) {\n    message = errorMessages[modelError.code];\n  }\n\n  return { message };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/view-model/helpers.js","import { uiError } from './helpers';\n\n/**\n *\n * @constructor List\n * @param {module:lib-bb-state-container-ng.StateContainer} stateContainer\n * @param {Hooks} hooks\n */\nexport default function List(stateContainer, hooks) {\n  /**\n   * @name List\n   * @type {Object}\n   */\n  return {\n    /**\n     * @name List#beforeGetPayments\n     * @type {function}\n     * @description Amend the view to inform the user the list of payees is being loaded\n     * @return {ViewState} The new state of the view model\n     */\n    beforeGetPayments: stateContainer.createAction((current) =>\n      hooks.beforeGetPayments({\n        ...current,\n        isLoadingPayments: true,\n      })\n    ),\n\n    /**\n     * @name List#afterGetPaymentsSuccess\n     * @type {function}\n     * @description Amend the view to display the list of payees\n     * @param {Array<module:model-bb-billpay-ng.Payment>} payments\n     * @return {ViewState} The new state of the view model\n     */\n    afterGetPaymentsSuccess: stateContainer.createAction((current, payments) =>\n      hooks.afterGetPaymentsSuccess({\n        ...current,\n        payments: payments.map(hooks.transformPayment),\n        isLoadingPayments: false,\n      })\n    ),\n\n    /**\n     * @name List#afterGetPaymentsError\n     * @type {function}\n     * @description Amend the view to display the error encountered when loading the list of payees\n     * @param {module:lib-bb-model-errors.ModelError} error\n     * @return {ViewState} The new state of the view model\n     */\n    afterGetPaymentsError: stateContainer.createAction((current, error) =>\n      hooks.afterGetPaymentsError({\n        ...current,\n        error: uiError(error),\n        isLoadingPayments: false,\n      })\n    ),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/view-model/list.js","export default () => ({\n  payments: [],\n  isLoadingPayments: false,\n  route: {\n    name: 'list',\n    params: {},\n  },\n});\n\n/**\n * @typedef {object} ViewState\n * @description\n * The current state of the [ViewModel]{@link module:lib-bb-view-model-ng}.\n * @property {Array.<any>} items\n * @property {object} route Indicates current router state\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/view-model/initial-state.js","/**\n * The router service of the BillpayViewPayments widget\n *\n * @constructor Router\n * @param {StateContainer} stateContainer\n */\nexport default (stateContainer) => {\n  let subscribers = [];\n\n  /**\n   * @name setRoute\n   *\n   * @inner\n   * @description Inner method to update state with a new route\n   * @type {function}\n   * @param {{name: string, params: object}} route New route object\n   * @returns {ViewState}\n   */\n  const setRoute = stateContainer.createAction((state, { name, params }) => ({\n    ...state,\n    route: {\n      name,\n      params,\n    },\n  }));\n\n  /**\n   * @name notifySubscribers\n   *\n   * @inner\n   * @description Inner method to notify subscribers\n   * @type {function}\n   * @param {string} name New route name\n   * @param {object} params New route parameters object\n   */\n  const notifySubscribers = (name, params) => {\n    subscribers.forEach(subscriber => {\n      subscriber(name, params);\n    });\n  };\n\n  return {\n    /**\n     * @name Router#goto\n     *\n     * @description Method to navigate to a specific route\n     * @type {function}\n     * @param {string} name New route name\n     * @param {object} params New route parameters object\n     */\n    goto: (name, params = {}) => {\n      setRoute({ name, params });\n      notifySubscribers(name, params);\n    },\n\n    /**\n     * @name Router#getParams\n     *\n     * @description Method to get current route params from the {@link ViewState}\n     * @type {function}\n     * @returns {object} current parameters object\n     */\n    getParams: stateContainer.createSelector(state => state.route.params),\n\n    /**\n     * @name Router#getRoute\n     *\n     * @description Method to get current route name from the state\n     * @type {function}\n     */\n    getRoute: stateContainer.createSelector(state => state.route.name),\n\n    /**\n     * @name Router#subscribe\n     *\n     * @description Method to subscribe to a route change\n     * @type {function}\n     * @param {function} callback A callback to be subscribed\n     * @returns {function} The method to unsubscribe\n     */\n    subscribe: (callback) => {\n      subscribers = [...subscribers, callback];\n      return () => {\n        subscribers = subscribers.filter(sub => sub !== callback);\n      };\n    },\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/router.js","\n// By default return the unchanged argument\nconst identity = any => any;\n\n/**\n * @name Hooks\n * @type {object}\n * @extends module:lib-bb-widget-extension-ng.Hooks\n */\nexport default {\n  /**\n   * @name Hooks#setState\n   * @type {function}\n   * @description add any state required by extension\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  setState: identity,\n\n  /**\n   * @name Hooks#transformPayment\n   * @type {function}\n   * @description Make any modifications needed to the loaded payment\n   * @param {Payment} payment The current state of the payment\n   * @return {Object} The transformed payment\n   */\n  transformPayment: identity,\n\n  /**\n   * @name Hooks#beforeGetPayments\n   * @type {function}\n   * @description Amend the view before loading the list of payments\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  beforeGetPayments: identity,\n\n  /**\n   * @name Hooks#afterGetPaymentsSuccess\n   * @type {function}\n   * @description Amend the view after successfully loading the list of payments\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  afterGetPaymentsSuccess: identity,\n\n  /**\n   * @name Hooks#afterGetPaymentsError\n   * @type {function}\n   * @description Amend the view after unsuccessfully loading the list of payments\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  afterGetPaymentsError: identity,\n\n  /**\n   * @name Hooks#beforeRemovePayment\n   * @type {function}\n   * @description Amend the view to inform the user the payment is being removed\n   * @return {ViewState} The new state of the view model\n   */\n  beforeRemovePayment: identity,\n\n  /**\n   * @name Hooks#afterRemovePaymentSuccess\n   * @type {function}\n   * @description Amend the view to display the list of payments\n   * @return {ViewState} The new state of the view model\n   */\n  afterRemovePaymentSuccess: identity,\n\n  /**\n   * @name Hooks#afterRemovePaymentError\n   * @type {function}\n   * @description Amend the view to display the error encountered when removing the payment\n   * @param {module:lib-bb-model-errors.ModelError} error\n   * @return {ViewState} The new state of the view model\n   */\n  afterRemovePaymentError: identity,\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/default-hooks.js","/**\n * @description Events that the widget fires\n * @type {object}\n */\nconst Events = {\n  BEFORE_GET_PAYMENTS: 'bb.event.billpay.getPayments.before',\n  AFTER_GET_PAYMENTS: 'bb.event.billpay.getPayments.after',\n  AFTER_GET_PAYMENTS_ERROR: 'bb.event.billpay.getPayments.error',\n  BEFORE_REMOVE_PAYMENT: 'bb.event.billpay.removePayment.before',\n  AFTER_REMOVE_PAYMENT: 'bb.event.billpay.removePayment.after',\n  AFTER_REMOVE_PAYMENT_ERROR: 'bb.event.billpay.removePayment.error',\n};\n\nexport default (bus) => ({\n  /**\n   * @name Events#beforeGetPayments\n   * @type {function}\n   * @description trigger BEFORE_GET_PAYMENTS event\n   */\n  beforeGetPayments: () => {\n    bus.publish(Events.BEFORE_GET_PAYMENTS);\n  },\n\n  /**\n   * @name Events#afterGetPaymentsSuccess\n   * @type {function}\n   * @description trigger AFTER_GET_PAYMENTS event\n   * @param {Array<module:model-bb-billpay-ng.Payment>} payments\n   */\n  afterGetPaymentsSuccess: (payments) => {\n    bus.publish(Events.AFTER_GET_PAYMENTS, { payments });\n  },\n\n  /**\n   * @name Events#afterGetPaymentsError\n   * @type {function}\n   * @description trigger AFTER_GET_PAYMENTS_ERROR event\n   * @param {module:lib-bb-model-errors.ModelError} error\n   */\n  afterGetPaymentsError: (error) => {\n    bus.publish(Events.AFTER_GET_PAYMENTS_ERROR, { error });\n  },\n\n  /**\n   * @name Events#beforeRemovePayment\n   * @type {function}\n   * @description trigger BEFORE_REMOVE_PAYMENT event\n   */\n  beforeRemovePayment: () => {\n    bus.publish(Events.BEFORE_REMOVE_PAYMENT);\n  },\n\n  /**\n   * @name Events#afterRemovePaymentSuccess\n   * @type {function}\n   * @description trigger AFTER_REMOVE_PAYMENT event\n   * @param id payment ID\n   * @param recurring is the payment a recurring payment\n   */\n  afterRemovePaymentSuccess: (id, recurring) => {\n    bus.publish(Events.AFTER_REMOVE_PAYMENT, { id, recurring });\n  },\n\n  /**\n   * @name Events#afterRemovePaymentError\n   * @type {function}\n   * @description trigger AFTER_REMOVE_PAYMENT_ERROR event\n   * @param {module:lib-bb-model-errors.ModelError} error\n   */\n  afterRemovePaymentError: (error) => {\n    bus.publish(Events.AFTER_REMOVE_PAYMENT_ERROR, { error });\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-billpay-view-payments-ng/scripts/events.js"],"sourceRoot":""}