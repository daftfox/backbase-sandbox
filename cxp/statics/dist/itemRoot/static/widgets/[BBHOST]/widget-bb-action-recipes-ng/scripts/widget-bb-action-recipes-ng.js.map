{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///webpack/bootstrap 4109a64068574c27a239?504c*","webpack:///./widget-bb-action-recipes-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./widget-bb-action-recipes-ng/scripts/index.js","webpack:///external \"lib-bb-widget-ng\"","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///external \"model-bb-action-recipes-ng\"","webpack:///./widget-bb-action-recipes-ng/scripts/controller.js","webpack:///./widget-bb-action-recipes-ng/scripts/constants.js","webpack:///./widget-bb-action-recipes-ng/scripts/mappings.js","webpack:///./widget-bb-action-recipes-ng/scripts/default-hooks.js"],"names":["defaultHooks","hooksKey","angular","module","widgetModuleKey","eventBusModuleKey","modelActionRecipesModuleKey","bbIntentModuleKey","factory","controller","widgetKey","eventBusKey","modelActionRecipesKey","Controller","run","bbIntentKey","bus","widget","bbIntent","publish","id","getId","init","name","ActionRecipesController","model","hooks","$ctrl","preferences","pageSize","getLongPreference","Preference","PAGE_SIZE","createRecipeFilter","specification","apiTrigger","accounts","filter","Error","type","toApiModel","Function","convertToRecipeModel","apiRecipe","specifications","find","spec","specificationId","action","RecipeAction","actions","getAvailableChannels","account","item","arrangementId","RecipeModel","trigger","getPaginationParams","limit","offset","state","recipes","data","length","isMoreRecipes","curRecipes","totalCount","onLoad","loading","requestParams","load","then","res","Object","assign","actionRecipes","map","recipe","hasMore","catch","err","error","httpErrorMessages","code","$onInit","currentView","view","navigateTo","onCreate","newAction","View","CREATE","loadMore","done","doneFn","loadMorePromise","loadRecipes","onEdit","copy","EDIT","onSave","update","currentRecipeIndex","findIndex","splice","onCreateDismiss","save","newRecipe","amount","currency","onRemove","remove","indexOf","LIST","onActivate","changingStatus","activate","active","Event","ACTION_RECIPE_ACTIVATION_FAILED","onDeactivate","deactivate","ACTION_RECIPE_DEACTIVATION_FAILED","changeAccount","static","labels","recipeType","newTransaction","condition","lt","gt","eq","gte","lte","SPECIFICATIONS","E_AUTH","E_CONNECTIVITY","E_USER","E_UNEXPECTED","o","value","selectors","channels","defaultValue","channelsConfig","keys","forEach","channelKey","parseAction","channel","enabled","undefined","some","key","push","browser","sms","email"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,0C;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,iD;;;;;;;;;ACAA,iD;;;;;;;;;;;;;ACMA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;KAAYA,Y;;;;;;AAfZ;;;;;;AAiBA,KAAMC,WAAW,mCAAjB;;mBAEeC,0BACZC,MADY,CACL,6BADK,EAC0B,CACrCC,uBADqC,EAErCC,yBAFqC,EAGrCC,gCAHqC,EAIrCC,uBAJqC,CAD1B,EAQZC,OARY,CAQJP,QARI,EAQM,sCAAYD,YAAZ,CARN,EAUZS,UAVY,CAUD,yBAVC,EAU0B;AACrC;AACAC,yBAFqC,EAGrCC,4BAHqC,EAIrCC,6CAJqC,EAKrCX,QALqC;;AAOrC;AACAY,qBARqC,CAV1B,EAqBZC,GArBY,CAqBR,CAACH,4BAAD,EAAcD,wBAAd,EAAyBK,0BAAzB,EAAsC,UAACC,GAAD,EAAMC,MAAN,EAAcC,QAAd,EAA2B;AACpEF,OAAIG,OAAJ,CAAY,iBAAZ,EAA+B;AAC7BC,SAAIH,OAAOI,KAAP;AADyB,IAA/B;AAGAH,YAASI,IAAT;AACD,EALI,CArBQ,EA4BZC,I;;;;;;AC/CH,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;;;;;;mBCIwBC,uB;;AAJxB;;;;AACA;;AACA;;;;;;AAEe,UAASA,uBAAT,CAAiCP,MAAjC,EAAyCD,GAAzC,EAA8CS,KAA9C,EAAqDC,KAArD,EAA4D;AACzE;;;;;;AAMA,OAAMC,QAAQ,IAAd;;AAEA;;;;;;;AAOA,OAAMC,cAAc;AAClBC,eAAUZ,OAAOa,iBAAP,CAAyBC,sBAAWC,SAApC;AADQ,IAApB;;AAIA,OAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,aAAD,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAyC;AAClE,SAAMC,SAASX,MAAMO,kBAAN,CAAyBC,aAAzB,EAAwCC,UAAxC,EAAoDC,QAApD,CAAf;;AAEA,SAAI,CAACC,MAAL,EAAa;AACX,aAAM,IAAIC,KAAJ,CAAU,wDAAqDJ,cAAcK,IAAnE,WACd,0FADI,CAAN;AAED;;AAED,SAAI,EAAEF,OAAOG,UAAP,YAA6BC,QAA/B,CAAJ,EAA8C;AAC5C,aAAM,IAAIH,KAAJ,CAAU,6CAA0CJ,cAAcK,IAAxD,oBACd,wDADI,CAAN;AAED;;AAED,YAAOF,MAAP;AACD,IAdD;;AAgBA,OAAMK,uBAAuB,SAAvBA,oBAAuB,CAACC,SAAD,EAAYC,cAAZ,EAA4BR,QAA5B,EAAyC;AACpE,SAAMF,gBAAgBU,eAAeC,IAAf,CAAoB;AAAA,cAAQC,KAAK1B,EAAL,KAAYuB,UAAUI,eAA9B;AAAA,MAApB,CAAtB;AACA,SAAMC,SAAS,IAAIC,sBAAJ,CAAiBN,UAAUO,OAA3B,EAAoCxB,MAAMyB,oBAAN,EAApC,EAAkE,IAAlE,CAAf;AACA,SAAMC,UAAUhB,SAASS,IAAT,CAAc;AAAA,cAAQQ,KAAKjC,EAAL,KAAYuB,UAAUW,aAA9B;AAAA,MAAd,CAAhB;;AAEA,YAAO,IAAIC,qBAAJ,CACLZ,SADK,EAELT,aAFK,EAGLD,mBAAmBC,aAAnB,EAAkCS,UAAUa,OAA5C,EAAqDpB,QAArD,CAHK,EAILY,MAJK,EAKLI,OALK,CAAP;AAOD,IAZD;;AAcA;;;;;;;;;AASA,OAAMK,sBAAsB,SAAtBA,mBAAsB;AAAA,YAAO;AACjCC,cAAO/B,MAAMC,WAAN,CAAkBC,QADQ;AAEjC8B,eAAQhC,MAAMiC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyBC;AAFA,MAAP;AAAA,IAA5B;;AAKA;;;;;;;;;AASA,OAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,UAAD;AAAA,YACpBA,WAAWF,MAAX,KAAsBpC,MAAMC,WAAN,CAAkBC,QAAxC,IACGF,MAAMiC,KAAN,CAAYC,OAAZ,CAAoBK,UAApB,KAAmCvC,MAAMiC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyBC,MAF3C;AAAA,IAAtB;;AAIA,OAAMI,SAAS,SAATA,MAAS,GAAM;AACnBxC,WAAMiC,KAAN,CAAYQ,OAAZ,GAAsB,IAAtB;;AAEA,SAAMC,gBAAgBZ,qBAAtB;;AAEAhC,WAAM6C,IAAN,CAAWD,aAAX,EACGE,IADH,CACQ,eAAO;AACX5C,aAAMiC,KAAN,CAAYhB,cAAZ,GAA6B4B,IAAI5B,cAAjC;AACAjB,aAAMiC,KAAN,CAAYxB,QAAZ,GAAuBoC,IAAIpC,QAA3B;AACAT,aAAMiC,KAAN,CAAYC,OAAZ,GAAsBY,OAAOC,MAAP,CAAc/C,MAAMiC,KAAN,CAAYC,OAA1B,EAAmC;AACvDC,eAAMU,IAAIX,OAAJ,CAAYc,aAAZ,CAA0BC,GAA1B,CACJ;AAAA,kBAAUlC,qBAAqBmC,MAArB,EAA6BL,IAAI5B,cAAjC,EAAiD4B,IAAIpC,QAArD,CAAV;AAAA,UADI,CADiD;AAIvD8B,qBAAYM,IAAIX,OAAJ,CAAYK;AAJ+B,QAAnC,CAAtB;;AAOAvC,aAAMiC,KAAN,CAAYC,OAAZ,CAAoBiB,OAApB,GAA8Bd,cAAcQ,IAAIX,OAAJ,CAAYc,aAA1B,CAA9B;AACAhD,aAAMiC,KAAN,CAAYQ,OAAZ,GAAsB,KAAtB;AACD,MAbH,EAcGW,KAdH,CAcS,UAACC,GAAD,EAAS;AACdrD,aAAMiC,KAAN,CAAYqB,KAAZ,GAAoBC,6BAAkBF,IAAIG,IAAtB,CAApB;AACAxD,aAAMiC,KAAN,CAAYQ,OAAZ,GAAsB,KAAtB;AACD,MAjBH;AAkBD,IAvBD;;AAyBA;;;;;;;AAOA,OAAMgB,UAAU,SAAVA,OAAU,GAAM;AACpBjB;AACD,IAFD;;AAIA;;;;;;;;AAQA,OAAMkB,cAAc,SAAdA,WAAc;AAAA,YAAM1D,MAAMiC,KAAN,CAAY0B,IAAlB;AAAA,IAApB;;AAEA;;;;;;;AAQA,OAAMC,aAAa,SAAbA,UAAa,CAACD,IAAD,EAAU;AAC3B3D,WAAMiC,KAAN,CAAY0B,IAAZ,GAAmBA,IAAnB;AACD,IAFD;;AAIA;;;;;;;;;;;AAWA,OAAME,WAAW,SAAXA,QAAW,CAACtD,aAAD,EAAmB;AAClCP,WAAMiC,KAAN,CAAY6B,SAAZ,GAAwB,IAAIlC,qBAAJ,CACtB,IADsB,EAEtBrB,aAFsB,EAGtBD,mBAAmBC,aAAnB,CAHsB,EAItB,IAAIe,sBAAJ,CAAiBf,cAAcgB,OAA/B,EAAwCxB,MAAMyB,oBAAN,EAAxC,EAAsE,KAAtE,CAJsB,CAAxB;AAMAxB,WAAM4D,UAAN,CAAiBG,gBAAKC,MAAtB;AACD,IARD;;AAUA,OAAMC,WAAW,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzBlE,WAAMiC,KAAN,CAAYQ,OAAZ,GAAsB,IAAtB;;AAEA,SAAMC,gBAAgBZ,qBAAtB;AACA,SAAMqC,SAASD,QAAS,YAAM,CAAE,CAAhC;;AAEA,SAAIE,kBAAkBtE,MAAMuE,WAAN,CAAkB3B,aAAlB,EACnBE,IADmB,CACd,eAAO;AACX5C,aAAMiC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,gCACKnC,MAAMiC,KAAN,CAAYC,OAAZ,CAAoBC,IADzB,sBAEKU,IAAIG,aAAJ,CAAkBC,GAAlB,CACD;AAAA,gBAAUlC,qBAAqBmC,MAArB,EAA6BlD,MAAMiC,KAAN,CAAYhB,cAAzC,EAAyDjB,MAAMiC,KAAN,CAAYxB,QAArE,CAAV;AAAA,QADC,CAFL;;AAOAT,aAAMiC,KAAN,CAAYC,OAAZ,CAAoBiB,OAApB,GAA8Bd,cAAcQ,IAAIG,aAAlB,CAA9B;AACAhD,aAAMiC,KAAN,CAAYQ,OAAZ,GAAsB,KAAtB;AACD,MAXmB,EAYnBW,KAZmB,CAYb,UAACC,GAAD,EAAS;AACdrD,aAAMiC,KAAN,CAAYqB,KAAZ,GAAoBC,6BAAkBF,IAAIG,IAAtB,CAApB;AACAxD,aAAMiC,KAAN,CAAYQ,OAAZ,GAAsB,KAAtB;AACD,MAfmB,EAgBnBG,IAhBmB,CAgBd,YAAM;AACVwB,yBAAkB,IAAlB;AACAD;AACD,MAnBmB,CAAtB;;AAqBA,YAAOC,eAAP;AACD,IA5BD;;AA8BA;;;;;;;;AAQA,OAAME,SAAS,SAATA,MAAS,CAACpB,MAAD,EAAY;AACzBlD,WAAMiC,KAAN,CAAY6B,SAAZ,GAAwBvF,0BAAQgG,IAAR,CAAarB,MAAb,CAAxB;AACAlD,WAAM4D,UAAN,CAAiBG,gBAAKS,IAAtB;AACD,IAHD;;AAKA;;;;;;;;;AASA,OAAMC,SAAS,SAATA,MAAS,CAACvB,MAAD,EAAY;AACzB,SAAIA,OAAOzD,EAAX,EAAe;AACbK,aAAM4E,MAAN,CAAaxB,OAAOrC,UAAP,EAAb,EAAkC+B,IAAlC,CAAuC,YAAM;AAC3C,aAAM+B,qBAAqB3E,MAAMiC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyByC,SAAzB,CACzB,UAAClD,IAAD;AAAA,kBAAUA,KAAKjC,EAAL,KAAYyD,OAAOzD,EAA7B;AAAA,UADyB,CAA3B;AAGAO,eAAMiC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyB0C,MAAzB,CAAgCF,kBAAhC,EAAoD,CAApD,EAAuDzB,MAAvD;AACAlD,eAAM8E,eAAN;AACD,QAND;AAOD,MARD,MAQO;AACLhF,aAAMiF,IAAN,CAAW7B,OAAOrC,UAAP,EAAX,EAAgC+B,IAAhC,CAAqC,qBAAa;AAChD,aAAMoC,8BACD9B,MADC;AAEJzD,eAAIuB,UAAUvB,EAFV;AAGJwF,qCACK/B,OAAO+B,MADZ;AAEEC,uBAAUhC,OAAOzB,OAAP,CAAeyD;AAF3B;AAHI,WAAN;AAQAlF,eAAMiC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,IAA4B6C,SAA5B,4BAA0ChF,MAAMiC,KAAN,CAAYC,OAAZ,CAAoBC,IAA9D;AACAnC,eAAM8E,eAAN;AACD,QAXD;AAYD;AACF,IAvBD;;AAyBA;;;;;;;;AAQA,OAAMK,WAAW,SAAXA,QAAW,CAACjC,MAAD,EAAY;AAC3BpD,WAAMsF,MAAN,CAAalC,MAAb,EAAqBN,IAArB,CAA0B,YAAM;AAC9B5C,aAAMiC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyB0C,MAAzB,CAAgC7E,MAAMiC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyBkD,OAAzB,CAAiCnC,MAAjC,CAAhC,EAA0E,CAA1E;AACAlD,aAAM8E,eAAN;AACD,MAHD;AAID,IALD;;AAQA;;;;;;;;;AASA,OAAMA,kBAAkB,SAAlBA,eAAkB,GAAM;AAC5B9E,WAAM4D,UAAN,CAAiBG,gBAAKuB,IAAtB;AACAtF,WAAMiC,KAAN,CAAY6B,SAAZ,GAAwB,IAAxB;AACD,IAHD;;AAKA;;;;;;;;;;;AAWA,OAAMyB,aAAa,SAAbA,UAAa,SAAU;AAC3BzC,YAAOC,MAAP,CAAcG,MAAd,EAAsB,EAAEsC,gBAAgB,IAAlB,EAAtB;AACA,YAAO1F,MACJ2F,QADI,CACKvC,MADL,EAEJE,KAFI,CAEE,YAAM;AACXN,cAAOC,MAAP,CAAcG,MAAd,EAAsB,EAAEwC,QAAQ,KAAV,EAAtB;AACArG,WAAIG,OAAJ,CAAYmG,iBAAMC,+BAAlB,EAAmD1C,MAAnD;AACD,MALI,EAMJN,IANI,CAMC;AAAA,cAAME,OAAOC,MAAP,CAAcG,MAAd,EAAsB,EAAEsC,gBAAgB,KAAlB,EAAtB,CAAN;AAAA,MAND,CAAP;AAOD,IATD;;AAWA;;;;;;;;;;;AAWA,OAAMK,eAAe,SAAfA,YAAe,SAAU;AAC7B/C,YAAOC,MAAP,CAAcG,MAAd,EAAsB,EAAEsC,gBAAgB,IAAlB,EAAtB;AACA,YAAO1F,MACJgG,UADI,CACO5C,MADP,EAEJE,KAFI,CAEE,YAAM;AACXN,cAAOC,MAAP,CAAcG,MAAd,EAAsB,EAAEwC,QAAQ,IAAV,EAAtB;AACArG,WAAIG,OAAJ,CAAYmG,iBAAMI,iCAAlB,EAAqD7C,MAArD;AACD,MALI,EAMJN,IANI,CAMC;AAAA,cAAME,OAAOC,MAAP,CAAcG,MAAd,EAAsB,EAAEsC,gBAAgB,KAAlB,EAAtB,CAAN;AAAA,MAND,CAAP;AAOD,IATD;;AAWA,OAAMQ,gBAAgB,SAAhBA,aAAgB,CAACvE,OAAD,EAAa;AACjCzB,WAAMiC,KAAN,CAAY6B,SAAZ,CAAsBrC,OAAtB,GAAgCA,OAAhC;AACAzB,WAAMiC,KAAN,CAAY6B,SAAZ,CAAsBmB,MAAtB,CAA6BC,QAA7B,GAAwCzD,QAAQyD,QAAhD;;AAEAlF,WAAMiC,KAAN,CAAY6B,SAAZ,CAAsBpD,MAAtB,CAA6BsF,aAA7B,CAA2CvE,OAA3C;AACD,IALD;;AAOAqB,UAAOC,MAAP,CAAc/C,KAAd,EAAqB;AACnB;;;;;AAKAiG,aAAQ;AACNC,gCADM;AAENnC;AAFM,MANW;;AAWnB;;;;;AAKA9B,YAAO;AACLQ,gBAAS,KADJ;AAELkB,aAAMI,gBAAKuB,IAFN;AAGLhC,cAAO,IAHF;AAILpB,gBAAS;AACPC,eAAM,EADC;AAEPI,qBAAY,IAFL;AAGPY,kBAAS;AAHF,QAJJ;AASLlC,uBAAgB,EATX;AAULR,iBAAU,EAVL;AAWLqD,kBAAW;AAXN,MAhBY;AA6BnB7D,6BA7BmB;;AA+BnBwD,qBA/BmB;AAgCnBG,2BAhCmB;AAiCnBF,6BAjCmB;AAkCnBG,uBAlCmB;AAmCnBiB,qCAnCmB;AAoCnBR,mBApCmB;AAqCnBG,mBArCmB;AAsCnBU,uBAtCmB;AAuCnBI,2BAvCmB;AAwCnBM,+BAxCmB;AAyCnBG,iCAzCmB;AA0CnB/B;AA1CmB,IAArB;AA4CD;;AAED;;;;;AAKA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;ACvXA;;;;AAEA;;;;;AAKO,KAAM7D,kCAAa;AACxBC,cAAW;AADa,EAAnB;;AAIP;;;;;;;;AAQO,KAAM6F,0BAAS;AACpBC,eAAY;AACVC,qBAAgB;AADN,IADQ;AAIpBC,cAAW;AACTC,SAAI,kCADK;AAETC,SAAI,kCAFK;AAGTC,SAAI,mCAHK;AAITC,UAAK,yCAJI;AAKTC,UAAK;AALI;AAJS,EAAf;;AAaP;;;;;;;;AAQO,KAAM3C,sBAAO;AAClBuB,SAAM,MADY;AAElBqB,mBAAgB,sBAFE;AAGlB3C,WAAQ,eAHU;AAIlBQ,SAAM;AAJY,EAAb;;AAOP;;;;;;;;AAQO,KAAMjB,8GACVqD,wBADU,EACD,YADC,uCAEVC,gCAFU,EAEO,oBAFP,uCAGVC,wBAHU,EAGD,YAHC,uCAIVC,8BAJU,EAIK,kBAJL,sBAAN;;AAOP;;;;;;;;AAQO,KAAMpB,wBAAQ;AACnB;;;;;AAKAC,oCAAiC,uCANd;AAOnB;;;;;AAKAG,sCAAmC;AAZhB,EAAd,C;;;;;;;;;;;;;;;;KCtEMnE,W,WAAAA,W;AACX,wBAAYoF,CAAZ,EAAezG,aAAf,EAA8BG,MAA9B,EAAsCa,OAAtC,EAA+CE,OAA/C,EAAwD;AAAA;;AACtD,UAAKhC,EAAL,GAAUuH,IAAIA,EAAEvH,EAAN,GAAW,IAArB;AACA,UAAKiG,MAAL,GAAcsB,IAAIA,EAAEtB,MAAN,GAAe,IAA7B;AACA,UAAKtE,eAAL,GAAuB4F,IAAIA,EAAE5F,eAAN,GAAwBb,cAAcd,EAA7D;AACA,UAAKc,aAAL,GAAqBA,aAArB;AACA,UAAKG,MAAL,GAAcA,MAAd;AACA,UAAKa,OAAL,GAAeA,OAAf;AACA,UAAKE,OAAL,GAAeA,OAAf;AACA,UAAKwD,MAAL,GAAc;AACZgC,cAAOD,IAAIA,EAAE/B,MAAN,GAAe,IADV;AAEZC,iBAAUzD,UAAUA,QAAQyD,QAAlB,GAA6B;AAF3B,MAAd;AAID;;;;kCAEY;AACX,cAAO;AACLzF,aAAI,KAAKA,EADJ;AAELG,eAAM,KAAKW,aAAL,CAAmBX,IAFpB;AAGL8F,iBAAQ,KAAKA,MAHR;AAILtE,0BAAiB,KAAKA,eAJjB;AAKLS,kBAAS;AACPqF,sBAAW,EADJ;AAEPxG,mBAAQ;AAFD,UALJ;AASLa,kBAAS,KAAKA,OAAL,CAAaV,UAAb,EATJ;AAULoE,iBAAQ,KAAKA,MAAL,CAAYgC,KAVf;AAWLtF,wBAAe,KAAKF,OAAL,CAAahC;AAXvB,QAAP;AAaD;;;;;;KAGU6B,Y,WAAAA,Y;AACX,yBAAYC,OAAZ,EAAqB4F,QAArB,EAA+BC,YAA/B,EAA6C;AAAA;;AAAA;;AAC3C,UAAKC,cAAL,GAAsBF,QAAtB;AACArE,YAAOwE,IAAP,CAAYH,QAAZ,EAAsBI,OAAtB,CAA8B,sBAAc;AAC1C,aAAKC,UAAL,IAAmB,MAAKC,WAAL,CAAiBlG,OAAjB,EAA0B4F,SAASK,UAAT,CAA1B,EAAgDJ,YAAhD,CAAnB;AACD,MAFD;AAGD;;AAED;;;;;;;;iCAIY7F,O,EAASmG,O,EAASN,Y,EAAc;AAC1C,WAAM/F,SAASE,QAAQL,IAAR,CAAa;AAAA,gBAAQQ,KAAKd,IAAL,KAAc8G,OAAtB;AAAA,QAAb,CAAf;AACA,WAAIrG,MAAJ,EAAY;AACV,gBAAO;AACLT,iBAAMS,OAAOT,IADR;AAELqG,kBAAO5F,OAAOsG,OAAP,KAAmBC,SAAnB,GAA+BvG,OAAOsG,OAAtC,GAAgDP;AAFlD,UAAP;AAID;AACD,cAAO,IAAP;AACD;;AAED;;;;;;kCAGa;AAAA;;AACX,cAAOtE,OAAOwE,IAAP,CAAY,KAAKD,cAAjB,EAAiCQ,IAAjC,CAAsC;AAAA,gBAAO,OAAKC,GAAL,KAAa,OAAKA,GAAL,EAAUb,KAA9B;AAAA,QAAtC,CAAP;AACD;;;kCAEY;AAAA;;AACX,WAAM1F,UAAU,EAAhB;AACAuB,cAAOwE,IAAP,CAAY,KAAKD,cAAjB,EAAiCE,OAAjC,CAAyC,eAAO;AAC9C,aAAI,OAAKO,GAAL,KAAa,OAAKA,GAAL,EAAUb,KAA3B,EAAkC;AAChC1F,mBAAQwG,IAAR,CAAa,EAAEnH,MAAM,OAAKkH,GAAL,EAAUlH,IAAlB,EAAb;AACD;AACF,QAJD;AAKA,cAAOW,OAAP;AACD;;;;;;;;;;;;;;;SCpCajB,kB,GAAAA,kB;SAaAkB,oB,GAAAA,oB;;AA9ChB;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBO,UAASlB,kBAAT,GAA8B;AACnC,UAAO,IAAP;AACD;;AAED;;;;;;;;;AASO,UAASkB,oBAAT,GAAgC;AACrC,UAAO;AACLwG,cAAS,cADJ;AAELC,UAAK,KAFA;AAGLC,YAAO;AAHF,IAAP;AAKD,E","file":"widget-bb-action-recipes-ng/scripts/widget-bb-action-recipes-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"model-bb-action-recipes-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-action-recipes-ng\", [\"vendor-bb-angular\", \"lib-bb-model-errors\", \"lib-bb-widget-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\", \"lib-bb-intent-ng\", \"model-bb-action-recipes-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-action-recipes-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"model-bb-action-recipes-ng\"));\n\telse\n\t\troot[\"widget-bb-action-recipes-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-intent-ng\"], root[\"model-bb-action-recipes-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_25__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_29__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_31__, __WEBPACK_EXTERNAL_MODULE_32__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4109a64068574c27a239","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-action-recipes-ng/model.xml\n// module id = 0\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 21\n// module chunks = 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_25__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 25\n// module chunks = 1 2","/**\n * @module widget-bb-action-recipes-ng\n *\n * @description\n * Action Recipes Widget\n */\nimport angular from 'vendor-bb-angular';\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\n\nimport modelActionRecipesModuleKey, { modelActionRecipesKey } from 'model-bb-action-recipes-ng';\n\nimport Controller from './controller';\nimport * as defaultHooks from './default-hooks';\n\nconst hooksKey = 'widget-bb-action-recipes-ng:hooks';\n\nexport default angular\n  .module('widget-bb-action-recipes-ng', [\n    widgetModuleKey,\n    eventBusModuleKey,\n    modelActionRecipesModuleKey,\n    bbIntentModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('ActionRecipesController', [\n    // dependencies to inject\n    widgetKey,\n    eventBusKey,\n    modelActionRecipesKey,\n    hooksKey,\n\n    /* into */\n    Controller,\n  ])\n\n  .run([eventBusKey, widgetKey, bbIntentKey, (bus, widget, bbIntent) => {\n    bus.publish('cxp.item.loaded', {\n      id: widget.getId(),\n    });\n    bbIntent.init();\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-action-recipes-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 28\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_29__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 29\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 30\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_31__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 31\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_32__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-action-recipes-ng\"\n// module id = 32\n// module chunks = 2","import angular from 'vendor-bb-angular';\nimport { View, labels, httpErrorMessages, Event, Preference } from './constants';\nimport { RecipeModel, RecipeAction } from './mappings';\n\nexport default function ActionRecipesController(widget, bus, model, hooks) {\n  /**\n   * @name ActionRecipesController\n   * @ngkey ActionRecipesController\n   * @type {object}\n   * @description Action recipes widget controller\n   */\n  const $ctrl = this;\n\n  /**\n   * @description\n   * Action preferences set in the widget preferences\n   *\n   * @name ActionRecipesController#preferences\n   * @type {Object}\n   */\n  const preferences = {\n    pageSize: widget.getLongPreference(Preference.PAGE_SIZE),\n  };\n\n  const createRecipeFilter = (specification, apiTrigger, accounts) => {\n    const filter = hooks.createRecipeFilter(specification, apiTrigger, accounts);\n\n    if (!filter) {\n      throw new Error(`No filter mapping defined for specification type '${specification.type}'.` +\n        'Make sure you have extended \"selectRecipeFilter\" hook to support this specification type');\n    }\n\n    if (!(filter.toApiModel instanceof Function)) {\n      throw new Error(`Filter mapping for specification type '${specification.type}' does not ` +\n        'have method \"toApiModel\". This method must be present.');\n    }\n\n    return filter;\n  };\n\n  const convertToRecipeModel = (apiRecipe, specifications, accounts) => {\n    const specification = specifications.find(spec => spec.id === apiRecipe.specificationId);\n    const action = new RecipeAction(apiRecipe.actions, hooks.getAvailableChannels(), true);\n    const account = accounts.find(item => item.id === apiRecipe.arrangementId);\n\n    return new RecipeModel(\n      apiRecipe,\n      specification,\n      createRecipeFilter(specification, apiRecipe.trigger, accounts),\n      action,\n      account\n    );\n  };\n\n  /**\n   * @description\n   * Create object with pagination parametrs\n   *\n   * @name ActionRecipesController#getPaginationParams\n   * @inner\n   * @type {function}\n   * @return {Object} object of query parametrs\n   */\n  const getPaginationParams = () => ({\n    limit: $ctrl.preferences.pageSize,\n    offset: $ctrl.state.recipes.data.length,\n  });\n\n  /**\n   * @description\n   * Checks if server has more more action recipes to load\n   *\n   * @name ActionRecipesController#isMoreRecipes\n   * @inner\n   * @type {function}\n   * @return {Boolean} true if it needs to load\n   */\n  const isMoreRecipes = (curRecipes) =>\n    curRecipes.length === $ctrl.preferences.pageSize\n    && $ctrl.state.recipes.totalCount !== $ctrl.state.recipes.data.length;\n\n  const onLoad = () => {\n    $ctrl.state.loading = true;\n\n    const requestParams = getPaginationParams();\n\n    model.load(requestParams)\n      .then(res => {\n        $ctrl.state.specifications = res.specifications;\n        $ctrl.state.accounts = res.accounts;\n        $ctrl.state.recipes = Object.assign($ctrl.state.recipes, {\n          data: res.recipes.actionRecipes.map(\n            recipe => convertToRecipeModel(recipe, res.specifications, res.accounts)\n          ),\n          totalCount: res.recipes.totalCount,\n        });\n\n        $ctrl.state.recipes.hasMore = isMoreRecipes(res.recipes.actionRecipes);\n        $ctrl.state.loading = false;\n      })\n      .catch((err) => {\n        $ctrl.state.error = httpErrorMessages[err.code];\n        $ctrl.state.loading = false;\n      });\n  };\n\n  /**\n   * @description\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name ActionRecipesController#$onInit\n   * @type {function}\n   */\n  const $onInit = () => {\n    onLoad();\n  };\n\n  /**\n   * @description\n   * Returns current view, used by the template to identify in which state the widget is in\n   *\n   * @name ActionRecipesController#currentView\n   * @type {function}\n   * @return {String} Current view\n   */\n  const currentView = () => $ctrl.state.view;\n\n  /**\n   * @description\n   * Used to switch the view in the template\n\n   * @name ActionRecipesController#navigateTo\n   * @param {String} view New view to switch to\n   * @type {function}\n   */\n  const navigateTo = (view) => {\n    $ctrl.state.view = view;\n  };\n\n  /**\n   * @description\n   * Creates a new action recipe from the given specification.\n   * - Stores composed action object in state.\n   * - Changes view to recipe view\n   *\n   * @name ActionRecipesController#onCreate\n   * @param {Specification} sepcification Action specification which is used\n   * as a template to create new action recipe\n   * @type {function}\n   */\n  const onCreate = (specification) => {\n    $ctrl.state.newAction = new RecipeModel(\n      null,\n      specification,\n      createRecipeFilter(specification),\n      new RecipeAction(specification.actions, hooks.getAvailableChannels(), false)\n    );\n    $ctrl.navigateTo(View.CREATE);\n  };\n\n  const loadMore = (done) => {\n    $ctrl.state.loading = true;\n\n    const requestParams = getPaginationParams();\n    const doneFn = done || (() => {});\n\n    let loadMorePromise = model.loadRecipes(requestParams)\n      .then(res => {\n        $ctrl.state.recipes.data = [\n          ...$ctrl.state.recipes.data,\n          ...res.actionRecipes.map(\n            recipe => convertToRecipeModel(recipe, $ctrl.state.specifications, $ctrl.state.accounts)\n          ),\n        ];\n\n        $ctrl.state.recipes.hasMore = isMoreRecipes(res.actionRecipes);\n        $ctrl.state.loading = false;\n      })\n      .catch((err) => {\n        $ctrl.state.error = httpErrorMessages[err.code];\n        $ctrl.state.loading = false;\n      })\n      .then(() => {\n        loadMorePromise = null;\n        doneFn();\n      });\n\n    return loadMorePromise;\n  };\n\n  /**\n   * @description\n   * Starts a process to edit a given recipe\n   *\n   * @name ActionRecipesController#onEdit\n   * @param {Recipe} recipe recipe to be editted\n   * @type {function}\n   */\n  const onEdit = (recipe) => {\n    $ctrl.state.newAction = angular.copy(recipe);\n    $ctrl.navigateTo(View.EDIT);\n  };\n\n  /**\n   * @description\n   * Saves given action recipe. Additionally stores new action in state,\n   * recipe list and changes the view to list\n   *\n   * @name ActionRecipesController#onSave\n   * @param {Recipe} recipe Action recipe to be saved\n   * @type {function}\n   */\n  const onSave = (recipe) => {\n    if (recipe.id) {\n      model.update(recipe.toApiModel()).then(() => {\n        const currentRecipeIndex = $ctrl.state.recipes.data.findIndex(\n          (item) => item.id === recipe.id\n        );\n        $ctrl.state.recipes.data.splice(currentRecipeIndex, 1, recipe);\n        $ctrl.onCreateDismiss();\n      });\n    } else {\n      model.save(recipe.toApiModel()).then(apiRecipe => {\n        const newRecipe = {\n          ...recipe,\n          id: apiRecipe.id,\n          amount: {\n            ...recipe.amount,\n            currency: recipe.account.currency,\n          },\n        };\n        $ctrl.state.recipes.data = [newRecipe, ...$ctrl.state.recipes.data];\n        $ctrl.onCreateDismiss();\n      });\n    }\n  };\n\n  /**\n   * @description\n   * Removes given action recipe.\n   *\n   * @name ActionRecipesController#onRemove\n   * @param {Recipe} recipe Action recipe to be saved\n   * @type {function}\n   */\n  const onRemove = (recipe) => {\n    model.remove(recipe).then(() => {\n      $ctrl.state.recipes.data.splice($ctrl.state.recipes.data.indexOf(recipe), 1);\n      $ctrl.onCreateDismiss();\n    });\n  };\n\n\n  /**\n   * @description\n   * Dismiss action recipe creation.\n   * - Clears action being created from controller state\n   * - Changes view to list\n   *\n   * @name ActionRecipesController#onCreateDismiss\n   * @type {function}\n   */\n  const onCreateDismiss = () => {\n    $ctrl.navigateTo(View.LIST);\n    $ctrl.state.newAction = null;\n  };\n\n  /**\n   * @description\n   * Activates given action recipe.\n   * If activation fails, 'active' property of given recipe is set to false.\n   *\n   * @name ActionRecipesController#onActivate\n   * @type {Function}\n   * @param {RecipeModel} recipe Recipe to activate\n   * @return {Promise} To be fulfilled with processed recipe\n   * @fires bb.event.actionrecipe.activate.failed\n   */\n  const onActivate = recipe => {\n    Object.assign(recipe, { changingStatus: true });\n    return model\n      .activate(recipe)\n      .catch(() => {\n        Object.assign(recipe, { active: false });\n        bus.publish(Event.ACTION_RECIPE_ACTIVATION_FAILED, recipe);\n      })\n      .then(() => Object.assign(recipe, { changingStatus: false }));\n  };\n\n  /**\n   * @description\n   * Deactivates given action recipe.\n   * If deactivation fails, 'active' property of given recipe is set to true.\n   *\n   * @name ActionRecipesController#onDeactivate\n   * @type {Function}\n   * @param {RecipeModel} recipe Recipe to deactivate\n   * @return {Promise} To be fulfilled with processed recipe\n   * @fires bb.event.actionrecipe.deactivate.failed\n   */\n  const onDeactivate = recipe => {\n    Object.assign(recipe, { changingStatus: true });\n    return model\n      .deactivate(recipe)\n      .catch(() => {\n        Object.assign(recipe, { active: true });\n        bus.publish(Event.ACTION_RECIPE_DEACTIVATION_FAILED, recipe);\n      })\n      .then(() => Object.assign(recipe, { changingStatus: false }));\n  };\n\n  const changeAccount = (account) => {\n    $ctrl.state.newAction.account = account;\n    $ctrl.state.newAction.amount.currency = account.currency;\n\n    $ctrl.state.newAction.filter.changeAccount(account);\n  };\n\n  Object.assign($ctrl, {\n    /**\n     *  Holds static data of controller.\n     *  @name ActionRecipesController#statics\n     *  @type {ActionRecipesControllerStatics}\n     */\n    static: {\n      labels,\n      View,\n    },\n\n    /**\n     * @description Keeps state related data\n     * @name ActionRecipesController#state\n     * @type {ActionRecipesControllerState}\n     */\n    state: {\n      loading: false,\n      view: View.LIST,\n      error: null,\n      recipes: {\n        data: [],\n        totalCount: null,\n        hasMore: false,\n      },\n      specifications: [],\n      accounts: [],\n      newAction: null,\n    },\n    preferences,\n\n    $onInit,\n    navigateTo,\n    currentView,\n    onCreate,\n    onCreateDismiss,\n    onEdit,\n    onSave,\n    onRemove,\n    onActivate,\n    onDeactivate,\n    changeAccount,\n    loadMore,\n  });\n}\n\n/**\n * @typedef {Object} Recipe\n * //TODO: add properties to the typedef\n */\n\n/**\n * @typedef {Object} ActionRecipesControllerStatics\n * @property {Object} labels Label keys object\n * @property {Object} views Views supported by controller\n */\n\n/**\n * @typedef {Object} ActionRecipesControllerState State of the controller\n * @property {Boolean} loading loading indicator.\n * @property {String} view tracks the view the user is in\n * @property {module:lib-bb-model-errors.ModelError} error http error code, if any\n * @property {Array<Recipe>} recipes array of users recipes\n * @property {Array<Specification>} specifications array of available action specifications\n * @property {Array<Account>} accounts array of users accounts\n * @property {Recipe} newAction object used to hold recipe data when new recipe\n * is being created, if any\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-action-recipes-ng/scripts/controller.js","import { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\n\n/**\n * Widget preferences enum\n * @name Preference\n * @type {object}\n */\nexport const Preference = {\n  PAGE_SIZE: 'bb.action.pageSize',\n};\n\n/**\n * @description\n * Recipe data to labels mapper\n *\n * @inner\n * @name labels\n * @type {Object}\n */\nexport const labels = {\n  recipeType: {\n    newTransaction: 'label.list.recipe.type.newTransaction',\n  },\n  condition: {\n    lt: 'label.list.recipe.condition.less',\n    gt: 'label.list.recipe.condition.more',\n    eq: 'label.list.recipe.condition.equal',\n    gte: 'label.list.recipe.condition.moreOrEqual',\n    lte: 'label.list.recipe.condition.lessOrEqual',\n  },\n};\n\n/**\n * @description\n * Available views for the widget\n *\n * @inner\n * @name View\n * @type {Object}\n */\nexport const View = {\n  LIST: 'list',\n  SPECIFICATIONS: 'select-specification',\n  CREATE: 'create-recipe',\n  EDIT: 'edit-recipe',\n};\n\n/**\n * @description\n * Http error codes. Used to identify what error has occured\n *\n * @inner\n * @name httpErrorMessages\n * @type {Object}\n */\nexport const httpErrorMessages = {\n  [E_AUTH]: 'error.auth',\n  [E_CONNECTIVITY]: 'error.connectivity',\n  [E_USER]: 'error.user',\n  [E_UNEXPECTED]: 'error.unexpected',\n};\n\n/**\n * @description\n * Widget events enum\n *\n * @name Event\n * @type {Object}\n * @inner\n */\nexport const Event = {\n  /**\n   * @event bb.event.actionrecipe.activate.failed\n   * @description Event fired when activation of action recipe has failed\n   * @type {String}\n   */\n  ACTION_RECIPE_ACTIVATION_FAILED: 'bb.event.actionrecipe.activate.failed',\n  /**\n   * @event bb.event.actionrecipe.deactivate.failed\n   * @description Event fired when deactivation of action recipe has failed\n   * @type {String}\n   */\n  ACTION_RECIPE_DEACTIVATION_FAILED: 'bb.event.actionrecipe.deactivate.failed',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-action-recipes-ng/scripts/constants.js","export class RecipeModel {\n  constructor(o, specification, filter, actions, account) {\n    this.id = o ? o.id : null;\n    this.active = o ? o.active : true;\n    this.specificationId = o ? o.specificationId : specification.id;\n    this.specification = specification;\n    this.filter = filter;\n    this.actions = actions;\n    this.account = account;\n    this.amount = {\n      value: o ? o.amount : null,\n      currency: account ? account.currency : null,\n    };\n  }\n\n  toApiModel() {\n    return {\n      id: this.id,\n      name: this.specification.name,\n      active: this.active,\n      specificationId: this.specificationId,\n      trigger: {\n        selectors: [],\n        filter: {},\n      },\n      actions: this.actions.toApiModel(),\n      amount: this.amount.value,\n      arrangementId: this.account.id,\n    };\n  }\n}\n\nexport class RecipeAction {\n  constructor(actions, channels, defaultValue) {\n    this.channelsConfig = channels;\n    Object.keys(channels).forEach(channelKey => {\n      this[channelKey] = this.parseAction(actions, channels[channelKey], defaultValue);\n    });\n  }\n\n  /**\n   * Constructs individual channel object\n   * @inner\n   */\n  parseAction(actions, channel, defaultValue) {\n    const action = actions.find(item => item.type === channel);\n    if (action) {\n      return {\n        type: action.type,\n        value: action.enabled !== undefined ? action.enabled : defaultValue,\n      };\n    }\n    return null;\n  }\n\n  /*\n   * Checks if at least one action is selected\n   */\n  isSelected() {\n    return Object.keys(this.channelsConfig).some(key => this[key] && this[key].value);\n  }\n\n  toApiModel() {\n    const actions = [];\n    Object.keys(this.channelsConfig).forEach(key => {\n      if (this[key] && this[key].value) {\n        actions.push({ type: this[key].type });\n      }\n    });\n    return actions;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-action-recipes-ng/scripts/mappings.js","\n/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-bb-action-recipes-ng\n */\n\n/**\n * @name Hooks#createRecipeFilter\n * @type {function}\n * @description\n * This hook function should return a model of recipe's filter. The returned model is likely to be\n * different for each specification type. The returned object will be assigned to 'filter' field\n * of the recipe and it will be accessible from the templates.\n * The returned object must implement 'toApiModel()' method. This method must convert the filter\n * back to API representation of a trigger (i.e. 'selectors' and 'filter' fields must be present).\n * Here's an example of an object returned by 'toApiModel()':\n * {\n *   selectors: [{\n *     path: 'accountId',\n *     value: '123456789'\n *   }],\n *   filter: {\n *     gte: [{ 'pathValue': 'transaction.amount' }, 1000]\n *   }\n * }\n *\n * @param {object} specification specification used by the recipe\n * @param {object} trigger trigger in backen format from which filter model should be created\n * @param {array} accounts list of accounts which are available for the user\n * @returns {object} view model of recipe filter\n */\nexport function createRecipeFilter() {\n  return null;\n}\n\n/**\n * @name Hooks#getAvailableChannels\n * @type {function}\n * @description\n * This hook returns an object which contains mapping from template channel to backend channel\n * code. Only the channels defined here will be mapped when loading or sending data to/from backend.\n *\n * @returns {object} mapping from template channel name to backend channel name\n */\nexport function getAvailableChannels() {\n  return {\n    browser: 'notification',\n    sms: 'sms',\n    email: 'email',\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-action-recipes-ng/scripts/default-hooks.js"],"sourceRoot":""}