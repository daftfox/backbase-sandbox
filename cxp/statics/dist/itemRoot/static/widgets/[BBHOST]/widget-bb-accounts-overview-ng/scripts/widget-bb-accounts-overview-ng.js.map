{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*******************","webpack:///webpack/bootstrap a983de776e3686600b94?4bc9*******************","webpack:///./widget-bb-accounts-overview-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114****","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./widget-bb-accounts-overview-ng/scripts/index.js","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"lib-bb-extension-helpers-ng\"","webpack:///external \"model-bb-product-summary-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///external \"lib-bb-permissions-ng\"","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///./widget-bb-accounts-overview-ng/scripts/controller.js","webpack:///./widget-bb-accounts-overview-ng/scripts/constants.js","webpack:///./widget-bb-accounts-overview-ng/scripts/message.js","webpack:///./widget-bb-accounts-overview-ng/scripts/default-hooks.js"],"names":["defaultHooks","hooksKey","angular","module","modelProductSummaryModuleKey","eventBusModuleKey","intentModuleKey","libBbPermissionsModuleKey","bbExtensionHelpersModuleKey","factory","config","bbPermissionsKey","permissionsProvider","enableDownloadOnInit","setCacheEnabled","extensionHelpersContextKey","eventBusKey","bus","controller","modelProductSummaryKey","bbIntentKey","Controller","run","bbIntent","init","name","AccountsOverviewController","errorMessages","E_AUTH","E_CONNECTIVITY","E_USER","E_UNEXPECTED","uiError","messageMap","modelError","message","code","model","hooks","eventBus","bbIntents","permissions","$ctrl","viewTransactions","create","Intent","TRANSACTION_LIST","createPayment","CREATE_PAYMENT","viewAccountDetails","ACCOUNT_DETAILS","preferences","getAccountsOverviewPreferences","pageSize","DefaultPreference","PAGE_SIZE","maxNavPages","MAX_NAV_PAGES","paginationType","PAGINATION_TYPE","defaultSortableColumn","sortableColumn","SORTABLE_COLUMN","defaultBusinessFunction","businessFunction","Context","BUSINESS_FUNCTION","defaultPrivilege","privilege","PRIVILEGE","defaultResourceName","resourceName","RESOURCE","defaultSortableDirection","sortableDirection","SORTABLE_DIRECTION","dismissMessageTime","Math","abs","DISMISS_MESSAGE_TIME","accounts","rawItems","params","from","size","orderBy","direction","searchTerm","balanceHistoryParams","dateFrom","dateTo","timePeriod","productKindName","state","data","hasMore","length","totalItems","currentPage","searchQuery","newValue","lastSearchQuery","selected","loading","error","loadingDetails","errorDetails","searching","balanceHistory","balanceHistorySeries","errorBalanceHistory","initialLoading","initialError","chartsEnabled","accountsSelectorSelectAll","balanceHistoryLoadingindicator","getBalanceHistory","find","f","arrangementId","id","loadMorePromise","append","newItems","existingItems","replace","items","getNormalizedDate","date","undefined","userOffset","getTimezoneOffset","Date","toISOString","slice","loadHistoryBalance","arrangementsId","balanceHistoryFilter","Object","assign","startDate","endDate","then","processBalanceHistoryData","processBalanceHistorySeries","transformToSeries","catch","messages","dataBalanceHistoryErrorMessage","load","merge","requestParams","loadContextArrangements","raw","totalCount","processAccounts","processedAccounts","map","account","loadAccountDetails","item","getProductDetails","details","selectAccount","product","setProductSelected","publish","Event","PRODUCT_SELECTED","ACCOUNT_SELECTED","CXP_EVENTS","ON_PANEL_LOAD_HISTORY","ON_PANEL_LOAD_DETAILS","updateAccountSelected","getProductSelected","processSelectedAccount","navigateToTransaction","Transactions","view","navigateToCreatePayment","Payments","navigateToAccountDetails","bindEvents","subscribe","loadMore","done","hasAccounts","changePage","pageNumber","onSort","onSearch","query","filter","options","isLoadMore","clearFilter","getPermissions","privileges","getRequestedPrivileges","resp","$onInit","DataBalanceHistoryErrorMessage","BadRequestError","ERR_BALANCE_HISTORY_ARRANGEMENT_IDS_ARE_EMPTY","ERR_BALANCE_HISTORY_INVALID_COMBO_OF_RANGE_PERIOD","ERR_BALANCE_HISTORY_INVALID_DATE_FROM_TO_RANGE_PERIOD","ERR_BALANCE_HISTORY_INVALID_FROM_DATE","codes","e"],"mappings":"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","file":"widget-bb-accounts-overview-ng/scripts/widget-bb-accounts-overview-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"model-bb-product-summary-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-permissions-ng\"), require(\"lib-bb-event-bus-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-accounts-overview-ng\", [\"vendor-bb-angular\", \"lib-bb-model-errors\", \"lib-bb-widget-extension-ng\", \"lib-bb-extension-helpers-ng\", \"model-bb-product-summary-ng\", \"lib-bb-intent-ng\", \"lib-bb-permissions-ng\", \"lib-bb-event-bus-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-accounts-overview-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"model-bb-product-summary-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-permissions-ng\"), require(\"lib-bb-event-bus-ng\"));\n\telse\n\t\troot[\"widget-bb-accounts-overview-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-extension-helpers-ng\"], root[\"model-bb-product-summary-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-permissions-ng\"], root[\"lib-bb-event-bus-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_99__, __WEBPACK_EXTERNAL_MODULE_105__, __WEBPACK_EXTERNAL_MODULE_119__, __WEBPACK_EXTERNAL_MODULE_120__, __WEBPACK_EXTERNAL_MODULE_121__, __WEBPACK_EXTERNAL_MODULE_122__, __WEBPACK_EXTERNAL_MODULE_123__, __WEBPACK_EXTERNAL_MODULE_124__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a983de776e3686600b94","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-accounts-overview-ng/model.xml\n// module id = 0\n// module chunks = 20","module.exports = __WEBPACK_EXTERNAL_MODULE_99__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 99\n// module chunks = 15 16 17 18 19 20 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_105__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 105\n// module chunks = 15 20 21 22 23 24","/**\n * @module widget-bb-accounts-overview-ng\n *\n * @description\n * Accounts overview widget.\n *\n * @example\n * <div ng-controller=\"AccountsOverviewController as $ctrl\">\n *    <table>\n *      <thead>\n *        <tr>\n *          <th i18n-key=\"accounts.header.name\"></th>\n *          <th i18n-key=\"accounts.header.number\"></th>\n *          <th i18n-key=\"accounts.header.bic\"></th>\n *          <th i18n-key=\"accounts.header.type\"></th>\n *          <th i18n-key=\"accounts.header.currency\"></th>\n *          <th i18n-key=\"accounts.header.bookedBalance\"></th>\n *          <th i18n-key=\"accounts.header.availableBalance\"></th>\n *        </tr>\n *      </thead>\n *      <tbody>\n *        <tr ng-repeat=\"account in $ctrl.state.accounts.data track by account.id\">\n *          <td i18n-key=\"{{ account.name }}\"></td>\n *          <td ng-bind=\"{{ account.IBAN || account.BBAN || account.product.Number }}\"></td>\n *          <td i18n-key=\"{{ account.BIC }}\"></td>\n *          <td i18n-key=\"{{ account.productKindName }}\"></td>\n *          <td i18n-key=\"{{ account.currency }}\"></td>\n *          <td i18n-key=\"{{ account.bookedBalance }}\"></td>\n *          <td i18n-key=\"{{ account.availableBalance }}\"></td>\n *        </tr>\n *      </tbody>\n *    </table>\n * </div>\n */\n\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\n\nimport bbExtensionHelpersModuleKey, {\n  extensionHelpersContextKey,\n} from 'lib-bb-extension-helpers-ng';\n\nimport modelProductSummaryModuleKey, { modelProductSummaryKey } from 'model-bb-product-summary-ng';\nimport intentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport libBbPermissionsModuleKey, { bbPermissionsKey } from 'lib-bb-permissions-ng';\n\nimport eventBusModuleKey, {\n  eventBusKey,\n} from 'lib-bb-event-bus-ng';\n\nimport Controller from './controller';\n\nimport * as defaultHooks from './default-hooks';\n\nconst hooksKey = 'widget-bb-accounts-overview-ng:hooks';\n\nexport default angular\n  .module('widget-bb-accounts-overview-ng', [\n    modelProductSummaryModuleKey,\n    eventBusModuleKey,\n    intentModuleKey,\n    libBbPermissionsModuleKey,\n    bbExtensionHelpersModuleKey,\n  ])\n  .factory(hooksKey, extendHooks(defaultHooks))\n  .config([`${bbPermissionsKey}Provider`, (permissionsProvider) => {\n    permissionsProvider.enableDownloadOnInit(true);\n    permissionsProvider.setCacheEnabled(false);\n  }])\n  .factory(extensionHelpersContextKey, [\n    eventBusKey,\n    (bus) => ({ bus }),\n  ])\n  .controller('AccountsOverviewController', [\n    modelProductSummaryKey,\n    hooksKey,\n    eventBusKey,\n    bbIntentKey,\n    bbPermissionsKey,\n    /* into */\n    Controller,\n  ])\n\n  .run([bbIntentKey, (bbIntent) => {\n    bbIntent.init();\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-accounts-overview-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_119__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 119\n// module chunks = 20 21 22","module.exports = __WEBPACK_EXTERNAL_MODULE_120__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-helpers-ng\"\n// module id = 120\n// module chunks = 20 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_121__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-product-summary-ng\"\n// module id = 121\n// module chunks = 20 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_122__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 122\n// module chunks = 20 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_123__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-permissions-ng\"\n// module id = 123\n// module chunks = 20","module.exports = __WEBPACK_EXTERNAL_MODULE_124__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 124\n// module chunks = 20 21 22 23 24","import { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\nimport { Event, Intent, DefaultPreference, Context, CXP_EVENTS } from './constants';\n\nimport message from './message';\n\nconst errorMessages = {\n  [E_AUTH]: 'model.error.auth',\n  [E_CONNECTIVITY]: 'model.error.connectivity',\n  [E_USER]: 'model.error.user',\n  [E_UNEXPECTED]: 'model.error.unexpected',\n};\n\nconst uiError = (messageMap, modelError) => ({\n  message: messageMap[modelError.code],\n});\n\n/**\n * @name AccountsOverviewController\n * @type {Object}\n *\n * @description\n * Accounts overview widget\n *\n * @usage\n * <div ng-controller=\"AccountsOverviewController as $ctrl\">\n *   <!-- ... -->\n * </div>\n */\nexport default function AccountsOverviewController(model, hooks, eventBus, bbIntents, permissions) {\n  const $ctrl = this;\n  const viewTransactions = bbIntents.create(Intent.TRANSACTION_LIST);\n  const createPayment = bbIntents.create(Intent.CREATE_PAYMENT);\n  const viewAccountDetails = bbIntents.create(Intent.ACCOUNT_DETAILS);\n  const preferences = model.getAccountsOverviewPreferences();\n  const pageSize = preferences.pageSize || DefaultPreference.PAGE_SIZE;\n  const maxNavPages = preferences.maxNavPages || DefaultPreference.MAX_NAV_PAGES;\n  const paginationType = preferences.paginationType || DefaultPreference.PAGINATION_TYPE;\n  const defaultSortableColumn = preferences.sortableColumn || DefaultPreference.SORTABLE_COLUMN;\n  const defaultBusinessFunction = preferences.businessFunction || Context.BUSINESS_FUNCTION;\n  const defaultPrivilege = preferences.privilege || Context.PRIVILEGE;\n  const defaultResourceName = preferences.resourceName || Context.RESOURCE;\n  const defaultSortableDirection =\n    preferences.sortableDirection || DefaultPreference.SORTABLE_DIRECTION;\n  const dismissMessageTime =\n    Math.abs(preferences.dismissMessageTime) || DefaultPreference.DISMISS_MESSAGE_TIME;\n\n  const accounts = {\n    rawItems: [],\n    params: {\n      from: 0,\n      size: pageSize,\n      orderBy: defaultSortableColumn,\n      direction: defaultSortableDirection,\n      searchTerm: '',\n      businessFunction: defaultBusinessFunction,\n      privilege: defaultPrivilege,\n      resourceName: defaultResourceName,\n    },\n  };\n\n  /**\n   * @description\n   * balance History Params\n   * @name balanceHistoryParams\n   * @type {object}\n   */\n  const balanceHistoryParams = {\n    dateFrom: null,\n    dateTo: null,\n    timePeriod: 'lastWeek',\n  };\n\n  /**\n   * If account type is specified in widget properties - add it to the query parameters\n   */\n  if (preferences.productKindName) {\n    accounts.params.productKindName = preferences.productKindName;\n  }\n\n  const state = {\n    accounts: {\n      data: [],\n      get orderBy() { return accounts.params.orderBy; },\n      get direction() { return accounts.params.direction; },\n      get hasMore() { return state.accounts.data.length < state.accounts.totalItems; },\n\n      get currentPage() { return accounts.params.from + 1; },\n      get pageSize() { return accounts.params.size; },\n      totalItems: 0,\n\n      get searchQuery() { return accounts.params.searchTerm; },\n      set searchQuery(newValue) { accounts.params.searchTerm = newValue; },\n\n      lastSearchQuery: null,\n\n      maxNavPages,\n      paginationType,\n\n      selected: null,\n      loading: false,\n      error: null,\n      loadingDetails: false,\n      errorDetails: null,\n      searching: false,\n      balanceHistory: [],\n      balanceHistorySeries: [],\n      errorBalanceHistory: null,\n    },\n    initialLoading: true,\n    initialError: null,\n    chartsEnabled: preferences.chartsEnabled,\n    accountsSelectorSelectAll: preferences.accountsSelectorSelectAll,\n    balanceHistoryLoadingindicator: true,\n  };\n\n  /**\n   * @description\n   * Returns balance history records for selected account\n   * @name getBalanceHistory\n   * @type {function}\n   * @param {array} accounts All accounts\n   * @return {array}\n   */\n  const getBalanceHistory = () =>\n    state.accounts.balanceHistory.find(f =>\n      f.arrangementId === state.accounts.selected.id).balanceHistory;\n\n  /**\n   * @type {null|Promise.<loadResponse, module:lib-bb-model-errors.ModelError>} loadMorePromise\n   */\n  let loadMorePromise = null;\n\n  /**\n   * Merges new accounts with existing accounts\n   *\n   * @inner\n   * @name AccountsOverviewController#append\n   * @type {Function}\n   * @returns {Array} merged array of old and new accounts\n   */\n  const append = (newItems, existingItems) => [...existingItems, ...newItems];\n\n  /**\n   * Replaces existing accounts with new accounts\n   *\n   * @inner\n   * @name AccountsOverviewController#replace\n   * @type {Function}\n   * @returns {Array} new accounts\n   */\n  const replace = items => items;\n\n  /**\n   * @description\n   * Normalize date to required format.\n   *\n   * @inner\n   * @name AccountsOverviewController#getNormalizedDate\n   * @type {function}\n   * @returns {String|null} Date string or null\n   */\n  const getNormalizedDate = (date) => {\n    if (date === null || date === undefined) {\n      return null;\n    }\n    const userOffset = date.getTimezoneOffset() * 60000;\n    return `${new Date(date - userOffset).toISOString().slice(0, -5)}Z`;\n  };\n\n  /**\n   * @name AccountsOverviewController#loadHistoryBalance\n   * @type {Function}\n   *\n   * @param {string[]} arrangementsId Ids of the requested arrangements\n   * @param {?object} balanceHistoryFilter - optional configuration object\n   * @returns {Promise.<module:model-bb-product-summary-ng.BalanceHistory, ModelError>}\n   * Balance history data for given arrengements ids\n   *\n   */\n  const loadHistoryBalance = (arrangementsId, balanceHistoryFilter) => {\n    state.balanceHistoryLoadingindicator = true;\n    state.accounts.errorBalanceHistory = null;\n    Object.assign(balanceHistoryParams, {\n      dateFrom: getNormalizedDate(balanceHistoryFilter.startDate),\n      dateTo: getNormalizedDate(balanceHistoryFilter.endDate),\n      timePeriod: balanceHistoryFilter.timePeriod,\n    });\n\n    return model.getBalanceHistory(arrangementsId, balanceHistoryParams)\n      .then((balanceHistory) => {\n        state.accounts.balanceHistory =\n          hooks.processBalanceHistoryData(balanceHistory.items);\n        state.accounts.balanceHistorySeries =\n          hooks.processBalanceHistorySeries(model.transformToSeries(balanceHistory));\n        state.balanceHistoryLoadingindicator = false;\n      })\n      .catch(error => {\n        state.accounts.errorBalanceHistory = {\n          messages: message.dataBalanceHistoryErrorMessage(error),\n        };\n        state.balanceHistoryLoadingindicator = false;\n        state.accounts.balanceHistory = [];\n        throw error;\n      });\n  };\n\n\n  /**\n   * @name AccountsOverviewController#load\n   * @type {Function}\n   * @inner\n   *\n   * @description\n   * Get accounts.\n   *\n   * @returns {null|Promise.<loadResponse, module:lib-bb-model-errors.ModelError>} A Promise with\n   * loaded accounts or null if loading is in process\n   */\n  const load = (merge = append, params = {}) => {\n    const requestParams = Object.assign({}, accounts.params, params);\n    state.accounts.error = null;\n    state.accounts.loading = true;\n\n    return model\n      .loadContextArrangements(requestParams)\n      .then(raw => {\n        accounts.rawItems = merge(raw.data, accounts.rawItems);\n        state.accounts.totalItems = raw.totalCount;\n\n        return accounts.rawItems;\n      })\n      .then(hooks.processAccounts)\n      .then((processedAccounts) => {\n        state.accounts.data = processedAccounts;\n        state.accounts.loading = false;\n      })\n      .then(() => {\n        if (preferences.chartsEnabled) {\n          loadHistoryBalance(\n            state.accounts.data.map((account) => account.id), balanceHistoryParams\n          );\n        }\n      })\n      .catch(error => {\n        state.accounts.loading = false;\n        state.accounts.error = uiError(errorMessages, error);\n\n        throw error;\n      });\n  };\n\n  /**\n   * @name AccountsOverviewController#loadAccountDetails\n   * @type {Function}\n   * @description Loads the details of a specific account\n   *\n   * @param  {Object} item Account to load details of\n   * @returns {Promise.<module:model-bb-product-summary-ng.ProductDetails, ModelError>}\n   */\n  const loadAccountDetails = (item) => {\n    state.accounts.loadingDetails = true;\n    state.accounts.errorDetails = null;\n    return model.getProductDetails(item.id)\n      .then((details) => {\n        state.accounts.loadingDetails = false;\n        Object.assign(item, details);\n      })\n      .catch(error => {\n        state.accounts.loadingDetails = false;\n        state.accounts.errorDetails = uiError(errorMessages, error);\n      });\n  };\n\n  /**\n   * @description\n   * Sets the alternate workflow when a user selects a Account from the overview.\n   *\n   * @name AccountsOverviewController#selectAccount\n   * @type {Function}\n   * @param {Object} product Selected account\n   * @fires bb.event.product.selected\n   */\n  const selectAccount = (product) => {\n    model.setProductSelected(product);\n    eventBus.publish(Event.PRODUCT_SELECTED, { product });\n    // TODO: Remove this deprecated method when component version will be bumped to v2.0.0\n    eventBus.publish(Event.ACCOUNT_SELECTED, { product });\n    eventBus.publish(CXP_EVENTS.ON_PANEL_LOAD_HISTORY);\n    eventBus.publish(CXP_EVENTS.ON_PANEL_LOAD_DETAILS);\n  };\n\n  /**\n   * Handles account select\n   */\n  function updateAccountSelected() {\n    model.getProductSelected(false)\n      .then(product => {\n        state.accounts.selected = product ? hooks.processSelectedAccount(product) : null;\n      });\n  }\n\n  /**\n   * @name AccountsOverviewController#navigateToTransaction\n   *\n   * @description\n   * Navigate to transaction\n   *\n   * @type {Function}\n   * @param {Object} account Account to select.\n   */\n  const navigateToTransaction = (account) => {\n    if ($ctrl.permissions.Transactions.Transactions.view) {\n      selectAccount(account);\n      viewTransactions();\n    }\n  };\n\n  /**\n   * @name AccountsOverviewController#navigateToCreatePayment\n   *\n   * @description\n   * Navigate to create payment\n   *\n   * @type {Function}\n   * @param {Object} account Account to select.\n   */\n  const navigateToCreatePayment = (account) => {\n    if ($ctrl.permissions.Payments['SEPA CT'].create) {\n      selectAccount(account);\n      createPayment();\n    }\n  };\n\n  /**\n   * @name AccountsOverviewController#navigateToAccountDetails\n   *\n   * @description\n   * Navigate to account details\n   *\n   * @type {Function}\n   * @param {Object} account Account to select.\n   */\n  const navigateToAccountDetails = (account) => {\n    selectAccount(account);\n    loadAccountDetails(account);\n    viewAccountDetails();\n  };\n\n  /**\n   * Adds subscriptions to bus events\n   */\n  function bindEvents() {\n    eventBus.subscribe(Event.PRODUCT_SELECTED, updateAccountSelected);\n    // TODO: Remove this deprecated method when component version will be bumped to v2.0.0\n    eventBus.subscribe(Event.ACCOUNT_SELECTED, updateAccountSelected);\n  }\n\n  /**\n   * @name AccountsOverviewController#loadMore\n   *\n   * @description\n   * Loads more payments if they are available.\n   *\n   * @type {Function}\n   * @param {Function} done Callback to stop loading\n   * @returns {null|Promise.<loadResponse, module:lib-bb-model-errors.ModelError>} A Promise with\n   * loaded accounts or null if loading is in process\n   */\n  const loadMore = (done = () => {}) => {\n    if (state.accounts.loading) {\n      return loadMorePromise;\n    }\n\n    accounts.params.from++;\n\n    loadMorePromise = load(append)\n      .then(() => {\n        loadMorePromise = null;\n        done();\n      })\n      .catch(() => {\n        loadMorePromise = null;\n        accounts.params.from--;\n        done();\n      });\n\n    return loadMorePromise;\n  };\n\n  /**\n   * @description\n   * Check if there are accounts loaded\n   *\n   * @name  AccountsOverviewController#hasAccounts\n   * @type {Function}\n   * @returns {Boolean} True if there is at least one account loaded, false otherwise\n   */\n  const hasAccounts = () => !!state.accounts.data.length;\n\n  /**\n   * @description\n   * Change page of displayed accounts.\n   *\n   * @name AccountsOverviewController#changePage\n   * @type {Function}\n   * @param {Number} params.currentPage Page number to navigate to\n   */\n  const changePage = ({ currentPage: pageNumber }) => {\n    Object.assign(accounts.params, { from: pageNumber - 1 });\n\n    load(replace);\n  };\n\n  /**\n   * @name AccountsOverviewController#onSort\n   * @type {Function}\n   * @description\n   * Loads sorted list of accounts\n   * @param  {String} orderBy Column key to sort\n   * @param  {String} direction Sort direction\n   * @returns {Promise.<loadResponse, module:lib-bb-model-errors.ModelError>} A Promise with\n   * sorted accounts\n   */\n  const onSort = (orderBy, direction) => {\n    Object.assign(accounts.params, {\n      orderBy,\n      direction,\n    });\n\n    return load(replace);\n  };\n\n  /**\n   * @name AccountsOverviewController#onSearch\n   * @type {Function}\n   * @description\n   * Loads queried list of accounts\n   * @param {String} query Search query\n   * @returns {Promise.<loadResponse, module:lib-bb-model-errors.ModelError>} A Promise with\n   * searched accounts\n   */\n  const onSearch = (query) => {\n    Object.assign(accounts.params, { from: 0, searchTerm: query });\n    state.accounts.searching = true;\n\n    return load(replace)\n      .then(() => {\n        Object.assign(state.accounts, { lastSearchQuery: query });\n      });\n  };\n\n  /**\n   * @name AccountsOverviewController#filter\n   * @type {Function}\n   * @description\n   * Loads filtered list of accounts\n   * @param {FilterOptions} options Config object\n   * @returns {Promise.<FilterResponse, module:lib-bb-model-errors.ModelError>} A Promise with\n   * filtered accounts\n   */\n  const filter = (options) => {\n    if (options.isLoadMore) {\n      return loadMore();\n    }\n\n    return onSearch(options.searchQuery);\n  };\n\n  /**\n   * @name AccountsOverviewController#clearFilter\n   * @type {Function}\n   * @description\n   * Resets filtered list of accounts\n   * @returns {Promise.<FilterResponse, module:lib-bb-model-errors.ModelError>} A Promise with\n   * filtered accounts\n   */\n  const clearFilter = () => {\n    Object.assign(accounts.params, { from: 0, searchTerm: '' });\n    state.accounts.searching = false;\n\n    return load(replace);\n  };\n\n  /**\n   * @name AccountsOverviewController#getPermissions\n   * @type {Function}\n   * @description\n   * Loads user permission for the extension\n   */\n  const getPermissions = () => {\n    const privileges = hooks.getRequestedPrivileges();\n\n    permissions.getPermissions(privileges)\n      .then(resp => {\n        $ctrl.permissions = resp;\n      });\n  };\n\n  /**\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @type {Function}\n   * @name AccountsOverviewController#$onInit\n   *\n   * @returns {Promise.<loadResponse, module:lib-bb-model-errors.ModelError>} A Promise with\n   * loaded accounts\n   */\n  const $onInit = () => load()\n    .then(() => {\n      state.initialLoading = false;\n    })\n    .then(updateAccountSelected)\n    .then(getPermissions)\n    .then(bindEvents)\n    .catch(error => {\n      state.initialLoading = false;\n      state.initialError = uiError(errorMessages, error).message;\n    });\n\n  Object.assign($ctrl, {\n    state,\n    dismissMessageTime,\n    selectAccount,\n    loadMore,\n    onSort,\n    navigateToTransaction,\n    navigateToCreatePayment,\n    navigateToAccountDetails,\n    $onInit,\n    changePage,\n    loadAccountDetails,\n    hasAccounts,\n    filter,\n    clearFilter,\n    getBalanceHistory,\n    loadHistoryBalance,\n  });\n}\n\n/**\n * @typedef {Object} loadResponse\n * @property {module:data-bb-product-summary-http-ng.ProductSummaryData.ProductsummaryItem[]} data\n *   Array of accounts\n * @property {String} totalCount Total accounts number\n */\n\n/**\n * @typedef {Object} FilterResponse\n * @property {module:data-bb-product-summary-http-ng.ProductSummaryData.ProductsummaryItem[]} data\n *   Array of accounts\n * @property {Number} totalItems Total number of accounts\n * @property {Boolean} hasMore Controls whether or not has more accounts\n */\n\n/**\n * @typedef {Object} FilterOptions\n * @property {String} searchQuery Search query\n * @property {Boolean} isLoadMore Controls whether or not it is request for loading more accounts\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-accounts-overview-ng/scripts/controller.js","export const Event = {\n  PRODUCT_SELECTED: 'bb.event.product.selected',\n  // TODO: Remove this deprecated method when component version will be bumped to v2.0.0\n  ACCOUNT_SELECTED: 'bb.event.account.selected',\n};\n\nexport const Intent = {\n  TRANSACTION_LIST: 'view.account.transactions',\n  CREATE_PAYMENT: 'payment-orders.auth.create',\n  ACCOUNT_DETAILS: 'intent.bus.accounts.overview.details.view',\n};\n\nexport const DefaultPreference = {\n  PAGE_SIZE: 50,\n  MAX_NAV_PAGES: 3,\n  DISMISS_MESSAGE_TIME: 3,\n  PAGINATION_TYPE: 'load-more',\n  SORTABLE_COLUMN: 'name',\n  SORTABLE_DIRECTION: 'ASC',\n};\n\nexport const Context = {\n  RESOURCE: 'Product Summary',\n  PRIVILEGE: 'view',\n  BUSINESS_FUNCTION: 'Product Summary',\n};\n\n/**\n * CXP events enum\n * @type {object}\n */\nexport const CXP_EVENTS = {\n  ON_PANEL_LOAD_HISTORY: 'view.chart.on.panel.loaded.event.history',\n  ON_PANEL_LOAD_DETAILS: 'view.chart.on.panel.loaded.event.details',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-accounts-overview-ng/scripts/constants.js","import { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\nimport { BadRequestError } from 'model-bb-product-summary-ng';\n\n/**\n * @name MessageHandler#DataManageProductsErrorMessage\n * @description\n * Object for mapping errors used in extension\n * @type {Object}\n */\nexport const DataBalanceHistoryErrorMessage = {\n  [E_AUTH]:\n    'model.error.auth',\n  [E_CONNECTIVITY]:\n    'model.error.connectivity',\n  [E_USER]:\n    'model.error.user',\n  [E_UNEXPECTED]:\n    'model.error.unexpected',\n  [BadRequestError.ERR_BALANCE_HISTORY_ARRANGEMENT_IDS_ARE_EMPTY]:\n    'account.error.arrangement.empty.arrangementsids',\n  [BadRequestError.ERR_BALANCE_HISTORY_INVALID_COMBO_OF_RANGE_PERIOD]:\n    'account.error.arrangement.invalid.period.range',\n  [BadRequestError.ERR_BALANCE_HISTORY_INVALID_DATE_FROM_TO_RANGE_PERIOD]:\n    'account.error.arrangement.invalid.from.to.date',\n  [BadRequestError.ERR_BALANCE_HISTORY_INVALID_FROM_DATE]:\n    'account.error.arrangement.invalid.from.date',\n};\n\n/**\n * @name MessageHandler#dataBalanceHistoryErrorMessage\n * @description\n * Create error message array for update product\n * Checks if message has one or more then one error\n * @type {function}\n * @param {ModelError} modelError response error object\n * @returns {MessageArray} message array\n */\nconst dataBalanceHistoryErrorMessage = modelError => {\n  const codes = modelError.codes || [modelError.code];\n  return codes.map(e => DataBalanceHistoryErrorMessage[e]);\n};\n\n/**\n * @name MessageHandler\n * @type {object}\n * @description list of message handlers\n */\nexport default {\n  dataBalanceHistoryErrorMessage,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-accounts-overview-ng/scripts/message.js","/**\n * @name DefaultHooks\n * @type {Object}\n *\n * @description\n * Hooks for widget-bb-accounts-overview-ng\n */\n\n/**\n * @name DefaultHooks#processAccounts\n * @type {Function}\n *\n * @description\n * Hook for processing accounts.\n *\n * @param {module:data-bb-product-summary-http-ng.ProductSummaryData.ProductsummaryItem[]} accounts\n *   Accounts to process\n * @returns {module:data-bb-product-summary-http-ng.ProductSummaryData.ProductsummaryItem[]}\n *   Processed account\n */\nexport const processAccounts = accounts => accounts;\n\n/**\n * @name DefaultHooks#processSelectedAccount\n * @type {Function}\n *\n * @description\n * Hook for processing selected account.\n *\n * @param {module:data-bb-product-summary-http-ng.ProductSummaryData.ProductsummaryItem} account\n *   Account to process\n * @returns {module:data-bb-product-summary-http-ng.ProductSummaryData.ProductsummaryItem}\n *   Processed account\n */\nexport const processSelectedAccount = account => account;\n\n/**\n * @name Hooks#getRequestedPrivileges\n * @type {Function}\n *\n * @description\n * Prepare required privileges into a form ready for template\n\n * @returns {Array.<Object>} Required privileges array\n */\nexport const getRequestedPrivileges = () => ([]);\n\n/**\n * @name Hooks#processBalanceHistoryData\n * @type {Function}\n *\n * @description\n * History Balance data hook\n * @param {module:data-bb-arrangements-http-ng.BalanceHistoryData.BalanceHistory} data\n * @returns {Array.<Object>} balance history data\n */\nexport const processBalanceHistoryData = data => data;\n\n/**\n * @name Hooks#processBalanceHistorySeries\n * @type {function}\n *\n * @description\n * Default hook for balance history chart series object post processing\n *\n * @param {module:data-bb-arrangements-http-ng.BalanceHistorySeries} data balance history data\n * @returns {object} processed series\n */\nexport const processBalanceHistorySeries = data => data;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-accounts-overview-ng/scripts/default-hooks.js"],"sourceRoot":""}