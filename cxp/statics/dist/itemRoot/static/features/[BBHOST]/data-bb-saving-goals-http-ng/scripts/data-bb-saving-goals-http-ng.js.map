{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c19ce5115d6905935377","webpack:///./fe-dist/http-ng/data-bb-saving-goals-http-ng/model.xml","webpack:///./fe-dist/http-ng/data-bb-saving-goals-http-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///./fe-dist/http-ng/data-bb-saving-goals-http-ng/scripts/data-bb-saving-goals-http.js"],"names":["savingGoalsDataModuleKey","savingGoalsDataKey","module","provider","config","baseUri","setBaseUri","$get","name","conf","httpClient","serializeParams","version","definedTypes","parse","res","data","headers","status","statusText","postSavinggoalsRecord","url","method","then","catch","err","getSavinggoals","params","getSavinggoalsRecord","id","deleteSavinggoalsRecord","putSavinggoalsRecord","schemas"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,yC;;;;;;;;;;;;;ACaA;;;;AAEA;;;;;;AAfA;AACA;;;;;;;;;;;;AAgBA,KAAMA,2BAA2B,8BAAjC;AACA;;;;;AAKO,KAAMC,kDAAqB,8CAA3B;AACP;;;;;mBAKe,0BACZC,MADY,CACLF,wBADK,EACqB,EADrB;;AAGb;;;;;;;AAHa,EAUZG,QAVY,CAUHF,kBAVG,EAUiB,CAAC,YAAM;AACnC,OAAMG,SAAS;AACbC,cAAS;AADI,IAAf;;AAIA;;;;;;;;;;;;;;;;;;;;;;AAsBA,UAAO;AACL;;;;;AAKAC,iBAAY,oBAACD,OAAD,EAAa;AACvBD,cAAOC,OAAP,GAAiBA,OAAjB;AACD,MARI;;AAUL;;;;;AAKAE,WAAM,CACJ,OADI,EAEJ,sBAFI;AAGJ;AACD,0CAAgBH,MAAhB,CAJK;AAfD,IAAP;AAsBD,EAjD6B,CAVjB,EA6DZI,I;;;;;;AC1FH,gD;;;;;;;;;;;;ACAA;mBACe,UAACC,IAAD;AAAA,UAAU,UAACC,UAAD,EAAaC,eAAb,EAAiC;AACxD;AACA,SAAMN,UAAUI,KAAKJ,OAAL,IAAgB,EAAhC;;AAEA,SAAMO,UAAU,IAAhB;;AAGA;;;;AAIA,SAAMC,eAAe,EAArB;;AAGAA,kBAAa,0BAAb,IAA2C,EAAC,cAAa,EAAC,MAAK,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAN,EAAwC,YAAW,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAnD,EAAqF,cAAa,EAAC,QAAO,QAAR,EAAiB,cAAa,EAAC,UAAS,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAV,EAA4C,gBAAe,EAAC,QAAO,QAAR,EAAiB,WAAU,YAA3B,EAAwC,YAAW,IAAnD,EAA3D,EAA9B,EAAmJ,YAAW,IAA9J,EAAlG,EAAsQ,iBAAgB,EAAC,QAAO,QAAR,EAAiB,YAAW,KAA5B,EAAtR,EAAyT,sBAAqB,EAAC,QAAO,QAAR,EAAiB,YAAW,KAA5B,EAA9U,EAAiX,kBAAiB,EAAC,QAAO,QAAR,EAAiB,cAAa,EAAC,UAAS,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAV,EAA4C,gBAAe,EAAC,QAAO,QAAR,EAAiB,WAAU,YAA3B,EAAwC,YAAW,IAAnD,EAA3D,EAA9B,EAAmJ,YAAW,KAA9J,EAAlY,EAAuiB,mBAAkB,EAAC,QAAO,QAAR,EAAiB,cAAa,EAAC,UAAS,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAV,EAA4C,gBAAe,EAAC,QAAO,QAAR,EAAiB,WAAU,YAA3B,EAAwC,YAAW,IAAnD,EAA3D,EAA9B,EAAmJ,YAAW,KAA9J,EAAzjB,EAAd,EAA3C;;AAEAA,kBAAa,6BAAb,IAA8C,EAAC,cAAa,EAAC,YAAW,EAAC,QAAO,QAAR,EAAiB,aAAY,EAA7B,EAAgC,YAAW,IAA3C,EAAZ,EAA6D,cAAa,EAAC,QAAO,QAAR,EAAiB,cAAa,EAAC,UAAS,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAV,EAA4C,gBAAe,EAAC,QAAO,QAAR,EAAiB,WAAU,YAA3B,EAAwC,YAAW,IAAnD,EAA3D,EAA9B,EAAmJ,YAAW,IAA9J,EAA1E,EAAd,EAA9C;;AAEAA,kBAAa,2BAAb,IAA4C,EAAC,cAAa,EAAC,YAAW,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAZ,EAA8C,cAAa,EAAC,QAAO,QAAR,EAAiB,cAAa,EAAC,UAAS,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAV,EAA4C,gBAAe,EAAC,QAAO,QAAR,EAAiB,WAAU,YAA3B,EAAwC,YAAW,IAAnD,EAA3D,EAA9B,EAAmJ,YAAW,IAA9J,EAA3D,EAA+N,iBAAgB,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAA/O,EAAd,EAA5C;;AAEAA,kBAAa,2BAAb,IAA4C,EAAC,QAAO,OAAR,EAAgB,SAAQ,EAAC,cAAa,EAAC,MAAK,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAN,EAAwC,YAAW,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAnD,EAAqF,cAAa,EAAC,QAAO,QAAR,EAAiB,cAAa,EAAC,UAAS,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAV,EAA4C,gBAAe,EAAC,QAAO,QAAR,EAAiB,WAAU,YAA3B,EAAwC,YAAW,IAAnD,EAA3D,EAA9B,EAAmJ,YAAW,IAA9J,EAAlG,EAAsQ,iBAAgB,EAAC,QAAO,QAAR,EAAiB,YAAW,KAA5B,EAAtR,EAAyT,sBAAqB,EAAC,QAAO,QAAR,EAAiB,YAAW,KAA5B,EAA9U,EAAiX,kBAAiB,EAAC,QAAO,QAAR,EAAiB,cAAa,EAAC,UAAS,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAV,EAA4C,gBAAe,EAAC,QAAO,QAAR,EAAiB,WAAU,YAA3B,EAAwC,YAAW,IAAnD,EAA3D,EAA9B,EAAmJ,YAAW,KAA9J,EAAlY,EAAuiB,mBAAkB,EAAC,QAAO,QAAR,EAAiB,cAAa,EAAC,UAAS,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAV,EAA4C,gBAAe,EAAC,QAAO,QAAR,EAAiB,WAAU,YAA3B,EAAwC,YAAW,IAAnD,EAA3D,EAA9B,EAAmJ,YAAW,KAA9J,EAAzjB,EAAd,EAAxB,EAA5C;;AAEAA,kBAAa,gCAAb,IAAiD,EAAC,cAAa,EAAC,WAAU,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAX,EAA6C,UAAS,EAAC,QAAO,OAAR,EAAgB,SAAQ,EAAC,cAAa,EAAC,WAAU,EAAC,QAAO,QAAR,EAAiB,YAAW,KAA5B,EAAX,EAA8C,OAAM,EAAC,QAAO,QAAR,EAAiB,YAAW,KAA5B,EAApD,EAAuF,WAAU,EAAC,QAAO,QAAR,EAAiB,cAAa,EAA9B,EAAiC,YAAW,KAA5C,EAAjG,EAAd,EAAxB,EAA4L,YAAW,KAAvM,EAAtD,EAAd,EAAjD;;AAEAA,kBAAa,wBAAb,IAAyC,EAAC,cAAa,EAAC,MAAK,EAAC,QAAO,QAAR,EAAiB,YAAW,IAA5B,EAAN,EAAd,EAAzC;;AAIA;;;;;;;;AAQA;;;;;;;;;;;;;AAaA;;;;;AAKA;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;AAQA;;;;;;;;;;;;;AAaA;;;;;;;AAQA;;;;;;AAMA,cAASC,KAAT,CAAeC,GAAf,EAAoB;AAClB,cAAO;AACLC,eAAMD,IAAIC,IADL;AAELC,kBAASF,IAAIE,OAFR;AAGLC,iBAAQH,IAAIG,MAHP;AAILC,qBAAYJ,IAAII;AAJX,QAAP;AAMD;;AAGD;;;;;;;;;;;;;;;;;;;;;AAqBA,cAASC,qBAAT,CAA+BJ,IAA/B,EAAqCC,OAArC,EAA8C;AAC5C,WAAMI,WAAShB,OAAT,GAAmBO,OAAnB,iBAAN;;AAEA,cAAOF,WAAW;AAChBY,iBAAQ,MADQ;AAEhBD,iBAFgB;;AAIhBL,eAAMA,QAAQ,EAJE;;AAMhBC,kBAASA,WAAW;AANJ,QAAX,EAOJM,IAPI,CAOCT,KAPD,EAQNU,KARM,CAQA,eAAO;AAAE,eAAMV,MAAMW,GAAN,CAAN;AAAmB,QAR5B,CAAP;AASD;;AAED;;;;;;;;;;;;;;;;;;;;;;;AAuBA,cAASC,cAAT,CAAwBC,MAAxB,EAAgCV,OAAhC,EAAyC;AACvC,WAAMI,WAAShB,OAAT,GAAmBO,OAAnB,iBAAN;;AAEA,cAAOF,WAAW;AAChBY,iBAAQ,KADQ;AAEhBD,iBAFgB;;AAIhBM,iBAAQA,UAAU,EAJF;;AAMhBV,kBAASA,WAAW;AANJ,QAAX,EAOJM,IAPI,CAOCT,KAPD,EAQNU,KARM,CAQA,eAAO;AAAE,eAAMV,MAAMW,GAAN,CAAN;AAAmB,QAR5B,CAAP;AASD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,cAASG,oBAAT,CAA8BC,EAA9B,EAAkCF,MAAlC,EAA0CV,OAA1C,EAAmD;AACjD,WAAMI,WAAShB,OAAT,GAAmBO,OAAnB,qBAA0CiB,EAAhD;;AAEA,cAAOnB,WAAW;AAChBY,iBAAQ,KADQ;AAEhBD,iBAFgB;;AAIhBM,iBAAQA,UAAU,EAJF;;AAMhBV,kBAASA,WAAW;AANJ,QAAX,EAOJM,IAPI,CAOCT,KAPD,EAQNU,KARM,CAQA,eAAO;AAAE,eAAMV,MAAMW,GAAN,CAAN;AAAmB,QAR5B,CAAP;AASD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,cAASK,uBAAT,CAAiCD,EAAjC,EAAqCF,MAArC,EAA6CV,OAA7C,EAAsD;AACpD,WAAMI,WAAShB,OAAT,GAAmBO,OAAnB,qBAA0CiB,EAAhD;;AAEA,cAAOnB,WAAW;AAChBY,iBAAQ,QADQ;AAEhBD,iBAFgB;;AAIhBM,iBAAQA,UAAU,EAJF;;AAMhBV,kBAASA,WAAW;AANJ,QAAX,EAOJM,IAPI,CAOCT,KAPD,EAQNU,KARM,CAQA,eAAO;AAAE,eAAMV,MAAMW,GAAN,CAAN;AAAmB,QAR5B,CAAP;AASD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,cAASM,oBAAT,CAA8BF,EAA9B,EAAkCb,IAAlC,EAAwCC,OAAxC,EAAiD;AAC/C,WAAMI,WAAShB,OAAT,GAAmBO,OAAnB,qBAA0CiB,EAAhD;;AAEA,cAAOnB,WAAW;AAChBY,iBAAQ,KADQ;AAEhBD,iBAFgB;;AAIhBL,eAAMA,QAAQ,EAJE;;AAMhBC,kBAASA,WAAW;AANJ,QAAX,EAOJM,IAPI,CAOCT,KAPD,EAQNU,KARM,CAQA,eAAO;AAAE,eAAMV,MAAMW,GAAN,CAAN;AAAmB,QAR5B,CAAP;AASD;;AAMD;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAMO,UAAU,EAAhB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCAA,aAAQZ,qBAAR,GAAgCP,aAAa,2BAAb,CAAhC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCAmB,aAAQD,oBAAR,GAA+BlB,aAAa,6BAAb,CAA/B;;AAGA;;;;;;;;;AASA,YAAQ;;AAENO,mDAFM;;AAINM,qCAJM;;AAMNE,iDANM;;AAQNE,uDARM;;AAUNC,iDAVM;;AAaNC;AAbM,MAAR;AAeD,IA5ac;AAAA,E","file":"data-bb-saving-goals-http-ng/scripts/data-bb-saving-goals-http-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-bb-saving-goals-http-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-bb-saving-goals-http-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"data-bb-saving-goals-http-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c19ce5115d6905935377","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fe-dist/http-ng/data-bb-saving-goals-http-ng/model.xml\n// module id = 0\n// module chunks = 0","/* eslint-disable */\n/**\n * @module data-bb-saving-goals-http-ng\n *\n * @description A data module for accessing the Saving Goals REST API.\n *\n * @returns {String} `data-bb-saving-goals-http-ng`\n * @example\n * import savingGoalsDataModuleKey, {\n *   savingGoalsDataKey,\n * } from 'data-bb-saving-goals-http-ng';\n */\n\nimport ng from 'vendor-bb-angular';\n\nimport savingGoalsData from './data-bb-saving-goals-http';\n\nconst savingGoalsDataModuleKey = 'data-bb-saving-goals-http-ng';\n/**\n * @name savingGoalsDataKey\n * @type {string}\n * @description Angular dependency injection key for the SavingGoalsData service\n */\nexport const savingGoalsDataKey = 'data-bb-saving-goals-http-ng:savingGoalsData';\n/**\n * @name default\n * @type {string}\n * @description Angular dependency injection module key\n */\nexport default ng\n  .module(savingGoalsDataModuleKey, [])\n  \n  /**\n   * @constructor SavingGoalsData\n   * @type {object}\n   *\n   * @description Public api for data-bb-saving-goals-http-ng service\n   *\n   */\n  .provider(savingGoalsDataKey, [() => {\n    const config = {\n      baseUri: '/',\n    };\n\n    /**\n     * @name SavingGoalsDataProvider\n     * @type {object}\n     * @ngkey data-bb-saving-goals-http-ng:savingGoalsDataProvider\n     * @description\n     * Data service that can be configured with custom base URI.\n     *\n     * @example\n     * // Configuring in an angular app:\n     * angular.module(...)\n     *   .config(['data-bb-saving-goals-http-ng:savingGoalsDataProvider',\n     *     (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *       });\n     *\n     * // Configuring With config-bb-providers-ng:\n     * export default [\n     *   ['data-bb-saving-goals-http-ng:savingGoalsDataProvider', (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *   }]\n     * ];\n     */\n    return {\n      /**\n       * @name SavingGoalsDataProvider#setBaseUri\n       * @type {function}\n       * @param {string} baseUri Base URI which will be the prefix for all HTTP requests\n       */\n      setBaseUri: (baseUri) => {\n        config.baseUri = baseUri;\n      },\n\n      /**\n       * @name SavingGoalsDataProvider#$get\n       * @type {function}\n       * @return {object} An instance of the service\n       */\n      $get: [\n        '$http',\n        '$httpParamSerializer',\n        /* into */\n       savingGoalsData(config),\n      ],\n    };\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-saving-goals-http-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0","/* eslint-disable */\nexport default (conf) => (httpClient, serializeParams) => {\n  // Base param constants\n  const baseUri = conf.baseUri || '';\n\n  const version = 'v2';\n\n\n  /**\n   * The root defined types from the RAML.\n   * @private\n   */\n  const definedTypes = {};\n\n  \n  definedTypes['SavingGoalsData.Goal-GET'] = {\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"goalName\":{\"type\":\"string\",\"required\":true},\"goalAmount\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":true},\"arrangementId\":{\"type\":\"string\",\"required\":false},\"progressPercentage\":{\"type\":\"number\",\"required\":false},\"amountProgress\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"amountRemaining\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false}}};\n  \n  definedTypes['SavingGoalsData.Goal-UPDATE'] = {\"properties\":{\"goalName\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"goalAmount\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":true}}};\n  \n  definedTypes['SavingGoalsData.Goal-POST'] = {\"properties\":{\"goalName\":{\"type\":\"string\",\"required\":true},\"goalAmount\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":true},\"arrangementId\":{\"type\":\"string\",\"required\":true}}};\n  \n  definedTypes['SavingGoalsData.Goal-LIST'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"goalName\":{\"type\":\"string\",\"required\":true},\"goalAmount\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":true},\"arrangementId\":{\"type\":\"string\",\"required\":false},\"progressPercentage\":{\"type\":\"number\",\"required\":false},\"amountProgress\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"amountRemaining\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false}}}};\n  \n  definedTypes['SavingGoalsData.Goal-NOT-FOUND'] = {\"properties\":{\"message\":{\"type\":\"string\",\"required\":true},\"errors\":{\"type\":\"array\",\"items\":{\"properties\":{\"message\":{\"type\":\"string\",\"required\":false},\"key\":{\"type\":\"string\",\"required\":false},\"context\":{\"type\":\"object\",\"properties\":{},\"required\":false}}},\"required\":false}}};\n  \n  definedTypes['SavingGoalsData.GoalId'] = {\"properties\":{\"id\":{\"type\":\"string\",\"required\":true}}};\n  \n\n  \n  /**\n   * @typedef SavingGoalsData.Currency\n   * @type {Object}\n   * @property {String} amount The amount in the specified currency\n   * @property {String} currencyCode The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef SavingGoalsData.Goal-GET\n   * @type {Object}\n   * @property {String} id Saving goal unique Id\n   * @property {String} goalName This is the specific saving goal name chosen by the user\n   * @property {SavingGoalsData.Currency} goalAmount\n   * @property {?String} arrangementId Arrangement id linked to the saving goal\n   * @property {?Number} progressPercentage\n   * @property {?SavingGoalsData.Currency} amountProgress\n   * @property {?SavingGoalsData.Currency} amountRemaining\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef SavingGoalsData.Goal-LIST\n   * @type {Array.<SavingGoalsData.GoalGET>}\n   */\n  \n  /**\n   * @typedef SavingGoalsData.Goal-NOT-FOUND\n   * @type {Object}\n   * @property {String} message Any further information\n   * @property {?Array.<ErrorItem>} errors Detailed error information\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef SavingGoalsData.Goal-POST\n   * @type {Object}\n   * @property {String} goalName This is the specific saving goal name chosen by the user\n   * @property {SavingGoalsData.Currency} goalAmount\n   * @property {String} arrangementId Arrangement id linked to the saving goal\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef SavingGoalsData.Goal-UPDATE\n   * @type {Object}\n   * @property {String} goalName This is the specific saving goal name chosen by the user\n   * @property {SavingGoalsData.Currency} goalAmount\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef SavingGoalsData.GoalGET\n   * @type {Object}\n   * @property {String} id Saving goal unique Id\n   * @property {String} goalName This is the specific saving goal name chosen by the user\n   * @property {SavingGoalsData.Currency} goalAmount\n   * @property {?String} arrangementId Arrangement id linked to the saving goal\n   * @property {?Number} progressPercentage\n   * @property {?SavingGoalsData.Currency} amountProgress\n   * @property {?SavingGoalsData.Currency} amountRemaining\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef SavingGoalsData.GoalId\n   * @type {Object}\n   * @property {String} id Internally used unique identification\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n\n  /*\n   * @name parse\n   * @type {Function}\n   * @private\n   * @description Should be overwritten by transformResponse on a project level\n   */\n  function parse(res) {\n    return {\n      data: res.data,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n    };\n  }\n\n  \n  /**\n   * @name SavingGoalsData#postSavinggoalsRecord\n   * @type {Function}\n   * @description Create saving goals\n   \n   * @param {SavingGoalsData.Goal-POST} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link SavingGoalsData.GoalId} on success \n   *\n   * @example\n   * savingGoalsData\n   *  .postSavinggoalsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postSavinggoalsRecord(data, headers) {\n    const url = `${baseUri}${version}/savinggoals`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name SavingGoalsData#getSavinggoals\n   * @type {Function}\n   * @description Retrieve list of saving goals\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.arrangementId Reference to the arrangement to which the saving goals belong.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link SavingGoalsData.Goal-LIST} on success \n   *\n   * @example\n   * savingGoalsData\n   *  .getSavinggoals(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getSavinggoals(params, headers) {\n    const url = `${baseUri}${version}/savinggoals`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name SavingGoalsData#getSavinggoalsRecord\n   * @type {Function}\n   * @description Get Saving Goal by id\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link SavingGoalsData.Goal-GET} on success  or rejects with data of {@link SavingGoalsData.Goal-NOT-FOUND} on error\n   *\n   * @example\n   * savingGoalsData\n   *  .getSavinggoalsRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getSavinggoalsRecord(id, params, headers) {\n    const url = `${baseUri}${version}/savinggoals/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name SavingGoalsData#deleteSavinggoalsRecord\n   * @type {Function}\n   * @description Delete the saving goal by Id\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as void on success or rejects with data of {@link SavingGoalsData.Goal-NOT-FOUND} on error\n   *\n   * @example\n   * savingGoalsData\n   *  .deleteSavinggoalsRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteSavinggoalsRecord(id, params, headers) {\n    const url = `${baseUri}${version}/savinggoals/${id}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name SavingGoalsData#putSavinggoalsRecord\n   * @type {Function}\n   * @description Update saving goal by an Id\n   \n   * @param {string} id \n     \n   \n   * @param {SavingGoalsData.Goal-UPDATE} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as void on success or rejects with data of {@link SavingGoalsData.Goal-NOT-FOUND} on error\n   *\n   * @example\n   * savingGoalsData\n   *  .putSavinggoalsRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putSavinggoalsRecord(id, data, headers) {\n    const url = `${baseUri}${version}/savinggoals/${id}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n\n  \n\n  \n  /**\n   * @description\n   * Schema data. Keys of the object are names of the POST and PUT methods\n   *\n   * Note: The schema is not strictly a JSON schema. It is a whitelisted set of\n   * keys for each object property. The keys that are exposed are meant for validation\n   * purposes.\n   *\n   * The full list of *possible* keys for each property is:\n   * type, minimum, maximum, minLength, maxLength, pattern, enum, format, default,\n   * properties, items, minItems, maxItems, uniqueItems and required.\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html for more details\n   * on the meaning of these keys.\n   *\n   * The \"required\" array from JSON schema is tranformed into a \"required\" boolean\n   * on each property. This is for ease of use.\n   *\n   * @name SavingGoalsData#schemas\n   * @type {Object}\n   */\n  const schemas = {};\n\n    \n  /**\n   * @description\n   * An object describing the JSON schema for the postSavinggoalsRecord method\n   *\n   * @name SavingGoalsData#schemas.postSavinggoalsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"goalName\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"goalAmount\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"amount\": {\n          \"type\": \"string\",\n          \"required\": true\n        },\n        \"currencyCode\": {\n          \"type\": \"string\",\n          \"pattern\": \"^[A-Z]{3}$\",\n          \"required\": true\n        }\n      },\n      \"required\": true\n    },\n    \"arrangementId\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postSavinggoalsRecord = definedTypes['SavingGoalsData.Goal-POST'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putSavinggoalsRecord method\n   *\n   * @name SavingGoalsData#schemas.putSavinggoalsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"goalName\": {\n      \"type\": \"string\",\n      \"maxLength\": 50,\n      \"required\": true\n    },\n    \"goalAmount\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"amount\": {\n          \"type\": \"string\",\n          \"required\": true\n        },\n        \"currencyCode\": {\n          \"type\": \"string\",\n          \"pattern\": \"^[A-Z]{3}$\",\n          \"required\": true\n        }\n      },\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putSavinggoalsRecord = definedTypes['SavingGoalsData.Goal-UPDATE'];\n      \n\n  /**\n   * @typedef Response\n   * @type {Object}\n   * @property {Object} data See method descriptions for possible return types\n   * @property {Function} headers Getter headers function\n   * @property {Number} status HTTP status code of the response.\n   * @property {String} statusText HTTP status text of the response.\n   */\n\n  return ({\n    \n    postSavinggoalsRecord,\n    \n    getSavinggoals,\n    \n    getSavinggoalsRecord,\n    \n    deleteSavinggoalsRecord,\n    \n    putSavinggoalsRecord,\n    \n    \n    schemas,\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-saving-goals-http-ng/scripts/data-bb-saving-goals-http.js"],"sourceRoot":""}