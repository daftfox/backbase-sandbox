{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///webpack/bootstrap f3d2485eec67eb2fdf62?1eb6**","webpack:///./ext-bb-billpay-pay-a-bill-ng/model.xml","webpack:///external \"vendor-bb-angular-ng-aria\"?9d0e*","webpack:///external \"ui-bb-currency-input-ng\"?3ab2","webpack:///external \"ui-bb-dropdown-select-ng\"?4101*","webpack:///external \"ui-bb-i18n-ng\"?dc01*","webpack:///external \"ui-bb-format-amount-ng\"?8f72*","webpack:///external \"ui-bb-loading-overlay-ng\"?3561*","webpack:///external \"ui-bb-substitute-error-ng\"?f57a","webpack:///external \"vendor-bb-uib-datepicker\"?e2fd","webpack:///external \"vendor-bb-uib-datepicker-popup\"?67db","webpack:///external \"ui-bb-notification-stripe-ng\"?0663","webpack:///external \"ui-bb-modal-ng\"?53b9","webpack:///./ext-bb-billpay-pay-a-bill-ng/scripts/index.js","webpack:///./ext-bb-billpay-pay-a-bill-ng/scripts/hooks.js","webpack:///./ext-bb-billpay-pay-a-bill-ng/scripts/helpers.js","webpack:///external \"vendor-bb-uib-dropdown\"","webpack:///external \"vendor-bb-uib-popover\""],"names":["default","dependencyKeys","ngAriaKey","uibDatepickerKey","uibDatepickerPopupKey","uibDropdownKey","uibPopoverKey","uiBbCurrencyInputKey","uiBbDropdownSelectKey","uiBbFormatAmountKey","uiBbI18nKey","uiBbLoadingOverlay","uiBbModalKey","uiBbNotificationStripeKey","uiBbSubstituteErrorKey","events","setState","current","template","paymentModalTemplate","showPaymentSummaryModal","paymentsByAccount","transformPayee","payee","displayName","nickName","name","datepicker","isOpen","memoPopover","paymentMemo","afterPostPaymentsRecordSuccess","afterPostPaymentsRecordError","isRushing","dateService","newPayment","paymentServicesObj","isDateRush","paymentDate","updateState","stateContainer","viewState","createAction","STATES","hasLoadingError","accounts","isLoadingAccounts","length","hasUserErrors","error","paymentsSummary","message","payments","some","payment","errors","getPaymentsSummaryErrors","summary","payeeId","matchingPayment","find","payeeID","managePaymentService","accountService","paymentService","expeditedService","$filter","bbIntent","errorHelperUtilities","showWaivedFees","createPayeeIntent","create","editPayeeIntent","createRecurringBillIntent","refreshPendingPaymentsIntent","togglePaymentSummaryModal","undefined","postPaymentsError","getState","failedPayments","filter","successfulPayments","calculatePaymentTotal","payees","reduce","total","thisAmount","Math","max","parseFloat","paymentAmount","value","rushAmount","getExpeditedFee","arePaymentDatesAndAccountsValid","every","date","isValidDate","isDateSelectable","paymentAccount","getPayeesWithAmounts","areAnyPayeesInvalidForPayment","payeesWithAmounts","accountNameAndNumber","account","getCurrencyCode","highlightPayee","htmlClassActive","htmlClassNew","htmlClassDanger","paymentValueExists","paymentErrors","id","paymentHasError","Object","assign","isNewPayee","openMemo","setMemo","unsetMemo","rushHasBeenChosen","rushFee","openPaymentSummaryModal","completePaymentSummaryModal","getPayeesSummary","catch","summarisePayments","sendPayments","postPaymentsRecord","i18nSingularPlural","arr","str","electronic","hasFailedPayments","hasSuccessfulPayments","getLoadingErrorMessageKey","getLoadingErrorKey","type","getLoadingErrorClass","state","hasAvailableBalance","balance","hasUnavailableBalance","showRushNoticeForPayee","hasFeeBeenWaived","showRushNoticeForPayment","rush","hasBeenUsed","paymentFee","showRushNoticeForAccountGroup","rushUsed","rushFeeTotal","notificationCssClass","notificationStatus","notificationIconClasses","failedPaymentMessageKey","errorType","unrecoverable","payeeSelectedCountMessage","count","key","currencyInputLabels","states","isOvernightPayment","OVERNIGHT_CHECK","hasError","inputName","form","hasErrorClass","getError"],"mappings":"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","file":"ext-bb-billpay-pay-a-bill-ng/scripts/ext-bb-billpay-pay-a-bill-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-currency-input-ng\"), require(\"ui-bb-dropdown-select-ng\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-format-amount-ng\"), require(\"ui-bb-loading-overlay-ng\"), require(\"ui-bb-substitute-error-ng\"), require(\"vendor-bb-uib-datepicker\"), require(\"vendor-bb-uib-datepicker-popup\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bb-modal-ng\"), require(\"vendor-bb-uib-dropdown\"), require(\"vendor-bb-uib-popover\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bb-billpay-pay-a-bill-ng\", [\"vendor-bb-angular-ng-aria\", \"ui-bb-currency-input-ng\", \"ui-bb-dropdown-select-ng\", \"ui-bb-i18n-ng\", \"ui-bb-format-amount-ng\", \"ui-bb-loading-overlay-ng\", \"ui-bb-substitute-error-ng\", \"vendor-bb-uib-datepicker\", \"vendor-bb-uib-datepicker-popup\", \"ui-bb-notification-stripe-ng\", \"ui-bb-modal-ng\", \"vendor-bb-uib-dropdown\", \"vendor-bb-uib-popover\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bb-billpay-pay-a-bill-ng\"] = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-currency-input-ng\"), require(\"ui-bb-dropdown-select-ng\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-format-amount-ng\"), require(\"ui-bb-loading-overlay-ng\"), require(\"ui-bb-substitute-error-ng\"), require(\"vendor-bb-uib-datepicker\"), require(\"vendor-bb-uib-datepicker-popup\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bb-modal-ng\"), require(\"vendor-bb-uib-dropdown\"), require(\"vendor-bb-uib-popover\"));\n\telse\n\t\troot[\"ext-bb-billpay-pay-a-bill-ng\"] = factory(root[\"vendor-bb-angular-ng-aria\"], root[\"ui-bb-currency-input-ng\"], root[\"ui-bb-dropdown-select-ng\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-format-amount-ng\"], root[\"ui-bb-loading-overlay-ng\"], root[\"ui-bb-substitute-error-ng\"], root[\"vendor-bb-uib-datepicker\"], root[\"vendor-bb-uib-datepicker-popup\"], root[\"ui-bb-notification-stripe-ng\"], root[\"ui-bb-modal-ng\"], root[\"vendor-bb-uib-dropdown\"], root[\"vendor-bb-uib-popover\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_28__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f3d2485eec67eb2fdf62","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bb-billpay-pay-a-bill-ng/model.xml\n// module id = 0\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-aria\"\n// module id = 4\n// module chunks = 0 1 2 3 4 5","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-currency-input-ng\"\n// module id = 6\n// module chunks = 0 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-dropdown-select-ng\"\n// module id = 7\n// module chunks = 0 1 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 8\n// module chunks = 0 1 2 3 4 5","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-format-amount-ng\"\n// module id = 9\n// module chunks = 0 1 2 3 4 5","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-loading-overlay-ng\"\n// module id = 10\n// module chunks = 0 1 2 3 4 5","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-substitute-error-ng\"\n// module id = 13\n// module chunks = 0 2 3 4 5","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-datepicker\"\n// module id = 14\n// module chunks = 0 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-datepicker-popup\"\n// module id = 15\n// module chunks = 0 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-notification-stripe-ng\"\n// module id = 21\n// module chunks = 1 2 4 5","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-modal-ng\"\n// module id = 22\n// module chunks = 1 2 4 5","/**\n * @module ext-bb-billpay-pay-a-bill-ng\n *\n * @description\n * Default extension for widget-bb-billpay-manage-payment-ng\n *\n * @requires vendor-bb-angular-ng-aria\n */\n\nimport ngAriaKey from 'vendor-bb-angular-ng-aria';\nimport uibDatepickerKey from 'vendor-bb-uib-datepicker';\nimport uibDatepickerPopupKey from 'vendor-bb-uib-datepicker-popup';\nimport uibDropdownKey from 'vendor-bb-uib-dropdown';\nimport uibPopoverKey from 'vendor-bb-uib-popover';\nimport uiBbCurrencyInputKey from 'ui-bb-currency-input-ng';\nimport uiBbDropdownSelectKey from 'ui-bb-dropdown-select-ng';\nimport uiBbFormatAmountKey from 'ui-bb-format-amount-ng';\nimport uiBbI18nKey from 'ui-bb-i18n-ng';\nimport uiBbLoadingOverlay from 'ui-bb-loading-overlay-ng';\nimport uiBbModalKey from 'ui-bb-modal-ng';\nimport uiBbNotificationStripeKey from 'ui-bb-notification-stripe-ng';\nimport uiBbSubstituteErrorKey from 'ui-bb-substitute-error-ng';\n\nexport const dependencyKeys = [\n  ngAriaKey,\n  uibDatepickerKey,\n  uibDatepickerPopupKey,\n  uibDropdownKey,\n  uibPopoverKey,\n  uiBbCurrencyInputKey,\n  uiBbDropdownSelectKey,\n  uiBbFormatAmountKey,\n  uiBbI18nKey,\n  uiBbLoadingOverlay,\n  uiBbModalKey,\n  uiBbNotificationStripeKey,\n  uiBbSubstituteErrorKey,\n];\n\nexport { default as hooks } from './hooks';\n\nexport { default as helpers } from './helpers';\n\nexport const events = {};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-billpay-pay-a-bill-ng/scripts/index.js","export default {\n  setState(current) {\n    return {\n      ...current,\n      template: '#ext-bb-billpay-pay-a-bill-ng/quickpay.ng.html',\n      paymentModalTemplate: '#ext-bb-billpay-pay-a-bill-ng/review-payment.ng.html',\n      showPaymentSummaryModal: false,\n      paymentsByAccount: {},\n    };\n  },\n\n  /**\n   * @name Hooks#transformPayee\n   * @type {function}\n   * @description Perform any transformations required to prepare the PayeeSummary item for display\n   * @param {module:model-bb-billpay-ng.PayeeSummary} current\n   * @return {Object} transformed payee\n   */\n  transformPayee(payee) {\n    return {\n      ...payee,\n      displayName: payee.nickName || payee.name,\n      datepicker: {\n        isOpen: false,\n      },\n      memoPopover: {\n        isOpen: false,\n        paymentMemo: '',\n      },\n    };\n  },\n\n  /**\n   * @name Hooks#afterPostPaymentsRecordSuccess\n   * @type {function}\n   * @description Set the paymentModalTemplate for success results\n   * @param {Object} current state\n   * @return {Object} updated state\n   */\n  afterPostPaymentsRecordSuccess(current) {\n    return {\n      ...current,\n      paymentModalTemplate: '#ext-bb-billpay-pay-a-bill-ng/successful-payment.ng.html',\n    };\n  },\n\n  /**\n   * @name Hooks#afterPostPaymentsRecordError\n   * @type {function}\n   * @description Set the paymentModalTemplate for failure results\n   * @param {Object} current state\n   * @return {Object} updated state\n   */\n  afterPostPaymentsRecordError(current) {\n    return {\n      ...current,\n      paymentModalTemplate: '#ext-bb-billpay-pay-a-bill-ng/failed-payment.ng.html',\n    };\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-billpay-pay-a-bill-ng/scripts/hooks.js","// return true if newPayment.paymentDate is a rush payment\nconst isRushing = ({ newPayment, paymentServicesObj }, dateService) =>\n  dateService.isDateRush(newPayment.paymentDate, paymentServicesObj);\n\n\n// Update the view model state\nconst updateState = (stateContainer, viewState) =>\n  stateContainer.createAction(current => ({\n    ...current,\n    ...viewState,\n  }))(viewState);\n\nconst STATES = [\n  'AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI',\n  'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI',\n  'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC',\n  'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT',\n  'VT', 'VA', 'WA', 'WV', 'WI', 'WY',\n];\n\n/**\n * @name hasLoadingError\n * @type {function}\n * @description return true if no accounts and accounts are loaded\n * @param {object} state\n * @param {Array.<any>} [state.accounts]\n * @param {boolean} [state.isLoadingAccounts]\n * @inner\n * @return {boolean}\n */\nconst hasLoadingError = ({ accounts, isLoadingAccounts }) =>\n  (isLoadingAccounts != null && !isLoadingAccounts) && (!accounts || !accounts.length);\n\n/**\n * @name hasUserErrors\n * @type {function}\n * @description return true if any payments have errors\n * @param {object} error\n * @param {object} [paymentsSummary]\n * @inner\n * @return {boolean}\n */\nconst hasUserErrors = (error, paymentsSummary) =>\n  error.message === 'billpay.model.error.user' ||\n  (paymentsSummary &&\n   paymentsSummary.payments.some(payment => payment.errors && payment.errors.length));\n\n\n/**\n * @name getPaymentsSummaryErrors\n * @type {function}\n * @description returns an array of errors for the payee\n * @param {module:model-bb-billpay-ng.PayeeSummary} summary of the payments\n * @param {string} payeeId payee id to find a list of errors for\n * @inner\n * @returns {array} of matching payment errors from the summary\n */\nconst getPaymentsSummaryErrors = (summary = {}, payeeId) => {\n  if (summary.payments) {\n    const matchingPayment = summary.payments.find((payment) =>\n      payment.payeeID === payeeId);\n    return matchingPayment ? matchingPayment.errors : [];\n  }\n  return [];\n};\n\nexport default (\n  {\n    managePaymentService,\n    dateService,\n    accountService,\n    paymentService,\n    expeditedService,\n    stateContainer,\n    $filter,\n    bbIntent,\n    errorHelperUtilities,\n  }) => {\n  const { showWaivedFees } = expeditedService;\n  const createPayeeIntent = bbIntent.create('intent.rb.billpay.payee.create');\n  const editPayeeIntent = bbIntent.create('intent.rb.billpay.payee.edit');\n  const createRecurringBillIntent = bbIntent.create('intent.rb.billpay.recurring-bill.create');\n  const refreshPendingPaymentsIntent =\n    bbIntent.create('intent.rb.billpay.pending-payments.refresh');\n\n  const togglePaymentSummaryModal = (viewState) => {\n    updateState(stateContainer, {\n      ...viewState,\n      error: undefined,\n      postPaymentsError: false,\n      showPaymentSummaryModal: !viewState.showPaymentSummaryModal,\n      paymentModalTemplate: '#ext-bb-billpay-pay-a-bill-ng/review-payment.ng.html',\n    });\n  };\n\n  /**\n   * @name payments\n   * @inner\n   * @type {function}\n   * @description get all payments\n   * @returns {Array<module:model-bb-billpay-ng.Payment>}\n   */\n  const payments = () => {\n    const paymentsSummary = stateContainer.getState().paymentsSummary;\n    return paymentsSummary ? paymentsSummary.payments : [];\n  };\n\n  /**\n   * @name failedPayments\n   * @inner\n   * @type {function}\n   * @description get failed payments\n   * @returns {Array<module:model-bb-billpay-ng.Payment>}\n   */\n  const failedPayments =\n    () => payments().filter(payment => !!payment.errors && payment.errors.length > 0);\n\n  /**\n   * @name successfulPayments\n   * @inner\n   * @type {function}\n   * @description get successful payments\n   * @returns {Array<module:model-bb-billpay-ng.Payment>}\n   */\n  const successfulPayments =\n    () => payments().filter(payment => !payment.errors || payment.errors.length === 0);\n\n  /**\n   * @name calculatePaymentTotal\n   * @inner\n   * @type {function}\n   * @description calculate the total of payments including any rush charges\n   * @param {module:model-bb-billpay-ng.PayeeSummary[]} [payees=[]] to calculate over\n   * @return {number}\n   */\n  const calculatePaymentTotal = (payees = []) =>\n    payees.reduce((total, payee) => {\n      const thisAmount = Math.max(parseFloat(payee.newPayment.paymentAmount.value) || 0, 0);\n\n      const rushAmount = isRushing(payee, dateService) && thisAmount ?\n        expeditedService.getExpeditedFee(payee.paymentServicesObj) : 0;\n\n      return total + rushAmount + thisAmount;\n    }, 0);\n\n  /**\n   * @name arePaymentDatesAndAccountsValid\n   * @inner\n   * @type {function}\n   * @description checks if all payment dates and accounts are valid\n   * @param {module:model-bb-billpay-ng.PayeeSummary[]} [payees=[]] to check over\n   * @returns {boolean} all dates and accounts are valid\n   */\n  const arePaymentDatesAndAccountsValid = (payees = []) =>\n    payees.every((payee) => {\n      const date = payee.newPayment.paymentDate;\n\n      return dateService.isValidDate(date)\n          && dateService.isDateSelectable(payee.paymentServicesObj, date)\n          && payee.newPayment.paymentAccount;\n    });\n\n  /**\n   * @name getPayeesWithAmounts\n   * @inner\n   * @type {function}\n   * @description returns all the payees with an amount set\n   * @param {module:model-bb-billpay-ng.PayeeSummary[]} [payees=[]] to check over\n   * @returns {module:model-bb-billpay-ng.PayeeSummary[]}\n   */\n  const getPayeesWithAmounts = (payees = []) =>\n    payees.filter((payee) => {\n      const paymentAmount = parseFloat(payee.newPayment.paymentAmount.value);\n      return paymentAmount > 0;\n    });\n\n  /**\n   * @name areAnyPayeesInvalidForPayment\n   * @inner\n   * @type {function}\n   * @description returns true if payess are present that have amount but invalid date\n   * @param {module:model-bb-billpay-ng.PayeeSummary[]} [payees=[]] to check over\n   * @returns {boolean} if payment for payees with amount is not allowed\n   */\n  const areAnyPayeesInvalidForPayment = (payees = []) => {\n    const payeesWithAmounts = getPayeesWithAmounts(payees);\n\n    return payeesWithAmounts.length > 0\n      ? !arePaymentDatesAndAccountsValid(payeesWithAmounts)\n      : true;\n  };\n\n  return {\n    /**\n     * @name Helpers#accountNameAndNumber\n     * @type {function}\n     * @description return the account nickname & blurred acc number, else just a blurred acc number\n     * @param {module:model-bb-billpay-ng.PaymentAccount} account\n     * @return {string}\n     */\n    accountNameAndNumber(account) {\n      return accountService.accountNameAndNumber(account);\n    },\n\n    /**\n     * @name Helpers#getCurrencyCode\n     * @type {function}\n     * @description get the currency code from service\n     * @return {string}\n     */\n    getCurrencyCode() {\n      return managePaymentService.getCurrencyCode();\n    },\n\n    /**\n     * @name Helpers#highlightPayee\n     * @type {function}\n     * @description return an object with the given html class as true/false depending on the value\n     *  of the newpayment amount and new payee state\n     * @param {module:model-bb-billpay-ng.PayeeSummary} payee\n     * @param {object} paymentsSummary\n     * @param {string} htmlClassActive The class to apply to the element when active\n     * @param {string} htmlClassNew The class to apply to the element when payee is new\n     * @param {string} htmlClassDanger The class to apply to the element when payee is new\n     * @return {object}\n     */\n    highlightPayee: (payee, paymentsSummary, htmlClassActive, htmlClassNew, htmlClassDanger) => {\n      const { newPayment } = payee;\n      const paymentValueExists = parseFloat(newPayment.paymentAmount.value) > 0;\n      const paymentErrors = getPaymentsSummaryErrors(paymentsSummary, payee.id);\n      const paymentHasError = !!(paymentErrors && paymentErrors.length);\n      Object.assign(payee, { isNewPayee: !paymentValueExists && payee.isNewPayee });\n      return {\n        [htmlClassActive]: paymentValueExists,\n        [htmlClassNew]: payee.isNewPayee,\n        [htmlClassDanger]: paymentHasError,\n      };\n    },\n\n    /* eslint-disable no-param-reassign */\n    /**\n     * @name Helpers#openMemo\n     * @type {function}\n     * @description open the popover memo for this payee, set the value from the payees newPayment\n     *  memo\n     * @param {module:model-bb-billpay-ng.PayeeSummary} payee\n     * @param {object} payee.newPayment\n     * @param {object} payee.memoPopover\n     */\n    openMemo({ newPayment, memoPopover }) {\n      memoPopover.paymentMemo = newPayment.paymentMemo;\n      memoPopover.isOpen = !memoPopover.isOpen;\n    },\n\n    /**\n     * @name Helpers#setMemo\n     * @type {function}\n     * @description set the value of the poopover memo into the payees newPayment memo and close\n     *  the popover memo\n     * @param {module:model-bb-billpay-ng.PayeeSummary} payee\n     * @param {object} payee.newPayment\n     * @param {object} payee.memoPopover\n     */\n    setMemo({ newPayment, memoPopover }) {\n      newPayment.paymentMemo = memoPopover.paymentMemo;\n      memoPopover.isOpen = false;\n    },\n\n    /**\n     * @name Helpers#unsetMemo\n     * @type {function}\n     * @description set the value of the popover memo and the payees newPayment memo to an empty\n     *  string and close the popover memo\n     * @param {module:model-bb-billpay-ng.PayeeSummary} payee\n     * @param {object} payee.newPayment\n     * @param {object} payee.memoPopover\n     */\n    unsetMemo({ newPayment, memoPopover }) {\n      newPayment.paymentMemo = memoPopover.paymentMemo = '';\n      memoPopover.isOpen = false;\n    },\n    /* eslint-enable */\n\n    /**\n      * @name Helpers#rushHasBeenChosen\n      * @type {function}\n      * @description return true if rush has been selected for this payee\n      * @param {module:model-bb-billpay-ng.PayeeSummary} payee\n      * @param {object} payee.newPayment\n      * @param {object} payee.paymentServicesObj\n      * @return {boolean}\n      */\n    rushHasBeenChosen: ({ newPayment, paymentServicesObj }) =>\n      dateService.isDateRush(newPayment.paymentDate, paymentServicesObj),\n\n    /**\n     * @name Helpers#rushFee\n     * @type {function}\n     * @description return paymentFee from payment object\n     * @param {module:model-bb-billpay-ng.PayeeSummary} payee\n     * @param {object} payee.paymentServicesObj\n     * @return {number|undefined}\n     */\n    rushFee: ({ paymentServicesObj }) => expeditedService.getExpeditedFee(paymentServicesObj),\n\n    /**\n     * @typedef {{ datepicker: { $viewValue, $modelValue }}} DatepickerForm\n     */\n\n    /**\n     * @name Helpers#togglePaymentSummaryModal\n     * @type {function}\n     * @description Open/close the payment summary modal. And remove any errors\n     * @param {object} viewState The current view state of the controller\n     */\n    togglePaymentSummaryModal,\n\n    /**\n     * @name Helpers#openPaymentSummaryModal\n     * @type {function}\n     * @description Open the payment summary modal if no invalid payments.\n     * @param {object} viewState The current view state of the controller\n     */\n    openPaymentSummaryModal: (viewState) => {\n      // may have passed cutoffTime since page refresh - just do nothing\n      // and redraw will catch any date validity changes.\n      if (!areAnyPayeesInvalidForPayment(viewState.payees)) {\n        togglePaymentSummaryModal(viewState);\n      }\n    },\n\n    /**\n     * @name Helpers#completePaymentSummaryModal\n     * @type {function}\n     * @description Complete the payment step.\n     *   Call the view pending payment intent and toggle the payment summary model\n     * @param {object} viewState The current view state of the controller\n     */\n    completePaymentSummaryModal: (viewState) => {\n      managePaymentService.getPayeesSummary()\n        .catch(() => {\n          // error handling is dealt with in the service\n        });\n      refreshPendingPaymentsIntent();\n      togglePaymentSummaryModal(viewState);\n    },\n\n    /**\n     * @name Helpers#summarisePayments\n     * @type {function}\n     * @description Summarise all valid payments into an array and grouped by payment account\n     * @param {object} viewState The current view state of the controller\n     */\n    summarisePayments: (viewState) => {\n      updateState(stateContainer, {\n        ...viewState,\n        paymentsSummary: paymentService.summarisePayments(viewState.payees),\n      });\n    },\n\n    /**\n     * @name Helpers#sendPayments\n     * @type {function}\n     * @description Post the summarised list of valid payments\n     * @param {object} viewState The current view state of the controller\n     */\n    sendPayments: (viewState) => {\n      managePaymentService\n        .postPaymentsRecord(viewState.paymentsSummary.payments)\n        .catch(() => {\n          // error handling is dealt with in the service\n        });\n    },\n\n    /**\n     * @name Helpers#i18nSingularPlural\n     * @type {function}\n     * @description Take an array and i18n key. Append '.singular' or '.plural' to the key\n     *  based on the length of the array and filter that with i18n.\n     * @param {array} arr The array to check the length of\n     * @param {string} str The key to append to\n     * @return {string} The singular or plural message from messages.json\n     */\n    i18nSingularPlural: (arr = [], str) =>\n      $filter('i18n')(arr.length === 1 ? `${str}.singular` : `${str}.plural`),\n\n    /**\n     * @name Helpers#refreshPendingPaymentsIntent\n     * @type {function}\n     * @description Publish reload pending payments intent\n     */\n    refreshPendingPaymentsIntent,\n\n    /**\n     * @name Helpers#createPayeeIntent\n     * @type {function}\n     * @description Publish create payee intent\n     */\n    createPayeeIntent,\n\n    /**\n     * @name Helpers#createRecurringBillIntent\n     * @type {function}\n     * @description Publish create recurring bill intent\n     */\n    createRecurringBillIntent,\n\n    /**\n     * @name Helpers#editPayeeIntent\n     * @type {function}\n     * @param {object} payee The payee to edit\n     * @param {string} payee.id Payee id\n     * @param {boolean} payee.electronic if payee is electronic, else manual\n     * @description Publish edit payee intent\n     */\n    editPayeeIntent: ({ id, electronic }) =>\n      editPayeeIntent({ id, electronic }),\n\n    /**\n     * @name Helpers#successfulPayments\n     * @type {function}\n     * @description get successful payments\n     * @returns {Array<module:model-bb-billpay-ng.Payment>}\n     */\n    successfulPayments,\n\n    /**\n     * @name Helpers#failedPayments\n     * @type {function}\n     * @description get failed payments\n     * @returns {Array<module:model-bb-billpay-ng.Payment>}\n     */\n    failedPayments,\n\n    /**\n     * @name Helpers#calculatePaymentTotal\n     * @type {function}\n     * @description calculate the total of payments including any rush charges\n     * @param {module:model-bb-billpay-ng.PayeeSummary[]} [payees=[]] to calculate over\n     * @return {number}\n     */\n    calculatePaymentTotal,\n\n    /**\n     * @name Helpers#hasFailedPayments\n     * @type {function}\n     * @description indicate if there are any failed payments\n     * @returns {boolean}\n     */\n    hasFailedPayments: () => failedPayments().length > 0,\n\n    /**\n     * @name Helpers#hasSuccessfulPayments\n     * @type {function}\n     * @description indicate if there are any successful payments\n     * @returns {boolean}\n     */\n    hasSuccessfulPayments: () => successfulPayments().length > 0,\n\n    /**\n     * @name Helpers#getLoadingErrorMessageKey\n     * @type {function}\n     * @description get any error message if no user errors present\n     * @param {object} state\n     * @param {object} [state.error]\n     * @param {object} [state.paymentsSummary]\n     * @return {string} message from error\n     */\n    getLoadingErrorMessageKey: ({ error, paymentsSummary }) =>\n      (error && !hasUserErrors(error, paymentsSummary) ? error.message : ''),\n\n    /**\n     * @name Helpers#hasLoadingError\n     * @type {function}\n     * @description return true if no accounts and accounts are loaded\n     * @param {object} state\n     * @param {Array.<any>} [state.accounts]\n     * @param {boolean} [state.isLoadingAccounts]\n     * @return {boolean}\n     */\n    hasLoadingError,\n\n    /**\n     * @name Helpers#getLoadingErrorKey\n     * @type {function}\n     * @description return error message key for input type\n     * @param {string} type - input type\n     * @return {string} error key\n     */\n    getLoadingErrorKey: (type) => `${type}.error.no-items`,\n\n    /**\n     * @name Helpers#getLoadingErrorClass\n     * @type {function}\n     * @description return error class if hasLoadingError is true\n     * @param {object} state\n     * @return {{'has-error':boolean}} object with error class indicator\n     */\n    getLoadingErrorClass: (state) => ({ 'has-error': hasLoadingError(state) }),\n\n    /**\n     * @name Helpers#areAnyPayeesInvalidForPayment\n     * @type {function}\n     * @description returns true if payess are present that have amount but invalid date\n     * @param {module:model-bb-billpay-ng.PayeeSummary[]} [payees=[]] to check over\n     * @returns {boolean} if payment for payees with amount is not allowed\n     */\n    areAnyPayeesInvalidForPayment,\n\n    /**\n     * @name Helpers#getPaymentsSummaryErrors\n     * @type {function}\n     * @description returns an array of errors for the payee\n     * @param {module:model-bb-billpay-ng.PayeeSummary} summary of the payments\n     * @param {string} payeeId payee id to find a list of errors for\n     * @returns {array} of matching payment errors from the summary\n     */\n    getPaymentsSummaryErrors,\n\n    /**\n     * @name Helpers#hasAvailableBalance\n     * @type {function}\n     * @description indicate if the account exists and has a payment balance\n     * @param {object} [paymentAccount]\n     * @returns {boolean}\n     */\n    hasAvailableBalance: (paymentAccount) => !!paymentAccount && paymentAccount.balance != null,\n\n    /**\n     * @name Helpers#hasUnavailableBalance\n     * @type {function}\n     * @description indicate if the account exists but has a an unavailable balance\n     * @param {object} [paymentAccount]\n     * @returns {boolean}\n     */\n    hasUnavailableBalance: (paymentAccount) => !!paymentAccount && paymentAccount.balance == null,\n\n\n    /**\n     * @name Helpers#showRushNoticeForPayee\n     * @type {function}\n     * @description Decide whether to show the rush notices for this payee (regardless of whether it\n     *   is in use or not). Decide whether or not to show waived fees based on the widget preference\n     * @param {module:model-bb-billpay-ng.PayeeSummary} payee\n     * @param {object} payee.paymentServicesObj\n     * @return {boolean}\n     */\n    showRushNoticeForPayee: ({ paymentServicesObj }) =>\n      showWaivedFees || !expeditedService.hasFeeBeenWaived(paymentServicesObj),\n\n    /**\n     * @name Helpers#showRushNoticeForPayment\n     * @type {function}\n     * @description Decide to show the rush notice on the payment based on whether it has been used.\n     *   If it has (and has a fee of 0) then decide based on whether the widget preferences are set\n     *   to show it\n     * @param {object} payment\n     * @param {object} payment.rush\n     * @param {boolean} payment.rush.hasBeenUsed\n     * @param {number} payment.rush.paymentFee\n     * @return {boolean}\n     */\n    showRushNoticeForPayment: ({ rush }) => (\n      showWaivedFees ? rush.hasBeenUsed : rush.hasBeenUsed && rush.paymentFee > 0\n    ),\n\n    /**\n     * @name Helpers#showRushNoticeForAccountGroup\n     * @type {function}\n     * @description Decide to show the rush notice for the account group based on whether rush was\n     *   used for any of the payments in the group. If it was, and the fee is 0, use the widget\n     *   preference to decide whether to show it\n     * @param {object} accountGroup\n     * @param {boolean} accountGroup.rushUsed Has rush been used by any payments in this account\n     *   group\n     * @param {number} accountGroup.rushFeeTotal The total of the rush fees used\n     * @return {boolean}\n     */\n    showRushNoticeForAccountGroup: ({ rushUsed, rushFeeTotal }) => (\n      showWaivedFees ? rushUsed : rushUsed && rushFeeTotal > 0\n    ),\n\n    /**\n     * @name Helpers#notificationCssClass\n     * @type {function}\n     * @description Returns the Bootstrap background class to apply to the notification\n     * @param {string} notificationStatus Either error or success\n     * @return {string}\n     */\n    notificationCssClass: (notificationStatus) => (\n      notificationStatus === 'error' ? 'bg-danger' : 'bg-success'\n    ),\n\n    /**\n     * @name Helpers#notificationIconClasses\n     * @type {function}\n     * @description Returns the Font Awesome classes to apply to the notification icon\n     * @param {string} notificationStatus Either error or success\n     * @return {string}\n     */\n    notificationIconClasses: (notificationStatus) => (\n      notificationStatus === 'error' ? 'fa fa-exclamation-triangle' : 'fa fa-check-circle'\n    ),\n\n    /**\n     * @name Helpers#failedPaymentMessageKey\n     * @type {function}\n     * @description Returns the appropriate message key for the error types\n     * @return {string} - message key\n     */\n    failedPaymentMessageKey: () => {\n      const paymentErrors = failedPayments()\n        .reduce((errors, payment) => [...errors, ...payment.errors], []);\n      const errorType = paymentErrors.length > 0 && paymentErrors\n        .every(error => !error.unrecoverable) ? 'recoverable' : 'unrecoverable';\n      return `failed-payments.message.${errorType}`;\n    },\n\n    /**\n     * @name Helpers#payeeSelectedCountMessage\n     * @type {function}\n     * @description return object with strings to indicate number of payees selected\n     * @returns {object} object with count and message key\n     */\n    payeeSelectedCountMessage: (payees) => {\n      const count = getPayeesWithAmounts(payees).length;\n      const key = `message.payees-selected.${count === 1 ? 'singular' : 'plural'}`;\n      return {\n        count,\n        key,\n      };\n    },\n\n    /**\n     * @name Helpers#currencyInputLabels\n     * @type {object}\n     * @description Internationalised strings for the currency input control\n     */\n    currencyInputLabels: {\n      'label.currency': $filter('i18n')('currency.aria-label.input.currency'),\n      'label.amount': $filter('i18n')('currency.aria-label.input.amount'),\n      'label.decimals': $filter('i18n')('currency.aria-label.input.decimals'),\n    },\n\n    /**\n     * @name Helpers#states\n     * @type {string[]}\n     * @description List of all states\n     */\n    states: STATES,\n\n    /**\n     * @name Helpers#matchingPayment\n     * @type {function}\n     * @description find the payment in the summary that matches the payee\n     * @param {object} payee\n     * @param {object} summary\n     * @return {object} payment\n     */\n    matchingPayment: (payee, summary) =>\n      summary.payments.find(payment => payment.payeeID === payee.id),\n\n    /**\n     * @name Helpers#isOvernightPayment\n     * @type {function}\n     * @description return true if the rush is of type OVERNIGHT_CHECK\n     * @param {object} obj\n     * @param {object} obj.paymentServicesObj\n     * @return {boolean}\n     */\n    isOvernightPayment: ({ paymentServicesObj }) => !!paymentServicesObj.OVERNIGHT_CHECK,\n\n    /**\n     * @name Helpers#hasError\n     * @type {function}\n     * @description Check if the field has form error\n     * @param {string} inputName - field name\n     * @param {object} form - angular form\n     * @return {boolean}\n     */\n    hasError: (inputName, form) =>\n      errorHelperUtilities.hasError(inputName, null, form, $filter),\n\n    /**\n     * @name Helpers#hasErrorClass\n     * @type {function}\n     * @description return class to indicate if field has error\n     * @param {string} inputName - field name\n     * @param {object} form - angular form\n     * @return {object}\n     */\n    hasErrorClass: (inputName, form) =>\n      errorHelperUtilities.hasErrorClass(inputName, null, form, $filter),\n\n    /**\n     * @name Helpers#getError\n     * @type {function}\n     * @description get form error\n     * @param {string} inputName - field name\n     * @param {object} form - angular form\n     * @return {string}\n     */\n    getError: (inputName, form) =>\n      errorHelperUtilities.getError(inputName, null, form, $filter),\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-billpay-pay-a-bill-ng/scripts/helpers.js","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-dropdown\"\n// module id = 27\n// module chunks = 2 4 5","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-popover\"\n// module id = 28\n// module chunks = 2"],"sourceRoot":""}