{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 5b62cd87af015d7f783f","webpack:///./fe-dist/http-ng/data-bb-portfolio-summary-http-ng/model.xml","webpack:///./fe-dist/http-ng/data-bb-portfolio-summary-http-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///./fe-dist/http-ng/data-bb-portfolio-summary-http-ng/scripts/data-bb-portfolio-summary-http.js"],"names":["portfolioSummaryDataModuleKey","portfolioSummaryDataKey","module","provider","config","baseUri","setBaseUri","$get","name","conf","httpClient","serializeParams","version","definedTypes","parse","res","data","headers","status","statusText","getPortfoliosummary","params","url","method","then","catch","err","getPortfoliosummaryRecord","portfolioId","postPortfoliosummaryCustomListRecord","getPortfoliosummaryCustomList","putPortfoliosummaryFavoritesRecord","postPortfoliosummaryClientOrderRecord","postPortfoliosummaryAliasRecord","getPortfoliosummaryPositions","getPortfoliosummaryAllocationsAsset","getPortfoliosummaryAllocationsCurrency","getPortfoliosummaryTransactions","getPortfoliosummaryTransactionFilterOptions","getPortfoliosummaryValuationChart","getPortfoliosummaryPerformanceChart","getPortfoliosummaryTransactionsRecord","transactionId","deletePortfoliosummaryCustomListRecord","uuid","putPortfoliosummaryCustomListRecord","postPortfoliosummaryCustomListPortfolioRecord","deletePortfoliosummaryCustomListPortfolioRecord","portfolioIbanList","deletePortfoliosummaryFavoritesRecord","iban","schemas"],"mappings":"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","file":"data-bb-portfolio-summary-http-ng/scripts/data-bb-portfolio-summary-http-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-bb-portfolio-summary-http-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-bb-portfolio-summary-http-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"data-bb-portfolio-summary-http-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5b62cd87af015d7f783f","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fe-dist/http-ng/data-bb-portfolio-summary-http-ng/model.xml\n// module id = 0\n// module chunks = 0","/* eslint-disable */\n/**\n * @module data-bb-portfolio-summary-http-ng\n *\n * @description A data module for accessing the Portfolio Summary REST API.\n *\n * @returns {String} `data-bb-portfolio-summary-http-ng`\n * @example\n * import portfolioSummaryDataModuleKey, {\n *   portfolioSummaryDataKey,\n * } from 'data-bb-portfolio-summary-http-ng';\n */\n\nimport ng from 'vendor-bb-angular';\n\nimport portfolioSummaryData from './data-bb-portfolio-summary-http';\n\nconst portfolioSummaryDataModuleKey = 'data-bb-portfolio-summary-http-ng';\n/**\n * @name portfolioSummaryDataKey\n * @type {string}\n * @description Angular dependency injection key for the PortfolioSummaryData service\n */\nexport const portfolioSummaryDataKey = 'data-bb-portfolio-summary-http-ng:portfolioSummaryData';\n/**\n * @name default\n * @type {string}\n * @description Angular dependency injection module key\n */\nexport default ng\n  .module(portfolioSummaryDataModuleKey, [])\n  \n  /**\n   * @constructor PortfolioSummaryData\n   * @type {object}\n   *\n   * @description Public api for data-bb-portfolio-summary-http-ng service\n   *\n   */\n  .provider(portfolioSummaryDataKey, [() => {\n    const config = {\n      baseUri: '/',\n    };\n\n    /**\n     * @name PortfolioSummaryDataProvider\n     * @type {object}\n     * @ngkey data-bb-portfolio-summary-http-ng:portfolioSummaryDataProvider\n     * @description\n     * Data service that can be configured with custom base URI.\n     *\n     * @example\n     * // Configuring in an angular app:\n     * angular.module(...)\n     *   .config(['data-bb-portfolio-summary-http-ng:portfolioSummaryDataProvider',\n     *     (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *       });\n     *\n     * // Configuring With config-bb-providers-ng:\n     * export default [\n     *   ['data-bb-portfolio-summary-http-ng:portfolioSummaryDataProvider', (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *   }]\n     * ];\n     */\n    return {\n      /**\n       * @name PortfolioSummaryDataProvider#setBaseUri\n       * @type {function}\n       * @param {string} baseUri Base URI which will be the prefix for all HTTP requests\n       */\n      setBaseUri: (baseUri) => {\n        config.baseUri = baseUri;\n      },\n\n      /**\n       * @name PortfolioSummaryDataProvider#$get\n       * @type {function}\n       * @return {object} An instance of the service\n       */\n      $get: [\n        '$http',\n        '$httpParamSerializer',\n        /* into */\n       portfolioSummaryData(config),\n      ],\n    };\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-portfolio-summary-http-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0","/* eslint-disable */\nexport default (conf) => (httpClient, serializeParams) => {\n  // Base param constants\n  const baseUri = conf.baseUri || '';\n\n  const version = 'v2';\n\n\n  /**\n   * The root defined types from the RAML.\n   * @private\n   */\n  const definedTypes = {};\n\n  \n  definedTypes['PortfolioSummaryData.PortfolioSummaryGet'] = {\"type\":\"array\",\"items\":{\"properties\":{\"IBAN\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"clientName\":{\"type\":\"string\",\"required\":true},\"alias\":{\"type\":\"string\",\"required\":false},\"valuation\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"inCashTotal\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"outCashTotal\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"performanceMTD\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"performanceMTDpct\":{\"type\":\"number\",\"required\":false},\"performanceYTD\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"performanceYTDpct\":{\"type\":\"number\",\"required\":false},\"riskClass\":{\"type\":\"string\",\"required\":false},\"assetClasses\":{\"type\":\"array\",\"items\":{\"properties\":{\"valuePct\":{\"type\":\"number\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"managers\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"attorneys\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"isFavorite\":{\"type\":\"boolean\",\"required\":false}}}};\n  \n  definedTypes['PortfolioSummaryData.PortfolioSummaryItemGet'] = {\"properties\":{\"IBAN\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"clientName\":{\"type\":\"string\",\"required\":true},\"alias\":{\"type\":\"string\",\"required\":false},\"valuation\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"inCashTotal\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"outCashTotal\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"performanceMTD\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"performanceMTDpct\":{\"type\":\"number\",\"required\":false},\"performanceYTD\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"performanceYTDpct\":{\"type\":\"number\",\"required\":false},\"riskClass\":{\"type\":\"string\",\"required\":false},\"assetClasses\":{\"type\":\"array\",\"items\":{\"properties\":{\"valuePct\":{\"type\":\"number\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"managers\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"attorneys\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"isFavorite\":{\"type\":\"boolean\",\"required\":false}}};\n  \n  definedTypes['PortfolioSummaryData.PositionsGet'] = {\"properties\":{\"accounts\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true},\"valuation\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"performancePct\":{\"type\":\"number\",\"required\":false},\"parentPct\":{\"type\":\"number\",\"required\":false}}},\"required\":false},\"assetClasses\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"accountId\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"regions\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"accountId\":{\"type\":\"string\",\"required\":true},\"assetClassId\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"countries\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"accountId\":{\"type\":\"string\",\"required\":true},\"assetClassId\":{\"type\":\"string\",\"required\":true},\"regionId\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"positions\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"accountId\":{\"type\":\"string\",\"required\":false},\"assetClassId\":{\"type\":\"string\",\"required\":false},\"regionId\":{\"type\":\"string\",\"required\":false},\"countryId\":{\"type\":\"string\",\"required\":false},\"instrumentName\":{\"type\":\"string\",\"required\":false},\"instrumentCurrency\":{\"type\":\"string\",\"required\":false},\"instrumentCode\":{\"type\":\"string\",\"required\":false},\"quantity\":{\"type\":\"number\",\"required\":false},\"price\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"exchangeRate\":{\"type\":\"number\",\"required\":false},\"valuation\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":true},\"accruedInterest\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"costPrice\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"costExchangeRate\":{\"type\":\"number\",\"required\":false},\"unrealizedPL\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"unrealizedPLPct\":{\"type\":\"number\",\"required\":false},\"assetClassPct\":{\"type\":\"number\",\"required\":false},\"portfolioPct\":{\"type\":\"number\",\"required\":false}}},\"required\":true}}};\n  \n  definedTypes['PortfolioSummaryData.TransactionsGet'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"number\",\"required\":true},\"transactionDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"category\":{\"type\":\"string\",\"required\":false},\"assetClass\":{\"type\":\"string\",\"required\":false},\"instrumentName\":{\"type\":\"string\",\"required\":false},\"quantity\":{\"type\":\"number\",\"required\":false},\"price\":{\"required\":false},\"amount\":{\"required\":false},\"balanceAsset\":{\"type\":\"number\",\"required\":false},\"balanceAmount\":{\"required\":false},\"assetKey\":{\"type\":\"string\",\"required\":true},\"counterpartyName\":{\"type\":\"string\",\"required\":false},\"statusId\":{\"type\":\"string\",\"required\":true},\"statusName\":{\"type\":\"string\",\"required\":false},\"statusAbbr\":{\"type\":\"string\",\"required\":true},\"positionType\":{\"type\":\"string\",\"required\":true},\"counterpartyAccount\":{\"type\":\"string\",\"required\":false},\"subPortfolioId\":{\"type\":\"string\",\"required\":false},\"positionId\":{\"type\":\"string\",\"required\":false},\"iSIN\":{\"type\":\"string\",\"required\":false}}}};\n  \n  definedTypes['PortfolioSummaryData.TransactionsDetailsGet'] = {\"properties\":{\"instrumentNameLong\":{\"type\":\"string\",\"required\":false},\"valueDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"market\":{\"type\":\"string\",\"required\":false},\"orderType\":{\"type\":\"string\",\"required\":false},\"grossAmount\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"exchangeRate\":{\"type\":\"number\",\"required\":false},\"taxesLocal\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"taxesForeign\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"feesLocal\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"feesForeign\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"instrumentCodeCustom\":{\"type\":\"string\",\"required\":false},\"officialCode\":{\"type\":\"string\",\"required\":false},\"assetSubClass\":{\"type\":\"string\",\"required\":false},\"notes\":{\"type\":\"string\",\"required\":false},\"instrumentCurrency\":{\"type\":\"string\",\"required\":false}}};\n  \n  definedTypes['PortfolioSummaryData.TransactionsFilterOptionsGet'] = {\"properties\":{\"accounts\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}},\"required\":true},\"assetClasses\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}},\"required\":true},\"categories\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}},\"required\":true}}};\n  \n  definedTypes['PortfolioSummaryData.AllocationsAssetGet'] = {\"properties\":{\"allocations\":{\"type\":\"array\",\"items\":{\"properties\":{\"name\":{\"type\":\"string\",\"required\":true},\"allocationPct\":{\"type\":\"number\",\"required\":false},\"valuation\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"allocationMinPct\":{\"type\":\"number\",\"required\":false},\"allocationMaxPct\":{\"type\":\"number\",\"required\":false},\"allocations\":{\"type\":\"array\",\"items\":{\"properties\":{\"name\":{\"type\":\"string\",\"required\":true},\"allocationPct\":{\"type\":\"number\",\"required\":false},\"valuation\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false}}},\"required\":true}}},\"required\":false}}};\n  \n  definedTypes['PortfolioSummaryData.AllocationsCurrencyGet'] = {\"properties\":{\"allocations\":{\"type\":\"array\",\"items\":{\"properties\":{\"name\":{\"type\":\"string\",\"required\":true},\"allocationPct\":{\"type\":\"number\",\"required\":false},\"valuation\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"allocationMinPct\":{\"type\":\"number\",\"required\":false},\"allocationMaxPct\":{\"type\":\"number\",\"required\":false},\"allocations\":{\"type\":\"array\",\"items\":{\"properties\":{\"name\":{\"type\":\"string\",\"required\":true},\"allocationPct\":{\"type\":\"number\",\"required\":false},\"valuation\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false}}},\"required\":true}}},\"required\":false}}};\n  \n  definedTypes['PortfolioSummaryData.ValuationChartDataGet'] = {\"properties\":{\"chartData\":{\"type\":\"array\",\"items\":{\"properties\":{\"dateFrom\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"dateTo\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"value\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"valuePct\":{\"type\":\"number\",\"required\":false}}},\"required\":false}}};\n  \n  definedTypes['PortfolioSummaryData.CumulativePerformanceChartDataGet'] = {\"properties\":{\"chartData\":{\"type\":\"array\",\"items\":{\"properties\":{\"dateFrom\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"dateTo\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"value\":{\"type\":\"number\",\"required\":false}}},\"required\":false}}};\n  \n  definedTypes['PortfolioSummaryData.CreatePortfolioCustomListRequest'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":3,\"maxLength\":30,\"required\":true}}};\n  \n  definedTypes['PortfolioSummaryData.MarkPortfolioAsFavoriteRequest'] = {\"properties\":{\"IBAN\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true}}};\n  \n  definedTypes['PortfolioSummaryData.GetPortfolioCustomList'] = {\"type\":\"array\",\"items\":{\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":3,\"maxLength\":30,\"required\":true},\"uuid\":{\"type\":\"string\",\"maxLength\":36,\"required\":true}}}};\n  \n  definedTypes['PortfolioSummaryData.RenameCustomList'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":3,\"maxLength\":30,\"required\":true}}};\n  \n  definedTypes['PortfolioSummaryData.CustomListAddPortfolios'] = {\"properties\":{}};\n  \n  definedTypes['PortfolioSummaryData.CustomListResponse'] = {\"properties\":{\"uuid\":{\"type\":\"string\",\"maxLength\":36,\"required\":false}}};\n  \n  definedTypes['PortfolioSummaryData.PortfolioClientOrder'] = {\"properties\":{}};\n  \n  definedTypes['PortfolioSummaryData.PostPortfolioAlias'] = {\"properties\":{\"IBAN\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"alias\":{\"type\":\"string\",\"maxLength\":30,\"required\":false}}};\n  \n\n  \n  /**\n   * @typedef PortfolioSummaryData.AllocationsAssetGet\n   * @type {Object}\n   * @property {?Array.<AllocationsParentItem>} allocations\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.AllocationsCurrencyGet\n   * @type {Object}\n   * @property {?Array.<AllocationsParentItem>} allocations\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.CreatePortfolioCustomListRequest\n   * @type {Object}\n   * @property {String} name Custom list name\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.CumulativePerformanceChartDataGet\n   * @type {Object}\n   * @property {?Array.<CumulativePerformanceChartItem>} chartData The list of items to build the chart.\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.Currency\n   * @type {Object}\n   * @property {String} amount The amount in the specified currency\n   * @property {String} currencyCode The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.CustomListAddPortfolios\n   * @type {Object}\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.CustomListResponse\n   * @type {Object}\n   * @property {?String} uuid Custom list create or update response\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.GetPortfolioCustomList\n   * @type {Array.<PortfolioSummaryData.PortfolioCustomListGetItem>}\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.MarkPortfolioAsFavoriteRequest\n   * @type {Object}\n   * @property {String} IBAN Portfolio IBAN\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.PortfolioClientOrder\n   * @type {Object}\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.PortfolioCustomListGetItem\n   * @type {Object}\n   * @property {String} name Custom list name\n   * @property {String} uuid Custom list uuid\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.PortfolioSummaryGet\n   * @type {Array.<PortfolioSummaryData.PortfolioSummaryItemGet>}\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.PortfolioSummaryItemGet\n   * @type {Object}\n   * @property {String} IBAN Account ID\n   * @property {String} clientName The name of the client\n   * @property {?String} alias A portfolio name manually set by the client\n   * @property {?PortfolioSummaryData.Currency} valuation Total cost of all assets in the portfolio\n   * @property {?PortfolioSummaryData.Currency} inCashTotal Incoming cash for the period of time\n   * @property {?PortfolioSummaryData.Currency} outCashTotal Outgoing cash for the period of time\n   * @property {?PortfolioSummaryData.Currency} performanceMTD A calculated portfolio performance amount from the mounth start to date\n   * @property {?Number} performanceMTDpct A calculated percentage of portfolio amount growth in percents\n   * @property {?PortfolioSummaryData.Currency} performanceYTD A calculated portfolio performance amount from the year start to date\n   * @property {?Number} performanceYTDpct A calculated percentage of portfolio amount growth in percents\n   * @property {?String} riskClass Risk associated with portfolio investement strategy\n   * @property {?Array.<PortfoliosAssetClassItem>} assetClasses The chart to display the asset allocation within a portfolio\n   * @property {?Array.<PortfoliosManagerItem>} managers Managers of portfolio\n   * @property {?Array.<PortfoliosAttorneyItem>} attorneys Attorneys of portfolio\n   * @property {?Boolean} isFavorite This flag responsible for Favorite marker\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.PositionsGet\n   * @type {Object}\n   * @property {?Array.<PositionsAccountItem>} accounts The list of Accounts within the client Portfolio.\n   * @property {?Array.<PositionsAssetClassItem>} assetClasses The list of Asset Classes within each Account.\n   * @property {?Array.<PositionsRegionItem>} regions The list of Regions for each Asset Class and Account, to which positions are allocated.\n   * @property {?Array.<PositionsCountryItem>} countries The list of Countries for each Region and AssetClass and Account, to which positions are allocated.\n   * @property {Array.<PositionsItem>} positions The list of Positions.\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.PostPortfolioAlias\n   * @type {Object}\n   * @property {String} IBAN Portfolio IBAN\n   * @property {?String} alias Portfolio alias\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.TransactionsDetailsGet\n   * @type {Object}\n   * @property {?String} instrumentNameLong The long name of the instrument the given transaction is related to.\n   * @property {String} valueDate The date when transaction was executed.\n   * @property {?String} market The marketplace where the transaction was executed.\n   * @property {?String} orderType The type of the order.\n   * @property {?PortfolioSummaryData.Currency} grossAmount The gross amount (price*quantity) of the transaction in the given curency. Usually is including taxes and fees.\n   * @property {?Number} exchangeRate The currency exchange rate(FX) applied to the transaction on the transaction date.\n   * @property {?PortfolioSummaryData.Currency} taxesLocal Local taxes in the given currency applied to the transaction.\n   * @property {?PortfolioSummaryData.Currency} taxesForeign Foreign taxes in the given currency applied to the transaction.\n   * @property {?PortfolioSummaryData.Currency} feesLocal Local fees in the given currency applied to the transaction.\n   * @property {?PortfolioSummaryData.Currency} feesForeign Foreign fees in the given currency applied to the transaction.\n   * @property {?String} instrumentCodeCustom The instrument/asset internal or custom code used within the bank.\n   * @property {?String} officialCode The instrument/asset official code that shown.\n   * @property {?String} assetSubClass The name of the asset sub-class the transaction belongs to.\n   * @property {?String} notes The description or notes related to the operation.\n   * @property {?String} instrumentCurrency The currency of the financial instrument.\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.TransactionsFilterOptionsGet\n   * @type {Object}\n   * @property {Array.<TransactionsFilterOptionsAccountItem>} accounts This is the list of all accounts.\n   * @property {Array.<TransactionsFilterOptionsAssetClassItem>} assetClasses This is the list of all asset classes.\n   * @property {Array.<TransactionsFilterOptionsCategoryItem>} categories This is the list of all transaction categories.\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.TransactionsGet\n   * @type {Array.<PortfolioSummaryData.TransactionsItem>}\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.TransactionsItem\n   * @type {Object}\n   * @property {Number} id Numerical ID of the transaction\n   * @property {String} transactionDate The date on which the transaction was booked.\n   * @property {?String} category The name of the transaction category. E.g. Buy/Sell or Redemption or other.\n   * @property {?String} assetClass The name of the asset class the transaction belongs to.\n   * @property {?String} instrumentName The short name of the instrument, the given transaction is related to.\n   * @property {?Number} quantity The quantity of units in the transaction operation.\n   * @property {?*} price The price of one unit of transaction instrument in the instrument currency.\n   * @property {?*} amount The amount of the transaction (price*quantity) in the client reference currency.\n   * @property {?Number} balanceAsset The quantitative balance state after transaction.\n   * @property {?*} balanceAmount The amount balance state after transaction in the client reference currency.\n   * @property {String} assetKey The key used for asset/instrument identification.\n   * @property {?String} counterpartyName A name of the transaction counterparty.\n   * @property {String} statusId A status identificator of the transaction. String type to be able to accomodate both numerical and string statuses.\n   * @property {?String} statusName A name or description of the transaction status. E.g. Live, Pending\n   * @property {String} statusAbbr The abbreviation of the transaction status the way it must be displayed on the UI.\n   * @property {String} positionType A type of the position the given transaction belongs to. E.g. Cash position or Security.\n   * @property {?String} counterpartyAccount The account id of the counterpart of the transaction.\n   * @property {?String} subPortfolioId An subPortfolio id the transaction belongs to.\n   * @property {?String} positionId A position id the transaction belongs to.\n   * @property {?String} iSIN The instrument/asset international code.\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef PortfolioSummaryData.ValuationChartDataGet\n   * @type {Object}\n   * @property {?Array.<ValuationChartItem>} chartData The list of items to build the chart.\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n\n  /*\n   * @name parse\n   * @type {Function}\n   * @private\n   * @description Should be overwritten by transformResponse on a project level\n   */\n  function parse(res) {\n    return {\n      data: res.data,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n    };\n  }\n\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummary\n   * @type {Function}\n   * @description Retrieve list of portfolio summary.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.query The search term used to search for portfolios.\n     \n   * @param {?string} params.customListUuid The search term used to return portfolios by custom list.\n     \n   * @param {?string} params.justFavorites Flag to return just favorite portfolios.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   * @param {?string} params.orderBy Order by field: clientName, alias, riskClass, valuation.currencyCode, valuation.amount, performanceYTDpct, userOrder.\n     \n   * @param {?string} params.direction Direction. (defaults to DESC)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.PortfolioSummaryGet} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummary(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummary(params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummaryRecord\n   * @type {Function}\n   * @description Retrieve single portfolio.\n   \n   * @param {string} portfolioId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.PortfolioSummaryItemGet} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummaryRecord(portfolioId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummaryRecord(portfolioId, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/${portfolioId}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#postPortfoliosummaryCustomListRecord\n   * @type {Function}\n   * @description Endpoint for creation Portfolio Custom List\n   \n   * @param {PortfolioSummaryData.CreatePortfolioCustomListRequest} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.CustomListResponse} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .postPortfoliosummaryCustomListRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postPortfoliosummaryCustomListRecord(data, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/custom-list`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummaryCustomList\n   * @type {Function}\n   * @description Get current user all Custom Lists\n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.GetPortfolioCustomList} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummaryCustomList(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummaryCustomList(params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/custom-list`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#putPortfoliosummaryFavoritesRecord\n   * @type {Function}\n   * @description Marks portfolio as favorite\n   \n   * @param {PortfolioSummaryData.MarkPortfolioAsFavoriteRequest} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * portfolioSummaryData\n   *  .putPortfoliosummaryFavoritesRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putPortfoliosummaryFavoritesRecord(data, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/favorites`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#postPortfoliosummaryClientOrderRecord\n   * @type {Function}\n   * @description post request\n   \n   * @param {PortfolioSummaryData.PortfolioClientOrder} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * portfolioSummaryData\n   *  .postPortfoliosummaryClientOrderRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postPortfoliosummaryClientOrderRecord(data, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/client-order`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#postPortfoliosummaryAliasRecord\n   * @type {Function}\n   * @description post request\n   \n   * @param {PortfolioSummaryData.PostPortfolioAlias} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * portfolioSummaryData\n   *  .postPortfoliosummaryAliasRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postPortfoliosummaryAliasRecord(data, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/alias`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummaryPositions\n   * @type {Function}\n   * @description The operations that involve using portfolio id\n   \n   * @param {string} portfolioId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.PositionsGet} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummaryPositions(portfolioId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummaryPositions(portfolioId, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/${portfolioId}/positions`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummaryAllocationsAsset\n   * @type {Function}\n   * @description Displaying all portfolio allocations by Asset Class.\n   \n   * @param {string} portfolioId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.AllocationsAssetGet} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummaryAllocationsAsset(portfolioId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummaryAllocationsAsset(portfolioId, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/${portfolioId}/allocations-asset`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummaryAllocationsCurrency\n   * @type {Function}\n   * @description Displaying all portfolio allocations by Currency.\n   \n   * @param {string} portfolioId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.AllocationsCurrencyGet} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummaryAllocationsCurrency(portfolioId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummaryAllocationsCurrency(portfolioId, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/${portfolioId}/allocations-currency`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummaryTransactions\n   * @type {Function}\n   * @description Getting the list of transactions for the given portfolio.\n   \n   * @param {string} portfolioId \n     \n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.fromDate Transaction date from which to show transactions. Eg: 2017-07-16.\n     \n   * @param {string} params.toDate Transaction date untill which to show transactions. Eg: 2017-08-16.\n     \n   * @param {?string} params.fromAmount Transaction amount from which to show transactions.\n     \n   * @param {?string} params.toAmount Transaction amount untill which to show transactions.\n     \n   * @param {?string} params.category Transaction category like buy or sell.\n     \n   * @param {?string} params.instrumentName Transaction instrument name.\n     \n   * @param {?string} params.counterpartyName Transaction counter party name.\n     \n   * @param {?string} params.counterpartyAccount Transaction counter party account.\n     \n   * @param {?string} params.subPortfolioId Subportfolio to load transactions for.\n     \n   * @param {?string} params.iSIN ISIN of transaction.\n     \n   * @param {?string} params.positionId ID of position to load transactions for.\n     \n   * @param {?string} params.assetKey The key for instrument/asset exact identification.\n     \n   * @param {?string} params.assetClass Asset class category like stock or bond.\n     \n   * @param {number} params.size The number of items per page.\n     \n   * @param {number} params.from The number of pages to offset.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.TransactionsGet} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummaryTransactions(portfolioId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummaryTransactions(portfolioId, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/${portfolioId}/transactions`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummaryTransactionFilterOptions\n   * @type {Function}\n   * @description Returns object containing all asset classes, transactions categories, and accounts.\n   \n   * @param {string} portfolioId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.TransactionsFilterOptionsGet} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummaryTransactionFilterOptions(portfolioId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummaryTransactionFilterOptions(portfolioId, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/${portfolioId}/transaction-filter-options`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummaryValuationChart\n   * @type {Function}\n   * @description Portfolio Valuation Chart data\n   \n   * @param {string} portfolioId \n     \n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.fromDate A date from which to request data for the chart. Eg: 2017-07-16.\n     \n   * @param {string} params.toDate A date until which to request data for the chart. Eg: 2017-08-16.\n     \n   * @param {string} params.granularity Granularity of displayed data (e.g. monthly, weekly). Eg: monthly.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.ValuationChartDataGet} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummaryValuationChart(portfolioId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummaryValuationChart(portfolioId, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/${portfolioId}/valuation-chart`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummaryPerformanceChart\n   * @type {Function}\n   * @description Portfolio Cumulative Performance Chart data\n   \n   * @param {string} portfolioId \n     \n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.fromDate A date from which to request data for the chart. Eg: 2017-07-16.\n     \n   * @param {string} params.toDate A date until which to request data for the chart. Eg: 2017-08-16.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.CumulativePerformanceChartDataGet} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummaryPerformanceChart(portfolioId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummaryPerformanceChart(portfolioId, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/${portfolioId}/performance-chart`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#getPortfoliosummaryTransactionsRecord\n   * @type {Function}\n   * @description Retrieve a transaction detials\n   \n   * @param {string} portfolioId \n     \n   \n   * @param {string} transactionId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.TransactionsDetailsGet} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .getPortfoliosummaryTransactionsRecord(portfolioId, transactionId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getPortfoliosummaryTransactionsRecord(portfolioId, transactionId, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/${portfolioId}/transactions/${transactionId}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#deletePortfoliosummaryCustomListRecord\n   * @type {Function}\n   * @description Delete custom list by uuid \n   \n   * @param {string} uuid \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * portfolioSummaryData\n   *  .deletePortfoliosummaryCustomListRecord(uuid, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deletePortfoliosummaryCustomListRecord(uuid, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/custom-list/${uuid}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#putPortfoliosummaryCustomListRecord\n   * @type {Function}\n   * @description Rename the custom list by UUID\n   \n   * @param {string} uuid \n     \n   \n   * @param {PortfolioSummaryData.RenameCustomList} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link PortfolioSummaryData.CustomListResponse} on success \n   *\n   * @example\n   * portfolioSummaryData\n   *  .putPortfoliosummaryCustomListRecord(uuid, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putPortfoliosummaryCustomListRecord(uuid, data, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/custom-list/${uuid}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#postPortfoliosummaryCustomListPortfolioRecord\n   * @type {Function}\n   * @description post request\n   \n   * @param {string} uuid \n     \n   \n   * @param {PortfolioSummaryData.CustomListAddPortfolios} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * portfolioSummaryData\n   *  .postPortfoliosummaryCustomListPortfolioRecord(uuid, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postPortfoliosummaryCustomListPortfolioRecord(uuid, data, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/custom-list/${uuid}/portfolio`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#deletePortfoliosummaryCustomListPortfolioRecord\n   * @type {Function}\n   * @description delete request\n   \n   * @param {string} uuid \n     \n   \n   * @param {string} portfolioIbanList \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * portfolioSummaryData\n   *  .deletePortfoliosummaryCustomListPortfolioRecord(uuid, portfolioIbanList, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deletePortfoliosummaryCustomListPortfolioRecord(uuid, portfolioIbanList, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/custom-list/${uuid}/portfolio/${portfolioIbanList}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name PortfolioSummaryData#deletePortfoliosummaryFavoritesRecord\n   * @type {Function}\n   * @description Marks portfolio as not favorite\n   \n   * @param {string} iban \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * portfolioSummaryData\n   *  .deletePortfoliosummaryFavoritesRecord(iban, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deletePortfoliosummaryFavoritesRecord(iban, params, headers) {\n    const url = `${baseUri}${version}/portfoliosummary/favorites/${iban}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n\n  \n\n  \n  /**\n   * @description\n   * Schema data. Keys of the object are names of the POST and PUT methods\n   *\n   * Note: The schema is not strictly a JSON schema. It is a whitelisted set of\n   * keys for each object property. The keys that are exposed are meant for validation\n   * purposes.\n   *\n   * The full list of *possible* keys for each property is:\n   * type, minimum, maximum, minLength, maxLength, pattern, enum, format, default,\n   * properties, items, minItems, maxItems, uniqueItems and required.\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html for more details\n   * on the meaning of these keys.\n   *\n   * The \"required\" array from JSON schema is tranformed into a \"required\" boolean\n   * on each property. This is for ease of use.\n   *\n   * @name PortfolioSummaryData#schemas\n   * @type {Object}\n   */\n  const schemas = {};\n\n    \n  /**\n   * @description\n   * An object describing the JSON schema for the postPortfoliosummaryCustomListRecord method\n   *\n   * @name PortfolioSummaryData#schemas.postPortfoliosummaryCustomListRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 3,\n      \"maxLength\": 30,\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postPortfoliosummaryCustomListRecord = definedTypes['PortfolioSummaryData.CreatePortfolioCustomListRequest'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putPortfoliosummaryFavoritesRecord method\n   *\n   * @name PortfolioSummaryData#schemas.putPortfoliosummaryFavoritesRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"IBAN\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putPortfoliosummaryFavoritesRecord = definedTypes['PortfolioSummaryData.MarkPortfolioAsFavoriteRequest'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postPortfoliosummaryClientOrderRecord method\n   *\n   * @name PortfolioSummaryData#schemas.postPortfoliosummaryClientOrderRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {}\n}\n   */\n      \n  schemas.postPortfoliosummaryClientOrderRecord = definedTypes['PortfolioSummaryData.PortfolioClientOrder'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postPortfoliosummaryAliasRecord method\n   *\n   * @name PortfolioSummaryData#schemas.postPortfoliosummaryAliasRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"IBAN\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"required\": true\n    },\n    \"alias\": {\n      \"type\": \"string\",\n      \"maxLength\": 30,\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postPortfoliosummaryAliasRecord = definedTypes['PortfolioSummaryData.PostPortfolioAlias'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putPortfoliosummaryCustomListRecord method\n   *\n   * @name PortfolioSummaryData#schemas.putPortfoliosummaryCustomListRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 3,\n      \"maxLength\": 30,\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putPortfoliosummaryCustomListRecord = definedTypes['PortfolioSummaryData.RenameCustomList'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postPortfoliosummaryCustomListPortfolioRecord method\n   *\n   * @name PortfolioSummaryData#schemas.postPortfoliosummaryCustomListPortfolioRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {}\n}\n   */\n      \n  schemas.postPortfoliosummaryCustomListPortfolioRecord = definedTypes['PortfolioSummaryData.CustomListAddPortfolios'];\n      \n\n  /**\n   * @typedef Response\n   * @type {Object}\n   * @property {Object} data See method descriptions for possible return types\n   * @property {Function} headers Getter headers function\n   * @property {Number} status HTTP status code of the response.\n   * @property {String} statusText HTTP status text of the response.\n   */\n\n  return ({\n    \n    getPortfoliosummary,\n    \n    getPortfoliosummaryRecord,\n    \n    postPortfoliosummaryCustomListRecord,\n    \n    getPortfoliosummaryCustomList,\n    \n    putPortfoliosummaryFavoritesRecord,\n    \n    postPortfoliosummaryClientOrderRecord,\n    \n    postPortfoliosummaryAliasRecord,\n    \n    getPortfoliosummaryPositions,\n    \n    getPortfoliosummaryAllocationsAsset,\n    \n    getPortfoliosummaryAllocationsCurrency,\n    \n    getPortfoliosummaryTransactions,\n    \n    getPortfoliosummaryTransactionFilterOptions,\n    \n    getPortfoliosummaryValuationChart,\n    \n    getPortfoliosummaryPerformanceChart,\n    \n    getPortfoliosummaryTransactionsRecord,\n    \n    deletePortfoliosummaryCustomListRecord,\n    \n    putPortfoliosummaryCustomListRecord,\n    \n    postPortfoliosummaryCustomListPortfolioRecord,\n    \n    deletePortfoliosummaryCustomListPortfolioRecord,\n    \n    deletePortfoliosummaryFavoritesRecord,\n    \n    \n    schemas,\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-portfolio-summary-http-ng/scripts/data-bb-portfolio-summary-http.js"],"sourceRoot":""}