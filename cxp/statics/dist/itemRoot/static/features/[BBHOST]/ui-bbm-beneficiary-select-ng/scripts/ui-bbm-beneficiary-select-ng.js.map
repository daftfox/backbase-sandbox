{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6***********************","webpack:///webpack/bootstrap 59b29c6361f41ebec32c?d678***********************","webpack:///./ui-bbm-beneficiary-select-ng/model.xml","webpack:///external \"ui-bb-i18n-ng\"?dc01*************","webpack:///external \"vendor-bb-angular\"?a114**************","webpack:///external \"ui-bb-iban-ng\"?26a5*","webpack:///external \"ui-bbm-textfield-ng\"?0f1f*","webpack:///./ui-bbm-beneficiary-select-ng/scripts/index.js","webpack:///./ui-bbm-beneficiary-select-ng/scripts/component.js","webpack:///./ui-bbm-beneficiary-select-ng/scripts/controller.js","webpack:///./ui-bbm-beneficiary-select-ng/scripts/utils.js"],"names":["angular","module","i18nNgKey","uiBbIbanKey","uiBbmTextfieldNgKey","component","controller","name","bindings","allowCreate","debitAccount","accounts","messages","ngModel","onButtonClick","template","FieldName","NAME","IDENTIFIER","IBAN_VALIDATOR_KEY","SAME_ACCOUNT_VALIDATOR_KEY","$element","$scope","$timeout","$document","ctrl","applyScope","nameTextfield","find","eq","identifierTextfield","nameInput","identifierInput","searchIndex","blurTimeout","hasFocus","ibanValidator","state","activeField","isListOpened","beneficiary","suggestions","closeList","getAccountDisplayName","account","alias","getActiveFieldValue","value","nameModelCtrl","$viewValue","identifierModelCtrl","getSelectedAccount","identifier","openList","accountToBeneficiary","String","isNew","setBeneficiary","beneficiaryToSet","modelCtrl","$setViewValue","convertToNewBeneficiary","nameFromInput","convertToNewBeneficiaryIfNeeded","setUntouched","$setUntouched","scrollToTop","body","scrollTop","setFocus","fieldName","isButtonHidden","length","isNewAccount","Boolean","isOwnAccount","selectedAccount","external","isExternalAccount","isIbanDisabled","isSameAccountSelected","$modelValue","IBAN","isSet","setValidity","validatorKey","isValid","$setValidity","setIdentifierValidity","validateIban","validateSameIban","unsetFocus","updateListState","updateSuggestions","query","searchQuery","toLowerCase","trim","filter","idx","validate","isReady","createBeneficiaryValidity","$onChanges","currentValue","attachValidator","key","validatorFn","$validators","overrideIbanValidator","bindDomEvents","onBlur","on","cancel","$postLink","$viewChangeListeners","push","onAccountClick","Object","assign","removeWhitespaces","str","replace","createSearchIndex","map","iban","matches","accountSearchStrings","some","includes","safeApply","phase","scope","$root","$$phase","$eval","exp","$apply"],"mappings":"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","file":"ui-bbm-beneficiary-select-ng/scripts/ui-bbm-beneficiary-select-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-i18n-ng\"), require(\"vendor-bb-angular\"), require(\"ui-bb-iban-ng\"), require(\"ui-bbm-textfield-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bbm-beneficiary-select-ng\", [\"ui-bb-i18n-ng\", \"vendor-bb-angular\", \"ui-bb-iban-ng\", \"ui-bbm-textfield-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bbm-beneficiary-select-ng\"] = factory(require(\"ui-bb-i18n-ng\"), require(\"vendor-bb-angular\"), require(\"ui-bb-iban-ng\"), require(\"ui-bbm-textfield-ng\"));\n\telse\n\t\troot[\"ui-bbm-beneficiary-select-ng\"] = factory(root[\"ui-bb-i18n-ng\"], root[\"vendor-bb-angular\"], root[\"ui-bb-iban-ng\"], root[\"ui-bbm-textfield-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_45__, __WEBPACK_EXTERNAL_MODULE_49__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 59b29c6361f41ebec32c","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bbm-beneficiary-select-ng/model.xml\n// module id = 0\n// module chunks = 24","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 3\n// module chunks = 0 1 2 3 4 5 8 9 10 11 12 13 14 19 24","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 18\n// module chunks = 0 8 9 10 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-iban-ng\"\n// module id = 45\n// module chunks = 3 19 24","module.exports = __WEBPACK_EXTERNAL_MODULE_49__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-textfield-ng\"\n// module id = 49\n// module chunks = 3 5 24","/**\n * @module ui-bbm-beneficiary-select-ng\n * @description\n * Credit suggest input mobile UI component\n *\n * @example\n * // In an extension:\n * // file: scripts/index.js\n * import uiBbmBeneficiarySelectKey from 'ui-bbm-beneficiary-select-ng';\n *\n * export const dependencyKeys = [\n *   uiBbmBeneficiarySelectKey,\n * ];\n *\n * // file: templates/template.ng.html\n * <ui-bbm-beneficiary-select-ng\n *   name=\"beneficiary\"\n *   ng-model=\"$ctrl.payment.to\"\n *   accounts=\"$ctrl.accountsTo\"\n *   debit-account=\"$ctrl.payment.to.debitAccount\"\n *   allowCreate=\"!$ctrl.payment.from || $ctrl.payment.from.externalTransferAllowed\"\n *   on-button-click=\"ext.helpers.onPaymentToAccountsClick($ctrl)\"\n *   messages=\"{\n *     identifierPlaceholder: ('label.beneficiaryIdentifier' | i18n),\n *     namePlaceholder: ('label.beneficiaryName' | i18n),\n *   }\">\n * </ui-bbm-beneficiary-select-ng>\n */\n\nimport angular from 'vendor-bb-angular';\nimport i18nNgKey from 'ui-bb-i18n-ng';\nimport uiBbIbanKey from 'ui-bb-iban-ng';\nimport uiBbmTextfieldNgKey from 'ui-bbm-textfield-ng';\n\nimport component from './component';\nimport controller from './controller';\n\nexport default angular\n  .module('ui-bbm-beneficiary-select-ng', [\n    i18nNgKey,\n    uiBbIbanKey,\n    uiBbmTextfieldNgKey,\n  ])\n  .component('uiBbmBeneficiarySelectNg', component)\n  .controller('controller', ['$element', '$scope', '$timeout', '$document', controller])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bbm-beneficiary-select-ng/scripts/index.js","/**\n * @name uiBBMBeneficiarySelect\n * @type {Object}\n *\n * @property {Array.<AccountsView>} accounts List of accounts to filter and select with user input\n * @property {boolean} allowCreate Is creating of a new beneficiary allowed\n * @property {Object} messages Localized messages\n * @property {Object} debitAccount Debit Account\n * @property {Beneficiary} ngModel Beneficiary object\n * @property {function} onButtonClick Handler for button clicks\n */\nconst component = {\n  bindings: {\n    allowCreate: '<',\n    debitAccount: '<',\n    accounts: '<',\n    messages: '<',\n    ngModel: '<',\n    onButtonClick: '&',\n  },\n  controller: 'controller',\n  template: `\n    <div \n      class=\"bbm-beneficiary-select\"\n      data-ng-class=\"{\n        'bbm-beneficiary-select-has-focus': $ctrl.state.activeField,\n        'bbm-beneficiary-select-has-focus-name': $ctrl.state.activeField === 'name',\n        'bbm-beneficiary-select-has-focus-identifier': $ctrl.state.activeField === 'identifier'\n      }\"\n      data-role=\"beneficiary-select\">\n      <div class=\"bbm-beneficiary-select-inner\">\n        <div class=\"bbm-beneficiary-select-name form-group form-group-md\">\n          <ui-bbm-textfield-ng\n            data-type=\"text\"\n            data-name=\"beneficiary-name\"\n            data-label=\"{{ $ctrl.messages.nameLabel }}\"\n            data-placeholder=\"{{ $ctrl.messages.namePlaceholder }}\"\n            data-role=\"beneficiary-select-name\"\n            data-ng-model=\"$ctrl.state.beneficiary.name\"\n            data-clear-button=\"true\">\n          </ui-bbm-textfield-ng>\n        </div>\n        <div class=\"bbm-beneficiary-select-identifier form-group form-group-md\">\n          <ui-bbm-textfield-ng\n            data-type=\"text\"\n            data-name=\"beneficiary-identifier\"\n            data-label=\"{{ $ctrl.messages.identifierLabel }}\"\n            data-placeholder=\"{{ $ctrl.messages.identifierPlaceholder }}\"\n            data-role=\"beneficiary-select-identifier\"\n            data-disabled=\"$ctrl.isIbanDisabled()\"\n            data-ng-required=\"$ctrl.isExternalAccount()\"\n            data-ng-model=\"$ctrl.state.beneficiary.identifier\"\n            data-ng-model-options=\"{ allowInvalid: true }\"\n            data-clear-button=\"true\"\n            data-ui-bb-iban-ng>\n            <ng-messages\n              for=\"$ctrl.identifierModelCtrl.$error\"\n              data-ng-show=\"$ctrl.identifierModelCtrl.$dirty &&\n                            $ctrl.identifierModelCtrl.$touched &&\n                            $ctrl.identifierModelCtrl.$invalid\"\n              role=\"alert\">\n              <ng-message\n                when=\"uiBbIban\"\n                data-i18n-key=\"errors.invalidAccountIBAN\">\n              </ng-message>\n              <ng-message\n                when=\"required\"\n                data-i18n-key=\"errors.requiredAccountIBAN\">\n              </ng-message>\n              <ng-message\n                when=\"sameUiBbIban\"\n                data-i18n-key=\"errors.sameAccountIBAN\">\n              </ng-message>\n              <ng-message\n                when=\"createBeneficiary\"\n                data-i18n-key=\"errors.createBeneficiary\">\n              </ng-message>\n            </ng-messages>\n          </ui-bbm-textfield-ng>\n        </div>\n\n        <div \n          class=\"bbm-beneficiary-select-list\"          \n          data-role=\"beneficiary-select-list\"\n          data-ng-if=\"$ctrl.state.isListOpened\">\n          <div class=\"bbm-list\">\n            <div class=\"bbm-list-group\">\n              <ul class=\"bbm-list-group-items\">\n                <li\n                  class=\"bbm-list-item\"\n                  data-role=\"beneficiary-select-list-item\"\n                  data-ng-repeat=\"account in $ctrl.state.suggestions track by $index\"\n                  data-ng-click=\"$ctrl.onAccountClick(account)\">\n                  <div class=\"bbm-beneficiary-select-account\">\n                    <h4\n                      class=\"bbm-beneficiary-select-account-name\"\n                      data-role=\"beneficiary-select-account-name\"\n                      data-ng-bind=\"$ctrl.getAccountDisplayName(account)\">\n                    </h4>\n                    <div\n                      class=\"bbm-beneficiary-select-account-identifier\"\n                      data-ng-if=\"account.identifier\">\n                      <span\n                        class=\"prevent-ios-click\"\n                        data-role=\"beneficiary-select-account-identifier\"\n                        data-ng-bind=\"account.identifier\">\n                      </span>\n                    </div>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bbm-beneficiary-select-button\">\n          <button\n            class=\"btn btn-icon\"\n            type=\"button\"\n            data-role=\"beneficiary-select-button\"\n            data-ng-click=\"$ctrl.onButtonClick()\"\n            data-ng-hide=\"$ctrl.isButtonHidden()\">\n            <span class=\"bbm-icon bbm-icon-lg bbm-icon-addressbook fa fa-address-book-o\"></span>\n          </button>\n        </div>\n      </div>\n    </div>\n  `,\n};\n\nexport default component;\n\n/**\n * @typedef {Object} Beneficiary\n * @property {string} name Beneficiary name\n * @property {string} identifier Beneficiary identifier\n * @property {boolean} isNew If true, the beneficiary was entered by the user manually.\n *   False indicates that the beneficiary was selected from the list.\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bbm-beneficiary-select-ng/scripts/component.js","import {\n  createSearchIndex,\n  matches,\n  safeApply,\n} from './utils';\n\n/**\n * Field names enumeration\n * @type {Object}\n */\nconst FieldName = {\n  NAME: 'name',\n  IDENTIFIER: 'identifier',\n};\n\nconst IBAN_VALIDATOR_KEY = 'uiBbIban';\nconst SAME_ACCOUNT_VALIDATOR_KEY = 'sameUiBbIban';\n\n/**\n * Component controller\n */\nexport default function controller($element, $scope, $timeout, $document) {\n  const ctrl = this;\n\n  const applyScope = safeApply($scope);\n\n  const nameTextfield = $element.find('ui-bbm-textfield-ng').eq(0);\n  const identifierTextfield = $element.find('ui-bbm-textfield-ng').eq(1);\n\n  const nameInput = nameTextfield.find('input').eq(0);\n  const identifierInput = identifierTextfield.find('input').eq(0);\n\n  let searchIndex = [];\n\n  let blurTimeout;\n  let hasFocus = false;\n\n  let ibanValidator;\n\n  /**\n   * ------------------------------------------------------------------------------------\n   * Public state\n   * ------------------------------------------------------------------------------------\n   */\n\n  /**\n   * UI state\n   * @type {Object}\n   */\n  const state = {};\n\n  /**\n   * Name of the active field, when component has focus.\n   * Possible values are 'name', or 'identifier', or empty string if component doesn't have focus.\n   * @type {FieldName}\n   */\n  state.activeField = '';\n\n  /**\n   * Whether the list is opened\n   * @type {boolean}\n   */\n  state.isListOpened = false;\n\n  /**\n   * Selected beneficiary\n   * @type {Object}\n   */\n  state.beneficiary = {};\n\n  /**\n   * List of matching accounts\n   * @type {Array.<Object>}\n   */\n  state.suggestions = [];\n\n  /**\n   * ------------------------------------------------------------------------------------\n   * Inner functions\n   * ------------------------------------------------------------------------------------\n   */\n\n  const closeList = () => {\n    state.isListOpened = false;\n  };\n\n  const getAccountDisplayName = account => account.alias || account.name || '';\n\n  const getActiveFieldValue = () => {\n    let value = '';\n\n    if (hasFocus) {\n      value = (state.activeField === FieldName.NAME)\n        ? ctrl.nameModelCtrl.$viewValue\n        : ctrl.identifierModelCtrl.$viewValue;\n    }\n\n    return value || '';\n  };\n\n  const getSelectedAccount = () => {\n    const beneficiary = state.beneficiary;\n\n    if (beneficiary) {\n      return (ctrl.accounts || []).find(account => (\n        beneficiary.identifier === account.identifier\n      )) || null;\n    }\n\n    return null;\n  };\n\n  const openList = () => {\n    state.isListOpened = true;\n  };\n\n  const accountToBeneficiary = ({ alias, name, identifier }) => ({\n    name: String(alias || name),\n    identifier: String(identifier),\n    isNew: false,\n  });\n\n  const setBeneficiary = beneficiaryToSet => {\n    state.beneficiary = beneficiaryToSet;\n    if (ctrl.modelCtrl) {\n      ctrl.modelCtrl.$setViewValue(beneficiaryToSet);\n    }\n  };\n\n  const convertToNewBeneficiary = () => {\n    const nameFromInput = String(ctrl.nameModelCtrl.$viewValue);\n\n    setBeneficiary({\n      name: nameFromInput,\n      identifier: '',\n      isNew: true,\n    });\n  };\n\n  const convertToNewBeneficiaryIfNeeded = () => {\n    if (ctrl.ngModel && !ctrl.ngModel.isNew) {\n      convertToNewBeneficiary();\n    }\n  };\n\n  const setUntouched = () => {\n    if (ctrl.nameModelCtrl) {\n      ctrl.nameModelCtrl.$setUntouched();\n      ctrl.identifierModelCtrl.$setUntouched();\n    }\n  };\n\n  const scrollToTop = () => {\n    /* eslint-disable no-param-reassign */\n    $document[0].body.scrollTop = 0;\n  };\n\n  const setFocus = fieldName => {\n    state.activeField = fieldName;\n    hasFocus = true;\n  };\n\n  const isButtonHidden = () => {\n    const name = ctrl.nameModelCtrl.$viewValue || '';\n    return state.activeField === FieldName.NAME && name.length > 0;\n  };\n\n  const isNewAccount = () => Boolean(state.beneficiary && state.beneficiary.isNew);\n\n  const isOwnAccount = () => {\n    if (isNewAccount()) {\n      return false;\n    }\n\n    const selectedAccount = getSelectedAccount();\n    return Boolean(selectedAccount && !selectedAccount.external);\n  };\n\n  const isExternalAccount = () => !isOwnAccount();\n\n  const isIbanDisabled = () => isOwnAccount();\n\n  const isSameAccountSelected = () => {\n    const identifier = ctrl.identifierModelCtrl.$modelValue;\n    return ctrl.debitAccount && ctrl.debitAccount.IBAN === identifier;\n  };\n\n  const isSet = () => Boolean(state.beneficiary && state.beneficiary.identifier);\n\n  const setValidity = (validatorKey, isValid) => {\n    if (ctrl.modelCtrl) {\n      ctrl.modelCtrl.$setValidity(validatorKey, isValid);\n    }\n  };\n\n  const setIdentifierValidity = (validatorKey, isValid) => {\n    if (ctrl.identifierModelCtrl) {\n      ctrl.identifierModelCtrl.$setValidity(validatorKey, isValid);\n    }\n  };\n\n  const validateIban = () => {\n    const value = ctrl.identifierModelCtrl.$modelValue;\n    const isValid = isIbanDisabled() || ibanValidator(value);\n\n    setValidity(IBAN_VALIDATOR_KEY, isValid);\n\n    return isValid;\n  };\n\n  const validateSameIban = () => {\n    const isValid = !isSameAccountSelected();\n\n    setValidity(SAME_ACCOUNT_VALIDATOR_KEY, isValid);\n\n    return isValid;\n  };\n\n  const unsetFocus = () => {\n    state.activeField = '';\n    hasFocus = false;\n  };\n\n  const updateListState = () => {\n    if (getActiveFieldValue()) {\n      openList();\n    } else {\n      closeList();\n    }\n  };\n\n  const updateSuggestions = () => {\n    const query = getActiveFieldValue();\n    const searchQuery = query.toLowerCase().trim();\n    const accounts = ctrl.accounts || [];\n\n    state.suggestions = accounts.filter((account, idx) => (\n      matches(searchQuery, searchIndex[idx])\n    ));\n\n    updateListState();\n  };\n\n  const validate = () => {\n    const isReady = Boolean(ctrl.ngModel && ctrl.accounts && state.beneficiary);\n    if (isReady) {\n      let createBeneficiaryValidity = true;\n\n      if (isSet() && isNewAccount() && !ctrl.allowCreate) {\n        createBeneficiaryValidity = false;\n      }\n\n      setValidity('createBeneficiary', createBeneficiaryValidity);\n      setIdentifierValidity('createBeneficiary', createBeneficiaryValidity);\n    }\n  };\n\n  const $onChanges = ({ accounts, allowCreate, ngModel }) => {\n    if (accounts && accounts.currentValue) {\n      searchIndex = createSearchIndex(ctrl.accounts);\n    }\n\n    if (ngModel && ctrl.ngModel) {\n      if (ctrl.ngModel !== state.beneficiary) {\n        setBeneficiary(ctrl.ngModel);\n        setUntouched();\n        validate();\n      }\n    }\n\n    if (allowCreate) {\n      validate();\n    }\n  };\n\n  const attachValidator = (key, validatorFn) => {\n    ctrl.identifierModelCtrl.$validators[key] = validatorFn;\n  };\n\n  const overrideIbanValidator = () => {\n    ibanValidator = ctrl.identifierModelCtrl.$validators[IBAN_VALIDATOR_KEY];\n    attachValidator(IBAN_VALIDATOR_KEY, validateIban);\n  };\n\n  const bindDomEvents = () => {\n    const onBlur = () => {\n      // Zero timeout is used in order to prevent closing the list too early,\n      // when a user taps a suggestion from the dropdown list\n      blurTimeout = $timeout(() => {\n        validate();\n        unsetFocus();\n        closeList();\n      }, 100);\n    };\n\n    nameInput.on('focus', () => applyScope(() => {\n      $timeout.cancel(blurTimeout);\n\n      setFocus(FieldName.NAME);\n      scrollToTop();\n      updateSuggestions();\n    }));\n\n    identifierInput.on('focus', () => applyScope(() => {\n      $timeout.cancel(blurTimeout);\n\n      setFocus(FieldName.IDENTIFIER);\n      scrollToTop();\n      updateSuggestions();\n    }));\n\n    nameInput.on('blur', onBlur);\n    identifierInput.on('blur', onBlur);\n  };\n\n  const $postLink = () => {\n    ctrl.modelCtrl = $element.controller('ngModel');\n    ctrl.nameModelCtrl = nameTextfield.controller('ngModel');\n    ctrl.identifierModelCtrl = identifierTextfield.controller('ngModel');\n\n    ctrl.nameModelCtrl.$viewChangeListeners.push(\n      convertToNewBeneficiaryIfNeeded,\n      updateSuggestions\n    );\n\n    ctrl.identifierModelCtrl.$viewChangeListeners.push(\n      updateSuggestions\n    );\n\n    overrideIbanValidator();\n    attachValidator(SAME_ACCOUNT_VALIDATOR_KEY, validateSameIban);\n    bindDomEvents();\n  };\n\n  const onAccountClick = account => {\n    setBeneficiary(accountToBeneficiary(account));\n    closeList();\n  };\n\n  /**\n   * ------------------------------------------------------------------------------------\n   * Public API\n   * ------------------------------------------------------------------------------------\n   */\n\n  Object.assign(ctrl, {\n    $onChanges,\n    $postLink,\n    getAccountDisplayName,\n    isButtonHidden,\n    isExternalAccount,\n    isIbanDisabled,\n    onAccountClick,\n    state,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bbm-beneficiary-select-ng/scripts/controller.js","/**\n * Removes whitespaces from a given string\n * @param {string} str\n * @returns {string}\n * @inner\n */\nconst removeWhitespaces = str => str.replace(/\\s/g, '');\n\n/**\n * Creates a search index for the given list of accounts\n * @param {Array<object>} accounts\n * @returns {Array<object>}\n * @inner\n */\nexport const createSearchIndex = accounts => (\n  (accounts || []).map(account => {\n    const iban = (account.identifier || '').toLowerCase().trim();\n    const name = (account.alias || account.name || '').toLowerCase();\n    return [\n      name,\n      iban,\n      removeWhitespaces(iban),\n    ];\n  })\n);\n\n/**\n * Returns true, if the name of the given account matches\n * to the given query string. False otherwise.\n * @param {string} query\n * @param {Array<string>} accountSearchStrings\n * @returns {boolean}\n * @inner\n */\nexport const matches = (query, accountSearchStrings) => (\n  query && accountSearchStrings.some(str => str.includes(query))\n);\n\n/*\n * Safe way of calling $scope.$apply function.\n * $scope.$apply will only be called if application is not in $apply or $digest phase.\n *\n * @param {Object} scope Angular Scope object.\n * @param {string|Function} [exp] An angular expression to be executed.\n * @inner\n */\nexport const safeApply = scope => exp => {\n  const phase = scope.$root && scope.$root.$$phase;\n  if (phase === '$apply' || phase === '$digest') {\n    scope.$eval(exp);\n  } else {\n    scope.$apply(exp);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bbm-beneficiary-select-ng/scripts/utils.js"],"sourceRoot":""}