{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*********","webpack:///webpack/bootstrap d545a86f8ac2cff5593f?29fa*********","webpack:///./ext-bbm-product-summary-ng/model.xml","webpack:///external \"ui-bb-i18n-ng\"?dc01*******","webpack:///external \"ui-bbm-product-kind-table-view-ng\"?62ce","webpack:///./ext-bbm-product-summary-ng/scripts/index.js","webpack:///./ext-bbm-product-summary-ng/scripts/helpers.js","webpack:///./ext-bbm-product-summary-ng/scripts/product-kind-view.js","webpack:///./ext-bbm-product-summary-ng/scripts/sorting-methods.js","webpack:///./ext-bbm-product-summary-ng/scripts/intents.js","webpack:///./ext-bbm-product-summary-ng/scripts/constants.js"],"names":["helpers","intents","dependencyKeys","stateContainer","processKinds","productKinds","map","loading","createSelector","state","loadingError","error","getProducts","data","getProduct","find","productKind","id","processedProduct","kind","products","product","selectProduct","showTransactions","getProcessedProducts","hasProducts","Boolean","length","showLoadingState","showEmptyState","showErrorState","maskCardNumber","suffix","defaultViewModel","viewModelFactories","currentAccounts","identifier","IBAN","BBAN","primaryValue","bookedBalance","secondaryValue","availableBalance","secondaryLabel","tertiaryValue","creditLimit","tertiaryLabel","savingsAccounts","accruedInterest","termDeposits","principalAmount","creditCards","number","debitCards","loans","investmentAccounts","currentInvestmentValue","productKindView","name","sort","productNameAsc","aggregatedBalance","currency","isOpen","productA","productB","createRequest","handleRequest","service","SHOW_TRANSACTIONS","showProductSummary","SHOW_PRODUCT_SUMMARY","loadProducts","Intent"],"mappings":"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","file":"ext-bbm-product-summary-ng/scripts/ext-bbm-product-summary-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bbm-product-kind-table-view-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bbm-product-summary-ng\", [\"ui-bb-i18n-ng\", \"ui-bbm-product-kind-table-view-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bbm-product-summary-ng\"] = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bbm-product-kind-table-view-ng\"));\n\telse\n\t\troot[\"ext-bbm-product-summary-ng\"] = factory(root[\"ui-bb-i18n-ng\"], root[\"ui-bbm-product-kind-table-view-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_48__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d545a86f8ac2cff5593f","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bbm-product-summary-ng/model.xml\n// module id = 0\n// module chunks = 9","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 8\n// module chunks = 0 1 2 4 5 6 7 8 9 10 11 12","module.exports = __WEBPACK_EXTERNAL_MODULE_48__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-product-kind-table-view-ng\"\n// module id = 48\n// module chunks = 8 9","/**\n * @module ext-bbm-product-summary-ng\n *\n * @description\n * Mobile extension for the product summary widget.\n *\n * NOTE: Starting from version 2.0.0 this extension (ext-bbm-product-summary-ng)\n * is only compatible with widget-bbm-product-summary-ng (mobile widget).\n * Please use version 1.x.x if you are using widget-bb-product-summary-ng.\n *\n * @requires ui-bbm-product-kind-table-view-ng\n * @requires ui-bb-inline-status-ng\n * @requires ui-bb-i18n-ng\n *\n * @example\n * <!-- product summary widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *  <value type=\"string\">ext-bbm-product-summary-ng</value>\n * </property>\n */\nimport uiBbmProductKindTableViewKey from 'ui-bbm-product-kind-table-view-ng';\nimport uiBbI18nNgKey from 'ui-bb-i18n-ng';\n\nimport extHelpers from './helpers';\nimport extIntents from './intents';\n\nexport const helpers = extHelpers;\nexport const intents = extIntents;\n\nexport const dependencyKeys = [\n  uiBbmProductKindTableViewKey,\n  uiBbI18nNgKey,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-product-summary-ng/scripts/index.js","import productKindView from './product-kind-view';\n\n/**\n * @description\n * Helpers for ext-bbm-product-summary-ng.\n *\n * @name Helpers\n * @type {Object}\n */\nexport default ({ stateContainer, intents }) => {\n  /**\n   * @name processKinds\n   * @description\n   * Processes the product kinds.\n   *\n   * @type {function}\n   * @param {module:model-bb-product-summary-ng.ProductKind[]} productKinds ProductKinds to process.\n   *\n   * @returns {object[]}\n   * @inner\n   */\n  const processKinds = productKinds => productKinds.map(productKindView);\n\n  /**\n   * @name loading\n   * @description\n   * Returns the loading state.\n   * @type {function}\n   *\n   * @returns {boolean}\n   * @inner\n   */\n  const loading = stateContainer.createSelector(state => state.productKinds.loading);\n\n  /**\n   * @name loadingError\n   * @description\n   * Returns the error state.\n   * @type {function}\n   *\n   * @returns {boolean}\n   * @inner\n   */\n  const loadingError = stateContainer.createSelector(state => state.productKinds.error);\n\n  /**\n   * @name getProducts\n   * @description\n   * Returns the raw products.\n   * @type {function}\n   *\n   * @returns {module:model-bb-product-summary-ng.ProductKind[]}\n   * @inner\n   */\n  const getProducts = stateContainer.createSelector(state => state.productKinds.data);\n\n  /**\n   * @name getProduct\n   * @description Retrieves a product.\n   * @type {function}\n   *\n   * @param {object} processedProduct\n   * @returns {module:model-bb-product-summary-ng.Product} product\n   * @inner\n   */\n  const getProduct = processedProduct => (\n    getProducts()\n      .find(productKind => productKind.id === processedProduct.kind)\n      .products.find(product => product.id === processedProduct.id)\n  );\n\n  /**\n   * @name Helpers#selectProduct\n   * @description\n   * Sets the alternate workflow when a user selects a Product from the overview.\n   *\n   * @type {function}\n   * @param {object} processedProduct\n   */\n  const selectProduct = processedProduct => {\n    const product = getProduct(processedProduct);\n\n    intents.showTransactions(product);\n  };\n\n  /**\n   * @name Helpers#productKinds\n   * @description\n   * The list of the processed product kinds.\n   * @type {function}\n   *\n   * @returns {object[]}\n   */\n  const getProcessedProducts = stateContainer.createSelector(({ productKinds }) => (\n    productKinds.data ? processKinds(productKinds.data) : null\n  ));\n\n  /**\n   * @name Helpers#hasProducts\n   * @description Checks whether the list is empty.\n   * @type {function}\n   *\n   * @returns {boolean} false if product list is empty.\n   */\n  const hasProducts = () => (\n    Boolean(getProducts() && getProducts().length)\n  );\n\n  /**\n   * @name Helpers#showLoadingState\n   * @description Checks for the loading state.\n   * @type {function}\n   *\n   * @returns {boolean}\n   */\n  const showLoadingState = () => (\n    loading() && !getProducts()\n  );\n\n  /**\n   * @name Helpers#showEmptyState\n   * @description Checks if there are no products.\n   * @type {function}\n   *\n   * @returns {boolean}\n   */\n  const showEmptyState = () => (\n    Boolean(getProducts() && !getProducts().length) &&\n    !loadingError() &&\n    !loading()\n  );\n\n  /**\n   * @name Helpers#showErrorState\n   * @description Checks for the error state.\n   * @type {function}\n   *\n   * @returns {boolean}\n   */\n  const showErrorState = () => (\n    loadingError() && !loading()\n  );\n\n  return {\n    getProcessedProducts,\n    selectProduct,\n    hasProducts,\n    showLoadingState,\n    showEmptyState,\n    showErrorState,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-product-summary-ng/scripts/helpers.js","import sortingBy from './sorting-methods';\n\nconst maskCardNumber = suffix => suffix && `XXXX-XXXX-XXXX-${suffix}`;\n\nconst defaultViewModel = product => product;\n\nconst viewModelFactories = {\n  currentAccounts: product => ({\n    ...product,\n    identifier: product.IBAN || product.BBAN,\n    primaryValue: product.bookedBalance,\n    secondaryValue: product.availableBalance,\n    secondaryLabel: 'label.availableBalance',\n    tertiaryValue: product.creditLimit,\n    tertiaryLabel: 'label.creditLimit',\n  }),\n\n  savingsAccounts: product => ({\n    ...product,\n    identifier: product.BBAN || product.IBAN,\n    primaryValue: product.bookedBalance,\n    secondaryValue: product.accruedInterest,\n    secondaryLabel: 'label.accruedInterestAmount',\n  }),\n\n  termDeposits: product => ({\n    ...product,\n    primaryValue: product.principalAmount,\n    secondaryValue: product.accruedInterest,\n    secondaryLabel: 'label.accruedInterestAmount',\n  }),\n\n  creditCards: product => ({\n    ...product,\n    identifier: maskCardNumber(product.number),\n    primaryValue: product.bookedBalance,\n    secondaryValue: product.creditLimit,\n    secondaryLabel: 'label.creditLimit',\n    tertiaryValue: product.availableBalance,\n    tertiaryLabel: 'label.availableBalance',\n  }),\n\n  debitCards: product => ({\n    ...product,\n    identifier: maskCardNumber(product.number),\n  }),\n\n  loans: product => ({\n    ...product,\n    primaryValue: product.bookedBalance,\n  }),\n\n  investmentAccounts: product => ({\n    ...product,\n    primaryValue: product.currentInvestmentValue,\n  }),\n};\n\n/**\n * @description\n * Prepare the fields of a Product into a form ready for display to the User\n *\n * @inner\n * @type {function}\n * @param {object} product The source Product from the API\n * @returns {ProductView}\n */\nconst productKindView = product =>\n  viewModelFactories[product.kind](product) || defaultViewModel(product);\n\n/**\n * @description\n * Prepare the fields of a Product Kind into a form ready for display to the User\n *\n * @private\n * @type {function}\n * @param {object} kind The source ProductKind from the API\n * @returns {ProductKindView}\n */\nexport default kind => ({\n  id: kind.id,\n  name: kind.name,\n  products: kind.products\n    .map(productKindView)\n    .sort(sortingBy.productNameAsc),\n  aggregatedBalance: kind.aggregatedBalance,\n  currency: kind.currency,\n  isOpen: kind.isOpen,\n});\n\n/**\n * @typedef {Object} ProductKindView\n * @property {string} id The Product Kind identifier\n * @property {string} name The name of the Kind, suitable for display to users\n * @property {Array.<ProductView>} products The products of this Kind\n */\n\n/**\n * @typedef {Object} ProductView\n * @property {string} id The internal Product Identifier\n * @property {string} name The product's name, suitable for display to users\n * @property {?string} identifier The identifier of the Product from the user's perspective\n * @property {?string} primaryValue The most important associated value to be displayed\n * @property {?string} secondaryValue A secondary associated value to be displayed\n * @property {?string} secondaryLabel A label to describe the secondary value\n * @property {?string} tertiaryValue A tertiary associated value to be displayed\n * @property {?string} tertiaryLabel A label to describe the tertiary value\n * @property {?string} currency ISO currency code\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-product-summary-ng/scripts/product-kind-view.js","/**\n * Sorting methods for products\n */\nexport default {\n  /**\n   * @name productNameAsc\n   * @description\n   * Sort products alphabetically by name, ascending\n   * @type {function}\n   * @param {Object} productA\n   * @param {Object} productB\n   * @returns {('-1'|'0'|'1')} result\n   */\n  productNameAsc: (productA, productB) => {\n    if (productA.name < productB.name) return -1;\n    if (productA.name > productB.name) return 1;\n    return 0;\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-product-summary-ng/scripts/sorting-methods.js","import { Intent } from './constants';\n\n/**\n * @name Intents\n * @type {Object}\n */\nexport default ({ createRequest, handleRequest, service }) => ({\n  /**\n   * @name Intents#showTransactions\n   * @description The intent to show the transactions.\n   * @type {function}\n   */\n  showTransactions: createRequest(Intent.SHOW_TRANSACTIONS),\n\n  /**\n   * @name Intents#showProductSummary\n   * @description Handler of the 'intent.bb.product.summary.show' intent.\n   * @type {function}\n   */\n  showProductSummary: handleRequest(Intent.SHOW_PRODUCT_SUMMARY, () => {\n    service.loadProducts();\n  }),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-product-summary-ng/scripts/intents.js","/* eslint-disable import/prefer-default-export */\n/**\n * @name Intent\n * @type {object}\n * @inner\n */\nexport const Intent = {\n  SHOW_PRODUCT_SUMMARY: 'intent.rbm.productSummary.list.show',\n  SHOW_TRANSACTIONS: 'intent.rbm.transactions.list.show',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-product-summary-ng/scripts/constants.js"],"sourceRoot":""}