{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******","webpack:///webpack/bootstrap f3d2485eec67eb2fdf62?1eb6******","webpack:///./model-bb-billpay-ng/model.xml","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./model-bb-billpay-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///external \"data-bb-bill-pay-http-ng\"","webpack:///./model-bb-billpay-ng/scripts/billpay.js"],"names":["moduleKey","modelBillpayKey","angular","module","billPayDataModuleKey","factory","billPayDataKey","Model","name","BillpayModel","validateAndGetPayments","headers","data","totalCountHeader","totalCount","parseInt","payments","length","error","code","E_UNEXPECTED","customDebugMessage","Promise","billpayData","getPayeesSummary","params","getBillPayPayeesSummary","then","payeeSummaries","catch","getAccounts","getBillPayAccounts","accounts","getPayments","getBillPayPayments","response","getPayment","id","getBillPayPaymentsRecord","payment","postPayeesRecord","postBillPayPayeesRecord","putPayeesRecord","putBillPayPayeesRecord","getPayeeRecord","getBillPayPayeesRecord","postPaymentsRecord","postBillPayPaymentsRecord","putPaymentRecord","putBillPayPaymentsRecord","postRecurringPaymentsRecord","postBillPayPaymentsRecurringRecord","deletePaymentRecord","deleteBillPayPaymentsRecord","deleteRecurringPaymentRecord","deleteBillPayPaymentsRecurringRecord","searchPayees","getBillPayPayeesSearch","payees","deletePayeesRecord","deleteBillPayPayeesRecord","postPayeesElectronicRecord","postBillPayPayeesElectronicRecord","getPayeesElectronicRecord","getBillPayPayeesElectronicRecord","putPayeesElectronicRecord","putBillPayPayeesElectronicRecord","deletePayeesElectronicRecord","deleteBillPayPayeesElectronicRecord"],"mappings":"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","file":"model-bb-billpay-ng/scripts/model-bb-billpay-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lib-bb-model-errors\"), require(\"vendor-bb-angular\"), require(\"data-bb-bill-pay-http-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"model-bb-billpay-ng\", [\"lib-bb-model-errors\", \"vendor-bb-angular\", \"data-bb-bill-pay-http-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"model-bb-billpay-ng\"] = factory(require(\"lib-bb-model-errors\"), require(\"vendor-bb-angular\"), require(\"data-bb-bill-pay-http-ng\"));\n\telse\n\t\troot[\"model-bb-billpay-ng\"] = factory(root[\"lib-bb-model-errors\"], root[\"vendor-bb-angular\"], root[\"data-bb-bill-pay-http-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_45__, __WEBPACK_EXTERNAL_MODULE_47__, __WEBPACK_EXTERNAL_MODULE_48__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f3d2485eec67eb2fdf62","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./model-bb-billpay-ng/model.xml\n// module id = 0\n// module chunks = 7","module.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 45\n// module chunks = 6 7 10 11","/**\n * @module model-bb-billpay-ng\n *\n * @description\n * Model for widget-bb-billpay-ng\n *\n * @example\n * import modelBillpayModuleKey, { modelBillpayKey } from 'model-bb-billpay-ng';\n *\n * angular\n *   .module('ExampleModule', [\n *     modelBillpayModuleKey,\n *   ])\n *   .factory('someFactory', [\n *     modelBillpayKey,\n *     // into\n *     function someFactory(billpayModel) {\n *       // ...\n *     },\n *   ]);\n */\nimport angular from 'vendor-bb-angular';\n\nimport billPayDataModuleKey, { billPayDataKey } from 'data-bb-bill-pay-http-ng';\n\nimport Model from './billpay';\n\nconst moduleKey = 'model-bb-billpay-ng';\nexport const modelBillpayKey = `${moduleKey}:model`;\n\nexport default angular\n  .module(moduleKey, [\n    billPayDataModuleKey,\n  ])\n\n  .factory(modelBillpayKey, [\n    '$q',\n    billPayDataKey,\n    /* into */\n    Model,\n  ])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-billpay-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 47\n// module chunks = 7 8 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_48__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-bill-pay-http-ng\"\n// module id = 48\n// module chunks = 7","import { fromHttpError, E_UNEXPECTED } from 'lib-bb-model-errors';\n\n/**\n * @name validateAndGetPayments\n * @inner\n * @type {function}\n * @param {Object} response\n * @param {Object} response.headers\n * @param {Object} response.data\n * @returns {Array<module:data-bb-billpay-http-ng.Payment> | module:lib-bb-model-errors.ModelError}\n * @description Returns a validated list of payments or throws a ModelError\n */\nconst validateAndGetPayments = ({ headers, data }) => {\n  const totalCountHeader = headers('x-total-count');\n  const totalCount = totalCountHeader ? parseInt(totalCountHeader, 10) : 0;\n\n  // malformed if no payments, payments not array or if totalCount obviously out of sync\n  if (!data.payments ||\n    data.payments.length == null ||\n    (totalCount > 0 && data.payments.length === 0) ||\n    (data.payments.length > totalCount)) {\n    // customDebugMessage not for display - just to help future debugging so no i18n\n    const error = { code: E_UNEXPECTED, customDebugMessage: 'payments data is malformed' };\n    throw error;\n  }\n  return data.payments;\n};\n\n/**\n *\n * @name BillpayModel\n * @type {function}\n * @param {Object} Promise An ES2015 compatible `Promise` object.\n * @param {module:data-bb-bill-pay-http-ng.BillpayData} billpayData\n * @return {Object}\n *\n * @description Model factory for model-bb-billpay-ng\n */\nexport default function BillpayModel(Promise, billpayData) {\n  /**\n   *\n   * @name BillpayModel#getPayeesSummary\n   * @type {function}\n   * @param {Object} params Any parameters for the API call\n   * @returns {Promise<Array<module:data-bb-billpay-http-ng.PayeeSummary>,\n   *   module:lib-bb-model-errors.ModelError>}\n   * @description Returns a list of payees that payments may be made to\n   */\n  const getPayeesSummary = (params) => billpayData.getBillPayPayeesSummary(params)\n    .then(({ data }) => data.payeeSummaries)\n    .catch(error => {\n      throw fromHttpError(error);\n    });\n\n  /**\n   *\n   * @name BillpayModel#getAccounts\n   * @type {function}\n   * @param {Object} params Any parameters for the API call\n   * @returns {Promise<Array<module:data-bb-billpay-http-ng.PaymentAccount>,\n   *   module:lib-bb-model-errors.ModelError>}\n   * @description Returns a list of accounts that payments may be made from\n   */\n  const getAccounts = (params) => billpayData.getBillPayAccounts(params)\n    .then(({ data }) => data.accounts)\n    .catch(error => {\n      throw fromHttpError(error);\n    });\n\n  /**\n   * @name BillpayModel#getPayments\n   * @type {function}\n   * @param {Object} params Any parameters for the API call\n   * @returns {Promise<Array<module:data-bb-billpay-http-ng.Payment>,\n   *   module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Returns a list of payments\n   */\n  const getPayments = (params) => billpayData.getBillPayPayments(params)\n    .then((response) => validateAndGetPayments(response))\n    .catch(error => {\n      throw error.code ? error : fromHttpError(error);\n    });\n\n  /**\n   * @name BillpayModel#getPayment\n   * @type {function}\n   * @param {string} id payment id to get\n   * @param {Object} [params] Any parameters for the API call\n   * @returns {Promise<Array<module:data-bb-bill-pay-http-ng.BillPayData.Payment>,\n   *   module:lib-bb-model-errors.ModelError>}\n   * @description Returns a payment by id\n   */\n  const getPayment = (id, params) => billpayData.getBillPayPaymentsRecord(id, params)\n    .then(({ data }) => data.payment)\n    .catch(error => {\n      throw fromHttpError(error);\n    });\n\n  /**\n   *\n   * @name BillpayModel#postPayeesRecord\n   * @type {function}\n   * @param {Payee} params Any parameters for the API call\n   * @returns {Promise<module:data-bb-billpay-http-ng.PayeePostResponse,\n   *  module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Creates new payee\n   */\n  const postPayeesRecord = (params) => billpayData.postBillPayPayeesRecord(params)\n    .then(({ data }) => data)\n    .catch((error) => {\n      throw fromHttpError(error);\n    });\n\n  /**\n   *\n   * @name BillpayModel#putPayeesRecord\n   * @type {function}\n   * @param {string} id payee id to put\n   * @param {Payee} params Any parameters for the API call\n   * @returns {Promise<module:data-bb-billpay-http-ng.PayeePutResponse,\n   *  module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Updates a payee record\n   */\n  const putPayeesRecord = (id, params) => billpayData.putBillPayPayeesRecord(id, params)\n    .then(({ data }) => data)\n    .catch((error) => {\n      throw fromHttpError(error);\n    });\n\n  /**\n   *\n   * @name BillpayModel#getPayeeRecord\n   * @type {function}\n   * @param {string} id payee id to get\n   * @param {Payee} params Any parameters for the API call\n   * @returns {Promise<module:data-bb-billpay-http-ng.PayeeGetResponse,\n   *  module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Returns a payee by id\n   */\n  const getPayeeRecord = (id, params) => billpayData.getBillPayPayeesRecord(id, params)\n    .then(({ data }) => data)\n    .catch((error) => {\n      throw fromHttpError(error);\n    });\n\n  /**\n   *\n   * @name BillpayModel#postPaymentsRecord\n   * @type {function}\n   * @param {Object} params Any parameters for the API call\n   * @returns {Promise<void, module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Creates a new batch of payments\n   */\n  const postPaymentsRecord = (params) =>\n    billpayData.postBillPayPaymentsRecord(params)\n      .catch((error) => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   *\n   * @name BillpayModel#putPaymentRecord\n   * @type {function}\n   * @param {string} id payment id to put\n   * @param {Object} params Any parameters for the API call\n   * @returns {Promise<void, module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Updates a payment record\n   */\n  const putPaymentRecord = (id, params) =>\n    billpayData.putBillPayPaymentsRecord(id, params)\n      .catch((error) => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   *\n   * @name BillpayModel#postRecurringPaymentsRecord\n   * @type {function}\n   * @param {Object} params Any parameters for the API call\n   * @returns {Promise<module:data-bb-bill-pay-http-ng.BillPayData.PutPostResponse,\n   *   module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Creates a new recurring payment\n   */\n  const postRecurringPaymentsRecord = (params) =>\n    billpayData.postBillPayPaymentsRecurringRecord(params)\n      .then(({ data }) => data)\n      .catch(error => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   *\n   * @name BillpayModel#deletePaymentRecord\n   * @type {function}\n   * @param {string} id payment id to delete\n   * @param {Object} [params] Any parameters for the API call\n   * @returns {Promise<void, module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Deletes a payment record\n   */\n  const deletePaymentRecord = (id, params) =>\n    billpayData.deleteBillPayPaymentsRecord(id, params)\n      .catch((error) => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   *\n   * @name BillpayModel#deleteRecurringPaymentRecord\n   * @type {function}\n   * @param {string} id payment id to delete\n   * @param {Object} [params] Any parameters for the API call\n   * @returns {Promise<void, module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Deletes a payment record\n   */\n  const deleteRecurringPaymentRecord = (id, params) =>\n    billpayData.deleteBillPayPaymentsRecurringRecord(id, params)\n      .catch((error) => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   * @name BillpayModel#searchPayees\n   * @type {function}\n   * @param {Object} params Any parameters for the API call\n   * @returns {Promise<Array<module:data-bb-bill-pay-http-ng.BillPayData.PayeeSearch>,\n   *   module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Returns a list of payees\n   */\n  const searchPayees = (params) => billpayData.getBillPayPayeesSearch(params)\n    .then(({ data }) => data.payees)\n    .catch(error => {\n      throw fromHttpError(error);\n    });\n\n  /**\n   *\n   * @name BillpayModel#deletePayeesRecord\n   * @type {function}\n   * @param {string} id payee id to delete\n   * @param {Object} [params] Any parameters for the API call\n   * @returns {Promise<void, module:lib-bb-model-errors.ModelError>}\n   *\n   * @description Deletes a payee record\n   */\n  const deletePayeesRecord = (id, params) =>\n    billpayData.deleteBillPayPayeesRecord(id, params)\n      .catch((error) => {\n        throw fromHttpError(error);\n      });\n\n  // electronic payee methods\n  /**\n   *\n   * @name BillpayModel#postPayeesElectronicRecord\n   * @type {function}\n   * @param {ElectronicPayeePost} params Any parameters for the API call\n   * @returns {Promise<module:data-bb-billpay-http-ng.BillPayPutPostResponse,\n   *  module:lib-bb-model-errors.ModelError>}\n   * @description Creates new electronic payee\n   */\n  const postPayeesElectronicRecord = (params) =>\n    billpayData.postBillPayPayeesElectronicRecord(params)\n      .then(({ data }) => data)\n      .catch((error) => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   *\n   * @name BillpayModel#getPayeesElectronicRecord\n   * @type {function}\n   * @param {string} id payee id to get\n   * @param {ElectronicPayee} params Any parameters for the API call\n   * @returns {Promise<module:data-bb-billpay-http-ng.PayeesElectronicGetResponse,\n   *  module:lib-bb-model-errors.ModelError>}\n   * @description Returns a payee by id\n   */\n  const getPayeesElectronicRecord = (id, params) =>\n    billpayData.getBillPayPayeesElectronicRecord(id, params)\n      .then(({ data }) => data)\n      .catch((error) => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   *\n   * @name BillpayModel#putPayeesElectronicRecord\n   * @type {function}\n   * @param {string} id payee id to put\n   * @param {Payee} params Any parameters for the API call\n   * @returns {Promise<module:data-bb-billpay-http-ng.BillPayPutPostResponse,\n   *  module:lib-bb-model-errors.ModelError>}\n   * @description Updates a payee record\n   */\n  const putPayeesElectronicRecord = (id, params) =>\n    billpayData.putBillPayPayeesElectronicRecord(id, params)\n      .then(({ data }) => data)\n      .catch((error) => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   *\n   * @name BillpayModel#deletePayeesElectronicRecord\n   * @type {function}\n   * @param {string} id payee id to delete\n   * @param {Object} [params] Any parameters for the API call\n   * @returns {Promise<void, module:lib-bb-model-errors.ModelError>}\n   * @description Deletes a payee record\n   */\n  const deletePayeesElectronicRecord = (id, params) =>\n    billpayData.deleteBillPayPayeesElectronicRecord(id, params)\n      .catch((error) => {\n        throw fromHttpError(error);\n      });\n\n\n  /**\n   * @name BillpayModel\n   * @type {Object}\n   *\n   * @description Billpay model service\n   */\n  return {\n    getPayeesSummary,\n    getAccounts,\n    getPayments,\n    getPayment,\n    postPaymentsRecord,\n    postRecurringPaymentsRecord,\n    putPaymentRecord,\n    deletePaymentRecord,\n    deleteRecurringPaymentRecord,\n    searchPayees,\n    postPayeesElectronicRecord,\n    getPayeesElectronicRecord,\n    putPayeesElectronicRecord,\n    deletePayeesElectronicRecord,\n\n    // TODO: old methods to be removed after payees/manual endpoints are complete\n    getPayeeRecord,\n    postPayeesRecord,\n    putPayeesRecord,\n    deletePayeesRecord,\n  };\n}\n\n/**\n * Payment Account type definition\n * @typedef {Object} PaymentAccount\n * @property {string} accountNumber - Account number\n * @property {string} accountNickName - Account nickname\n * @property {number} balance - Account balance\n */\n\n\n/**\n * Payment services object type definition\n * @typedef {Object} PaymentServices\n * @property {string} cutoffTime - The time after which this payment service cannot be used\n * @property {string} earliestPaymentDate - The date that the payment will be made\n *  (providing it is made before the cutoff time)\n * @property {string} nextPaymentDate - The day after the earliest payment date\n * @property {string} paymentServiceType - The service type (examples include EXPEDITED_PAYMENT\n *  & REGULAR_PAYMENT)\n * @property {number} deliveryDays - The number of days for a delivery\n * @property {number} paymentFee - The fee for using this service (applies to expedited)\n */\n\n/**\n * Payee Summary type definition\n * @typedef {Object} PayeeSummary\n * @property {string}  id - ID of the payee\n * @property {string}  name - Name of the payee\n * @property {string}  nickName - Nickname of the payee\n * @property {object}  nextPayment - Information on the next payment\n * @property {number}  nextPayment.paymentAmount - Next payment amount\n * @property {string}  nextPayment.paymentDate - Next payment date\n * @property {boolean} nextPayment.recurring - Whether or not the next payment is a recurring one\n * @property {PaymentServices[]}  [paymentServices] - Optional array of possible payment services\n * @property {object}  ebill - Information about the ebill capabilities of the payee\n * @property {boolean} ebill.capable - Whether this payee is capable of sing ebills\n * @property {boolean} ebill.enabled - Whether ebills are enabled on this payee\n * @property {object}  ebill.latestBill - The latest ebill\n * @property {number}  ebill.latestBill.paymentAmount - The amount of the latest ebill\n * @property {string}  ebill.latestBill.paymentDate - The payment date of the latest ebill\n * @property {string}  ebill.latestBill.url - The URL of the latest ebill\n */\n\n\n/**\n * Payee type definition\n * @typedef {Object} Payee\n * @property {string} [id]\n * @property {string} name - Payee name\n * @property {string} nickName - Payee nickname\n * @property {string} phoneNumber - Payee phone number\n * @property {object} address - Payee complete address\n * @property {string} address.address1 - Payee address1\n * @property {string} address.address2 - Payee address2\n * @property {string} address.city - Payee city\n * @property {string} address.state - Payee state\n * @property {string} address.postalCode - Payee postal code\n * @property {string} accountNumber - Payee nickname\n * @property {string} category - Payee nickname\n */\n\n/**\n * Error type definition\n * @typedef {Object} Error\n * @property {string} message\n * @property {string} key\n * @property {object} context\n */\n\n/**\n * Payment type definition\n * @typedef {Object} Payment\n * @property {string} [paymentMemo]\n * @property {object} [paymentAccount]\n * @property {string} [payeeID]\n * @property {float} [paymentAmount]\n * @property {string} [paymentDate]\n * @property {Array<Error>} [errors]\n */\n\n/**\n * Payee post response type definition\n * @typedef {Object} PayeePostResponse\n * @property {String} id id of the newly created payee\n */\n\n/**\n * Payee post response type definition\n * @typedef {Object} PayeePutResponse\n * @property {String} id id of the updated payee\n */\n\n/**\n * Electronic Payee post data type definition\n * @typedef {Object} ElectronicPayee\n * @property {string} id - Electronic payee name\n * @property {string} name - Electronic payee name\n * @property {string} [nickName] - Electronic payee nickname\n * @property {string} accountNumber - Electronic payee account number\n */\n\n/**\n * Electronic Payee post data type definition\n * @typedef {Object} ElectronicPayeePost\n * @property {string} name - Electronic payee name\n * @property {string} merchantID - Merchant ID\n * @property {string} accountNumber - Electronic payee account number\n * @property {string} [zipCode] - Electronic payee zip code\n * @property {string} [nickName] - Electronic payee nickname\n */\n\n/**\n * Electronic Payee type definition\n * @typedef {Object} ElectronicPayeePut\n * @property {string} name - Electronic payee name\n * @property {string} accountNumber - Electronic payee account number\n * @property {string} modifyPendingPayments - Electronic payee nickname\n * @property {string} [nickName] - Electronic payee nickname\n */\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-billpay-ng/scripts/billpay.js"],"sourceRoot":""}