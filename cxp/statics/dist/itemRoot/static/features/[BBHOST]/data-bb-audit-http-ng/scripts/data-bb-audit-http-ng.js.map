{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap bfe69eac59f41b2a94f1","webpack:///./fe-dist/http-ng/data-bb-audit-http-ng/model.xml","webpack:///./fe-dist/http-ng/data-bb-audit-http-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///./fe-dist/http-ng/data-bb-audit-http-ng/scripts/data-bb-audit-http.js"],"names":["auditDataModuleKey","auditDataKey","module","provider","config","baseUri","setBaseUri","$get","name","conf","httpClient","serializeParams","version","definedTypes","parse","res","data","headers","status","statusText","postAuditMessagesRecord","url","method","then","catch","err","getAuditLogMessages","params","getAuditLogEventCategories","schemas"],"mappings":"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","file":"data-bb-audit-http-ng/scripts/data-bb-audit-http-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-bb-audit-http-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-bb-audit-http-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"data-bb-audit-http-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bfe69eac59f41b2a94f1","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fe-dist/http-ng/data-bb-audit-http-ng/model.xml\n// module id = 0\n// module chunks = 0","/* eslint-disable */\n/**\n * @module data-bb-audit-http-ng\n *\n * @description A data module for accessing the Audit REST API.\n *\n * @returns {String} `data-bb-audit-http-ng`\n * @example\n * import auditDataModuleKey, {\n *   auditDataKey,\n * } from 'data-bb-audit-http-ng';\n */\n\nimport ng from 'vendor-bb-angular';\n\nimport auditData from './data-bb-audit-http';\n\nconst auditDataModuleKey = 'data-bb-audit-http-ng';\n/**\n * @name auditDataKey\n * @type {string}\n * @description Angular dependency injection key for the AuditData service\n */\nexport const auditDataKey = 'data-bb-audit-http-ng:auditData';\n/**\n * @name default\n * @type {string}\n * @description Angular dependency injection module key\n */\nexport default ng\n  .module(auditDataModuleKey, [])\n  \n  /**\n   * @constructor AuditData\n   * @type {object}\n   *\n   * @description Public api for data-bb-audit-http-ng service\n   *\n   */\n  .provider(auditDataKey, [() => {\n    const config = {\n      baseUri: '/',\n    };\n\n    /**\n     * @name AuditDataProvider\n     * @type {object}\n     * @ngkey data-bb-audit-http-ng:auditDataProvider\n     * @description\n     * Data service that can be configured with custom base URI.\n     *\n     * @example\n     * // Configuring in an angular app:\n     * angular.module(...)\n     *   .config(['data-bb-audit-http-ng:auditDataProvider',\n     *     (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *       });\n     *\n     * // Configuring With config-bb-providers-ng:\n     * export default [\n     *   ['data-bb-audit-http-ng:auditDataProvider', (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *   }]\n     * ];\n     */\n    return {\n      /**\n       * @name AuditDataProvider#setBaseUri\n       * @type {function}\n       * @param {string} baseUri Base URI which will be the prefix for all HTTP requests\n       */\n      setBaseUri: (baseUri) => {\n        config.baseUri = baseUri;\n      },\n\n      /**\n       * @name AuditDataProvider#$get\n       * @type {function}\n       * @return {object} An instance of the service\n       */\n      $get: [\n        '$http',\n        '$httpParamSerializer',\n        /* into */\n       auditData(config),\n      ],\n    };\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-audit-http-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0","/* eslint-disable */\nexport default (conf) => (httpClient, serializeParams) => {\n  // Base param constants\n  const baseUri = conf.baseUri || '';\n\n  const version = 'v2';\n\n\n  /**\n   * The root defined types from the RAML.\n   * @private\n   */\n  const definedTypes = {};\n\n  \n  definedTypes['AuditData.AuditLogGetResponseBody'] = {\"properties\":{\"auditMessages\":{\"type\":\"array\",\"items\":{\"properties\":{\"eventCategory\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":35,\"required\":true},\"objectType\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":35,\"required\":true},\"eventAction\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":35,\"required\":true},\"username\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"required\":true},\"userId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"timestamp\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"eventDescription\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":false},\"serviceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":false},\"messageSetId\":{\"type\":\"string\",\"minLength\":36,\"maxLength\":36,\"required\":false},\"eventData\":{\"type\":\"array\",\"items\":{\"properties\":{\"key\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"required\":true},\"value\":{\"type\":\"string\",\"maxLength\":255,\"required\":false}}},\"maxItems\":50,\"required\":false}}},\"required\":false},\"totalCount\":{\"type\":\"number\",\"required\":false}}};\n  \n  definedTypes['AuditData.AuditMessagesPostRequestBody'] = {\"properties\":{\"auditMessages\":{\"type\":\"array\",\"items\":{\"properties\":{\"eventCategory\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":35,\"required\":true},\"objectType\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":35,\"required\":true},\"eventAction\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":35,\"required\":true},\"username\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"required\":true},\"userId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"timestamp\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"eventDescription\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":false},\"serviceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":false},\"messageSetId\":{\"type\":\"string\",\"minLength\":36,\"maxLength\":36,\"required\":false},\"eventData\":{\"type\":\"array\",\"items\":{\"properties\":{\"key\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"required\":true},\"value\":{\"type\":\"string\",\"maxLength\":255,\"required\":false}}},\"maxItems\":50,\"required\":false}}},\"minItems\":1,\"maxItems\":50,\"required\":true}}};\n  \n  definedTypes['AuditData.AuditMessagesPostResponseBody'] = {\"properties\":{\"message\":{\"type\":\"string\",\"required\":false},\"warnings\":{\"type\":\"array\",\"items\":{\"properties\":{\"message\":{\"type\":\"string\",\"required\":false},\"key\":{\"type\":\"string\",\"required\":false},\"context\":{\"type\":\"object\",\"properties\":{},\"required\":false}}},\"required\":true}}};\n  \n\n  \n  /**\n   * @typedef AuditData.AuditLogGetResponseBody\n   * @type {Object}\n   * @property {?Array.<AuditMessage>} auditMessages\n   * @property {?Number} totalCount Total count of audit messages matching the query\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AuditData.AuditMessagesPostRequestBody\n   * @type {Object}\n   * @property {Array.<AuditMessage>} auditMessages\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AuditData.AuditMessagesPostResponseBody\n   * @type {Object}\n   * @property {?String} message Any further information\n   * @property {Array.<ErrorItem>} warnings Detailed field warnings/errors\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n\n  /*\n   * @name parse\n   * @type {Function}\n   * @private\n   * @description Should be overwritten by transformResponse on a project level\n   */\n  function parse(res) {\n    return {\n      data: res.data,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n    };\n  }\n\n  \n  /**\n   * @name AuditData#postAuditMessagesRecord\n   * @type {Function}\n   * @description Create new audit log entry that contains one or more audit messages. Single string values that are longer than the\nspecified limits will be truncated.\n\n   \n   * @param {AuditData.AuditMessagesPostRequestBody} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AuditData.AuditMessagesPostResponseBody} on success \n   *\n   * @example\n   * auditData\n   *  .postAuditMessagesRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAuditMessagesRecord(data, headers) {\n    const url = `${baseUri}${version}/audit-messages`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AuditData#getAuditLogMessages\n   * @type {Function}\n   * @description Get audit log messages in the system. Supports filtering and pagination of retrieved audit messages based on the provided filter and pagination parameters.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.startDate Restrict results to audit logs with a timestamp of, or after, 00:00 on this date, UTC. Eg: 2017-06-28.\n     \n   * @param {?string} params.endDate Restrict results to audit logs with a timestamp of, or before, 23:59 on this date, UTC. Eg: 2017-07-28.\n     \n   * @param {?string} params.eventCategories Restrict results to audit logs with an event category matching any of the supplied event categories, comma separated list. Eg: Authentication,Payments.\n     \n   * @param {?string} params.objectType Restrict results to audit logs with an event object type matching the supplied object type. Eg: Login.\n     \n   * @param {?string} params.eventAction Restrict results to audit logs with an event action matching the supplied value. Eg: Success.\n     \n   * @param {?string} params.usernames Restrict results to audit logs with a username matching any of the supplied usernames, comma separated list. Eg: User1,User2.\n     \n   * @param {?string} params.userId Restrict results to audit logs with a user ID matching the supplied value. Eg: f8501d76-a86b-442a-a4da-43119ce5ecd4.\n     \n   * @param {?string} params.legalEntityIds Restrict results to audit logs with a legalEntityId matching any of the supplied legalEntityIds, comma separated list. Eg: 04d6b7b6-bc28-4fbe-8aec-58f954348da2,87418545-59db-42e4-b671-e5cf8c341ed0.\n     \n   * @param {?string} params.serviceAgreementId Restrict results to audit logs with a service agreement ID matching the supplied value. Eg: 87418545-59db-42e4-b671-e5cf8c341ed0.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?number} params.size Limit the number of elements on the response. Eg: 80. (defaults to 25)\n     \n   * @param {?string} params.orderBy Order by field: \"eventCategory\", \"objectType\", \"eventAction\", \"username\", \"userId\", \"timestamp\", \"eventDescription\", \"legalEntityId\", \"serviceAgreementId\", \"messageSetId\", \"eventData.value\".\n     \n   * @param {?string} params.direction Direction. (defaults to DESC)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AuditData.AuditLogGetResponseBody} on success \n   *\n   * @example\n   * auditData\n   *  .getAuditLogMessages(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAuditLogMessages(params, headers) {\n    const url = `${baseUri}${version}/audit-log/messages`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AuditData#getAuditLogEventCategories\n   * @type {Function}\n   * @description Gets the distinct event categories, object types, and event actions.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * auditData\n   *  .getAuditLogEventCategories(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAuditLogEventCategories(params, headers) {\n    const url = `${baseUri}${version}/audit-log/event-categories`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n\n  \n\n  \n  /**\n   * @description\n   * Schema data. Keys of the object are names of the POST and PUT methods\n   *\n   * Note: The schema is not strictly a JSON schema. It is a whitelisted set of\n   * keys for each object property. The keys that are exposed are meant for validation\n   * purposes.\n   *\n   * The full list of *possible* keys for each property is:\n   * type, minimum, maximum, minLength, maxLength, pattern, enum, format, default,\n   * properties, items, minItems, maxItems, uniqueItems and required.\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html for more details\n   * on the meaning of these keys.\n   *\n   * The \"required\" array from JSON schema is tranformed into a \"required\" boolean\n   * on each property. This is for ease of use.\n   *\n   * @name AuditData#schemas\n   * @type {Object}\n   */\n  const schemas = {};\n\n    \n  /**\n   * @description\n   * An object describing the JSON schema for the postAuditMessagesRecord method\n   *\n   * @name AuditData#schemas.postAuditMessagesRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"auditMessages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"eventCategory\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 35,\n            \"required\": true\n          },\n          \"objectType\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 35,\n            \"required\": true\n          },\n          \"eventAction\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 35,\n            \"required\": true\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 64,\n            \"required\": true\n          },\n          \"userId\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 36,\n            \"required\": true\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"required\": true\n          },\n          \"eventDescription\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 255,\n            \"required\": true\n          },\n          \"legalEntityId\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 36,\n            \"required\": false\n          },\n          \"serviceAgreementId\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 36,\n            \"required\": false\n          },\n          \"messageSetId\": {\n            \"type\": \"string\",\n            \"minLength\": 36,\n            \"maxLength\": 36,\n            \"required\": false\n          },\n          \"eventData\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"maxLength\": 255,\n                  \"required\": true\n                },\n                \"value\": {\n                  \"type\": \"string\",\n                  \"maxLength\": 255,\n                  \"required\": false\n                }\n              }\n            },\n            \"maxItems\": 50,\n            \"required\": false\n          }\n        }\n      },\n      \"minItems\": 1,\n      \"maxItems\": 50,\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAuditMessagesRecord = definedTypes['AuditData.AuditMessagesPostRequestBody'];\n      \n\n  /**\n   * @typedef Response\n   * @type {Object}\n   * @property {Object} data See method descriptions for possible return types\n   * @property {Function} headers Getter headers function\n   * @property {Number} status HTTP status code of the response.\n   * @property {String} statusText HTTP status text of the response.\n   */\n\n  return ({\n    \n    postAuditMessagesRecord,\n    \n    getAuditLogMessages,\n    \n    getAuditLogEventCategories,\n    \n    \n    schemas,\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-audit-http-ng/scripts/data-bb-audit-http.js"],"sourceRoot":""}