{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d55e1b15032dbd9fb9d3","webpack:///./lib-bb-iban/model.xml","webpack:///./lib-bb-iban/scripts/index.js","webpack:///./lib-bb-iban/scripts/countrySpec.js","webpack:///./lib-bb-iban/scripts/helpers.js","webpack:///./lib-bb-iban/scripts/bigIntegerMod.js"],"names":["isValidIBAN","iban","spec","compactIBAN","toUpperCase","error","len","length","bban","test","slice","isValidBBAN","formatByGroups","str","symbol","groupLen","countries","AD","example","name","AE","AL","AO","AT","AZ","BA","BE","BF","BG","BH","BI","BJ","BR","BY","CF","CG","CH","CI","CM","CR","CV","CY","CZ","DE","DJ","DK","DO","DZ","EE","EG","ES","FI","FO","FR","GA","GB","GE","GI","GL","GQ","GR","GT","GW","HN","HR","HU","IE","IL","IQ","IR","IS","IT","JO","KM","KW","KZ","LB","LC","LI","LT","LU","LV","MA","MC","MD","ME","MG","MK","ML","MR","MT","MU","MZ","NE","NI","NL","NO","PK","PL","PS","PT","QA","RO","RS","SA","SC","SE","SI","SK","SM","SN","ST","SV","TD","TG","TL","TN","TR","UA","VG","XK","countryCode","hasOwnProperty","call","Error","A","charCodeAt","Z","PATTERNS","N","C","cachedBbanRegexp","prepareBbanRegexp","bbanFormat","pattern","match","reduce","prevPattern","block","quantity","parseInt","code","RegExp","rearrangeIban","compact","replace","bbanRegexp","convertIban","split","result","char","num","String","alreadyExploded","explodeString","groups","Math","ceil","chunks","i","push","substr","join","dividend","divisor","D","remainder"],"mappings":"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","file":"lib-bb-iban/scripts/lib-bb-iban.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-bb-iban\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-bb-iban\"] = factory();\n\telse\n\t\troot[\"lib-bb-iban\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d55e1b15032dbd9fb9d3","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-bb-iban/model.xml\n// module id = 0\n// module chunks = 8","/**\n * @module lib-bb-iban\n * @description IBAN structure validation library\n */\n\n// References:\n// https://www.swift.com/standards/data-standards/iban\n// https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\nimport countrySpecification from './countrySpec';\nimport { compact, convertIban, bbanRegexp, explodeString } from './helpers';\nimport bigIntMod from './bigIntegerMod';\n\n/**\n * Validates IBAN structure defined in ISO 13616-1 and ISO/IEC 7064 (MOD97-10).\n *\n * @name isValidIBAN\n * @type {function}\n * @param {string} iban International bank account number.\n * @returns {boolean}\n */\nexport const isValidIBAN = (iban) => {\n  if (typeof iban !== 'string') {\n    return false;\n  }\n\n  let spec;\n  const compactIBAN = compact(iban.toUpperCase());\n\n  try {\n    spec = countrySpecification(compactIBAN);\n  } catch (error) {\n    return false;\n  }\n\n  return spec.len === compactIBAN.length &&\n    bbanRegexp(spec.bban).test(compactIBAN.slice(4)) &&\n    bigIntMod(convertIban(compactIBAN), 97) === 1;\n};\n\n/**\n * Validates BBAN structure defined in ISO 13616-1.\n *\n * @name isValidBBAN\n * @type {function}\n * @param {string} iban International bank account number.\n * @returns {boolean}\n */\nexport const isValidBBAN = (iban) => {\n  if (typeof iban !== 'string') {\n    return false;\n  }\n\n  let spec;\n  const compactIBAN = compact(iban);\n\n  try {\n    spec = countrySpecification(compactIBAN);\n  } catch (error) {\n    return false;\n  }\n\n  // Remove country code and check digits\n  const bban = compactIBAN.slice(4);\n\n  return bban.length === spec.len - 4 &&\n    bbanRegexp(spec.bban).test(bban);\n};\n\n/**\n * @name formatByGroups\n * @type {function}\n *\n * @description\n * Splits the string up with spaces by groups of 4.\n * \"IE47FNLL45049097007367\" => \"IE47 FNLL 4504 9097 0073 67\"\n *\n * @param str {string}\n * @param symbol {string}\n * @param groupLen {number}\n * @return {string}\n */\nexport const formatByGroups = (str, symbol, groupLen) =>\n  explodeString(str, symbol, groupLen);\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-iban/scripts/index.js","/**\n * Collection of countries that are compliant with the ISO 13616 standard.\n * BBAN field is the representation of the format accepted by that country.\n *\n * @inner\n * @type {object}\n */\nconst countries = {\n  AD: {\n    bban: '08N12C',\n    example: 'AD1200012030200359100100',\n    len: 24,\n    name: 'Andorra',\n  },\n  AE: {\n    bban: '03N16N',\n    example: 'AE260211000000230064016',\n    len: 23,\n    name: 'United Arab Emirates',\n  },\n  AL: {\n    bban: '08N16C',\n    example: 'AL47212110090000000235698741',\n    len: 28,\n    name: 'Albania',\n  },\n  AO: {\n    bban: '21N',\n    example: 'AO06000600000100037131174',\n    len: 25,\n    name: 'Angola',\n  },\n  AT: {\n    bban: '16N',\n    example: 'AT611904300234573201',\n    len: 20,\n    name: 'Austria',\n  },\n  AZ: {\n    bban: '04C20N',\n    example: 'AZ21NABZ00000000137010001944',\n    len: 28,\n    name: 'Azerbaijan',\n  },\n  BA: {\n    bban: '16N',\n    example: 'BA391290079401028494',\n    len: 20,\n    name: 'Bosnia and Herzegovina',\n  },\n  BE: {\n    bban: '12N',\n    example: 'BE68539007547034',\n    len: 16,\n    name: 'Belgium',\n  },\n  BF: {\n    bban: '23N',\n    example: 'BF1030134020015400945000643',\n    len: 27,\n    name: 'Burkina Faso',\n  },\n  BG: {\n    bban: '04A06N08C',\n    example: 'BG80BNBG96611020345678',\n    len: 22,\n    name: 'Bulgaria',\n  },\n  BH: {\n    bban: '04A14C',\n    example: 'BH29BMAG1299123456BH00',\n    len: 22,\n    name: 'Bahrain',\n  },\n  BI: {\n    bban: '12N',\n    example: 'BI43201011067444',\n    len: 16,\n    name: 'Burundi',\n  },\n  BJ: {\n    bban: '01A23N',\n    example: 'BJ11B00610100400271101192591',\n    len: 28,\n    name: 'Benin',\n  },\n  BR: {\n    bban: '23N01A01C',\n    example: 'BR9700360305000010009795493P1',\n    len: 29,\n    name: 'Brazil',\n  },\n  BY: {\n    bban: '04C20N',\n    example: 'BY86AKBB10100000002966000000',\n    len: 28,\n    name: 'Belarus',\n  },\n  CF: {\n    bban: '23C',\n    example: 'CF4220001000010120069700160',\n    len: 27,\n    name: 'Central African Republic',\n  },\n  CG: {\n    bban: '23C',\n    example: 'CG5230011000202151234567890',\n    len: 27,\n    name: 'Congo',\n  },\n  CH: {\n    bban: '05N12C',\n    example: 'CH9300762011623852957',\n    len: 21,\n    name: 'Switzerland',\n  },\n  CI: {\n    bban: '01A23N',\n    example: 'CI05A00060174100178530011852',\n    len: 28,\n    name: 'Ivory Coast',\n  },\n  CM: {\n    bban: '23N',\n    example: 'CM2110003001000500000605306',\n    len: 27,\n    name: 'Cameroon',\n  },\n  CR: {\n    bban: '17N',\n    example: 'CR0515202001026284066',\n    len: 21,\n    name: 'Costa Rica',\n  },\n  CV: {\n    bban: '21N',\n    example: 'CV64000300004547069110176',\n    len: 25,\n    name: 'Cape Verde',\n  },\n  CY: {\n    bban: '08N16C',\n    example: 'CY17002001280000001200527600',\n    len: 28,\n    name: 'Cyprus',\n  },\n  CZ: {\n    bban: '20N',\n    example: 'CZ6508000000192000145399',\n    len: 24,\n    name: 'Czech Republic',\n  },\n  DE: {\n    bban: '18N',\n    example: 'DE89370400440532013000',\n    len: 22,\n    name: 'Germany',\n  },\n  DJ: {\n    bban: '23C',\n    example: 'DJ2110002010010409943020008',\n    len: 27,\n    name: 'Djibouti',\n  },\n  DK: {\n    bban: '14N',\n    example: 'DK5000400440116243',\n    len: 18,\n    name: 'Denmark',\n  },\n  DO: {\n    bban: '04A20N',\n    example: 'DO28BAGR00000001212453611324',\n    len: 28,\n    name: 'Dominican Republic',\n  },\n  DZ: {\n    bban: '20N',\n    example: 'DZ4000400174401001050486',\n    len: 24,\n    name: 'Algeria',\n  },\n  EE: {\n    bban: '16N',\n    example: 'EE382200221020145685',\n    len: 20,\n    name: 'Estonia',\n  },\n  EG: {\n    bban: '23C',\n    example: 'EG1100006001880800100014553',\n    len: 27,\n    name: 'Egypt',\n  },\n  ES: {\n    bban: '20N',\n    example: 'ES9121000418450200051332',\n    len: 24,\n    name: 'Spain',\n  },\n  FI: {\n    bban: '14N',\n    example: 'FI2112345600000785',\n    len: 18,\n    name: 'Finland',\n  },\n  FO: {\n    bban: '14N',\n    example: 'FO1464600009692713',\n    len: 18,\n    name: 'Faroe Islands',\n  },\n  FR: {\n    bban: '10N11C02N',\n    example: 'FR7630007000110009970004942',\n    len: 27,\n    name: 'France',\n  },\n  GA: {\n    bban: '23C',\n    example: 'GA2140002000055602673300064',\n    len: 27,\n    name: 'Gabon',\n  },\n  GB: {\n    bban: '04A14N',\n    example: 'GB29NWBK60161331926819',\n    len: 22,\n    name: 'United Kingdom',\n  },\n  GE: {\n    bban: '02C16N',\n    example: 'GE29NB0000000101904917',\n    len: 22,\n    name: 'Georgia',\n  },\n  GI: {\n    bban: '04A15C',\n    example: 'GI75NWBK000000007099453',\n    len: 23,\n    name: 'Gibraltar',\n  },\n  GL: {\n    bban: '14N',\n    example: 'GL8964710001000206',\n    len: 18,\n    name: 'Greenland',\n  },\n  GQ: {\n    bban: '23C',\n    example: 'GQ7050002001003715228190196',\n    len: 27,\n    name: 'Equatorial Guinea',\n  },\n  GR: {\n    bban: '07N16C',\n    example: 'GR1601101250000000012300695',\n    len: 27,\n    name: 'Greece',\n  },\n  GT: {\n    bban: '04C20C',\n    example: 'GT82TRAJ01020000001210029690',\n    len: 28,\n    name: 'Guatemala',\n  },\n  GW: {\n    bban: '21C',\n    example: 'GW04GW1430010181800637601',\n    len: 25,\n    name: 'Guinea-Bissau',\n  },\n  HN: {\n    bban: '24C',\n    example: 'HN54PISA00000000000000123124',\n    len: 28,\n    name: 'Honduras',\n  },\n  HR: {\n    bban: '17N',\n    example: 'HR1210010051863000160',\n    len: 21,\n    name: 'Croatia',\n  },\n  HU: {\n    bban: '24N',\n    example: 'HU42117730161111101800000000',\n    len: 28,\n    name: 'Hungary',\n  },\n  IE: {\n    bban: '04C14N',\n    example: 'IE29AIBK93115212345678',\n    len: 22,\n    name: 'Ireland',\n  },\n  IL: {\n    bban: '19N',\n    example: 'IL620108000000099999999',\n    len: 23,\n    name: 'Israel',\n  },\n  IQ: {\n    bban: '19C',\n    example: 'IQ20CBIQ861800101010500',\n    len: 23,\n    name: 'Iraq',\n  },\n  IR: {\n    bban: '22N',\n    example: 'IR580540105180021273113007',\n    len: 26,\n    name: 'Iran',\n  },\n  IS: {\n    bban: '22N',\n    example: 'IS140159260076545510730339',\n    len: 26,\n    name: 'Iceland',\n  },\n  IT: {\n    bban: '01A10N12C',\n    example: 'IT60X0542811101000000123456',\n    len: 27,\n    name: 'Italy',\n  },\n  JO: {\n    bban: '04A22N',\n    example: 'JO94CBJO0010000000000131000302',\n    len: 30,\n    name: 'Jordan',\n  },\n  KM: {\n    bban: '23C',\n    example: 'KM4600005000010010904400137',\n    len: 27,\n    name: 'Comoros',\n  },\n  KW: {\n    bban: '04A22C',\n    example: 'KW74NBOK0000000000001000372151',\n    len: 30,\n    name: 'Kuwait',\n  },\n  KZ: {\n    bban: '03N13C',\n    example: 'KZ176010251000042993',\n    len: 20,\n    name: 'Kazakhstan',\n  },\n  LB: {\n    bban: '04N20C',\n    example: 'LB30099900000001001925579115',\n    len: 28,\n    name: 'Lebanon',\n  },\n  LC: {\n    bban: '28C',\n    example: 'LC14BOSL123456789012345678901234',\n    len: 32,\n    name: 'Saint Lucia',\n  },\n  LI: {\n    bban: '05N12C',\n    example: 'LI21088100002324013AA',\n    len: 21,\n    name: 'Liechtenstein',\n  },\n  LT: {\n    bban: '16N',\n    example: 'LT121000011101001000',\n    len: 20,\n    name: 'Lithuania',\n  },\n  LU: {\n    bban: '03N13C',\n    example: 'LU280019400644750000',\n    len: 20,\n    name: 'Luxembourg',\n  },\n  LV: {\n    bban: '04A13C',\n    example: 'LV80BANK0000435195001',\n    len: 21,\n    name: 'Latvia',\n  },\n  MA: {\n    bban: '24C',\n    example: 'MA64011519000001205000534921',\n    len: 28,\n    name: 'Morocco',\n  },\n  MC: {\n    bban: '10N11C02N',\n    example: 'MC5813488000010051108001292',\n    len: 27,\n    name: 'Monaco',\n  },\n  MD: {\n    bban: '02C18C',\n    example: 'MD24AG000225100013104168',\n    len: 24,\n    name: 'Moldova',\n  },\n  ME: {\n    bban: '18N',\n    example: 'ME25505000012345678951',\n    len: 22,\n    name: 'Montenegro',\n  },\n  MG: {\n    bban: '23N',\n    example: 'MG4600005030010101914016056',\n    len: 27,\n    name: 'Madagascar',\n  },\n  MK: {\n    bban: '03N10C02N',\n    example: 'MK07300000000042425',\n    len: 19,\n    name: 'Macedonia',\n  },\n  ML: {\n    bban: '01A23N',\n    example: 'ML03D00890170001002120000447',\n    len: 28,\n    name: 'Mali',\n  },\n  MR: {\n    bban: '23N',\n    example: 'MR1300012000010000002037372',\n    len: 27,\n    name: 'Mauritania',\n  },\n  MT: {\n    bban: '04A05N18C',\n    example: 'MT84MALT011000012345MTLCAST001S',\n    len: 31,\n    name: 'Malta',\n  },\n  MU: {\n    bban: '04A19N03A',\n    example: 'MU17BOMM0101101030300200000MUR',\n    len: 30,\n    name: 'Mauritius',\n  },\n  MZ: {\n    bban: '21N',\n    example: 'MZ59000100000011834194157',\n    len: 25,\n    name: 'Mozambique',\n  },\n  NE: {\n    bban: '24C',\n    example: 'NE58NE0380100100130305000268',\n    len: 28,\n    name: 'Niger',\n  },\n  NI: {\n    bban: '28C',\n    example: 'NI92BAMC000000000000000003123123',\n    len: 32,\n    name: 'Nicaragua',\n  },\n  NL: {\n    bban: '04A10N',\n    example: 'NL91ABNA0417164300',\n    len: 18,\n    name: 'Netherlands',\n  },\n  NO: {\n    bban: '11N',\n    example: 'NO9386011117947',\n    len: 15,\n    name: 'Norway',\n  },\n  PK: {\n    bban: '04C16N',\n    example: 'PK24SCBL0000001171495101',\n    len: 24,\n    name: 'Pakistan',\n  },\n  PL: {\n    bban: '24N',\n    example: 'PL27114020040000300201355387',\n    len: 28,\n    name: 'Poland',\n  },\n  PS: {\n    bban: '04C21N',\n    example: 'PS92PALS000000000400123456702',\n    len: 29,\n    name: 'Palestinian territories',\n  },\n  PT: {\n    bban: '21N',\n    example: 'PT50000200000163099310355',\n    len: 25,\n    name: 'Portugal',\n  },\n  QA: {\n    bban: '04A21C',\n    example: 'QA58DOHB00001234567890ABCDEFG',\n    len: 29,\n    name: 'Qatar',\n  },\n  RO: {\n    bban: '04A16C',\n    example: 'RO49AAAA1B31007593840000',\n    len: 24,\n    name: 'Romania',\n  },\n  RS: {\n    bban: '18N',\n    example: 'RS35260005601001611379',\n    len: 22,\n    name: 'Serbia',\n  },\n  SA: {\n    bban: '02N18C',\n    example: 'SA0380000000608010167519',\n    len: 24,\n    name: 'Saudi Arabia',\n  },\n  SC: {\n    bban: '27C',\n    example: 'SC52BAHL01031234567890123456USD',\n    len: 31,\n    name: 'Seychelles',\n  },\n  SE: {\n    bban: '20N',\n    example: 'SE3550000000054910000003',\n    len: 24,\n    name: 'Sweden',\n  },\n  SI: {\n    bban: '15N',\n    example: 'SI56191000000123438',\n    len: 19,\n    name: 'Slovenia',\n  },\n  SK: {\n    bban: '20N',\n    example: 'SK3112000000198742637541',\n    len: 24,\n    name: 'Slovakia',\n  },\n  SM: {\n    bban: '01A10N12C',\n    example: 'SM86U0322509800000000270100',\n    len: 27,\n    name: 'San Marino',\n  },\n  SN: {\n    bban: '01A23N',\n    example: 'SN12K00100152000025690007542',\n    len: 28,\n    name: 'Senegal',\n  },\n  ST: {\n    bban: '21C',\n    example: 'ST23000200000289355710148',\n    len: 25,\n    name: 'Sao Tome and Principe',\n  },\n  SV: {\n    bban: '24C',\n    example: 'SV43ACAT00000000000000123123',\n    len: 28,\n    name: 'El Salvador',\n  },\n  TD: {\n    bban: '23C',\n    example: 'TD8960002000010271091600153',\n    len: 27,\n    name: 'Chad',\n  },\n  TG: {\n    bban: '24C',\n    example: 'TG53TG0090604310346500400070',\n    len: 28,\n    name: 'Togo',\n  },\n  TL: {\n    bban: '19N',\n    example: 'TL380080012345678910157',\n    len: 23,\n    name: 'East Timor',\n  },\n  TN: {\n    bban: '20N',\n    example: 'TN5914207207100707129648',\n    len: 24,\n    name: 'Tunisia',\n  },\n  TR: {\n    bban: '05N17C',\n    example: 'TR330006100519786457841326',\n    len: 26,\n    name: 'Turkey',\n  },\n  UA: {\n    bban: '06N19C',\n    example: 'UA573543470006762462054925026',\n    len: 29,\n    name: 'Ukraine',\n  },\n  VG: {\n    bban: '04C16N',\n    example: 'VG96VPVG0000012345678901',\n    len: 24,\n    name: 'Virgin Islands, British',\n  },\n  XK: {\n    bban: '04N10N02N',\n    example: 'XK051212012345678906',\n    len: 20,\n    name: 'Kosovo',\n  },\n};\n\n/**\n * Given an iban returns that country specification\n *\n * @type {function}\n * @inner\n * @throws {Error} If Country code is not defined\n * @param {string} iban A valid IBAN number\n * @return {object} Country specification\n */\nexport default (iban) => {\n  const countryCode = iban.slice(0, 2);\n\n  if (!{}.hasOwnProperty.call(countries, countryCode)) {\n    throw new Error(`Country code ${countryCode} is not supported`);\n  }\n\n  return countries[countryCode];\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-iban/scripts/countrySpec.js","const A = 'A'.charCodeAt(0);\nconst Z = 'Z'.charCodeAt(0);\n\nconst PATTERNS = {\n  A: 'A-Z',\n  N: '0-9',\n  C: '0-9A-Z',\n};\n\n// Stores bban validation regular expressions\nconst cachedBbanRegexp = {};\n\n// Generates BBAN format as a regular expression and cache it\nconst prepareBbanRegexp = (bbanFormat) => {\n  const pattern = bbanFormat.match(/[0-9]{2}[ANC]/g).reduce((prevPattern, block) => {\n    const quantity = parseInt(block.slice(0, 2), 10);\n    const code = block[2];\n    return `${prevPattern}[${PATTERNS[code]}]{${quantity}}`;\n  }, '');\n  cachedBbanRegexp[bbanFormat] = new RegExp(pattern);\n  return cachedBbanRegexp[bbanFormat];\n};\n\n// Move the four initial characters to the end of the string\nconst rearrangeIban = (iban) =>\n  `${iban.slice(4)}${iban.slice(0, 4)}`;\n\n/**\n * Removes spaces\n *\n * @name  compact\n * @inner\n * @param  {string} str A given string\n * @return {string}     Compact string\n */\nexport const compact = (str) => str.replace(/\\s+/g, '');\n\n/**\n * Generates a regular expression from encoded representation\n * It is grouped in blocks of 3 characters, first 2 represents the number\n * and the last character represents the type of character.\n * * A = Upper case alpha characters [A-Z]\n * * N = Numeric characters [0-9]\n * * C = Mixed case alphanumeric characters [0-9a-zA-Z]\n *\n * @name bbanRegexp\n * @inner\n * @param  {string} bbanFormat Encoded regular expression\n * @return {object}            Resulting regular expression\n */\nexport const bbanRegexp = (bbanFormat) =>\n  cachedBbanRegexp[bbanFormat] || prepareBbanRegexp(bbanFormat);\n\n/**\n * Replace each letter in the string with two digits,\n * thereby expanding the string, where A = 10, B = 11, ..., Z = 35\n *\n * @name convertIban\n * @inner\n * @param {string} iban IBAN number\n * @return {string} Number representation of the IBAN\n */\nexport const convertIban = (iban) =>\n  rearrangeIban(iban).split('').reduce((result, char) => {\n    const code = char.charCodeAt(0);\n    let num;\n    if (code >= A && code <= Z) {\n      num = String((code - A) + 10);\n    } else {\n      num = char;\n    }\n    return `${result}${num}`;\n  }, '');\n\n/**\n * @name alreadyExploded\n * @type {function}\n * @inner\n *\n * @description\n * Checks if string is already split up\n *\n * @param str\n * @param symbol {string}\n * @return {boolean}\n */\nconst alreadyExploded = (str, symbol) => str && str.split(symbol).length > 1;\n\n/**\n * @name explodeString\n * @type {function}\n *\n * @description\n * Splits the string up with spaces (or other symbol)\n * by groups of 4 (or other number).\n *\n * @param str {string}\n * @param symbol {string}\n * @param groupLen {number}\n * @return {string}\n */\nexport const explodeString = (str, symbol = ' ', groupLen = 4) => {\n  if (!str || alreadyExploded(str, symbol)) return str;\n\n  const groups = Math.ceil(str.length / groupLen);\n  const chunks = [];\n\n  for (let i = 0; i < groups; i++) {\n    chunks.push(str.substr(groupLen * i, groupLen));\n  }\n\n  return chunks.join(symbol);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-iban/scripts/helpers.js","/**\n * Calculates remainder for numbers bigger than 2^53 - 1,\n * not supported in JavaScript.\n *\n * @type {function}\n * @inner\n * @param  {string} dividend The dividend\n * @param  {number} divisor  The divisor\n * @return {number}          The remainder\n */\nexport default (dividend, divisor) => {\n  if (dividend.length < 10) {\n    return parseInt(dividend, 10) % divisor;\n  }\n\n  let D = dividend.slice(9);\n  let N = dividend.slice(0, 9);\n  let remainder = parseInt(N, 10) % divisor;\n\n  while (D.length > 7) {\n    N = String(remainder) + D.slice(0, 7);\n    remainder = parseInt(N, 10) % divisor;\n    D = D.slice(7);\n  }\n\n  if (D.length) {\n    N = String(remainder) + D;\n  }\n\n  return parseInt(N, 10) % divisor;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-iban/scripts/bigIntegerMod.js"],"sourceRoot":""}