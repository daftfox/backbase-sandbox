{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******************","webpack:///webpack/bootstrap 16ce69979da567ada154?cec8******************","webpack:///./ui-bb-format-amount-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114******************","webpack:///external \"lib-bb-currency-ng\"?de3f","webpack:///./ui-bb-format-amount-ng/scripts/index.js","webpack:///./ui-bb-format-amount-ng/scripts/format-amount.component.js","webpack:///./ui-bb-format-amount-ng/scripts/wrap.filter.js","webpack:///./ui-bb-format-amount-ng/scripts/sign.filter.js","webpack:///./ui-bb-format-amount-ng/scripts/rule.factory.js"],"names":["angular","module","libBbCurrencyNgKey","component","uiBbFormatAmountComponent","factory","bbCurrencyRuleKey","rulesFactory","filter","wrapFilter","signFilter","name","bindings","amount","currency","noDecimals","template","attrs","wrap","bindMode","controller","$attrs","currencyRules","$ctrl","format","$onChanges","symbol","Object","assign","getRule","decimalDigits","$locale","$sce","CLASS_SIGN","CLASS_WHOLE","CLASS_POINTS","CLASS_DECIMALS","CLASS_CURRENCY","groupPrefix","NUMBER_FORMATS","GROUP_SEP","pointPrefix","DECIMAL_SEP","groupRegExp","decimalRegExp","exp","search","RegExp","wrapRegExpGroup","groupIndex","wrapClass","value","wrapConfig","replace","i","length","wrapped","cleaned","trustAsHtml","$filter","decimals","sign","result","trim","patterns","PATTERNS","posPre","posSuf","negPre","negSuf","formatted"],"mappings":"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","file":"ui-bb-format-amount-ng/scripts/ui-bb-format-amount-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-currency-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bb-format-amount-ng\", [\"vendor-bb-angular\", \"lib-bb-currency-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bb-format-amount-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-currency-ng\"));\n\telse\n\t\troot[\"ui-bb-format-amount-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-currency-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_47__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 16ce69979da567ada154","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bb-format-amount-ng/model.xml\n// module id = 0\n// module chunks = 18","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-currency-ng\"\n// module id = 47\n// module chunks = 10 18 41","/**\n * @module ui-bb-format-amount-ng\n *\n * @example\n * // In an extension:\n * // file: scripts/index.js\n * import uiBbFormatAmountKey from 'ui-bb-format-amount-ng';\n *\n * export const dependencyKeys = [\n *   uiBbFormatAmountKey,\n * ];\n *\n * // file: templates/template.ng.html\n * <ui-bb-format-amount-ng\n * amount=\"$option.amount\"\n * currency=\"$option.currency\"\n * wrap\n * no-map\n * show-plus-sign\n * ></ui-bb-format-amount-ng>\n */\nimport angular from 'vendor-bb-angular';\nimport libBbCurrencyNgKey, { bbCurrencyRuleKey } from 'lib-bb-currency-ng';\n\nimport uiBbFormatAmountComponent from './format-amount.component';\nimport wrapFilter from './wrap.filter';\nimport signFilter from './sign.filter';\nimport rulesFactory from './rule.factory';\n\n/**\n* @description The angular module name\n* @name default\n* @type {string}\n*/\nexport default angular.module('ui-bb-format-amount-ng', [libBbCurrencyNgKey])\n  .component('uiBbFormatAmountNg', uiBbFormatAmountComponent)\n  .factory('currencyRules', [bbCurrencyRuleKey, rulesFactory])\n  /**\n   * Wraps whole number part in <span class=\"amount-whole-number\">\n   * Wraps decimals in <span class=\"amount-decimals\">\n   * Wraps decimal point in <span class=\"amount-decimal-point\">\n   * Wraps currency in <span class=\"amount-currency\">\n   *\n   * @name wrap\n   * @type {function}\n   * @param {object} $locale Localization service\n   * @param {object} $sce SCE Service\n   * @returns {string} Figures wrapped in <span> elements\n   */\n  .filter('wrap', ['$locale', '$sce', wrapFilter])\n  /**\n   * @type {function}\n   * @name signFilter\n   * @description\n   * Filter for currency formatting with an option to add + sign for positive values\n   *\n   * @returns {string}\n   */\n  .filter('sign', ['$locale', '$filter', signFilter])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-format-amount-ng/scripts/index.js","/**\n * @name uiBbFormatAmountComponent\n * @type {object}\n * @description\n * Format Amount Component Object\n *\n * @property {string} amount Amount string\n * @property {string} currency Currency string\n * @property {boolean} noDecimals No Decimal boolean, if provided it won't be showing decimals\n * @property {void} wrap Condition to wrap amount sign (if present), currency sign or code,\n * whole part of the number, decimal point and number decimals in separate HTML wrappers\n * @property {void} noMap Condition to stop looking for currency mapping in the currency-map\n * @property {void} showPlusSign Condition to prepend plus sign for positive amounts\n */\nconst uiBbFormatAmountComponent = {\n  bindings: {\n    amount: '<',\n    currency: '<',\n    noDecimals: '<',\n  },\n  template: ['$attrs', function template(attrs) {\n    const wrap = 'wrap' in attrs;\n    const bindMode = wrap ? 'data-ng-bind-html' : 'data-ng-bind';\n    const wrapFilter = wrap ? ' | wrap' : '';\n\n    return `\n      <span class=\"amount\"\n        data-role=\"amount\"\n        data-ng-class=\"$ctrl.amount < 0 ? 'amount-negative' : 'amount-positive'\"\n        ${bindMode}=\"$ctrl.amount | \n          sign: $ctrl.format.symbol:$ctrl.format.decimalDigits:${'showPlusSign' in attrs}\n          ${wrapFilter}\">\n      </span>`;\n  }],\n  controller: ['$attrs', 'currencyRules', function controller($attrs, currencyRules) {\n    const $ctrl = this;\n    const format = {};\n\n    const $onChanges = () => {\n      format.symbol = $ctrl.currency || '';\n\n      if (!('noMap' in $attrs) && $ctrl.currency) {\n        Object.assign(format, currencyRules.getRule($ctrl.currency));\n      }\n\n      if ($ctrl.noDecimals) {\n        format.decimalDigits = 0;\n      }\n\n      Object.assign($ctrl, { format });\n    };\n\n    Object.assign($ctrl, {\n      $onChanges,\n    });\n  }],\n};\n\nexport default uiBbFormatAmountComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-format-amount-ng/scripts/format-amount.component.js","/**\n * @name wrapFilter\n * @type {function}\n * @description\n * Filter used to wrap parts of the value in HTML elements\n *\n * @param {object} $locale Localization service\n * @param {object} $sce SCE Service\n * @returns {function} Function that is used to wrap the value\n */\nexport default function wrapFilter($locale, $sce) {\n  const CLASS_SIGN = 'amount-sign';\n  const CLASS_WHOLE = 'amount-whole-number';\n  const CLASS_POINTS = 'amount-decimal-points';\n  const CLASS_DECIMALS = 'amount-decimals';\n  const CLASS_CURRENCY = 'amount-currency';\n  // . is special sign, we need to prefix it with \\\\ if it is a decimal point\n  const groupPrefix = $locale.NUMBER_FORMATS.GROUP_SEP === '.' ? '\\\\' : '';\n  const pointPrefix = $locale.NUMBER_FORMATS.DECIMAL_SEP === '.' ? '\\\\' : '';\n  const groupRegExp = `${groupPrefix}${$locale.NUMBER_FORMATS.GROUP_SEP}`;\n  const decimalRegExp = `${pointPrefix}${$locale.NUMBER_FORMATS.DECIMAL_SEP}`;\n  // construct search RegExp\n  const exp = `(\\\\+|-)?([^0-9]+)?([\\\\d|${groupRegExp}]+)(${decimalRegExp})(\\\\d+)(.+)?`;\n  const search = new RegExp(exp);\n\n  /**\n   * @type {function}\n   * @inner\n   * @name wrapRegExpGroup\n   * @description\n   * RegExp replace string builder\n   *\n   * @param {number} groupIndex Replace index\n   * @param {string} wrapClass CSS class of the wrapper\n   */\n  const wrapRegExpGroup = (groupIndex, wrapClass) =>\n    `<span class=\"${wrapClass}\">$${groupIndex}</span>`;\n\n  return (value) => {\n    if (!value) {\n      return '';\n    }\n\n    // wrap configuration array containing wrapping class\n    // that should be used for each replace group\n    const wrapConfig = [\n      CLASS_SIGN,\n      CLASS_CURRENCY,\n      CLASS_WHOLE,\n      CLASS_POINTS,\n      CLASS_DECIMALS,\n      CLASS_CURRENCY,\n    ];\n\n    let replace = '';\n    for (let i = 0; i < wrapConfig.length; i++) {\n      replace += wrapRegExpGroup(i + 1, wrapConfig[i]);\n    }\n    // wrap it up\n    const wrapped = value.replace(search, replace);\n    // clear empty span elements\n    const cleaned = wrapped.replace(new RegExp('<span[^<>]+><\\\\/span>', 'g'), '');\n    return $sce.trustAsHtml(cleaned);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-format-amount-ng/scripts/wrap.filter.js","/**\n * @type {function}\n * @name signFilter\n * @description\n * Filter for currency formatting with an option to add + sign for positive values\n *\n * @param {object} $locale Localization service\n * @param {function} $filter Filter service\n * @returns {function} Function that is used to filter\n */\nexport default function signFilter($locale, $filter) {\n  return (value, symbol, decimals, sign) => {\n    if (!sign) {\n      const result = $filter('currency')(value, symbol, decimals);\n      return result && result.trim();\n    }\n\n    const patterns = $locale.NUMBER_FORMATS.PATTERNS[1];\n    const { posPre, posSuf } = patterns;\n\n    patterns.posPre = patterns.negPre.replace('-', '+');\n    patterns.posSuf = patterns.negSuf.replace('-', '+');\n\n    const formatted = $filter('currency')(value, symbol, decimals);\n    Object.assign(patterns, { posPre, posSuf });\n    return formatted && formatted.trim();\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-format-amount-ng/scripts/sign.filter.js","/**\n * @type {function}\n * @description\n * A factory to get a function that returns currency's symbol based on ISO code\n *\n * @param {function} getRule Library's method to get currency related format rules\n * @returns {function}\n */\nexport default (getRule) => ({ getRule });\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-format-amount-ng/scripts/rule.factory.js"],"sourceRoot":""}