{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6***","webpack:///webpack/bootstrap 35bfb9b1c80b5da44aff?9560***","webpack:///./ext-bbm-notification-center-details-ng/model.xml","webpack:///external \"ui-bb-i18n-ng\"?dc01**","webpack:///external \"ui-bb-date-label-filter-ng\"?be82**","webpack:///./ext-bbm-notification-center-details-ng/scripts/index.js","webpack:///external \"ui-bb-list-ng\"","webpack:///./ext-bbm-notification-center-details-ng/scripts/events.js","webpack:///external \"lib-bbm-plugins\"","webpack:///./ext-bbm-notification-center-details-ng/scripts/constants.js","webpack:///./ext-bbm-notification-center-details-ng/scripts/intents.js","webpack:///./ext-bbm-notification-center-details-ng/scripts/helpers.js"],"names":["events","extEvents","intents","extIntents","helpers","extHelpers","dependencyKeys","uiBbI18nKey","uiBbDateLabelFilterKey","uiBbListKey","$filter","stateContainer","service","bus","withNativeEvents","i18n","getSelectedNotification","createSelector","state","notification","data","ToolbarButtonEvent","NOTIFICATION_CHANGE_READ_STATUS","toggleNotificationReadStatus","DELETE_NOTIFICATION","confirmOptions","title","message","buttons","type","ButtonType","POSITIVE","text","callbackFn","ConfirmAction","CONFIRM","NEGATIVE","CANCEL","plugins","AlertDialog","show","then","response","callback","isConfirmed","notificationId","id","deleteNotification","publish","Event","SHOW_NOTIFICATION_LIST","BEFORE_NOTIFICATION_DELETE","ActivityIndicator","AFTER_NOTIFICATION_DELETE_SUCCESS","hide","Snackbar","success","AFTER_NOTIFICATION_DELETE_ERROR","error","LevelIcon","ALERT","WARNING","INFO","SUCCESS","DateLabel","TimePeriod","NOW","TODAY","YESTERDAY","Intent","SHOW_NOTIFICATION_DETAILS","handleRequest","showNotificationDetails","setSelectedNotification","read","setNotificationReadStatus","Error","getNotification","normalizeDate","filteredDate","dateStr","replace","getLevelIcon","level","getDateLabel","date","createdOn","labelKey","resultDateLabel","isOpen","dateType"],"mappings":"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","file":"ext-bbm-notification-center-details-ng/scripts/ext-bbm-notification-center-details-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-date-label-filter-ng\"), require(\"ui-bb-list-ng\"), require(\"lib-bbm-plugins\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bbm-notification-center-details-ng\", [\"ui-bb-i18n-ng\", \"ui-bb-date-label-filter-ng\", \"ui-bb-list-ng\", \"lib-bbm-plugins\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bbm-notification-center-details-ng\"] = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-date-label-filter-ng\"), require(\"ui-bb-list-ng\"), require(\"lib-bbm-plugins\"));\n\telse\n\t\troot[\"ext-bbm-notification-center-details-ng\"] = factory(root[\"ui-bb-i18n-ng\"], root[\"ui-bb-date-label-filter-ng\"], root[\"ui-bb-list-ng\"], root[\"lib-bbm-plugins\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_28__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 35bfb9b1c80b5da44aff","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bbm-notification-center-details-ng/model.xml\n// module id = 0\n// module chunks = 3","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 4\n// module chunks = 0 1 2 3 4 5","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-date-label-filter-ng\"\n// module id = 5\n// module chunks = 0 1 2 3 4 5","/**\n * @module ext-bbm-notification-center-details-ng\n *\n * @description\n * Mobile extension for a notiication center details.\n *\n * @example\n * <!-- Contact widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *   <value type=\"string\">ext-bbm-notification-details-ng</value>\n * </property>\n */\nimport uiBbI18nKey from 'ui-bb-i18n-ng';\nimport uiBbDateLabelFilterKey from 'ui-bb-date-label-filter-ng';\nimport uiBbListKey from 'ui-bb-list-ng';\n\nimport extEvents from './events';\nimport extIntents from './intents';\nimport extHelpers from './helpers';\n\nexport const events = extEvents;\nexport const intents = extIntents;\nexport const helpers = extHelpers;\n\nexport const dependencyKeys = [\n  uiBbI18nKey,\n  uiBbDateLabelFilterKey,\n  uiBbListKey,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-details-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_26__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-list-ng\"\n// module id = 26\n// module chunks = 3","// Temporary disable capsInNew until it fixed in lib-bbm-plugins\n/* eslint new-cap: [\"error\", { \"capIsNew\": false }] */\nimport plugins from 'lib-bbm-plugins';\n\nimport {\n  Event,\n  ButtonType,\n  ConfirmAction,\n  ToolbarButtonEvent,\n} from './constants';\n\nexport default ({ $filter, stateContainer, service, bus, withNativeEvents }) => {\n  const i18n = $filter('i18n');\n\n  /**\n   * @description\n   * Returns the current selected `notification` from the state\n   *\n   * @name getSelectedNotification\n   * @type {function}\n   * @returns {Object} notification Notification from the state\n   * @inner\n   */\n  const getSelectedNotification = stateContainer.createSelector(\n    state => state.notification.data\n  );\n\n  return withNativeEvents(\n    {\n      [ToolbarButtonEvent.NOTIFICATION_CHANGE_READ_STATUS]: () => {\n        const notification = getSelectedNotification();\n        service.toggleNotificationReadStatus(notification);\n      },\n      [ToolbarButtonEvent.DELETE_NOTIFICATION]: () => {\n        const confirmOptions = {\n          title: i18n('message.notification.delete.confirm.title'),\n          message: i18n('message.notification.delete.confirm.message'),\n          buttons: [\n            {\n              type: ButtonType.POSITIVE,\n              text: i18n('message.notification.delete.confirm.button.ok'),\n              callbackFn: ConfirmAction.CONFIRM,\n            },\n            {\n              type: ButtonType.NEGATIVE,\n              text: i18n('message.notification.delete.confirm.button.cancel'),\n              callbackFn: ConfirmAction.CANCEL,\n            },\n          ],\n        };\n\n        plugins.AlertDialog().show(confirmOptions)\n          .then(response => response.callback === ConfirmAction.CONFIRM)\n          .then(isConfirmed => {\n            if (isConfirmed) {\n              const notificationId = getSelectedNotification().id;\n              service.deleteNotification(notificationId)\n                .then(() => {\n                  bus.publish(Event.SHOW_NOTIFICATION_LIST);\n                });\n            }\n          });\n      },\n    },\n    {\n      [Event.BEFORE_NOTIFICATION_DELETE]: () => {\n        plugins.ActivityIndicator().show(i18n('message.notification.delete.start'));\n      },\n\n      [Event.AFTER_NOTIFICATION_DELETE_SUCCESS]: () => {\n        plugins.ActivityIndicator().hide();\n        plugins.Snackbar().success(i18n('message.notification.delete.done'));\n      },\n\n      [Event.AFTER_NOTIFICATION_DELETE_ERROR]: () => {\n        plugins.ActivityIndicator().hide();\n        plugins.Snackbar().error(i18n('message.notification.delete.failed'));\n      },\n    }\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-details-ng/scripts/events.js","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bbm-plugins\"\n// module id = 28\n// module chunks = 3","import { TimePeriod } from 'ui-bb-date-label-filter-ng';\n\n/**\n * Level icons\n * @name LevelIcon\n * @type {Object}\n * @inner\n */\nexport const LevelIcon = {\n  ALERT: 'fa-exclamation-circle',\n  WARNING: 'fa-exclamation-triangle',\n  INFO: 'fa-info-circle',\n  SUCCESS: 'fa-check-circle',\n};\n\n/**\n * Date labels\n * @name DateLabel\n * @type {Object}\n * @inner\n */\nexport const DateLabel = {\n  [TimePeriod.NOW]: 'calendar.label.now',\n  [TimePeriod.TODAY]: 'calendar.label.today',\n  [TimePeriod.YESTERDAY]: 'calendar.label.yesterday',\n};\n\n/**\n * Toolbar button events enum\n * @name ToolbarButtonEvent\n * @type {Object}\n * @inner\n */\nexport const ToolbarButtonEvent = {\n  DELETE_NOTIFICATION: 'bb.action.notification.delete',\n  NOTIFICATION_CHANGE_READ_STATUS: 'bb.action.notification.read.change',\n};\n\n/**\n * Confirm dialog button types\n * @type {Object}\n * @inner\n */\nexport const ButtonType = {\n  POSITIVE: 'POSITIVE',\n  NEGATIVE: 'NEGATIVE',\n};\n\n/**\n * Confirm dialog actions\n * @type {Object}\n * @inner\n */\nexport const ConfirmAction = {\n  CANCEL: 'cancel',\n  CONFIRM: 'confirm',\n};\n\n/**\n * Intents enum\n * @name Intent\n * @type {Object}\n * @inner\n */\nexport const Intent = {\n  SHOW_NOTIFICATION_LIST: 'intent.rbm.notification.list.show',\n  SHOW_NOTIFICATION_DETAILS: 'intent.rbm.notification.details.show',\n};\n\nexport const Event = {\n  /**\n   * An event to navigate to the notifications list.\n   * @event bb.action.notification.list.show\n   * @type {string}\n   */\n  SHOW_NOTIFICATION_LIST: 'bb.action.notification.list.show',\n\n  /**\n   * A notification is submitted for deletion from the server\n   * @event bb.event.notification.delete.start\n   * @type {string}\n   */\n  BEFORE_NOTIFICATION_DELETE: 'bb.event.notification.delete.start',\n\n  /**\n   * A notification is deleted on the server\n   * @event bb.event.notification.delete.done\n   * @property {module:data-bb-notifications-http-ng.NotificationsData.NotificationItem}\n   *  notification Notification item\n   * @type {string}\n   */\n  AFTER_NOTIFICATION_DELETE_SUCCESS: 'bb.event.notification.delete.done',\n\n  /**\n   * A notification fails to be deleted on the server\n   * @event bb.event.notification.delete.failed\n   * @type {string}\n   * @property {module:lib-bb-model-ng.ModelError} error Model error\n   */\n  AFTER_NOTIFICATION_DELETE_ERROR: 'bb.event.notification.delete.failed',\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-details-ng/scripts/constants.js","import { Intent } from './constants';\n\n/**\n * @name Intents\n * @type {Object}\n */\nexport default ({ handleRequest, service }) => ({\n  /**\n   * @name Intents#showNotificationDetails\n   * @description Handles the intent to show the notification details\n   * @type {function}\n   */\n  showNotificationDetails: handleRequest(Intent.SHOW_NOTIFICATION_DETAILS, notification => {\n    if (notification) {\n      service.setSelectedNotification(notification);\n      if (!notification.read) {\n        service.setNotificationReadStatus(notification.id, true);\n      }\n    } else {\n      throw new Error(`Notification is undefined. \n        Please pass a notification object as the payload of the intent`);\n    }\n  }),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-details-ng/scripts/intents.js","// Temporary disable capsInNew until it fixed in lib-bbm-plugins\n/* eslint new-cap: [\"error\", { \"capIsNew\": false }] */\n/* global window */\n\n/**\n * @description\n * Helpers for ext-bbm-notification-center-details-ng\n *\n * @name Helpers\n * @type {Object}\n */\n\nimport { TimePeriod } from 'ui-bb-date-label-filter-ng';\nimport {\n  LevelIcon,\n  DateLabel,\n} from './constants';\n\nexport default ({ $filter, stateContainer }) => {\n  /**\n   * @description\n   * Returns the `notifications` from the state\n   *\n   * @name Helpers#getNotifications\n   * @type {function}\n   * @returns {Array} notifications List of notifications from the state\n   */\n  const getNotification = stateContainer.createSelector(\n    state => state.notification.data\n  );\n\n  /**\n   * The standard ISO-8601 supports the following formats for time offsets:\n   * ±[hh]:[mm], ±[hh][mm], or ±[hh]\n   * However iOS does support only ±[hh]:[mm] format.\n   * Thus we make sure that the given date string has the following\n   * variation of the ISO-8601 standard:\n   * \"YYYY-MM-DDThh:mm:ss.SSS±hh:mm\"\n   * @name normalizeDate\n   * @inner\n   * @param dateStr\n   */\n  const normalizeDate = dateStr => {\n    const filteredDate = $filter('date')(dateStr, 'yyyy-MM-ddTHH:mm:ss.sssZ');\n    return filteredDate.replace(/(\\d{2}):?(\\d{2})$/, '$1:$2');\n  };\n\n  /**\n   * @description\n   * Returns CSS class for icon according to the given level.\n   *\n   * @name Helpers#getLevelIcon\n   * @type {function}\n   *\n   * @param {string} level Notification level\n   * @returns {string}\n   */\n  const getLevelIcon = level => LevelIcon[level];\n\n  /**\n   * @description\n   * Returns a date label for the given notification.\n   *\n   * @name Helpers#getDateLabel\n   * @type {function}\n   *\n   * @param {module:data-bb-notifications-http-ng.NotificationsData.NotificationItem} notification\n   *   Notification item\n   * @returns {string}\n   */\n  const getDateLabel = notification => {\n    if (!notification) {\n      return '';\n    }\n\n    const date = normalizeDate(notification.createdOn);\n\n    let labelKey;\n    let resultDateLabel;\n\n    if (!notification.isOpen) {\n      const dateType = $filter('dateLabel')(date);\n      labelKey = DateLabel[dateType];\n    }\n\n    resultDateLabel = labelKey ? $filter('i18n')(labelKey) : $filter('date')(date, 'd MMMM yyyy');\n\n    if (labelKey !== DateLabel[TimePeriod.NOW]) {\n      resultDateLabel += $filter('i18n')('calendar.label.at') + $filter('date')(date, 'hh:mm');\n    }\n\n    return resultDateLabel;\n  };\n\n  return {\n    getNotification,\n    getDateLabel,\n    getLevelIcon,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-details-ng/scripts/helpers.js"],"sourceRoot":""}