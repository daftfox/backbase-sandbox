{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4a86f4a969cd4e712618","webpack:///./fe-dist/http-ng/data-bb-accessgroups-http-ng/model.xml","webpack:///./fe-dist/http-ng/data-bb-accessgroups-http-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///./fe-dist/http-ng/data-bb-accessgroups-http-ng/scripts/data-bb-accessgroups-http.js"],"names":["accessGroupsDataModuleKey","accessGroupsDataKey","ng","module","provider","config","baseUri","setBaseUri","$get","name","conf","httpClient","serializeParams","version","definedTypes","parse","res","data","headers","status","statusText","getAccessgroupsData","params","url","method","then","catch","err","postAccessgroupsDataRecord","postAccessgroupsDataGroupsRecord","putAccessgroupsDataGroupsRecord","getAccessgroupsDataGroups","getAccessgroupsFunction","postAccessgroupsFunctionRecord","getAccessgroupsFunctionGroups","postAccessgroupsFunctionGroupsRecord","putAccessgroupsFunctionGroupsRecord","getAccessgroupsConfigFunctions","postAccessgroupsUsersRecord","getAccessgroupsUsers","postAccessgroupsServiceagreementsRecord","getAccessgroupsServiceagreements","postAccessgroupsUsercontextRecord","getAccessgroupsDataRecord","id","putAccessgroupsDataRecord","deleteAccessgroupsDataRecord","postAccessgroupsDataGroupsDeleteRecord","getAccessgroupsDataGroupsRecord","deleteAccessgroupsDataGroupsRecord","getAccessgroupsFunctionRecord","putAccessgroupsFunctionRecord","deleteAccessgroupsFunctionRecord","postAccessgroupsFunctionGroupsDeleteRecord","getAccessgroupsFunctionGroupsRecord","deleteAccessgroupsFunctionGroupsRecord","getAccessgroupsUsersRecord","getAccessgroupsUsersPrivileges","getAccessgroupsUsersUserPrivileges","getAccessgroupsUsersPermissions","putAccessgroupsUsersPermissionsRecord","getAccessgroupsUsersUserPermissions","postAccessgroupsUsersFunctionRecord","postAccessgroupsUsersDataRecord","getAccessgroupsUsersPrivilegesArrangements","getAccessgroupsUsersPrivilegesArrangementsRecord","getAccessgroupsUsersUserPrivilegesArrangements","getAccessgroupsUsersUserPrivilegesArrangementsRecord","getAccessgroupsUsersPermissionsSummary","getAccessgroupsServiceagreementsRecord","serviceAgreementId","putAccessgroupsServiceagreementsRecord","getAccessgroupsServiceagreementsContext","postAccessgroupsServiceagreementsIngestServiceagreementsRecord","getAccessgroupsServiceagreementsParticipants","getAccessgroupsServiceagreementsAdmins","putAccessgroupsServiceagreementsAdminsRecord","getAccessgroupsServiceagreementsContextParticipants","getAccessgroupsServiceagreementsContextUsers","postAccessgroupsServiceagreementsContextUsersAddRecord","postAccessgroupsServiceagreementsContextUsersRemoveRecord","getAccessgroupsServiceagreementsContextUsersUnexposed","postAccessgroupsServiceagreementsIngestServiceagreementsParticipantsRecord","postAccessgroupsServiceagreementsIngestServiceagreementsUsersAddRecord","postAccessgroupsServiceagreementsIngestServiceagreementsUsersRemoveRecord","postAccessgroupsServiceagreementsIngestServiceagreementsAdminsAddRecord","postAccessgroupsServiceagreementsIngestServiceagreementsAdminsRemoveRecord","getAccessgroupsServiceagreementsExternalRecord","externalId","getAccessgroupsUsercontextServiceagreements","getAccessgroupsUsercontextServiceagreementsLegalentities","schemas"],"mappings":"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","file":"data-bb-accessgroups-http-ng/scripts/data-bb-accessgroups-http-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-bb-accessgroups-http-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-bb-accessgroups-http-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"data-bb-accessgroups-http-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4a86f4a969cd4e712618","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fe-dist/http-ng/data-bb-accessgroups-http-ng/model.xml\n// module id = 0\n// module chunks = 0","/* eslint-disable */\n/**\n * @module data-bb-accessgroups-http-ng\n *\n * @description A data module for accessing the AccessGroups REST API.\n *\n * @returns {String} `data-bb-accessgroups-http-ng`\n * @example\n * import accessGroupsDataModuleKey, {\n *   accessGroupsDataKey,\n * } from 'data-bb-accessgroups-http-ng';\n */\n\nimport ng from 'vendor-bb-angular';\n\nimport accessGroupsData from './data-bb-accessgroups-http';\n\nconst accessGroupsDataModuleKey = 'data-bb-accessgroups-http-ng';\n/**\n * @name accessGroupsDataKey\n * @type {string}\n * @description Angular dependency injection key for the AccessGroupsData service\n */\nexport const accessGroupsDataKey = 'data-bb-accessgroups-http-ng:accessGroupsData';\n/**\n * @name default\n * @type {string}\n * @description Angular dependency injection module key\n */\nexport default ng\n  .module(accessGroupsDataModuleKey, [])\n  \n  /**\n   * @constructor AccessGroupsData\n   * @type {object}\n   *\n   * @description Public api for data-bb-accessgroups-http-ng service\n   *\n   */\n  .provider(accessGroupsDataKey, [() => {\n    const config = {\n      baseUri: '/',\n    };\n\n    /**\n     * @name AccessGroupsDataProvider\n     * @type {object}\n     * @ngkey data-bb-accessgroups-http-ng:accessGroupsDataProvider\n     * @description\n     * Data service that can be configured with custom base URI.\n     *\n     * @example\n     * // Configuring in an angular app:\n     * angular.module(...)\n     *   .config(['data-bb-accessgroups-http-ng:accessGroupsDataProvider',\n     *     (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *       });\n     *\n     * // Configuring With config-bb-providers-ng:\n     * export default [\n     *   ['data-bb-accessgroups-http-ng:accessGroupsDataProvider', (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *   }]\n     * ];\n     */\n    return {\n      /**\n       * @name AccessGroupsDataProvider#setBaseUri\n       * @type {function}\n       * @param {string} baseUri Base URI which will be the prefix for all HTTP requests\n       */\n      setBaseUri: (baseUri) => {\n        config.baseUri = baseUri;\n      },\n\n      /**\n       * @name AccessGroupsDataProvider#$get\n       * @type {function}\n       * @return {object} An instance of the service\n       */\n      $get: [\n        '$http',\n        '$httpParamSerializer',\n        /* into */\n       accessGroupsData(config),\n      ],\n    };\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-accessgroups-http-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0","/* eslint-disable */\nexport default (conf) => (httpClient, serializeParams) => {\n  // Base param constants\n  const baseUri = conf.baseUri || '';\n\n  const version = 'v2';\n\n\n  /**\n   * The root defined types from the RAML.\n   * @private\n   */\n  const definedTypes = {};\n\n  \n  definedTypes['AccessGroupsData.GetDataAccessGroups'] = {\"type\":\"array\",\"items\":{\"properties\":{\"dataAccessGroupId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.DataAccessGroupItem'] = {\"properties\":{\"dataAccessGroupId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.DataAccessGroupItemBase'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"serviceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":false},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"type\":{\"type\":\"string\",\"enum\":[\"ARRANGEMENTS\",\"CONTACTS\"],\"required\":true},\"items\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.GetDataGroups'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.DataGroupItem'] = {\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.DataGroupItemBase'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"serviceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"type\":{\"type\":\"string\",\"enum\":[\"ARRANGEMENTS\",\"CONTACTS\"],\"required\":true},\"items\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.DataGroupsBatchPut'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"externalServiceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"required\":true},\"type\":{\"type\":\"string\",\"enum\":[\"ARRANGEMENTS\",\"CONTACTS\"],\"required\":true},\"items\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.DataGroupBatchDeleteItem'] = {\"properties\":{\"ids\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"minItems\":1,\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.GetFunctionAccessGroups'] = {\"type\":\"array\",\"items\":{\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.FunctionAccessGroupItem'] = {\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.FunctionAccessGroupItemBase'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"serviceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":false},\"permissions\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"assignedPrivileges\":{\"type\":\"array\",\"items\":{\"properties\":{\"privilege\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":16,\"required\":true},\"limits\":{\"type\":\"array\",\"items\":{\"properties\":{\"limitType\":{\"enum\":[\"daily\",\"weekly\",\"monthly\",\"upper\"],\"required\":true},\"amount\":{\"type\":\"number\",\"required\":false}}},\"required\":false}}},\"required\":true}}},\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.FunctionGroupItemBase'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"serviceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"permissions\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"assignedPrivileges\":{\"type\":\"array\",\"items\":{\"properties\":{\"privilege\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":16,\"required\":true},\"limits\":{\"type\":\"array\",\"items\":{\"properties\":{\"limitType\":{\"enum\":[\"daily\",\"weekly\",\"monthly\",\"upper\"],\"required\":true},\"amount\":{\"type\":\"number\",\"required\":false}}},\"required\":false}}},\"required\":true}}},\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.FunctionGroupItemPut'] = {\"properties\":{\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.FunctionGroupItem'] = {\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.GetFunctionGroups'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.GetFunctions'] = {\"type\":\"array\",\"items\":{\"properties\":{\"functionId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"functionCode\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":32,\"required\":true},\"resource\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":32,\"required\":true},\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":32,\"required\":true},\"privileges\":{\"type\":\"array\",\"items\":{\"properties\":{\"privilege\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":16,\"required\":true},\"limits\":{\"type\":\"array\",\"items\":{\"properties\":{\"limitType\":{\"enum\":[\"daily\",\"weekly\",\"monthly\",\"upper\"],\"required\":true},\"amount\":{\"type\":\"number\",\"required\":false}}},\"required\":false}}},\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.UserItem'] = {\"properties\":{\"userId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S+$\",\"required\":true},\"serviceAgreementId\":{\"type\":\"string\",\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.AssignFunctionAccessGroup'] = {\"properties\":{\"functionAccessGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"minItems\":1,\"required\":true},\"revoke\":{\"type\":\"boolean\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.AssignDataAccessGroup'] = {\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"dataAccessGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"minItems\":1,\"required\":true},\"revoke\":{\"type\":\"boolean\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.GetUser'] = {\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"userId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S+$\",\"required\":true},\"serviceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"dataAccessGroupsByFunctionAccessGroup\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"dataAccessGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false}}},\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.GetUsers'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"userId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S+$\",\"required\":true},\"serviceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"dataAccessGroupsByFunctionAccessGroup\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"dataAccessGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false}}},\"required\":false}}}};\n  \n  definedTypes['AccessGroupsData.GetPrivileges'] = {\"type\":\"array\",\"items\":{\"properties\":{\"privilege\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":16,\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.ArrangementPrivileges'] = {\"type\":\"array\",\"items\":{\"properties\":{\"arrangementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"privileges\":{\"type\":\"array\",\"items\":{\"properties\":{\"privilege\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":16,\"required\":true},\"limits\":{\"type\":\"array\",\"items\":{\"properties\":{\"limitType\":{\"enum\":[\"daily\",\"weekly\",\"monthly\",\"upper\"],\"required\":true},\"amount\":{\"type\":\"number\",\"required\":false}}},\"required\":false}}},\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementPost'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"participants\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true},\"sharingUsers\":{\"type\":\"boolean\",\"required\":true},\"sharingAccounts\":{\"type\":\"boolean\",\"required\":true}}},\"minItems\":1,\"required\":true},\"status\":{\"type\":\"string\",\"enum\":[\"ENABLED\",\"DISABLED\"],\"default\":\"ENABLED\",\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementPut'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":false},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":false},\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"pattern\":\"^\\\\S+$\",\"required\":false},\"status\":{\"type\":\"string\",\"enum\":[\"ENABLED\",\"DISABLED\"],\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.GetServiceAgreements'] = {\"type\":\"array\",\"items\":{\"properties\":{\"creatorLegalEntity\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"status\":{\"type\":\"string\",\"enum\":[\"ENABLED\",\"DISABLED\"],\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementItem'] = {\"properties\":{\"creatorLegalEntity\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"status\":{\"type\":\"string\",\"enum\":[\"ENABLED\",\"DISABLED\"],\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementParticipants'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"required\":true},\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"required\":true},\"sharingUsers\":{\"type\":\"boolean\",\"required\":true},\"sharingAccounts\":{\"type\":\"boolean\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.IdItem'] = {\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.UpdateAdmins'] = {\"properties\":{\"participants\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"admins\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"uniqueItems\":true,\"required\":true}}},\"minItems\":1,\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementUsers'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"fullName\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementUsersBatchIngest'] = {\"type\":\"array\",\"items\":{\"properties\":{\"userId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true},\"externalServiceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"pattern\":\"^\\\\S+$\",\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.UsersForServiceAgreement'] = {\"properties\":{\"users\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"minItems\":1,\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.ServicesAgreementIngest'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"pattern\":\"^\\\\S+$\",\"required\":false},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"participantsToIngest\":{\"type\":\"array\",\"items\":{\"properties\":{\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"pattern\":\"^\\\\S+$\",\"required\":true},\"sharingUsers\":{\"type\":\"boolean\",\"required\":true},\"sharingAccounts\":{\"type\":\"boolean\",\"required\":true},\"admins\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"uniqueItems\":true,\"required\":false},\"users\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"uniqueItems\":true,\"required\":false}}},\"minItems\":1,\"uniqueItems\":true,\"required\":true},\"status\":{\"type\":\"string\",\"enum\":[\"ENABLED\",\"DISABLED\"],\"default\":\"ENABLED\",\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.UserPermissions'] = {\"type\":\"array\",\"items\":{\"properties\":{\"userId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":false},\"externalServiceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"required\":true},\"functionDataPairs\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionGroupId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"dataGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false}}},\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.PermissionsSummary'] = {\"type\":\"array\",\"items\":{\"properties\":{\"resource\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":32,\"required\":true},\"function\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":32,\"required\":true},\"permissions\":{\"type\":\"object\",\"properties\":{},\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.UserContextServiceAgreements-GET'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true},\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"pattern\":\"^\\\\S+$\",\"required\":false},\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"required\":true},\"isMaster\":{\"type\":\"boolean\",\"default\":false,\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.UserContextLegalEntities-GET'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true},\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.UserContext-POST'] = {\"properties\":{\"serviceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.FunctionGroupsBatchPut'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"externalLegalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"externalServiceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"required\":true},\"permissions\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"assignedPrivileges\":{\"type\":\"array\",\"items\":{\"properties\":{\"privilege\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":16,\"required\":true},\"limits\":{\"type\":\"array\",\"items\":{\"properties\":{\"limitType\":{\"enum\":[\"daily\",\"weekly\",\"monthly\",\"upper\"],\"required\":true},\"amount\":{\"type\":\"number\",\"required\":false}}},\"required\":false}}},\"required\":true}}},\"required\":false}}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementAdminsBatchIngest'] = {\"type\":\"array\",\"items\":{\"properties\":{\"userId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true},\"externalServiceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"pattern\":\"^\\\\S+$\",\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^[0-9a-f]{32}\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.FunctionGroupBatchDeleteItem'] = {\"properties\":{\"ids\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"minItems\":1,\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.Participant'] = {\"type\":\"array\",\"items\":{\"properties\":{\"externalServiceAgreementId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"required\":true},\"externalParticipantId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"required\":true},\"sharingUsers\":{\"type\":\"boolean\",\"required\":true},\"sharingAccounts\":{\"type\":\"boolean\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.UnexposedUsers'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":64,\"required\":true},\"fullName\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"required\":true},\"legalEntityName\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"required\":true}}}};\n  \n\n  \n  /**\n   * @typedef AccessGroupsData.ArrangementPrivilegeItem\n   * @type {Object}\n   * @property {String} arrangementId\n   * @property {Array.<PrivilegeItem>} privileges\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ArrangementPrivileges\n   * @type {Array.<AccessGroupsData.ArrangementPrivilegeItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.AssignDataAccessGroup\n   * @type {Object}\n   * @property {String} functionAccessGroupId\n   * @property {Array.<String>} dataAccessGroupIds\n   * @property {Boolean} revoke\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.AssignFunctionAccessGroup\n   * @type {Object}\n   * @property {Array.<String>} functionAccessGroupIds\n   * @property {Boolean} revoke\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.DataAccessGroupItem\n   * @type {Object}\n   * @property {String} dataAccessGroupId Data group id\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.DataAccessGroupItemBase\n   * @type {Object}\n   * @property {String} name Data group name\n   * @property {String} description Data group description\n   * @property {?String} serviceAgreementId\n   * @property {String} legalEntityId Id of Legal Entity on which Data group belongs.\n   * @property {String} type\n   * @property {Array.<String>} items Data group items\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.DataGroupBatchDeleteItem\n   * @type {Object}\n   * @property {?Array.<String>} ids\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.DataGroupBatchItemPut\n   * @type {Object}\n   * @property {String} id Data group id.\n   * @property {String} name Data group name\n   * @property {String} description Data group description\n   * @property {String} externalServiceAgreementId Service Agreement id\n   * @property {String} type\n   * @property {Array.<String>} items Data group items\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.DataGroupItem\n   * @type {Object}\n   * @property {String} id Data group id\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.DataGroupItemBase\n   * @type {Object}\n   * @property {String} name Data group name\n   * @property {String} description Data group description\n   * @property {String} serviceAgreementId Id of Service Agreement on which Data group belongs.\n   * @property {String} type\n   * @property {Array.<String>} items Data group items\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.DataGroupsBatchPut\n   * @type {Array.<AccessGroupsData.DataGroupBatchItemPut>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.Definitions/privilege\n   * @type {Object}\n   * @property {String} privilege\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionAccessGroupItem\n   * @type {Object}\n   * @property {String} functionAccessGroupId Function group id\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionAccessGroupItemBase\n   * @type {Object}\n   * @property {String} name Function group name\n   * @property {String} description Function group description\n   * @property {String} legalEntityId Id of Legal Entity on which Function group belongs.\n   * @property {?String} serviceAgreementId\n   * @property {?Array.<PermissionItem>} permissions\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionGroupBatchDeleteItem\n   * @type {Object}\n   * @property {?Array.<String>} ids\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionGroupItem\n   * @type {Object}\n   * @property {String} id Function group id\n   * @property {String} legalEntityId Function group creator legal entity id.\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionGroupItemBase\n   * @type {Object}\n   * @property {String} name Function group name\n   * @property {String} description Function group description\n   * @property {String} serviceAgreementId Service Agreement id\n   * @property {?Array.<PermissionItem>} permissions\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionGroupItemPut\n   * @type {Object}\n   * @property {?String} legalEntityId Function group creator legal entity id.\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionGroupPut\n   * @type {Object}\n   * @property {String} id Function group id.\n   * @property {String} externalLegalEntityId Function group creator legal entity id.\n   * @property {String} name Function group name\n   * @property {String} description Function group description\n   * @property {String} externalServiceAgreementId Service Agreement id\n   * @property {?Array.<PermissionItem>} permissions\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionGroupsBatchPut\n   * @type {Array.<AccessGroupsData.FunctionGroupPut>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionsItem\n   * @type {Object}\n   * @property {String} functionId\n   * @property {String} functionCode\n   * @property {String} resource\n   * @property {String} name\n   * @property {Array.<PrivilegeItem>} privileges\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetDataAccessGroups\n   * @type {Array.<AccessGroupsData.DataAccessGroupItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetDataGroups\n   * @type {Array.<AccessGroupsData.DataGroupItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetFunctionAccessGroups\n   * @type {Array.<AccessGroupsData.FunctionAccessGroupItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetFunctionGroups\n   * @type {Array.<AccessGroupsData.FunctionGroupItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetFunctions\n   * @type {Array.<AccessGroupsData.FunctionsItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetPrivileges\n   * @type {Array.<AccessGroupsData.Definitions/privilege>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetServiceAgreements\n   * @type {Array.<AccessGroupsData.ServiceAgreementItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetUser\n   * @type {Object}\n   * @property {String} id\n   * @property {String} userId\n   * @property {String} serviceAgreementId\n   * @property {?Array.<DataaccessgroupsforfunctionaccessgroupItem>} dataAccessGroupsByFunctionAccessGroup\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetUsers\n   * @type {Array.<AccessGroupsData.GetUser>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.IdItem\n   * @type {Object}\n   * @property {String} id\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.LegalEntityItem\n   * @type {Object}\n   * @property {String} id\n   * @property {String} name Legal entity name to display\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.Participant\n   * @type {Array.<AccessGroupsData.ParticipantItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ParticipantItem\n   * @type {Object}\n   * @property {String} externalServiceAgreementId External ID of the Service Agreement.\n   * @property {String} externalParticipantId External ID of the legal entity.\n   * @property {Boolean} sharingUsers Boolean value if the Participant is sharing users\n   * @property {Boolean} sharingAccounts Boolean value if the Participant is sharing accounts\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.PermissionsSummary\n   * @type {Array.<AccessGroupsData.PermissionsSummaryItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.PermissionsSummaryItem\n   * @type {Object}\n   * @property {String} resource Resource name\n   * @property {String} function Business function name\n   * @property {AccessGroupsData.permissions} permissions Allowed user permissions\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementAdminsBatchIngest\n   * @type {Array.<AccessGroupsData.ServiceAgreementUserLegalEntityPair>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementItem\n   * @type {Object}\n   * @property {String} creatorLegalEntity\n   * @property {String} status\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementPartialItem\n   * @type {Object}\n   * @property {String} id\n   * @property {?String} externalId External ID of Service Agreement\n   * @property {String} name Service agreement name to display\n   * @property {String} description Brief text to describe service agreement\n   * @property {Boolean} isMaster Defines default service agreement when none selected, only one can hold true value\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementParticipantItem\n   * @type {Object}\n   * @property {String} id Legal Entity Id\n   * @property {String} externalId External id of the Legal Entity\n   * @property {String} name Name of the Legal Entity\n   * @property {Boolean} sharingUsers Defines if the Legal Entity shares Users in the Service Agreement\n   * @property {Boolean} sharingAccounts Defines if the Legal Entity shares Accounts in the Service Agreement\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementParticipants\n   * @type {Array.<AccessGroupsData.ServiceAgreementParticipantItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementPost\n   * @type {Object}\n   * @property {String} name Service Agreement name\n   * @property {String} description Service Agreement description\n   * @property {Array.<AccessGroupsData.Participant>} participants\n   * @property {?String} status\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementPut\n   * @type {Object}\n   * @property {?String} name Service Agreement name\n   * @property {?String} description Service Agreement description\n   * @property {?String} externalId External ID of Service Agreement\n   * @property {?String} status\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementUserGet\n   * @type {Object}\n   * @property {String} id\n   * @property {String} externalId\n   * @property {String} legalEntityId\n   * @property {String} fullName\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementUserLegalEntityPair\n   * @type {Object}\n   * @property {String} userId\n   * @property {String} externalServiceAgreementId\n   * @property {String} legalEntityId\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementUsers\n   * @type {Array.<AccessGroupsData.ServiceAgreementUserGet>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementUsersBatchIngest\n   * @type {Array.<AccessGroupsData.ServiceAgreementUserLegalEntityPair>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServicesAgreementIngest\n   * @type {Object}\n   * @property {String} name The service agreement name\n   * @property {?String} externalId External ID of Service Agreement\n   * @property {String} description Description\n   * @property {Array.<ParticipantIngest>} participantsToIngest Participants of the service agreement\n   * @property {?String} status\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UnexposedUserGet\n   * @type {Object}\n   * @property {String} id\n   * @property {String} externalId\n   * @property {String} fullName\n   * @property {String} legalEntityId\n   * @property {String} legalEntityName\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UnexposedUsers\n   * @type {Array.<AccessGroupsData.UnexposedUserGet>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UpdateAdmins\n   * @type {Object}\n   * @property {?Array.<AdminItem>} participants\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UserContext-POST\n   * @type {Object}\n   * @property {String} serviceAgreementId\n   * @property {?String} legalEntityId\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UserContextLegalEntities-GET\n   * @type {Array.<AccessGroupsData.LegalEntityItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UserContextServiceAgreements-GET\n   * @type {Array.<AccessGroupsData.ServiceAgreementPartialItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UserItem\n   * @type {Object}\n   * @property {String} userId\n   * @property {?String} serviceAgreementId\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UserPermissions\n   * @type {Array.<AccessGroupsData.UserPermissionsItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UserPermissionsItem\n   * @type {Object}\n   * @property {String} userId Internal Id of the user\n   * @property {?String} legalEntityId Internal Id of the legal entity the user belongs to\n   * @property {String} externalServiceAgreementId External Id of the service agreement\n   * @property {Array.<FunctionGroupWithDataGroupsPair>} functionDataPairs Function/Data group pairs\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UsersForServiceAgreement\n   * @type {Object}\n   * @property {?Array.<String>} users\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.permissions\n   * @type {Object}\n   */\n  \n\n  /*\n   * @name parse\n   * @type {Function}\n   * @private\n   * @description Should be overwritten by transformResponse on a project level\n   */\n  function parse(res) {\n    return {\n      data: res.data,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n    };\n  }\n\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsData\n   * @type {Function}\n   * @description # List Data Groups\n\nProvides a list of all data groups for given Legal Entity ID and type.\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.legalEntityId Id of Legal Entity. Eg: 1002.\n     \n   * @param {string} params.type Type od data group. Eg: arrangements.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetDataAccessGroups} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsData(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsData(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/data`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsDataRecord\n   * @type {Function}\n   * @description # Create Data Group\n\nCreates a new data group.\n   \n   * @param {AccessGroupsData.DataAccessGroupItemBase} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsDataRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsDataRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/data`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsDataGroupsRecord\n   * @type {Function}\n   * @description # Create Data Group\n\nCreates a new data group.\n   \n   * @param {AccessGroupsData.DataGroupItemBase} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsDataGroupsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsDataGroupsRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/data-groups`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsDataGroupsRecord\n   * @type {Function}\n   * @description # Data Groups Batch - Put\n\nUpdate batch of data groups.\n   \n   * @param {AccessGroupsData.DataGroupsBatchPut} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsDataGroupsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsDataGroupsRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/data-groups`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsDataGroups\n   * @type {Function}\n   * @description # List Data Groups\n\nProvides a list of all data groups for given Legal Entity ID and type.\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.serviceAgreementId Id of Service Agreement. Eg: 1002.\n     \n   * @param {string} params.type Type od data group. Eg: ARRANGEMENTS.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetDataGroups} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsDataGroups(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsDataGroups(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/data-groups`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsFunction\n   * @type {Function}\n   * @description # List Function Groups\n\nProvides a list of all function groups for given Legal Entity ID.\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.legalEntityId Legal Entity ID. Eg: 1002.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetFunctionAccessGroups} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsFunction(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsFunction(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/function`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsFunctionRecord\n   * @type {Function}\n   * @description # Create Function Group\n\nCreates a new function group.\n   \n   * @param {AccessGroupsData.FunctionAccessGroupItemBase} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsFunctionRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsFunctionRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/function`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsFunctionGroups\n   * @type {Function}\n   * @description # List Function Groups\n\nProvides a list of all function groups for given Legal Entity ID.\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.serviceAgreementId Service Agreement Id. Eg: 1002.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetFunctionGroups} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsFunctionGroups(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsFunctionGroups(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/function-groups`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsFunctionGroupsRecord\n   * @type {Function}\n   * @description # Create Function Group\n\nCreates a new function group.\n   \n   * @param {AccessGroupsData.FunctionGroupItemBase} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsFunctionGroupsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsFunctionGroupsRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/function-groups`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsFunctionGroupsRecord\n   * @type {Function}\n   * @description # Function Groups Batch - Put\n\nUpdate batch of function groups.\n   \n   * @param {AccessGroupsData.FunctionGroupsBatchPut} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsFunctionGroupsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsFunctionGroupsRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/function-groups`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsConfigFunctions\n   * @type {Function}\n   * @description # List All Business Functions\n\nProvides a list of all available business functions that can be used in setting up Entitlements permissions.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetFunctions} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsConfigFunctions(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsConfigFunctions(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/config/functions`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsUsersRecord\n   * @type {Function}\n   * @description # Create User Access\n\nCreates a new user access.\n   \n   * @param {AccessGroupsData.UserItem} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsUsersRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsUsersRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/users`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsers\n   * @type {Function}\n   * @description # List User Accesses\n\nProvides all user accesses (optionally can be queried by user ID or service agreement ID).\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.userId User ID. Eg: 8a48e2685d788166015d791b0b9f0003.\n     \n   * @param {?string} params.serviceAgreementId Service agreement ID. Eg: 8a48e2685d787f78015d791ab6ad0002.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetUsers} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsers(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsers(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsRecord\n   * @type {Function}\n   * @description # Create Service Agreement\n\nCreates a new Service Agreement.\n   \n   * @param {AccessGroupsData.ServiceAgreementPost} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreements\n   * @type {Function}\n   * @description # List Service Agreements\n\nProvides a list of all service agreements that have been created by given Legal Entity (creator).\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.creatorId Legal entity ID that created the service agreement.\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   * @param {?string} params.query The search term used to search. Eg: backb.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetServiceAgreements} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreements(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreements(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsUsercontextRecord\n   * @type {Function}\n   * @description Create user context for current user\n   \n   * @param {AccessGroupsData.UserContext-POST} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsUsercontextRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsUsercontextRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/usercontext`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsDataRecord\n   * @type {Function}\n   * @description # Retrieve Data Group details\n\nRetrieves details for a specific data group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.DataAccessGroupItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsDataRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsDataRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/data/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsDataRecord\n   * @type {Function}\n   * @description # Update Data Group details\n\nUpdates details for a specific data group.\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.DataAccessGroupItem} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsDataRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsDataRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/data/${id}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#deleteAccessgroupsDataRecord\n   * @type {Function}\n   * @description # Delete Data Group\n\nDeletes the specific data group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .deleteAccessgroupsDataRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteAccessgroupsDataRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/data/${id}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsDataGroupsDeleteRecord\n   * @type {Function}\n   * @description # Data Groups Batch - Delete\n\nBatch delete of data groups by list of provided Data Group IDs.\n   \n   * @param {AccessGroupsData.DataGroupBatchDeleteItem} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsDataGroupsDeleteRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsDataGroupsDeleteRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/data-groups/delete`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsDataGroupsRecord\n   * @type {Function}\n   * @description # Retrieve Data Group details\n\nRetrieves details for a specific data group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.DataGroupItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsDataGroupsRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsDataGroupsRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/data-groups/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsDataGroupsRecord\n   * @type {Function}\n   * @description # Update Data Group details\n\nUpdates details for a specific data group.\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.DataGroupItem} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsDataGroupsRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsDataGroupsRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/data-groups/${id}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#deleteAccessgroupsDataGroupsRecord\n   * @type {Function}\n   * @description # Delete Data Group\n\nDeletes the specific data group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .deleteAccessgroupsDataGroupsRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteAccessgroupsDataGroupsRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/data-groups/${id}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsFunctionRecord\n   * @type {Function}\n   * @description # Retrieve Function Group details\n\nRetrieves details for a specific function group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.FunctionAccessGroupItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsFunctionRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsFunctionRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/function/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsFunctionRecord\n   * @type {Function}\n   * @description # Update Function Group details\n\nUpdates details for a specific function group.\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.FunctionAccessGroupItem} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsFunctionRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsFunctionRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/function/${id}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#deleteAccessgroupsFunctionRecord\n   * @type {Function}\n   * @description # Delete Function Group\n\nDeletes the specific function group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .deleteAccessgroupsFunctionRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteAccessgroupsFunctionRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/function/${id}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsFunctionGroupsDeleteRecord\n   * @type {Function}\n   * @description # Function Groups Batch - Delete\n\nBatch delete of function groups by list of provided Function Group IDs.\n   \n   * @param {AccessGroupsData.FunctionGroupBatchDeleteItem} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsFunctionGroupsDeleteRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsFunctionGroupsDeleteRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/function-groups/delete`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsFunctionGroupsRecord\n   * @type {Function}\n   * @description # Retrieve Function Group details\n\nRetrieves details for a specific function group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.FunctionGroupItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsFunctionGroupsRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsFunctionGroupsRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/function-groups/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsFunctionGroupsRecord\n   * @type {Function}\n   * @description # Update Function Group details\n\nUpdates details for a specific function group.\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.FunctionGroupItemPut} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsFunctionGroupsRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsFunctionGroupsRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/function-groups/${id}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#deleteAccessgroupsFunctionGroupsRecord\n   * @type {Function}\n   * @description # Delete Function Group\n\nDeletes the specific function group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .deleteAccessgroupsFunctionGroupsRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteAccessgroupsFunctionGroupsRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/function-groups/${id}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersRecord\n   * @type {Function}\n   * @description # Provides User Access details\n\nProvides User Access details such as assigned user id, service agreement id, function groups and data groups.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetUser} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersPrivileges\n   * @type {Function}\n   * @description # List User privileges for given Business function\n\nProvides a list of user privileges for given business function(eg. Contacts).\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.userId User ID. Eg: 8a48e2685d787f78015d791ab6ad0002.\n     \n   * @param {?string} params.serviceAgreementId Service Agreement Id. Eg: 8a48e2685d788166015d791b0b9f0003.\n     \n   * @param {string} params.functionName Name of Function. Eg: Contacts.\n     \n   * @param {string} params.resourceName Name of Resource. Eg: Contacts.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetPrivileges} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersPrivileges(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersPrivileges(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/privileges`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersUserPrivileges\n   * @type {Function}\n   * @description # List User privileges for given Business function\n\nProvides a list of user privileges for given business function(eg. Contacts).\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.functionName Name of Function. Eg: Contacts.\n     \n   * @param {string} params.resourceName Name of Resource. Eg: Contacts.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetPrivileges} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersUserPrivileges(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersUserPrivileges(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/user-privileges`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersPermissions\n   * @type {Function}\n   * @description # Check if User is allowed to perform given action\n\nChecks if the user has the specific privileges for given business function.\n\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.userId User Id. Eg: 8a48e2685d787f78015d791ab6ad0002.\n     \n   * @param {?string} params.serviceAgreementId Service Agreement Id. Eg: 8a48e2685d787f78015d791ab6123456.\n     \n   * @param {string} params.functionName Name of Function. Eg: Contacts.\n     \n   * @param {string} params.resourceName Name of Resource. Eg: Contacts.\n     \n   * @param {string} params.privileges comma-separated privileges. Eg: view,create,execute.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersPermissions(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersPermissions(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/permissions`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsUsersPermissionsRecord\n   * @type {Function}\n   * @description # Updates permissions for a list of users. - Put\n\nUpdates permissions for a list of users.\n   \n   * @param {AccessGroupsData.UserPermissions} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsUsersPermissionsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsUsersPermissionsRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/permissions`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersUserPermissions\n   * @type {Function}\n   * @description # Check if User is allowed to perform given action\n\nChecks if the user has the specific privileges for given business function.\n\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.functionName Name of Function. Eg: Contacts.\n     \n   * @param {string} params.resourceName Name of Resource. Eg: Contacts.\n     \n   * @param {string} params.privileges comma-separated privileges. Eg: view,create,execute.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersUserPermissions(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersUserPermissions(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/user-permissions`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsUsersFunctionRecord\n   * @type {Function}\n   * @description # Assign/remove Function groups to user access\n\nAssigns or removes the specified Function Groups to the given User access.\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.AssignFunctionAccessGroup} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsUsersFunctionRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsUsersFunctionRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/${id}/function`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsUsersDataRecord\n   * @type {Function}\n   * @description # Assign/remove Data groups to user access\n\nAssigns or removes specified Data Groups to the given User access/function group.\n\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.AssignDataAccessGroup} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsUsersDataRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsUsersDataRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/${id}/data`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersPrivilegesArrangements\n   * @type {Function}\n   * @description # List Arrangements that user has access to\n\nProvides (retrieve) list of Arrangements along with appropriate privilege(s) that given User has access to.\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.userId User Id. Eg: 8a48e2685d787f78015d791ab6ad0002.\n     \n   * @param {?string} params.serviceAgreementId Service Agreement Id. Eg: 8a48e2685d787f78015d791ab6123456.\n     \n   * @param {string} params.functionName Name of function. Eg: Product Summary.\n     \n   * @param {string} params.resourceName Name of resource. Eg: Product Summary.\n     \n   * @param {?string} params.privilegeName Name of privilege. Eg: view.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ArrangementPrivileges} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersPrivilegesArrangements(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersPrivilegesArrangements(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/privileges/arrangements`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersPrivilegesArrangementsRecord\n   * @type {Function}\n   * @description # Arrangement permission check.\n\nChecks permissions for a single arrangement item.\n   \n   * @param {string} id \n     \n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.userId User ID. Eg: 8a48e2685d787f78015d791ac267000e.\n     \n   * @param {?string} params.serviceAgreementId Service Agreement ID. Eg: 8a48e2685d787f78015d791ac267111e.\n     \n   * @param {string} params.resource Resource name. Eg: Product Summary.\n     \n   * @param {string} params.function function name. Eg: Product Summary.\n     \n   * @param {string} params.privilege Privilege name. Eg: view.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersPrivilegesArrangementsRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersPrivilegesArrangementsRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/privileges/arrangements/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersUserPrivilegesArrangements\n   * @type {Function}\n   * @description # List Arrangements that user has access to\n\nProvides (retrieve) list of Arrangements along with appropriate privilege(s) that given User has access to.\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.functionName Name of function. Eg: Product Summary.\n     \n   * @param {string} params.resourceName Name of resource. Eg: Product Summary.\n     \n   * @param {?string} params.privilegeName Name of privilege. Eg: view.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ArrangementPrivileges} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersUserPrivilegesArrangements(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersUserPrivilegesArrangements(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/user-privileges/arrangements`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersUserPrivilegesArrangementsRecord\n   * @type {Function}\n   * @description # Arrangement permission check.\n\nChecks permissions for a single arrangement item.\n   \n   * @param {string} id \n     \n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.resource Resource name. Eg: Product Summary.\n     \n   * @param {string} params.function function name. Eg: Product Summary.\n     \n   * @param {string} params.privilege Privilege name. Eg: view.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersUserPrivilegesArrangementsRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersUserPrivilegesArrangementsRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/user-privileges/arrangements/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersPermissionsSummary\n   * @type {Function}\n   * @description # User Permissions Summary\n\nReturns aggregated summary of user permissions.\nReturned data structure will contain all allowed Resources + Business Functions + Permissions.\n\n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.PermissionsSummary} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersPermissionsSummary(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersPermissionsSummary(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/permissions/summary`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsRecord\n   * @type {Function}\n   * @description # Retrieve Service Agreement details\n\nRetrieves Service Agreement details by given ID.\n   \n   * @param {string} serviceAgreementId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsRecord(serviceAgreementId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsRecord(serviceAgreementId, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${serviceAgreementId}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsServiceagreementsRecord\n   * @type {Function}\n   * @description # Update Service Agreement details\n\nUpdates name, description and external Id for a specific service agreement.\n   \n   * @param {string} serviceAgreementId \n     \n   \n   * @param {AccessGroupsData.ServiceAgreementPut} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsServiceagreementsRecord(serviceAgreementId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsServiceagreementsRecord(serviceAgreementId, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${serviceAgreementId}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsContext\n   * @type {Function}\n   * @description # Retrieve Service Agreement details\n\nRetrieves Service Agreement details by given ID.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsContext(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsContext(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/context`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsIngestServiceagreementsRecord\n   * @type {Function}\n   * @description # Ingest Service Agreement\n\nCreates new Service Agreement (required to provide Legal Entity participants together with Admins).\n   \n   * @param {AccessGroupsData.ServicesAgreementIngest} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsIngestServiceagreementsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsIngestServiceagreementsRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/ingest/serviceagreements`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsParticipants\n   * @type {Function}\n   * @description # Retrieve Service Agreement participants\n\nRetrieves Legal Entities that are participants in Service Agreement.\n   \n   * @param {string} serviceAgreementId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementParticipants} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsParticipants(serviceAgreementId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsParticipants(serviceAgreementId, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${serviceAgreementId}/participants`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsAdmins\n   * @type {Function}\n   * @description # Retrieve Service Agreement admins\n\nRetrieves Users that are admins in Service Agreement.\n   \n   * @param {string} serviceAgreementId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementUsers} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsAdmins(serviceAgreementId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsAdmins(serviceAgreementId, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${serviceAgreementId}/admins`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsServiceagreementsAdminsRecord\n   * @type {Function}\n   * @description # Add admins in Service Agreement\n\nAdds Admins to a given Service Agreement, per Legal Entity participant.\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.UpdateAdmins} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsServiceagreementsAdminsRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsServiceagreementsAdminsRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/admins`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsContextParticipants\n   * @type {Function}\n   * @description # Retrieve Service Agreement participants\n\nRetrieves Legal Entities that are participants in Service Agreement from the context.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementParticipants} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsContextParticipants(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsContextParticipants(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/context/participants`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsContextUsers\n   * @type {Function}\n   * @description # List users in Service Agreement\n\nProvides a list of all users that belong to a given Service Agreement.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?string} params.query The search term used to search. Eg: backb.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementUsers} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsContextUsers(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsContextUsers(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/context/users`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsContextUsersAddRecord\n   * @type {Function}\n   * @description # Add/Remove Users in a Service Agreement\n\nAdds/Removes Users in a Service Agreement\n   \n   * @param {AccessGroupsData.UsersForServiceAgreement} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsContextUsersAddRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsContextUsersAddRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/context/users/add`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsContextUsersRemoveRecord\n   * @type {Function}\n   * @description # Add/Remove Users in a Service Agreement\n\nAdds/Removes Users in a Service Agreement\n   \n   * @param {AccessGroupsData.UsersForServiceAgreement} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsContextUsersRemoveRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsContextUsersRemoveRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/context/users/remove`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsContextUsersUnexposed\n   * @type {Function}\n   * @description # List all unexposed users \n\nProvides a list of all unexposed users that belong to the participants who are sharing users in the given Service Agreement.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.query The search term used to search. Eg: backb.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.UnexposedUsers} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsContextUsersUnexposed(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsContextUsersUnexposed(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/context/users/unexposed`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsIngestServiceagreementsParticipantsRecord\n   * @type {Function}\n   * @description # Add participants to service agreements batch\n\nAdds participants to existing service agreement - batch.\n   \n   * @param {AccessGroupsData.Participant} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsIngestServiceagreementsParticipantsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsIngestServiceagreementsParticipantsRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/ingest/serviceagreements/participants`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsIngestServiceagreementsUsersAddRecord\n   * @type {Function}\n   * @description # Add users to service agreements batch\n\nAdds users to service agreements batch\n   \n   * @param {AccessGroupsData.ServiceAgreementUsersBatchIngest} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsIngestServiceagreementsUsersAddRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsIngestServiceagreementsUsersAddRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/ingest/serviceagreements/users/add`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsIngestServiceagreementsUsersRemoveRecord\n   * @type {Function}\n   * @description # Remove users from service agreements batch\n\nRemoves users from service agreements batch\n   \n   * @param {AccessGroupsData.ServiceAgreementUsersBatchIngest} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsIngestServiceagreementsUsersRemoveRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsIngestServiceagreementsUsersRemoveRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/ingest/serviceagreements/users/remove`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsIngestServiceagreementsAdminsAddRecord\n   * @type {Function}\n   * @description # Add admins to service agreements batch\n\nAdds admins to service agreements batch\n   \n   * @param {AccessGroupsData.ServiceAgreementAdminsBatchIngest} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsIngestServiceagreementsAdminsAddRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsIngestServiceagreementsAdminsAddRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/ingest/serviceagreements/admins/add`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsIngestServiceagreementsAdminsRemoveRecord\n   * @type {Function}\n   * @description # Remove admins to service agreements batch\n\nRemoves admins of a service agreements in a batch\n   \n   * @param {AccessGroupsData.ServiceAgreementAdminsBatchIngest} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsIngestServiceagreementsAdminsRemoveRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsIngestServiceagreementsAdminsRemoveRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/ingest/serviceagreements/admins/remove`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsExternalRecord\n   * @type {Function}\n   * @description Service agreement retrieved.\n   \n   * @param {string} externalId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsExternalRecord(externalId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsExternalRecord(externalId, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/external/${externalId}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsercontextServiceagreements\n   * @type {Function}\n   * @description Retrieve the list service agreement of the current user\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.query The search term used to search. Eg: backb.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.UserContextServiceAgreements-GET} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsercontextServiceagreements(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsercontextServiceagreements(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/usercontext/serviceagreements`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsercontextServiceagreementsLegalentities\n   * @type {Function}\n   * @description Retrieve the list legal entities for a service agreement of the current user\n   \n   * @param {string} serviceAgreementId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.query The search term used to search. Eg: backb.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.UserContextLegalEntities-GET} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsercontextServiceagreementsLegalentities(serviceAgreementId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsercontextServiceagreementsLegalentities(serviceAgreementId, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/usercontext/serviceagreements/${serviceAgreementId}/legalentities`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n\n  \n\n  \n  /**\n   * @description\n   * Schema data. Keys of the object are names of the POST and PUT methods\n   *\n   * Note: The schema is not strictly a JSON schema. It is a whitelisted set of\n   * keys for each object property. The keys that are exposed are meant for validation\n   * purposes.\n   *\n   * The full list of *possible* keys for each property is:\n   * type, minimum, maximum, minLength, maxLength, pattern, enum, format, default,\n   * properties, items, minItems, maxItems, uniqueItems and required.\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html for more details\n   * on the meaning of these keys.\n   *\n   * The \"required\" array from JSON schema is tranformed into a \"required\" boolean\n   * on each property. This is for ease of use.\n   *\n   * @name AccessGroupsData#schemas\n   * @type {Object}\n   */\n  const schemas = {};\n\n    \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsDataRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsDataRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 128,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 255,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"serviceAgreementId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^[0-9a-f]{32}\",\n      \"required\": false\n    },\n    \"legalEntityId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"ARRANGEMENTS\",\n        \"CONTACTS\"\n      ],\n      \"required\": true\n    },\n    \"items\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsDataRecord = definedTypes['AccessGroupsData.DataAccessGroupItemBase'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsDataGroupsRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsDataGroupsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 128,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 255,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"serviceAgreementId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"ARRANGEMENTS\",\n        \"CONTACTS\"\n      ],\n      \"required\": true\n    },\n    \"items\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsDataGroupsRecord = definedTypes['AccessGroupsData.DataGroupItemBase'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsDataGroupsRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsDataGroupsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"type\": \"array\",\n  \"items\": {\n    \"properties\": {\n      \"id\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 128,\n        \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n        \"required\": true\n      },\n      \"description\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 255,\n        \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n        \"required\": true\n      },\n      \"externalServiceAgreementId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 64,\n        \"required\": true\n      },\n      \"type\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"ARRANGEMENTS\",\n          \"CONTACTS\"\n        ],\n        \"required\": true\n      },\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"properties\": {}\n        },\n        \"required\": true\n      }\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsDataGroupsRecord = definedTypes['AccessGroupsData.DataGroupsBatchPut'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsFunctionRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsFunctionRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 128,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 255,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"legalEntityId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"serviceAgreementId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^[0-9a-f]{32}\",\n      \"required\": false\n    },\n    \"permissions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"functionId\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 36,\n            \"required\": true\n          },\n          \"assignedPrivileges\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {\n                \"privilege\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"maxLength\": 16,\n                  \"required\": true\n                },\n                \"limits\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"properties\": {\n                      \"limitType\": {\n                        \"enum\": [\n                          \"daily\",\n                          \"weekly\",\n                          \"monthly\",\n                          \"upper\"\n                        ],\n                        \"required\": true\n                      },\n                      \"amount\": {\n                        \"type\": \"number\",\n                        \"required\": false\n                      }\n                    }\n                  },\n                  \"required\": false\n                }\n              }\n            },\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsFunctionRecord = definedTypes['AccessGroupsData.FunctionAccessGroupItemBase'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsFunctionGroupsRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsFunctionGroupsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 128,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 255,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"serviceAgreementId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"required\": true\n    },\n    \"permissions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"functionId\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 36,\n            \"required\": true\n          },\n          \"assignedPrivileges\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {\n                \"privilege\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"maxLength\": 16,\n                  \"required\": true\n                },\n                \"limits\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"properties\": {\n                      \"limitType\": {\n                        \"enum\": [\n                          \"daily\",\n                          \"weekly\",\n                          \"monthly\",\n                          \"upper\"\n                        ],\n                        \"required\": true\n                      },\n                      \"amount\": {\n                        \"type\": \"number\",\n                        \"required\": false\n                      }\n                    }\n                  },\n                  \"required\": false\n                }\n              }\n            },\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsFunctionGroupsRecord = definedTypes['AccessGroupsData.FunctionGroupItemBase'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsFunctionGroupsRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsFunctionGroupsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"type\": \"array\",\n  \"items\": {\n    \"properties\": {\n      \"id\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n        \"required\": true\n      },\n      \"externalLegalEntityId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 128,\n        \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n        \"required\": true\n      },\n      \"description\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 255,\n        \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n        \"required\": true\n      },\n      \"externalServiceAgreementId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 64,\n        \"required\": true\n      },\n      \"permissions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"properties\": {\n            \"functionId\": {\n              \"type\": \"string\",\n              \"minLength\": 1,\n              \"maxLength\": 36,\n              \"required\": true\n            },\n            \"assignedPrivileges\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"properties\": {\n                  \"privilege\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1,\n                    \"maxLength\": 16,\n                    \"required\": true\n                  },\n                  \"limits\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"properties\": {\n                        \"limitType\": {\n                          \"enum\": [\n                            \"daily\",\n                            \"weekly\",\n                            \"monthly\",\n                            \"upper\"\n                          ],\n                          \"required\": true\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"required\": false\n                        }\n                      }\n                    },\n                    \"required\": false\n                  }\n                }\n              },\n              \"required\": true\n            }\n          }\n        },\n        \"required\": false\n      }\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsFunctionGroupsRecord = definedTypes['AccessGroupsData.FunctionGroupsBatchPut'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsUsersRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsUsersRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"userId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^\\\\S+$\",\n      \"required\": true\n    },\n    \"serviceAgreementId\": {\n      \"type\": \"string\",\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsUsersRecord = definedTypes['AccessGroupsData.UserItem'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 128,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 255,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"participants\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 36,\n            \"pattern\": \"^[0-9a-f]{32}\",\n            \"required\": true\n          },\n          \"sharingUsers\": {\n            \"type\": \"boolean\",\n            \"required\": true\n          },\n          \"sharingAccounts\": {\n            \"type\": \"boolean\",\n            \"required\": true\n          }\n        }\n      },\n      \"minItems\": 1,\n      \"required\": true\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"ENABLED\",\n        \"DISABLED\"\n      ],\n      \"default\": \"ENABLED\",\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsRecord = definedTypes['AccessGroupsData.ServiceAgreementPost'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsUsercontextRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsUsercontextRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"serviceAgreementId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^[0-9a-f]{32}\",\n      \"required\": true\n    },\n    \"legalEntityId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^[0-9a-f]{32}\",\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsUsercontextRecord = definedTypes['AccessGroupsData.UserContext-POST'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsDataRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsDataRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"dataAccessGroupId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsDataRecord = definedTypes['AccessGroupsData.DataAccessGroupItem'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsDataGroupsDeleteRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsDataGroupsDeleteRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"ids\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"minItems\": 1,\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsDataGroupsDeleteRecord = definedTypes['AccessGroupsData.DataGroupBatchDeleteItem'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsDataGroupsRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsDataGroupsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^[0-9a-f]{32}\",\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsDataGroupsRecord = definedTypes['AccessGroupsData.DataGroupItem'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsFunctionRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsFunctionRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"functionAccessGroupId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsFunctionRecord = definedTypes['AccessGroupsData.FunctionAccessGroupItem'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsFunctionGroupsDeleteRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsFunctionGroupsDeleteRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"ids\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"minItems\": 1,\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsFunctionGroupsDeleteRecord = definedTypes['AccessGroupsData.FunctionGroupBatchDeleteItem'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsFunctionGroupsRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsFunctionGroupsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"legalEntityId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsFunctionGroupsRecord = definedTypes['AccessGroupsData.FunctionGroupItemPut'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsUsersPermissionsRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsUsersPermissionsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"type\": \"array\",\n  \"items\": {\n    \"properties\": {\n      \"userId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"required\": true\n      },\n      \"legalEntityId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"required\": false\n      },\n      \"externalServiceAgreementId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 64,\n        \"required\": true\n      },\n      \"functionDataPairs\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"properties\": {\n            \"functionGroupId\": {\n              \"type\": \"string\",\n              \"minLength\": 1,\n              \"maxLength\": 36,\n              \"required\": true\n            },\n            \"dataGroupIds\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"properties\": {}\n              },\n              \"required\": false\n            }\n          }\n        },\n        \"required\": true\n      }\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsUsersPermissionsRecord = definedTypes['AccessGroupsData.UserPermissions'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsUsersFunctionRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsUsersFunctionRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"functionAccessGroupIds\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"minItems\": 1,\n      \"required\": true\n    },\n    \"revoke\": {\n      \"type\": \"boolean\",\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsUsersFunctionRecord = definedTypes['AccessGroupsData.AssignFunctionAccessGroup'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsUsersDataRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsUsersDataRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"functionAccessGroupId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"required\": true\n    },\n    \"dataAccessGroupIds\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"minItems\": 1,\n      \"required\": true\n    },\n    \"revoke\": {\n      \"type\": \"boolean\",\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsUsersDataRecord = definedTypes['AccessGroupsData.AssignDataAccessGroup'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsServiceagreementsRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsServiceagreementsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 128,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": false\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 255,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": false\n    },\n    \"externalId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 64,\n      \"pattern\": \"^\\\\S+$\",\n      \"required\": false\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"ENABLED\",\n        \"DISABLED\"\n      ],\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsServiceagreementsRecord = definedTypes['AccessGroupsData.ServiceAgreementPut'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsIngestServiceagreementsRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsIngestServiceagreementsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 128,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"externalId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 64,\n      \"pattern\": \"^\\\\S+$\",\n      \"required\": false\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 255,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"participantsToIngest\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"externalId\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 64,\n            \"pattern\": \"^\\\\S+$\",\n            \"required\": true\n          },\n          \"sharingUsers\": {\n            \"type\": \"boolean\",\n            \"required\": true\n          },\n          \"sharingAccounts\": {\n            \"type\": \"boolean\",\n            \"required\": true\n          },\n          \"admins\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {}\n            },\n            \"uniqueItems\": true,\n            \"required\": false\n          },\n          \"users\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {}\n            },\n            \"uniqueItems\": true,\n            \"required\": false\n          }\n        }\n      },\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"required\": true\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"ENABLED\",\n        \"DISABLED\"\n      ],\n      \"default\": \"ENABLED\",\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsIngestServiceagreementsRecord = definedTypes['AccessGroupsData.ServicesAgreementIngest'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsServiceagreementsAdminsRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsServiceagreementsAdminsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"participants\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 36,\n            \"required\": true\n          },\n          \"admins\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {}\n            },\n            \"uniqueItems\": true,\n            \"required\": true\n          }\n        }\n      },\n      \"minItems\": 1,\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsServiceagreementsAdminsRecord = definedTypes['AccessGroupsData.UpdateAdmins'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsContextUsersAddRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsContextUsersAddRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"users\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"minItems\": 1,\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsContextUsersAddRecord = definedTypes['AccessGroupsData.UsersForServiceAgreement'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsContextUsersRemoveRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsContextUsersRemoveRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"users\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"minItems\": 1,\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsContextUsersRemoveRecord = definedTypes['AccessGroupsData.UsersForServiceAgreement'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsIngestServiceagreementsParticipantsRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsIngestServiceagreementsParticipantsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"type\": \"array\",\n  \"items\": {\n    \"properties\": {\n      \"externalServiceAgreementId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 64,\n        \"required\": true\n      },\n      \"externalParticipantId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 64,\n        \"required\": true\n      },\n      \"sharingUsers\": {\n        \"type\": \"boolean\",\n        \"required\": true\n      },\n      \"sharingAccounts\": {\n        \"type\": \"boolean\",\n        \"required\": true\n      }\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsIngestServiceagreementsParticipantsRecord = definedTypes['AccessGroupsData.Participant'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsIngestServiceagreementsUsersAddRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsIngestServiceagreementsUsersAddRecord\n   * @type {Object}\n   * @example\n   * {\n  \"type\": \"array\",\n  \"items\": {\n    \"properties\": {\n      \"userId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^[0-9a-f]{32}\",\n        \"required\": true\n      },\n      \"externalServiceAgreementId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 64,\n        \"pattern\": \"^\\\\S+$\",\n        \"required\": true\n      },\n      \"legalEntityId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^[0-9a-f]{32}\",\n        \"required\": true\n      }\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsIngestServiceagreementsUsersAddRecord = definedTypes['AccessGroupsData.ServiceAgreementUsersBatchIngest'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsIngestServiceagreementsUsersRemoveRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsIngestServiceagreementsUsersRemoveRecord\n   * @type {Object}\n   * @example\n   * {\n  \"type\": \"array\",\n  \"items\": {\n    \"properties\": {\n      \"userId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^[0-9a-f]{32}\",\n        \"required\": true\n      },\n      \"externalServiceAgreementId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 64,\n        \"pattern\": \"^\\\\S+$\",\n        \"required\": true\n      },\n      \"legalEntityId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^[0-9a-f]{32}\",\n        \"required\": true\n      }\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsIngestServiceagreementsUsersRemoveRecord = definedTypes['AccessGroupsData.ServiceAgreementUsersBatchIngest'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsIngestServiceagreementsAdminsAddRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsIngestServiceagreementsAdminsAddRecord\n   * @type {Object}\n   * @example\n   * {\n  \"type\": \"array\",\n  \"items\": {\n    \"properties\": {\n      \"userId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^[0-9a-f]{32}\",\n        \"required\": true\n      },\n      \"externalServiceAgreementId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 64,\n        \"pattern\": \"^\\\\S+$\",\n        \"required\": true\n      },\n      \"legalEntityId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^[0-9a-f]{32}\",\n        \"required\": true\n      }\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsIngestServiceagreementsAdminsAddRecord = definedTypes['AccessGroupsData.ServiceAgreementAdminsBatchIngest'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsIngestServiceagreementsAdminsRemoveRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsIngestServiceagreementsAdminsRemoveRecord\n   * @type {Object}\n   * @example\n   * {\n  \"type\": \"array\",\n  \"items\": {\n    \"properties\": {\n      \"userId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^[0-9a-f]{32}\",\n        \"required\": true\n      },\n      \"externalServiceAgreementId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 64,\n        \"pattern\": \"^\\\\S+$\",\n        \"required\": true\n      },\n      \"legalEntityId\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 36,\n        \"pattern\": \"^[0-9a-f]{32}\",\n        \"required\": true\n      }\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsIngestServiceagreementsAdminsRemoveRecord = definedTypes['AccessGroupsData.ServiceAgreementAdminsBatchIngest'];\n      \n\n  /**\n   * @typedef Response\n   * @type {Object}\n   * @property {Object} data See method descriptions for possible return types\n   * @property {Function} headers Getter headers function\n   * @property {Number} status HTTP status code of the response.\n   * @property {String} statusText HTTP status text of the response.\n   */\n\n  return ({\n    \n    getAccessgroupsData,\n    \n    postAccessgroupsDataRecord,\n    \n    postAccessgroupsDataGroupsRecord,\n    \n    putAccessgroupsDataGroupsRecord,\n    \n    getAccessgroupsDataGroups,\n    \n    getAccessgroupsFunction,\n    \n    postAccessgroupsFunctionRecord,\n    \n    getAccessgroupsFunctionGroups,\n    \n    postAccessgroupsFunctionGroupsRecord,\n    \n    putAccessgroupsFunctionGroupsRecord,\n    \n    getAccessgroupsConfigFunctions,\n    \n    postAccessgroupsUsersRecord,\n    \n    getAccessgroupsUsers,\n    \n    postAccessgroupsServiceagreementsRecord,\n    \n    getAccessgroupsServiceagreements,\n    \n    postAccessgroupsUsercontextRecord,\n    \n    getAccessgroupsDataRecord,\n    \n    putAccessgroupsDataRecord,\n    \n    deleteAccessgroupsDataRecord,\n    \n    postAccessgroupsDataGroupsDeleteRecord,\n    \n    getAccessgroupsDataGroupsRecord,\n    \n    putAccessgroupsDataGroupsRecord,\n    \n    deleteAccessgroupsDataGroupsRecord,\n    \n    getAccessgroupsFunctionRecord,\n    \n    putAccessgroupsFunctionRecord,\n    \n    deleteAccessgroupsFunctionRecord,\n    \n    postAccessgroupsFunctionGroupsDeleteRecord,\n    \n    getAccessgroupsFunctionGroupsRecord,\n    \n    putAccessgroupsFunctionGroupsRecord,\n    \n    deleteAccessgroupsFunctionGroupsRecord,\n    \n    getAccessgroupsUsersRecord,\n    \n    getAccessgroupsUsersPrivileges,\n    \n    getAccessgroupsUsersUserPrivileges,\n    \n    getAccessgroupsUsersPermissions,\n    \n    putAccessgroupsUsersPermissionsRecord,\n    \n    getAccessgroupsUsersUserPermissions,\n    \n    postAccessgroupsUsersFunctionRecord,\n    \n    postAccessgroupsUsersDataRecord,\n    \n    getAccessgroupsUsersPrivilegesArrangements,\n    \n    getAccessgroupsUsersPrivilegesArrangementsRecord,\n    \n    getAccessgroupsUsersUserPrivilegesArrangements,\n    \n    getAccessgroupsUsersUserPrivilegesArrangementsRecord,\n    \n    getAccessgroupsUsersPermissionsSummary,\n    \n    getAccessgroupsServiceagreementsRecord,\n    \n    putAccessgroupsServiceagreementsRecord,\n    \n    getAccessgroupsServiceagreementsContext,\n    \n    postAccessgroupsServiceagreementsIngestServiceagreementsRecord,\n    \n    getAccessgroupsServiceagreementsParticipants,\n    \n    getAccessgroupsServiceagreementsAdmins,\n    \n    putAccessgroupsServiceagreementsAdminsRecord,\n    \n    getAccessgroupsServiceagreementsContextParticipants,\n    \n    getAccessgroupsServiceagreementsContextUsers,\n    \n    postAccessgroupsServiceagreementsContextUsersAddRecord,\n    \n    postAccessgroupsServiceagreementsContextUsersRemoveRecord,\n    \n    getAccessgroupsServiceagreementsContextUsersUnexposed,\n    \n    postAccessgroupsServiceagreementsIngestServiceagreementsParticipantsRecord,\n    \n    postAccessgroupsServiceagreementsIngestServiceagreementsUsersAddRecord,\n    \n    postAccessgroupsServiceagreementsIngestServiceagreementsUsersRemoveRecord,\n    \n    postAccessgroupsServiceagreementsIngestServiceagreementsAdminsAddRecord,\n    \n    postAccessgroupsServiceagreementsIngestServiceagreementsAdminsRemoveRecord,\n    \n    getAccessgroupsServiceagreementsExternalRecord,\n    \n    getAccessgroupsUsercontextServiceagreements,\n    \n    getAccessgroupsUsercontextServiceagreementsLegalentities,\n    \n    \n    schemas,\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-accessgroups-http-ng/scripts/data-bb-accessgroups-http.js"],"sourceRoot":""}