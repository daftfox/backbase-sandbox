{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap 661d8b4c9ef6c2bf3c28?8185","webpack:///./model-bb-transaction-categories-ng/model.xml","webpack:///./model-bb-transaction-categories-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///external \"data-bb-categories-management-http-ng\"","webpack:///external \"lib-bb-storage-ng\"","webpack:///./model-bb-transaction-categories-ng/scripts/transaction-categories.js","webpack:///external \"lib-bb-model-errors\"","webpack:///./model-bb-transaction-categories-ng/scripts/constants.js"],"names":["moduleKey","modelTransactionCategoriesKey","angular","module","categoriesManagementDataModuleKey","bbStorageModuleKey","factory","categoriesManagementDataKey","bbStorageServiceKey","Model","name","transactionCategoriesModel","transactionCategoriesData","bbStorage","getCategoriesLevel","getItem","bbStorageKeys","TRANSACTION_CATEGORIES_LEVEL","loadCategories","params","getCategories","then","setItem","TRANSACTION_CATEGORIES_LIST","data","level","catch","e","isLevelChanged","currentLevel","getCachedCategories","levelChanged"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,0C;;;;;;;;;;;;;;;;;;;;;;;ACuBA;;;;AAEA;;;;AAIA;;;;AAIA;;;;;;AAjCA;;;;;;;;;;;;;;;;;;;;;;;AAmCA,KAAMA,YAAY,oCAAlB;;AAEO,KAAMC,wEAAmCD,SAAnC,WAAN;;mBAEQE,0BACZC,MADY,CACLH,SADK,EACM,CACjBI,0CADiB,EAEjBC,wBAFiB,CADN,EAMZC,OANY,CAMJL,6BANI,EAM2B,CACtCM,6DADsC,EAEtCC,mCAFsC;AAGtC;AACAC,gCAJsC,CAN3B,EAaZC,I;;;;;;ACpDH,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;;;;;;mBCYwBC,0B;;AAZxB;;AACA;;;;;;AAEA;;;;;;;;;AASe,UAASA,0BAAT,CACbC,yBADa,EAEbC,SAFa,EAGb;AACA;;;;;;;;;AASA,OAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,YAAMD,UAAUE,OAAV,CAAkBC,oBAAcC,4BAAhC,CAAN;AAAA,IAA3B;;AAEA;;;;;;;;;;;AAWA,OAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,MAAD;AAAA,YACrBP,0BAA0BQ,aAA1B,CAAwCD,MAAxC,EACGE,IADH,CACQ,gBAAQ;AACZR,iBAAUS,OAAV,CAAkBN,oBAAcO,2BAAhC,EAA6DC,IAA7D;AACAX,iBAAUS,OAAV,CAAkBN,oBAAcC,4BAAhC,EAA8DE,OAAOM,KAArE;AACA,cAAOD,IAAP;AACD,MALH,EAMGE,KANH,CAMS,aAAK;AACV,aAAM,qCAAcC,CAAd,CAAN;AACD,MARH,CADqB;AAAA,IAAvB;;AAWA;;;;;;;;;;;;AAYA,OAAMC,iBAAiB,SAAjBA,cAAiB,CAACH,KAAD;AAAA,YACrBX,qBACGO,IADH,CACQ,UAACQ,YAAD;AAAA,cAAmBA,iBAAiBJ,KAApC;AAAA,MADR,CADqB;AAAA,IAAvB;;AAIA;;;;;;;;;;AAUA,OAAMK,sBAAsB,SAAtBA,mBAAsB;AAAA,YAC1BjB,UAAUE,OAAV,CAAkBC,oBAAcO,2BAAhC,CAD0B;AAAA,IAA5B;;AAGA;;;;;;;;;;;AAWA,OAAMH,gBAAgB,SAAhBA,aAAgB;AAAA,SAACD,MAAD,uEAAU,EAAV;AAAA,YACpBS,eAAeT,OAAOM,KAAtB,EACGJ,IADH,CACQ,UAACU,YAAD;AAAA,cAAmBA,eAAe,IAAf,GAAsBD,qBAAzC;AAAA,MADR,EAEGT,IAFH,CAEQ,UAACG,IAAD;AAAA,cAAWA,QAAQN,eAAeC,MAAf,CAAnB;AAAA,MAFR,CADoB;AAAA,IAAtB;;AAKA;;;;AAIA,UAAO;AACLC;AADK,IAAP;AAGD,E;;;;;;ACrGD,iD;;;;;;;;;;;ACAA;;;;;;AAMA,KAAMJ,gBAAgB;AACpBO,gCAA6B,gCADT;AAEpBN,iCAA8B;AAFV,EAAtB;;mBAKeD,a","file":"model-bb-transaction-categories-ng/scripts/model-bb-transaction-categories-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"data-bb-categories-management-http-ng\"), require(\"lib-bb-storage-ng\"), require(\"lib-bb-model-errors\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"model-bb-transaction-categories-ng\", [\"vendor-bb-angular\", \"data-bb-categories-management-http-ng\", \"lib-bb-storage-ng\", \"lib-bb-model-errors\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"model-bb-transaction-categories-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"data-bb-categories-management-http-ng\"), require(\"lib-bb-storage-ng\"), require(\"lib-bb-model-errors\"));\n\telse\n\t\troot[\"model-bb-transaction-categories-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"data-bb-categories-management-http-ng\"], root[\"lib-bb-storage-ng\"], root[\"lib-bb-model-errors\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_16__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 661d8b4c9ef6c2bf3c28","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./model-bb-transaction-categories-ng/model.xml\n// module id = 0\n// module chunks = 1","/**\n * @module model-bb-transaction-categories-ng\n *\n * @description\n * Model for widget-bb-transaction-categories-ng\n *\n * @example\n * import modelTransactionCategoriesModuleKey, {\n *  modelTransactionCategoriesKey\n * } from 'model-bb-transaction-categories-ng';\n *\n * angular\n *   .module('ExampleModule', [\n *     modelTransactionCategoriesModuleKey,\n *   ])\n *   .factory('someFactory', [\n *     modelTransactionCategoriesKey,\n *     // into\n *     function someFactory(transactionCategoriesModel) {\n *       // ...\n *     },\n *   ]);\n */\nimport angular from 'vendor-bb-angular';\n\nimport categoriesManagementDataModuleKey, {\n  categoriesManagementDataKey,\n} from 'data-bb-categories-management-http-ng';\n\nimport bbStorageModuleKey, {\n  bbStorageServiceKey,\n} from 'lib-bb-storage-ng';\n\nimport Model from './transaction-categories';\n\nconst moduleKey = 'model-bb-transaction-categories-ng';\n\nexport const modelTransactionCategoriesKey = `${moduleKey}:model`;\n\nexport default angular\n  .module(moduleKey, [\n    categoriesManagementDataModuleKey,\n    bbStorageModuleKey,\n  ])\n\n  .factory(modelTransactionCategoriesKey, [\n    categoriesManagementDataKey,\n    bbStorageServiceKey,\n    /* into */\n    Model,\n  ])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-transaction-categories-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 12\n// module chunks = 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-categories-management-http-ng\"\n// module id = 13\n// module chunks = 1","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-storage-ng\"\n// module id = 14\n// module chunks = 1","import { fromHttpError } from 'lib-bb-model-errors';\nimport bbStorageKeys from './constants';\n\n/**\n * Model factory for model-bb-transaction-categories-ng\n *\n * @inner\n * @type {function}\n * @param {Object} Promise An ES2015 compatible `Promise` object.\n *\n * @return {Object}\n */\nexport default function transactionCategoriesModel(\n  transactionCategoriesData,\n  bbStorage\n) {\n  /**\n   * @name transactionCategoriesModel#getCategoriesLevel\n   * @type {function}\n   *\n   * @description\n   * Get current categories' level\n   *\n   * @returns {Promise.<String>} A Promise with current categories' level.\n   */\n  const getCategoriesLevel = () => bbStorage.getItem(bbStorageKeys.TRANSACTION_CATEGORIES_LEVEL);\n\n  /**\n   * @name transactionCategoriesModel#loadCategories\n   * @type {function}\n   *\n   * @description\n   * Load the availabe categories.\n   *\n   * @param {Object} params Get request parameters\n   *\n   * @returns {Promise.<Object>} A Promise with all of the availabe categories.\n   */\n  const loadCategories = (params) =>\n    transactionCategoriesData.getCategories(params)\n      .then(data => {\n        bbStorage.setItem(bbStorageKeys.TRANSACTION_CATEGORIES_LIST, data);\n        bbStorage.setItem(bbStorageKeys.TRANSACTION_CATEGORIES_LEVEL, params.level);\n        return data;\n      })\n      .catch(e => {\n        throw fromHttpError(e);\n      });\n\n  /**\n   * @name transactionCategoriesModel#isLevelChanged\n   * @type {function}\n   *\n   * @inner\n   * @description\n   * Check if categorie's preference level is changed\n   *\n   * @level {string} level from preference\n   *\n   * @returns {Promise.<Boolean>} it returns a promis with true if user changed level preference\n   */\n  const isLevelChanged = (level) =>\n    getCategoriesLevel()\n      .then((currentLevel) => (currentLevel !== level));\n\n  /**\n   * @name transactionCategoriesModel#getCachedCategories\n   * @type {function}\n   *\n   * @inner\n   * @description\n   * get cached categories\n   *\n   * @returns {Promise.<Object>} it returns promise with data object\n   */\n  const getCachedCategories = () =>\n    bbStorage.getItem(bbStorageKeys.TRANSACTION_CATEGORIES_LIST);\n\n  /**\n   * @name transactionCategoriesModel#getCategories\n   * @type {function}\n   *\n   * @description\n   * Load the availabe categories from server or storage.\n   *\n   * @param {?Object} params Get request parameters\n   *\n   * @returns {Promise.<Object>} A Promise with all of the availabe categories.\n   */\n  const getCategories = (params = {}) =>\n    isLevelChanged(params.level)\n      .then((levelChanged) => (levelChanged ? null : getCachedCategories()))\n      .then((data) => (data || loadCategories(params)));\n\n  /**\n   * @name transactionCategoriesModel\n   * @type {Object}\n   */\n  return {\n    getCategories,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-transaction-categories-ng/scripts/transaction-categories.js","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 16\n// module chunks = 1 2","/**\n * @name bbStorageKeys\n * @description\n * bbStorage keys enum\n * @type {object}\n */\nconst bbStorageKeys = {\n  TRANSACTION_CATEGORIES_LIST: 'bb.transaction.categories.list',\n  TRANSACTION_CATEGORIES_LEVEL: 'bb.transaction.categories.level',\n};\n\nexport default bbStorageKeys;\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-transaction-categories-ng/scripts/constants.js"],"sourceRoot":""}