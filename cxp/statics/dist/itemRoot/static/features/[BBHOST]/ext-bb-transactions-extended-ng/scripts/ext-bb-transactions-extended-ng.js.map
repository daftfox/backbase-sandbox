{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap 110596ed019bd8a9816a?8523","webpack:///./ext-bb-transactions-extended-ng/model.xml","webpack:///./ext-bb-transactions-extended-ng/scripts/index.js","webpack:///external \"vendor-bb-uib-accordion\"","webpack:///external \"vendor-bb-angular-ng-aria\"","webpack:///external \"ui-bb-format-amount-ng\"","webpack:///external \"ui-bb-loading-indicator-ng\"","webpack:///external \"ui-bb-inline-status-ng\"","webpack:///external \"ui-bb-i18n-ng\"","webpack:///external \"ui-bb-substitute-error-ng\"","webpack:///external \"ui-bb-empty-state-ng\"","webpack:///external \"ui-bb-transaction-search-filter-ng\"","webpack:///external \"ui-bb-load-more-ng\"","webpack:///external \"ui-bb-sortable-column-ng\"","webpack:///external \"ui-bb-paginator-ng\"","webpack:///external \"ui-bb-date-label-filter-ng\"","webpack:///./ext-bb-transactions-extended-ng/scripts/helpers.js","webpack:///./ext-bb-transactions-extended-ng/scripts/debit-credit-sign.js","webpack:///./ext-bb-transactions-extended-ng/scripts/constants.js","webpack:///./ext-bb-transactions-extended-ng/scripts/get-category-icon-class.js","webpack:///./ext-bb-transactions-extended-ng/scripts/hooks.js","webpack:///./ext-bb-transactions-extended-ng/scripts/set-type.js"],"names":["extHooks","helpers","extHelpers","hooks","dependencyKeys","uibAccordionKey","ngAriaKey","uiBbFormatAmountKey","uiBbLoadingIndicatorKey","uiBbInlineStatusKey","i18nNgKey","uiBbSubstituteErrorKey","uiBbEmptyStateKey","uiBbTransactionSearchFilterKey","uiBbLoadMoreKey","uiBbSortableColumnKey","uiBbPaginatorKey","uiBbDateLabelFilterModuleKey","context","i18nFilter","$filter","headers","label","class","sortable","key","direction","transactionTypes","Types","getSignedAmount","transaction","amount","creditDebitIndicator","negativeSignKey","isSortableActive","sort","orderBy","isPaginationTypeMatch","$ctrl","type","state","pageParams","paginationType","showNoTransactions","transactions","transactionsArray","length","loading","searching","showNoResults","searchTransactions","getCategoryIconClass","dateLabel","TimePeriod","getTransactionGridClassName","billingStatus","customType","TYPE_1","billingStatusLabel","BillingStatus","positiveSignKey","creditDebitKeysToSign","Object","assign","debitCreditSign","categoryClassPrefix","uncategorizedIconClass","TYPE_2","TYPE_3","TYPE_4","now","today","yesterday","BILLED","UNBILLED","PENDING","transactionCategory","withPrefix","CATEGORY_CLASS_PREFIX","toLowerCase","replace","DEFAULT_ICON_CLASS","processTransactions","map","setType","transactionsGroupedByDate","reduce","groupedByDate","datesObject","bookingDateObj","Date","bookingDate","date","toISOString","slice","clearToAdd","forEach","element","id","push","defaultSortableColumn","defaultSortableDirection","processCategories","categories","isSubCategories","some","category","subCategories","categoryIconClass","categoryName","processTransactionsEnumValues","transactionsEnumValues","result","option","labelKey","value","role","counterPartyName","description"],"mappings":"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","file":"ext-bb-transactions-extended-ng/scripts/ext-bb-transactions-extended-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-uib-accordion\"), require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-format-amount-ng\"), require(\"ui-bb-loading-indicator-ng\"), require(\"ui-bb-inline-status-ng\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-transaction-search-filter-ng\"), require(\"ui-bb-load-more-ng\"), require(\"ui-bb-sortable-column-ng\"), require(\"ui-bb-paginator-ng\"), require(\"ui-bb-date-label-filter-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bb-transactions-extended-ng\", [\"vendor-bb-uib-accordion\", \"vendor-bb-angular-ng-aria\", \"ui-bb-format-amount-ng\", \"ui-bb-loading-indicator-ng\", \"ui-bb-inline-status-ng\", \"ui-bb-i18n-ng\", \"ui-bb-substitute-error-ng\", \"ui-bb-empty-state-ng\", \"ui-bb-transaction-search-filter-ng\", \"ui-bb-load-more-ng\", \"ui-bb-sortable-column-ng\", \"ui-bb-paginator-ng\", \"ui-bb-date-label-filter-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bb-transactions-extended-ng\"] = factory(require(\"vendor-bb-uib-accordion\"), require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-format-amount-ng\"), require(\"ui-bb-loading-indicator-ng\"), require(\"ui-bb-inline-status-ng\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-transaction-search-filter-ng\"), require(\"ui-bb-load-more-ng\"), require(\"ui-bb-sortable-column-ng\"), require(\"ui-bb-paginator-ng\"), require(\"ui-bb-date-label-filter-ng\"));\n\telse\n\t\troot[\"ext-bb-transactions-extended-ng\"] = factory(root[\"vendor-bb-uib-accordion\"], root[\"vendor-bb-angular-ng-aria\"], root[\"ui-bb-format-amount-ng\"], root[\"ui-bb-loading-indicator-ng\"], root[\"ui-bb-inline-status-ng\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-substitute-error-ng\"], root[\"ui-bb-empty-state-ng\"], root[\"ui-bb-transaction-search-filter-ng\"], root[\"ui-bb-load-more-ng\"], root[\"ui-bb-sortable-column-ng\"], root[\"ui-bb-paginator-ng\"], root[\"ui-bb-date-label-filter-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 110596ed019bd8a9816a","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bb-transactions-extended-ng/model.xml\n// module id = 0\n// module chunks = 0","/**\n * @module ext-bb-transactions-extended-ng\n * @requires vendor-bb-uib-accordion\n * @requires ui-bb-format-amount\n *\n * @description\n * Extended extension for transactions widget.\n *\n * @example\n * <!-- payment widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *  <value type=\"string\">ext-bb-transactions-extended-ng</value>\n * </property>\n */\nimport uibAccordionKey from 'vendor-bb-uib-accordion';\nimport ngAriaKey from 'vendor-bb-angular-ng-aria';\nimport uiBbFormatAmountKey from 'ui-bb-format-amount-ng';\nimport uiBbLoadingIndicatorKey from 'ui-bb-loading-indicator-ng';\nimport uiBbInlineStatusKey from 'ui-bb-inline-status-ng';\nimport i18nNgKey from 'ui-bb-i18n-ng';\nimport uiBbSubstituteErrorKey from 'ui-bb-substitute-error-ng';\nimport uiBbEmptyStateKey from 'ui-bb-empty-state-ng';\nimport uiBbTransactionSearchFilterKey from 'ui-bb-transaction-search-filter-ng';\nimport uiBbLoadMoreKey from 'ui-bb-load-more-ng';\nimport uiBbSortableColumnKey from 'ui-bb-sortable-column-ng';\nimport uiBbPaginatorKey from 'ui-bb-paginator-ng';\nimport uiBbDateLabelFilterModuleKey from 'ui-bb-date-label-filter-ng';\n\nimport extHelpers from './helpers';\nimport * as extHooks from './hooks';\n\nexport const helpers = extHelpers;\n/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-bb-transactions-ng\n */\nexport const hooks = extHooks;\n\nexport const dependencyKeys = [\n  uibAccordionKey,\n  ngAriaKey,\n  uiBbFormatAmountKey,\n  uiBbLoadingIndicatorKey,\n  uiBbInlineStatusKey,\n  i18nNgKey,\n  uiBbSubstituteErrorKey,\n  uiBbEmptyStateKey,\n  uiBbTransactionSearchFilterKey,\n  uiBbLoadMoreKey,\n  uiBbSortableColumnKey,\n  uiBbPaginatorKey,\n  uiBbDateLabelFilterModuleKey,\n];\n\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-transactions-extended-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-accordion\"\n// module id = 2\n// module chunks = 0 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-aria\"\n// module id = 3\n// module chunks = 0 1 2 5","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-format-amount-ng\"\n// module id = 4\n// module chunks = 0 1 2 3 4","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-loading-indicator-ng\"\n// module id = 5\n// module chunks = 0 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-inline-status-ng\"\n// module id = 6\n// module chunks = 0 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 7\n// module chunks = 0 1 2 3 4 5 6","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-substitute-error-ng\"\n// module id = 8\n// module chunks = 0 1 2 5 6","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-empty-state-ng\"\n// module id = 9\n// module chunks = 0 1 2 5 6","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-transaction-search-filter-ng\"\n// module id = 10\n// module chunks = 0 2 6","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-load-more-ng\"\n// module id = 11\n// module chunks = 0 1 2 6","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-sortable-column-ng\"\n// module id = 12\n// module chunks = 0 6","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-paginator-ng\"\n// module id = 13\n// module chunks = 0 2 6","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-date-label-filter-ng\"\n// module id = 14\n// module chunks = 0 1 2","import { negativeSignKey } from './debit-credit-sign';\nimport { Types, TimePeriod, BillingStatus } from './constants';\nimport getCategoryIconClass from './get-category-icon-class';\n\nconst helpers = (context) => {\n  const i18nFilter = context.$filter('i18n');\n\n  return {\n    /**\n     * @name headers\n     * @type {Object}\n     *\n     * @description\n     * Table headers\n     */\n    headers: [\n      {\n        label: 'details.label.date',\n        class: 'col-md-1',\n        sortable: {\n          key: 'bookingDate',\n          direction: 'DESC',\n        },\n      },\n      {\n        label: 'details.label.category',\n        class: 'col-md-1 text-center',\n        sortable: {\n          key: 'category',\n          direction: 'ASC',\n        },\n      },\n      {\n        label: 'details.label.description',\n        class: 'col-md-6',\n        sortable: {\n          key: 'description',\n          direction: 'ASC',\n        },\n      },\n      {\n        label: 'details.label.creditAmount',\n        class: 'col-md-2 text-right',\n        sortable: {\n          key: 'amount',\n          direction: 'ASC',\n        },\n      },\n      {\n        label: 'details.label.debitAmount',\n        class: 'col-md-2 text-right',\n        sortable: {\n          key: 'amount',\n          direction: 'ASC',\n        },\n      },\n    ],\n\n    /**\n     * @name transactionTypes\n     * @type {Types}\n     *\n     * @description\n     * Transaction types constant\n     *\n     */\n    transactionTypes: Types,\n\n    /**\n     * @name getSignedAmount\n     * @type {function}\n     * @param {object} transaction Transaction object\n     * @returns {number} Signed amount\n     *\n     * @description\n     * Based on credit/debit indicator, put right sign on the transaction amount\n     */\n    getSignedAmount: (transaction) =>\n      transaction.amount * (transaction.creditDebitIndicator === negativeSignKey ? -1 : 1),\n\n    /**\n     * @name isSortableActive\n     * @type {function}\n     * @param {object} sortable Sortable header item\n     * @param {object} sort Sort state object of the controller\n     * @returns {boolean}\n     *\n     * @description\n     * Checks sortable header matches current sort state\n     */\n    isSortableActive: (sortable, sort) =>\n      sortable.key === sort.orderBy,\n\n    /**\n     * @name isPaginationTypeMatch\n     * @type {function}\n     * @param {function} $ctrl      Current controller\n     * @param {string} type         Description of pagination type (pagination, load-more)\n     * @returns {boolean}\n     *\n     * @description\n     * Checks if actual pagination type matches the one, defined in properties\n     */\n    isPaginationTypeMatch: ($ctrl, type) =>\n      $ctrl.state.pageParams.paginationType === type,\n\n    /**\n     * @name showNoTransactions\n     * @type {function}\n     * @param {function} $ctrl      Current controller\n     * @returns {boolean}\n     *\n     * @description\n     * Checks if conditions are met to show the no transactions icon and message\n     */\n    showNoTransactions: $ctrl =>\n      $ctrl.transactions\n      && !$ctrl.transactions.transactionsArray.length\n      && !$ctrl.loading\n      && !$ctrl.searching,\n\n    /**\n     * @name showNoResults\n     * @type {function}\n     * @param {function} $ctrl      Current controller\n     * @returns {boolean}\n     *\n     * @description\n     * Checks if conditions are met to show the no result icon and message\n     */\n    showNoResults: $ctrl =>\n      $ctrl.searchTransactions\n      && !$ctrl.searchTransactions.transactionsArray.length\n      && $ctrl.searching\n      && !$ctrl.loading,\n\n    /**\n     * @name getCategoryIconClass\n     * @type {function}\n     * @param {string} transactionCategory Transaction category\n     * @param {?boolean} withPrefix Include class prefix\n     * @returns {string}\n     *\n     * @description\n     * Converts transaction category name into category CSS icon class\n     */\n    getCategoryIconClass,\n\n    /**\n     * @name dateLabel\n     * @type {function}\n     * @param {string} label date\n     * @returns {string}\n     *\n     * @description\n     * Returns either label like now, today or yesterday or the actual date\n     */\n    dateLabel: (label) => i18nFilter(TimePeriod[label]) || label,\n\n    /**\n     * @name getTransactionGridClassName\n     * @type {function}\n     * @param {Object} transaction Transaction object\n     * @returns {string} class name\n     *\n     * @description\n     * Return class name by checking the type of billing status and transaction type\n     */\n    getTransactionGridClassName: (transaction) => {\n      if (transaction.billingStatus) {\n        return 'col-6';\n      }\n\n      return transaction.customType === Types.TYPE_1 ? 'col-7' : 'col-8';\n    },\n\n    /**\n     * @name billingStatusLabel\n     * @type {function}\n     * @param {string} label enum billing\n     * @returns {string}\n     *\n     * @description\n     * Returns label for billing status like pending or unbilled\n     */\n    billingStatusLabel: (label) => i18nFilter(BillingStatus[label]) || label,\n  };\n};\n\nexport default helpers;\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-transactions-extended-ng/scripts/helpers.js","export const positiveSignKey = 'CRDT';\nexport const negativeSignKey = 'DBIT';\n\nconst creditDebitKeysToSign = {};\ncreditDebitKeysToSign[positiveSignKey] = '+';\ncreditDebitKeysToSign[negativeSignKey] = '-';\n\n/**\n * @param {Object} transaction Transaction object\n * @returns {Object} new copy of Transaction object\n *\n * @description\n * Adds debitCreditSign property to transaction object based on debitCreditIndicator key\n */\nexport default (transaction) =>\n  Object.assign({\n    debitCreditSign: creditDebitKeysToSign[transaction.creditDebitIndicator],\n  }, transaction);\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-transactions-extended-ng/scripts/debit-credit-sign.js","/**\n * @name categoryClassPrefix\n * @type {string}\n *\n * @description\n * Category icon CSS class prefix\n */\nconst categoryClassPrefix = 'bb-transaction-category-';\n\nexport default categoryClassPrefix;\n\n/**\n * @name uncategorizedIconClass\n * @type {string}\n *\n * @description\n * Uncategorized CSS icon class\n */\nexport const uncategorizedIconClass = 'uncategorized';\n\n/**\n * @name Types\n * @type {object}\n *\n * @description\n * Widget custom type preferences\n */\nexport const Types = {\n  TYPE_1: 'type1',\n  TYPE_2: 'type2',\n  TYPE_3: 'type3',\n  TYPE_4: 'type4',\n};\n\n/**\n * @name TimePeriod\n * @type {object}\n *\n * @description\n * Date labels enum\n */\nexport const TimePeriod = {\n  now: 'date.label.now',\n  today: 'date.label.today',\n  yesterday: 'date.label.yesterday',\n};\n\n/**\n * @name BillingStatus\n * @type {object}\n *\n * @description\n * Billing status labels enum\n */\nexport const BillingStatus = {\n  BILLED: 'billing.status.label.billed',\n  UNBILLED: 'billing.status.label.unbilled',\n  PENDING: 'billing.status.label.pending',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-transactions-extended-ng/scripts/constants.js","import CATEGORY_CLASS_PREFIX, {\n  uncategorizedIconClass as DEFAULT_ICON_CLASS,\n} from './constants';\n\n/**\n * @name getCategoryIconClass\n * @type {function}\n * @param {string} transactionCategory Transaction category\n * @param {?boolean} withPrefix Include class prefix\n * @returns {string}\n *\n * @description\n * Converts transaction category name into category CSS icon class\n */\nexport default (transactionCategory = '', withPrefix = true) =>\n  `${withPrefix ? CATEGORY_CLASS_PREFIX : ''}${transactionCategory.toLowerCase()\n    .replace(/\\W/g, '-').replace(/-{2,}/g, '-') || DEFAULT_ICON_CLASS}`;\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-transactions-extended-ng/scripts/get-category-icon-class.js","/* eslint-disable import/prefer-default-export */\nimport debitCreditSign from './debit-credit-sign';\nimport setType from './set-type';\nimport { BillingStatus } from './constants';\nimport getCategoryIconClass from './get-category-icon-class';\n\n/**\n * @name processTransactions\n * @type {function}\n * @param {Object[]} transactions The source transactions from the widget controller\n * @returns {Object} transactions grouped by date and transactions array\n *\n * @description\n * Hook for process transactions\n *\n * Add debitCreditSign property to transaction\n *\n * Add customType field to transaction\n *\n * Sort transactions collection based on valueDate (descending)\n */\nexport const processTransactions = (transactions) => {\n  const transactionsArray = transactions.map(debitCreditSign).map(setType);\n  const transactionsGroupedByDate = transactionsArray.reduce((groupedByDate, transaction) => {\n    const datesObject = groupedByDate;\n    // get only date part\n    const bookingDateObj = new Date(transaction.bookingDate);\n    const date = bookingDateObj.toISOString().slice(0, 10);\n\n    if (datesObject[date]) {\n      let clearToAdd = true;\n\n      datesObject[date].forEach((element) => {\n        if (element.id === transaction.id) {\n          clearToAdd = false;\n        }\n      });\n\n      if (clearToAdd) {\n        datesObject[date].push(transaction);\n      }\n    } else {\n      datesObject[date] = [transaction];\n    }\n\n    return datesObject;\n  }, {});\n\n  return {\n    transactionsArray,\n    transactionsGroupedByDate,\n  };\n};\n\n/**\n * @name defaultSortableColumn\n * @type {function}\n * @returns {string|null} Returns column key\n *\n * @description\n * Return the key of the default sort column\n */\nexport const defaultSortableColumn = () => 'bookingDate';\n\n/**\n * @name defaultSortableDirection\n * @type {function}\n * @returns {string|null} Returns sorting direction\n *\n * @description\n * Return the sorting direction of the default sort column\n */\nexport const defaultSortableDirection = () => 'DESC';\n\n/**\n * @name processCategories\n * @type {function}\n * @param {object[]} categories The source categories from the widget controller\n * @returns {object} Processed categories array\n *\n * @description\n * Hook for processing categories\n *\n * Add category icon class 'categoryIconClass' property to categories.\n *\n * If at least one category has subcategories, add 'subCategories' property to all that are missing\n * it.\n */\nexport const processCategories = (categories) => {\n  const isSubCategories = categories\n    .some((category) => category.subCategories);\n\n  return categories.map((category) => {\n    // set categoryIconClass\n    Object.assign(category, {\n      categoryIconClass: getCategoryIconClass(category.categoryName),\n    });\n\n    // set subCategories\n    if (isSubCategories && !category.subCategories) {\n      Object.assign(category, {\n        subCategories: [],\n      });\n    }\n\n    return category;\n  });\n};\n\n/**\n * @name processTransactionsEnumValues\n * @type {function}\n * @param {object[]} transactionsEnumValues The source transaction enum values from the widget\n * controller\n * @returns {object} Processed transactions enum values array\n *\n * @description\n * Hook for processing transactions enum values\n *\n * Add labelKey and role to transactionsEnumValues.\n */\nexport const processTransactionsEnumValues = (transactionsEnumValues) => {\n  const result = Object.assign({}, transactionsEnumValues);\n\n  if (result.billingStatus) {\n    result.billingStatus = result.billingStatus\n      .map((option) => ({\n        ...option,\n        labelKey: BillingStatus[option.value] || option.value,\n        role: option.value.toLowerCase(),\n      }));\n  }\n\n  return result;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-transactions-extended-ng/scripts/hooks.js","import { Types } from './constants';\n\n/**\n * @param {Object} transaction Transaction object\n *\n * @description\n * Adds \"customType\" field to transaction item according to custom logic.\n * This custom type is used to define the rendering layout in template file\n */\nexport default (transaction) => {\n  if (transaction.counterPartyName && transaction.category) {\n    Object.assign(transaction, { customType: Types.TYPE_1 });\n  } else if (transaction.counterPartyName) {\n    Object.assign(transaction, { customType: Types.TYPE_2 });\n  } else if (transaction.description) {\n    Object.assign(transaction, { customType: Types.TYPE_3 });\n  } else {\n    Object.assign(transaction, { customType: Types.TYPE_4 });\n  }\n  return transaction;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-transactions-extended-ng/scripts/set-type.js"],"sourceRoot":""}