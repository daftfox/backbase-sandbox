{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******************","webpack:///webpack/bootstrap ae100f90e7d971b83ff6?df48******************","webpack:///./lib-bb-state-container-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114********","webpack:///external \"lib-bb-widget-ng\"?84ad****","webpack:///external \"lib-bb-storage-ng\"?d742","webpack:///external \"lib-bb-storage\"?acbc","webpack:///./lib-bb-state-container-ng/scripts/index.js","webpack:///external \"lib-bb-state-container\""],"names":["moduleKey","bbStateContainerKey","getStorageKey","widget","getStringPreference","getInitialState","storageKey","Promise","resolve","getItem","then","stored","state","undefined","module","provider","initialState","setInitialState","$get","run","stateContainer","storage","widgetId","getId","subscribe","fromStorage","setItem","origin","setState","$scope","Object","defineProperty","get","getState","name"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;ACAA,gD;;;;;;;ACAA,iD;;;;;;;ACAA,iD;;;;;;;ACAA,iD;;;;;;;;;;;;;;ACmCA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,KAAMA,YAAY,2BAAlB;;AAEA;;;;;AA5CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDO,KAAMC,oDAAyBD,SAAzB,oBAAN;;AAEP,KAAME,gBAAgB,SAAhBA,aAAgB,CAACC,MAAD;AAAA,UAAYA,OAAOC,mBAAP,CAA2B,gBAA3B,CAAZ;AAAA,EAAtB;;AAEO,KAAMC,4CAAkB,SAAlBA,eAAkB,CAACF,MAAD,EAAY;AACzC,OAAMG,aAAaJ,cAAcC,MAAd,CAAnB;AACA,UAAQG,cAAc,IAAf,GACHC,QAAQC,OAAR,EADG,GAEH,8BAAmBC,OAAnB,CAA2BH,UAA3B,EAAuCI,IAAvC,CAA4C,UAACC,MAAD;AAAA,YACzCA,UAAUA,OAAOC,KAAlB,IAA4BC,SADc;AAAA,IAA5C,CAFJ;AAID,EANM;;mBAQQ,0BACZC,MADY,CACLd,SADK,EACM,mDADN;;AAGb;;;;;;;;;;;;;;;;AAHa,EAmBZe,QAnBY,CAmBHd,mBAnBG,EAmBkB,YAAM;AACnC,OAAIe,eAAeH,SAAnB;AACA,UAAO;AACLI,sBAAiB,yBAACL,KAAD,EAAW;AAAEI,sBAAeJ,KAAf;AAAuB,MADhD;AAELM,WAAM;AAAA,cAAM,mCAAmBF,YAAnB,CAAN;AAAA;AAFD,IAAP;AAID,EAzBY,EA2BZG,GA3BY,CA2BR,CACHlB,mBADG,iEAEH,UAACmB,cAAD,EAAiBC,OAAjB,EAA0BlB,MAA1B,EAAqC;AACnC,OAAMmB,WAAWnB,OAAOoB,KAAP,EAAjB;AACA,OAAMjB,aAAaJ,cAAcC,MAAd,CAAnB;;AAEA,OAAIG,cAAc,IAAlB,EAAwB;;AAExBc,kBAAeI,SAAf,CAAyB,UAACZ,KAAD,EAAQa,WAAR,EAAwB;AAC/C,SAAIA,WAAJ,EAAiB;;AAEjB;AACAJ,aAAQK,OAAR,CAAgBpB,UAAhB,EAA4B,EAAEqB,QAAQL,QAAV,EAAoBV,YAApB,EAA5B;AACD,IALD;;AAOAS,WAAQG,SAAR,CAAkBlB,UAAlB,EAA8B,gBAAuB;AAAA,SAApBqB,MAAoB,QAApBA,MAAoB;AAAA,SAAZf,KAAY,QAAZA,KAAY;;AACnD,SAAIe,WAAWL,QAAf,EAAyB;;AAEzB;AACAF,oBAAeQ,QAAf,CAAwBhB,KAAxB,EAA+B,IAA/B;AACD,IALD;AAMD,EArBE,CA3BQ,EAkDZO,GAlDY,CAkDR,CAAC,YAAD,EAAelB,mBAAf,EAAoC,UAAC4B,MAAD,EAAST,cAAT,EAA4B;AACnEU,UAAOC,cAAP,CAAsBF,MAAtB,EAA8B,OAA9B,EAAuC;AACrCG,UAAK;AAAA,cAAMZ,eAAea,QAAf,EAAN;AAAA;AADgC,IAAvC;AAGD,EAJI,CAlDQ,EAwDZC,I;;;;;;;ACrHH,iD","file":"lib-bb-state-container-ng/scripts/lib-bb-state-container-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-storage-ng\"), require(\"lib-bb-storage\"), require(\"lib-bb-state-container\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-bb-state-container-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-storage-ng\", \"lib-bb-storage\", \"lib-bb-state-container\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-bb-state-container-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-storage-ng\"), require(\"lib-bb-storage\"), require(\"lib-bb-state-container\"));\n\telse\n\t\troot[\"lib-bb-state-container-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-storage-ng\"], root[\"lib-bb-storage\"], root[\"lib-bb-state-container\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_67__, __WEBPACK_EXTERNAL_MODULE_70__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ae100f90e7d971b83ff6","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-bb-state-container-ng/model.xml\n// module id = 0\n// module chunks = 19","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 5\n// module chunks = 3 5 6 7 8 9 10 12 16 19 22 24 26 27","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 17\n// module chunks = 6 7 8 10 16 19 26","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-storage-ng\"\n// module id = 30\n// module chunks = 10 19","module.exports = __WEBPACK_EXTERNAL_MODULE_67__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-storage\"\n// module id = 67\n// module chunks = 17 19 22","/**\n * @module lib-bb-state-container-ng\n *\n * @description Adds a state container (See\n * {@link module:lib-bb-state-container.lib-bb-state-container}) to the widget's\n * scope as `state`.\n *\n * The state container is also added to the context for extension intents and helpers, See also:\n *  - Extension {@link module:lib-bb-extension-intents-ng.IntentContext}\n *  - Extension {@link module:lib-bb-extension-helpers-ng.HelperContext}\n *  - Extension {@link module:lib-bb-extension-events-ng.EventContext}\n *\n * This library can also be configured to enable sharing of state within multiple \"widget\n * instances\" on mobile.\n *\n * Sharing state is enabled by adding a new preference to a widget called \"widget-sync-id\". Any\n * widgets that share the same value for \"widget-sync-id\" will automatically have their state\n * shared (via {@link module:lib-bb-storage-ng.lib-bb-storage-ng}). This is a feature to be used\n * on the *hybrid mobile widgets* so that multiple instances of the same widget (usually with a\n * different extension) automatically share a single state.\n *\n * To use this feature it's important that the widget doesn't have any state which is\n * derived from extension hooks (eg: the result a processData hook should never be saved\n * directly to the state object). Instead, these hooks can be implemented as state selectors (see\n * {@link module:lib-bb-state-container.StateContainer#SelectorCreator}).\n *\n *\n * @example\n * <!-- Extension template: Use `state` on the scope -->\n * <h2>Todo</h2>\n * <div>\n *   <ul><li ng-repeat=\"todo in state.todos track by todo.id\">{{todo.title}}</li></ul>\n * </div>\n */\n\nimport angular from 'vendor-bb-angular';\n\nimport makeStateContainer from 'lib-bb-state-container';\nimport bbStorageService from 'lib-bb-storage';\nimport bbStorageModuleKey, { bbStorageServiceKey } from 'lib-bb-storage-ng';\nimport bbWidgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\n\nconst moduleKey = 'lib-bb-state-container-ng';\n\n/**\n * @name bbStateContainerKey\n * @type {string}\n * @description The injector key to be used to provide the state container instance\n */\nexport const bbStateContainerKey = `${moduleKey}:stateContainer`;\n\nconst getStorageKey = (widget) => widget.getStringPreference('widget-sync-id');\n\nexport const getInitialState = (widget) => {\n  const storageKey = getStorageKey(widget);\n  return (storageKey == null)\n    ? Promise.resolve()\n    : bbStorageService().getItem(storageKey).then((stored) =>\n        (stored && stored.state) || undefined);\n};\n\nexport default angular\n  .module(moduleKey, [bbStorageModuleKey, bbWidgetModuleKey])\n\n  /**\n   * A provider that allows configuration of the initial state of the container.\n   *\n   *\n   * @name bbStateContainerProvider\n   * @ngkey lib-bb-state-container-ng:bbStateContainerProvider\n   * @type {object}\n   * @example\n   * angular.module(...)\n   *   .config([\n   *     `${bbStateContainerKey}Provider`,\n   *     (provider) => {\n   *       provider.setInitialState(...);\n   *     },\n   *   ]);\n   */\n  .provider(bbStateContainerKey, () => {\n    let initialState = undefined;\n    return {\n      setInitialState: (state) => { initialState = state; },\n      $get: () => makeStateContainer(initialState),\n    };\n  })\n\n  .run([\n    bbStateContainerKey, bbStorageServiceKey, widgetKey,\n    (stateContainer, storage, widget) => {\n      const widgetId = widget.getId();\n      const storageKey = getStorageKey(widget);\n\n      if (storageKey == null) return;\n\n      stateContainer.subscribe((state, fromStorage) => {\n        if (fromStorage) return;\n\n        // Only store changes originating from myself.\n        storage.setItem(storageKey, { origin: widgetId, state });\n      });\n\n      storage.subscribe(storageKey, ({ origin, state }) => {\n        if (origin === widgetId) return;\n\n        // Set ViewState without notifying subscribers - prevent infinite update loop\n        stateContainer.setState(state, true);\n      });\n    }])\n\n  .run(['$rootScope', bbStateContainerKey, ($scope, stateContainer) => {\n    Object.defineProperty($scope, 'state', {\n      get: () => stateContainer.getState(),\n    });\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-state-container-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_70__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container\"\n// module id = 70\n// module chunks = 19 24"],"sourceRoot":""}