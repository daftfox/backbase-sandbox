{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3ef30015219e38414ee1","webpack:///./ext-bb-income-spending-analysis-category-ng/model.xml","webpack:///./ext-bb-income-spending-analysis-category-ng/scripts/index.js","webpack:///external \"vendor-bb-angular-ng-aria\"","webpack:///external \"vendor-bb-uib-buttons\"","webpack:///external \"ui-bb-i18n-ng\"","webpack:///external \"ui-bb-substitute-error-ng\"","webpack:///external \"ui-bb-format-amount-ng\"","webpack:///external \"ui-bb-chartjs-chart-donut-ng\"","webpack:///external \"ui-bb-chartjs-chart-bar-ng\"","webpack:///external \"ui-bb-empty-state-ng\"","webpack:///external \"ui-bb-change-period-ng\"","webpack:///external \"vendor-bb-uib-accordion\"","webpack:///./ext-bb-income-spending-analysis-category-ng/scripts/hooks.js","webpack:///external \"lib-bb-styles\"","webpack:///./ext-bb-income-spending-analysis-category-ng/scripts/constants.js","webpack:///./ext-bb-income-spending-analysis-category-ng/scripts/helpers.js"],"names":["dependencyKeys","ngAriaModuleKey","uibBbButtonsKey","i18nKey","uiBbSubstituteErrorKey","uiBbFormatAmountKey","uiBbChartjsChartDonutKey","uiBbChartjsChartBarKey","uiBbEmptyStateKey","uiBbChangePeriodKey","uibAccordionKey","hooks","extHooks","helpers","extHelpers","events","processAnalysisCategoryItems","data","items","concat","sort","a","b","totalAmount","amount","total","open","processAnalysisCategorySeries","series","colors","labels","forEach","categoryName","index","categoryClass","replace","toLowerCase","Object","assign","datasets","backgroundColor","totalPortion","analysisItems","map","item","portion","processTurnoverSeries","dataset","datasetColor","dataKey","DATA_KEYS","hoverBackgroundColor","reverse","original","updated","onTurnoversUpdate","startDate","Date","params","periodStartDate","setDate","intervalStartDay","toISOString","slice","processLoadError","err","PARAM_ERROR","DEFAULT_TOOLTIP_SELECTOR","ARROW_INNER_CSS_SELECTOR","ARROW_OUTER_CSS_SELECTOR","BAR_CHART_CSS_SELECTORS","axisBase","axisX","axisY","CHART_SLICE_LABEL","dataAttr","offset","minimum","CHART_SECTOR_SHIFT_SIZE","MS_IN_MIN","RENDERING_ANIMATION_TIME","debitAmount","creditAmount","DEFAULT_WIDGET_SELECTOR","isParentSelected","parseStyle","selector","attr","parseFloat","getTooltipArrowInnerSize","getTooltipArrowOutterSize","getTooltipLineHeight","getAngleFromPortion","Math","PI","calculatePosition","center","radius","xOffset","yOffset","angle","chartRadius","position","left","round","cos","top","sin","setTooltipPosition","element","tooltip","chart","isNarrow","circlePosition","additionalOffset","arrowOutSize","arrowBorder","clientWidth","clientHeight","style","outerRadius","categoryToIconClass","transactionCategory","getYAxisLabelPadding","getNewDate","newDate","getTime","getTimezoneOffset","populateSelectedSectorObject","$ctrl","activeSectorName","category","bookingDateGreaterThan","bookingDateLessThan","periodEndDate","arrangementsIds","selectedProducts","product","id","context","i18nFilter","$filter","dateFilter","currencyFilter","getSymbol","code","getRule","symbol","isSpending","chartOptions","layout","padding","right","bottom","hover","mode","getTrendIconClass","trend","checkTrendValueChanged","abs","getTrendLabel","buildTooltipContent","trendClass","textClass","tooltipCategory","trendValue","currencyCode","undefined","getNewSliceLabel","topHalf","wrapper","document","createElement","setAttribute","className","categoryIdentifier","innerText","amountEl","innerHTML","$compile","angular","contents","$rootScope","opacity","appendChild","onDonutChartSectorClickAnimation","chartInstance","event","defaultChartRadius","activeSectors","getElementsAtEvent","length","isActiveSectorSelected","update","render","name","label","selected","clearSliceLabels","container","querySelectorAll","remove","renderSliceLabels","canvas","parentNode","config","labelOffset","setTimeout","setTurnoversTooltipPosition","dataPoint","dataPoints","positionX","offsetLeft","floor","x","ceil","positionY","caretY","max","periodStartLabelFormatter","date","periodEndLabelFormatter","setHours","customizeTooltip","parent","querySelector","width","offsetWidth","arrowClass","$scope","$apply","customizeTurnoversTooltip","turnovers","donutChartOptions","ctrl","isSpendingAnalysis","barChartOptions","scales","xAxes","ticks","fontColor","fontFamily","yAxes","gridLines","display","drawBorder","tickMarkLength","min","maxTicksLimit","MAX_Y_TICKS","chartPlugins","beforeEvent","type","onClickLayoutUpdate","afterEvent","afterRender","afterDatasetsUpdate","onPeriodStartChange","newStartDate","onPeriodEndChange","newEndDate","updateAnalysisCategories","then","setSelectedAnalysisItem","updatePeriod","monthsRange","setMonth","getMonth","updateTurnovers","isSeriesDataAvailable","getClickHandler","clickEvent","activeSector","selectedParentCategory","loadFirstLevelCategories","formatX","tick","formatY","balance"],"mappings":"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","file":"ext-bb-income-spending-analysis-category-ng/scripts/ext-bb-income-spending-analysis-category-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"vendor-bb-uib-buttons\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-format-amount-ng\"), require(\"ui-bb-chartjs-chart-donut-ng\"), require(\"ui-bb-chartjs-chart-bar-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-change-period-ng\"), require(\"vendor-bb-uib-accordion\"), require(\"lib-bb-styles\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bb-income-spending-analysis-category-ng\", [\"vendor-bb-angular-ng-aria\", \"vendor-bb-uib-buttons\", \"ui-bb-i18n-ng\", \"ui-bb-substitute-error-ng\", \"ui-bb-format-amount-ng\", \"ui-bb-chartjs-chart-donut-ng\", \"ui-bb-chartjs-chart-bar-ng\", \"ui-bb-empty-state-ng\", \"ui-bb-change-period-ng\", \"vendor-bb-uib-accordion\", \"lib-bb-styles\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bb-income-spending-analysis-category-ng\"] = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"vendor-bb-uib-buttons\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-format-amount-ng\"), require(\"ui-bb-chartjs-chart-donut-ng\"), require(\"ui-bb-chartjs-chart-bar-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-change-period-ng\"), require(\"vendor-bb-uib-accordion\"), require(\"lib-bb-styles\"));\n\telse\n\t\troot[\"ext-bb-income-spending-analysis-category-ng\"] = factory(root[\"vendor-bb-angular-ng-aria\"], root[\"vendor-bb-uib-buttons\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-substitute-error-ng\"], root[\"ui-bb-format-amount-ng\"], root[\"ui-bb-chartjs-chart-donut-ng\"], root[\"ui-bb-chartjs-chart-bar-ng\"], root[\"ui-bb-empty-state-ng\"], root[\"ui-bb-change-period-ng\"], root[\"vendor-bb-uib-accordion\"], root[\"lib-bb-styles\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_13__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3ef30015219e38414ee1","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bb-income-spending-analysis-category-ng/model.xml\n// module id = 0\n// module chunks = 0","/**\n * @module ext-bb-income-spending-analysis-category-ng\n *\n * @description\n * Default extension for widget-bb-income-spending-analysis-category-ng\n */\n\nimport ngAriaModuleKey from 'vendor-bb-angular-ng-aria';\nimport uibBbButtonsKey from 'vendor-bb-uib-buttons';\nimport i18nKey from 'ui-bb-i18n-ng';\nimport uiBbSubstituteErrorKey from 'ui-bb-substitute-error-ng';\nimport uiBbFormatAmountKey from 'ui-bb-format-amount-ng';\nimport uiBbChartjsChartDonutKey from 'ui-bb-chartjs-chart-donut-ng';\nimport uiBbChartjsChartBarKey from 'ui-bb-chartjs-chart-bar-ng';\nimport uiBbEmptyStateKey from 'ui-bb-empty-state-ng';\nimport uiBbChangePeriodKey from 'ui-bb-change-period-ng';\nimport uibAccordionKey from 'vendor-bb-uib-accordion';\n\nimport extHooks from './hooks';\nimport extHelpers from './helpers';\n\nexport const dependencyKeys = [\n  ngAriaModuleKey,\n  uibBbButtonsKey,\n  i18nKey,\n  uiBbSubstituteErrorKey,\n  uiBbFormatAmountKey,\n  uiBbChartjsChartDonutKey,\n  uiBbChartjsChartBarKey,\n  uiBbEmptyStateKey,\n  uiBbChangePeriodKey,\n  uibAccordionKey,\n];\n\nexport const hooks = extHooks;\nexport const helpers = extHelpers;\nexport const events = {};\n\n/**\n * Extended analysis category item\n * @typedef {object} ExtendedAnalysisCategory\n * @extends module:model-bb-income-spending-analysis-category-ng.AnalysisCategory\n * @property {number} totalPortion\n * Percentage of total income/spending for a given category\n * and all categories with a higher portion\n */\n\n/**\n * Analysis specific BBSeries object\n * @typedef {object} AnalysisCategoryBBSeries\n * @property {string[]} labels Array of chart labels\n * @property {AnalysisCategoryDataset[]} datasets Array of all datasets\n * @property {ExtendedAnalysisCategory[]} analysisItems Extended spending array\n */\n\n/**\n * Spendings specific dataset object for chart\n * @typedef {object} AnalysisCategoryDataset\n * @extends module:model-bb-income-spending-analysis-category-ng.Dataset\n * @property {string} backgroundColor Background color for chart slices\n * @property {number} borderWidth Border size between slices\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-income-spending-analysis-category-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-aria\"\n// module id = 2\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-buttons\"\n// module id = 3\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 4\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-substitute-error-ng\"\n// module id = 5\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-format-amount-ng\"\n// module id = 6\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-chartjs-chart-donut-ng\"\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-chartjs-chart-bar-ng\"\n// module id = 8\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-empty-state-ng\"\n// module id = 9\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-change-period-ng\"\n// module id = 10\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-accordion\"\n// module id = 11\n// module chunks = 0","import getStyle from 'lib-bb-styles';\nimport {\n  DATA_KEYS,\n  PARAM_ERROR,\n} from './constants';\n\n/**\n * @name processAnalysisCategoryItems\n * @type {function}\n *\n * @description\n * Default hook for income/spending analysis by category collection post processing\n *\n * @param {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData} items\n * items to process\n * @returns {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData}\n * processed items\n */\nconst processAnalysisCategoryItems = (data) => {\n  const items = [].concat(data.items);\n  return {\n    items: items.sort((a, b) => b.totalAmount.amount - a.totalAmount.amount),\n    total: data.total,\n    open: false,\n  };\n};\n\n/**\n * @name processAnalysisCategorySeries\n * @type {function}\n *\n * @description\n * Hook for income/spending chart series object post processing\n *\n * @param {module:model-bb-income-spending-analysis-category-ng.BBSeries} series chart series data\n * @param {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData} data\n * @returns {AnalysisCategoryBBSeries} processed series\n */\nconst processAnalysisCategorySeries = (series, data) => {\n  // applies background colors from the theme to chart slices\n  const colors = [];\n  series.labels.forEach((categoryName, index) => {\n    // convert category name to category class\n    const categoryClass = categoryName\n      .replace(/[^\\w]|[\\s]/g, '-')\n      .replace(/-{2,}/g, '-')\n      .toLowerCase();\n\n    colors[index] = getStyle(`.bb-transaction-category-${categoryClass}`, 'color', true, false);\n  });\n\n  Object.assign(series.datasets[0], {\n    backgroundColor: colors,\n  });\n\n  let totalPortion = 0;\n  const analysisItems = data.items.map(item => {\n    totalPortion += item.portion;\n    return Object.assign(item, { totalPortion });\n  });\n\n  return Object.assign(series, { analysisItems });\n};\n\n/**\n * @name processTurnoverSeries\n * @type {function}\n *\n * @description\n * Default hook for turnovers chart series object post processing\n *\n * @param {module:model-bb-turnovers-ng.BBSeries} series chart series data\n * @param {module:model-bb-turnovers-ng.Turnover} data original turnover object\n * @returns {TurnoversBBSeries} processed series\n */\nconst processTurnoverSeries = (series, data) => {\n  series.datasets.forEach((dataset, index) => {\n    const datasetColor = getStyle(\n      `.chart-bar-dataset-${dataset.dataKey ? DATA_KEYS[dataset.dataKey] : index}`,\n      'color'\n    );\n    Object.assign(dataset, {\n      backgroundColor: datasetColor,\n      hoverBackgroundColor: datasetColor,\n    });\n  });\n\n  return Object.assign(series, {\n    datasets: series.datasets.reverse(),\n    original: data,\n    updated: true,\n  });\n};\n\n/**\n * @name onTurnoversUpdate\n * @type {function}\n *\n * @description\n * Process parameters before they are sent to the model's load method\n *\n * @param {object} params to process\n * @returns {object} processed params\n */\nconst onTurnoversUpdate = params => {\n  // make sure that period start date covers the whole month at the beginning\n  // other intervals are not covered because extension doesn't have them as an option\n  const startDate = new Date(params.periodStartDate);\n  startDate.setDate(params.intervalStartDay);\n  Object.assign(params, {\n    periodStartDate: startDate.toISOString().slice(0, 10),\n  });\n\n  return params;\n};\n\n/**\n * @name processLoadError\n * @type {function}\n *\n * @description\n * Ignores parameter missing errors\n *\n * @param {error} The error passed\n * @returns {string} The actual error\n */\nconst processLoadError = err => {\n  if (err === PARAM_ERROR) {\n    return null;\n  }\n  return err;\n};\n\nexport default {\n  processAnalysisCategoryItems,\n  processAnalysisCategorySeries,\n  processTurnoverSeries,\n  onTurnoversUpdate,\n  processLoadError,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-income-spending-analysis-category-ng/scripts/hooks.js","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-styles\"\n// module id = 13\n// module chunks = 0 1","/* eslint-disable import/prefer-default-export */\n/**\n * @name DEFAULT_TOOLTIP_SELECTOR\n * @description\n * Chart's tooltip CSS selector\n * @type {string}\n */\nexport const DEFAULT_TOOLTIP_SELECTOR = '.chart-tooltip-default';\n\n/**\n * @name ARROW_INNER_CSS_SELECTOR\n * @description\n * Chart tooltip's arrow CSS selector (inner layer)\n * @type {string}\n */\nexport const ARROW_INNER_CSS_SELECTOR = `${DEFAULT_TOOLTIP_SELECTOR}.bb-arrow-left::after`;\n\n/**\n * @name ARROW_OUTER_CSS_SELECTOR\n * @description\n * Chart tooltip's arrow CSS selector (outer layer)\n * @type {string}\n */\nexport const ARROW_OUTER_CSS_SELECTOR = `${DEFAULT_TOOLTIP_SELECTOR}.bb-arrow-left::before`;\n\n/**\n * @name BAR_CHART_CSS_SELECTORS\n * @description\n * Object with selectors needed for correct styling of bar chart canvas parts\n * @type {CSS}\n */\nexport const BAR_CHART_CSS_SELECTORS = {\n  axisBase: '.chart-bar-axis',\n  axisX: '.chart-bar-axis-x',\n  axisY: '.chart-bar-axis-y',\n};\n\n/**\n * @name CHART_SLICE_LABEL\n * @description\n * Slice labels configuration\n * @type {object}\n * @property {string} dataAttr Data attribute that will be attached to the wrapper\n * that contains the label\n * @property {number} offset Icon's offset from the outer edge of the chart\n * @property {number} minimum Minimum value of portion required to create a label\n */\nexport const CHART_SLICE_LABEL = {\n  dataAttr: 'data-category-label',\n  offset: 27,\n  minimum: 2,\n};\n\n/**\n * @name CHART_SECTOR_SHIFT_SIZE\n * @description\n * Slice shifting size (pixels) and size of the canvas padding (which is\n * needed to provide a space for the shifting animation). Is also\n * used for icons offset calculation.\n * @type {number}\n */\nexport const CHART_SECTOR_SHIFT_SIZE = 10; // pixels\n\n/**\n * @name MS_IN_MIN\n * @description\n * Amount of milliseconds in a minute\n * @type {number}\n */\nexport const MS_IN_MIN = 60000;\n\n/**\n * @name RENDERING_ANIMATION_TIME\n * @description\n * Time in milliseconds to have a donut slice animation on click\n * @type {number}\n */\nexport const RENDERING_ANIMATION_TIME = 500; // ms\n\n/**\n * @name DATA_KEYS\n * @description\n * List of chart bar types with indices of each one represented in the css file\n * @type {object}\n */\nexport const DATA_KEYS = {\n  debitAmount: 0,\n  creditAmount: 1,\n};\n\n/**\n * @name DEFAULT_WIDGET_SELECTOR\n * @description\n * Chart's wrapper main selector\n * @type {string}\n */\nexport const DEFAULT_WIDGET_SELECTOR = '.ext-bb-income-spending-analysis-category-ng';\n\n/**\n * @name PARAM_ERROR\n * @description\n * Error code for parameter missing error\n * @type {string}\n */\nexport const PARAM_ERROR = 'error.load.params';\n\n/**\n * @typedef {object} UpdateSubscription\n * @description\n * Object containing container name and event that that container can publish\n * @property {string} container Container name\n * @property {string} event Event that can be expected from a container\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-income-spending-analysis-category-ng/scripts/constants.js","/* global angular, document */\nimport getStyle from 'lib-bb-styles';\nimport {\n  MS_IN_MIN,\n  CHART_SLICE_LABEL,\n  DEFAULT_TOOLTIP_SELECTOR,\n  ARROW_INNER_CSS_SELECTOR,\n  ARROW_OUTER_CSS_SELECTOR,\n  DEFAULT_WIDGET_SELECTOR,\n  CHART_SECTOR_SHIFT_SIZE,\n  RENDERING_ANIMATION_TIME,\n  BAR_CHART_CSS_SELECTORS,\n  MAX_Y_TICKS,\n} from './constants';\n\n/**\n * @name isParentSelected\n * @type {boolean}\n * @inner\n * @description\n * Flag to check if parent category is selected or not\n */\nlet isParentSelected = false;\n\n/**\n * @description\n * Parses numeric style to float or returns 0 if not found\n *\n * @name parseStyle\n * @type {function}\n * @inner\n * @param {string} selector\n * @param {string} attr Attribute\n * @returns {number}\n */\nconst parseStyle = (selector, attr) => parseFloat(getStyle(selector, attr)) || 0;\n\n/**\n * @description\n * Retrieves inner size of the tooltip arrow\n *\n * @name getTooltipArrowInnerSize\n * @type {function}\n * @inner\n * @returns {number}\n */\nconst getTooltipArrowInnerSize = () => parseStyle(ARROW_INNER_CSS_SELECTOR, 'borderWidth');\n\n/**\n * @description\n * Retrieves outer size of the tooltip arrow\n *\n * @name getTooltipArrowOutterSize\n * @type {function}\n * @inner\n * @returns {number}\n */\nconst getTooltipArrowOutterSize = () => parseStyle(ARROW_OUTER_CSS_SELECTOR, 'borderWidth');\n\n/**\n * @description\n * Retrieves default line height of the tooltip content\n *\n * @name getTooltipLineHeight\n * @type {function}\n * @inner\n * @returns {number}\n */\nconst getTooltipLineHeight = () => parseStyle(DEFAULT_TOOLTIP_SELECTOR, 'lineHeight');\n\n/**\n * @description\n * Converts portion value to angle in RAD\n *\n * @name getAngleFromPortion\n * @type {function}\n * @inner\n * @property {number} portion\n * @returns {number}\n */\nconst getAngleFromPortion = (portion) => {\n  const offset = portion <= 25 ? 25 : 125;\n  return (((offset - portion) / 100) * 2) * Math.PI;\n};\n\n/**\n * @description\n * Calculates absolute position of an element in chart area\n *\n * @name calculatePosition\n * @type {function}\n * @inner\n * @property {number} portion Element's portion\n * @property {number} center Chart's center distance from the edge\n * @property {number} radius Distance from the chart's center\n * @property {?number} xOffset Additional x offset\n * @property {?number} yOffset Additional y offset\n * @returns {Position}\n */\nconst calculatePosition = (portion, center, radius, xOffset = 0, yOffset = 0) => {\n  const angle = getAngleFromPortion(portion);\n  const chartRadius = CHART_SECTOR_SHIFT_SIZE + radius;\n  const position = {\n    left: Math.round((Math.cos(angle) * chartRadius) + center + CHART_SECTOR_SHIFT_SIZE),\n    top: Math.round((-Math.sin(angle) * chartRadius) + center + CHART_SECTOR_SHIFT_SIZE),\n  };\n\n  return {\n    left: `${position.left - xOffset}px`,\n    top: `${position.top - yOffset}px`,\n  };\n};\n\n/**\n * @description\n * Calculates absolute position of the tooltip, based on\n * chart dimensions and assigns them to the tooltip DOM element\n *\n * @name setTooltipPosition\n * @type {function}\n * @inner\n * @param {object} element in DOM\n * @param {object} tooltip object containing tooltip related data like\n * positions, current data point, styling from chart options, etc.\n * @param {object} chart instance\n * @param {ExtendedAnalysisCategory} item Hovered item\n * @param {boolean} isNarrow identify if the tooltips will fit in the current wrapper width or not\n */\nconst setTooltipPosition = (element, tooltip, chart, item, isNarrow) => {\n  const circlePosition = item.totalPortion - (item.portion / 2);\n  const additionalOffset = item.portion < CHART_SLICE_LABEL.minimum ? 0 : CHART_SLICE_LABEL.offset;\n  const arrowOutSize = getTooltipArrowOutterSize();\n  const arrowBorder = arrowOutSize - getTooltipArrowInnerSize();\n\n  let xOffset;\n  if (isNarrow) {\n    xOffset = circlePosition < 50 ?\n    (element.clientWidth + arrowOutSize + (additionalOffset / 3)) :\n    -arrowOutSize - (additionalOffset / 3);\n  } else {\n    xOffset = circlePosition > 50 ?\n    (element.clientWidth + arrowOutSize + (additionalOffset / 3)) :\n    -arrowOutSize - (additionalOffset / 3);\n  }\n\n  const yOffset = ((element.clientHeight + getTooltipLineHeight()) / 2) - arrowBorder -\n    (item.portion < CHART_SLICE_LABEL.minimum ? CHART_SECTOR_SHIFT_SIZE : 0);\n\n  Object.assign(element.style, calculatePosition(\n    circlePosition,\n    chart.outerRadius,\n    chart.outerRadius + additionalOffset,\n    Math.round(xOffset),\n    Math.round(yOffset))\n  );\n};\n\n/**\n * @description\n * Converts transaction category name into category CSS icon class sufix\n *\n * @name categoryToIconClass\n * @type {function}\n * @inner\n * @param {string} transactionCategory Transaction category\n * @returns {string}\n */\nconst categoryToIconClass = (transactionCategory) =>\n  transactionCategory.toLowerCase().replace(/\\W/g, '-').replace(/-{2,}/g, '-');\n\n/**\n * @description\n * Tries to get Y axis label padding\n * Returns 0 if selector is not correct\n *\n * @name helpers#getYAxisLabelPadding\n * @type {function}\n * @inner\n * @returns {number}\n */\nconst getYAxisLabelPadding = () =>\n  parseFloat(getStyle(BAR_CHART_CSS_SELECTORS.axisY, 'padding')) || 0;\n\n/**\n * @description\n * Creates new Date object based on input date\n * Returns new Date object\n *\n * @name getNewDate\n * @type {function}\n * @inner\n * @param {Date} newDate\n * @returns {string}\n */\nconst getNewDate = newDate =>\n  new Date(newDate.getTime() - (newDate.getTimezoneOffset() * MS_IN_MIN))\n    .toISOString()\n    .slice(0, 10);\n\n/**\n * @description\n * Maps controller's properties into object required for transaction category intent\n *\n * @name populateSelectedSectorObject\n * @type {function}\n * @inner\n * @param {object} $ctrl\n * @param {string} activeSectorName\n * @returns {object}\n */\nconst populateSelectedSectorObject = ($ctrl, activeSectorName) => ({\n  category: activeSectorName,\n  bookingDateGreaterThan: $ctrl.periodStartDate,\n  bookingDateLessThan: $ctrl.periodEndDate,\n  arrangementsIds: $ctrl.selectedProducts.map(product => product.id),\n});\n\nconst helpers = (context) => {\n  const i18nFilter = context.$filter('i18n');\n  const dateFilter = context.$filter('date');\n  const currencyFilter = context.$filter('currency');\n  const getSymbol = (code) => context.getRule(code).symbol || code;\n\n  /**\n   * @description\n   * Flag that tells us if current analysis type is spending\n   *\n   * @inner\n   * @name isSpending\n   * @type {boolean}\n   */\n  let isSpending = true;\n\n  /**\n   * @description\n   * Chart.js options object to be used by component.\n   * Has higher priority, can be used to override default options\n   * values in a chart.\n   *\n   * @inner\n   * @name chartOptions\n   * @type {object}\n   */\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: CHART_SECTOR_SHIFT_SIZE,\n        right: CHART_SECTOR_SHIFT_SIZE,\n        top: CHART_SECTOR_SHIFT_SIZE,\n        bottom: CHART_SECTOR_SHIFT_SIZE,\n      },\n    },\n    hover: {\n      mode: null,\n    },\n  };\n\n  /**\n   * @description\n   * Returns the different icon class based on trend value\n   *\n   * @name getTrendIconClass\n   * @type {function}\n   * @inner\n   * @param {number} trend Trend percentage\n   * @returns {string}\n   */\n  const getTrendIconClass = trend => {\n    if (trend < -1) {\n      return 'fa-arrow-down';\n    } else if (trend > 1) {\n      return 'fa-arrow-up';\n    }\n\n    return '';\n  };\n\n  /**\n   * @description\n   * Checks if the trend for the previous month\n   * is the same as for the current one\n   *\n   * @name checkTrendValueChanged\n   * @type {function}\n   * @inner\n   * @param {number} trend Trend percentage\n   * @returns {boolean}\n   */\n  const checkTrendValueChanged = trend => {\n    if (Math.abs(trend) <= 1) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * @description\n   * Returns the message for the trend label based on trend value\n   *\n   * @name getTrendLabel\n   * @type {function}\n   * @inner\n   * @param {number} trend Trend percentage\n   * @returns {string}\n   */\n  const getTrendLabel = trend => {\n    if (trend < -1) {\n      return 'analysis.tooltip.less.than.previous';\n    } else if (trend > 1) {\n      return 'analysis.tooltip.more.than.previous';\n    }\n\n    return 'analysis.tooltip.same.as.previous';\n  };\n\n  /**\n   * @description\n   * Builds HTML content of the tooltip\n   *\n   * @name buildTooltipContent\n   * @type {function}\n   * @inner\n   * @param {ExtendedAnalysisCategory} item Hovered item\n   * @returns {string}\n   */\n  const buildTooltipContent = (item) => {\n    const trendClass = item.trend > 0 ? 'text-danger' : 'text-success';\n    const textClass = isSpending ? trendClass : 'text-muted';\n    const tooltipCategory = `\n      <i class=\"fa bb-transaction-category-${categoryToIconClass(item.category)}\"></i>\n    `;\n    const trendValue = `\n      <span>${Math.abs(item.trend)}%</span>\n    `;\n    return `\n      <span class=\"chart-tooltip-analysis-category text-muted\">\n        ${item.portion < CHART_SLICE_LABEL.minimum\n          ? `<span class=\"mr-1 d-inline-block\">${tooltipCategory}</span>`\n          : ''}\n        ${item.category}\n      </span>\n      <div class=\"row\">\n        <strong>\n          <ui-bb-format-amount-ng\n            class=\"h5 my-1 col-12 chart-tooltip-analysis-amount amount-regular-color\"\n            data-amount=\"${item.totalAmount.amount}\"\n            data-currency=\"'${item.totalAmount.currencyCode}'\"\n            data-wrap>\n          </ui-bb-format-amount-ng>\n        </strong>\n      </div>\n      <p class=\"chart-tooltip-analysis-portion text-muted\">\n        ${item.portion}% ${i18nFilter('analysis.tooltip.of.total')}\n      </p>\n      ${item.trend !== undefined ? `\n        <hr class=\"chart-tooltip-divider p-0\">\n        <p class=\"chart-tooltip-analysis-trend ${textClass}\">\n          <i\n            class=\"chart-tooltip-info-icon mt-1 fa ${getTrendIconClass(item.trend)}\"\n          ></i>\n          <span class=\"h5 m-0 d-block\">\n            ${checkTrendValueChanged(item.trend) ? trendValue : ''}\n          </span>\n          <span class=\"chart-tooltip-info-text text-muted w-100\">\n            ${i18nFilter(getTrendLabel(item.trend))}\n          </span>\n        </p>\n      ` : ''}\n    `;\n  };\n\n  /**\n   * @description\n   * Builds the DOM element that contains slice label\n   *\n   * @name getNewSliceLabel\n   * @type {function}\n   * @inner\n   * @param {string} category Category name\n   * @param {object} amount Amount object\n   * @param {string} amount.currencyCode Amount's currency code (ISO)\n   * @param {number} amount.amount Amount's value\n   * @param {boolean} topHalf Is this top half slice\n   * @returns {object}\n   */\n  const getNewSliceLabel = (category, amount, topHalf) => {\n    const wrapper = document.createElement('div');\n    wrapper.setAttribute(CHART_SLICE_LABEL.dataAttr, '');\n    wrapper.className = 'text-center';\n    let categoryIdentifier;\n\n    if (isParentSelected) {\n      categoryIdentifier = document.createElement('span');\n      categoryIdentifier.innerText = category;\n    } else {\n      categoryIdentifier = document.createElement('i');\n      categoryIdentifier.className =\n        `fa chart-donut-slice-icon bb-transaction-category-${categoryToIconClass(category)}`;\n    }\n\n    const amountEl = document.createElement('div');\n    amountEl.className = 'chart-donut-slice-amount';\n    amountEl.innerHTML = `\n      <ui-bb-format-amount-ng class=\"amount-regular-color amount-integer\"\n        data-amount=\"${amount.amount}\"\n        data-currency=\"'${amount.currencyCode}'\"\n        data-wrap>\n      </ui-bb-format-amount-ng>`;\n\n    // compile UI component\n    context.$compile(angular.element(amountEl).contents())(context.$rootScope);\n\n    wrapper.style.position = 'absolute';\n    // do not show item until it is positioned correctly\n    wrapper.style.opacity = 0;\n\n    if (!topHalf) {\n      wrapper.appendChild(categoryIdentifier);\n    }\n    wrapper.appendChild(amountEl);\n    if (topHalf) {\n      wrapper.appendChild(categoryIdentifier);\n    }\n\n    return wrapper;\n  };\n\n  /**\n   * @description onClick handler with a visualisation for donut sector\n   *\n   * @name onDonutChartSectorClickAnimation\n   * @type {function}\n   * @param {*} chartInstance - the Chart.js object\n   * @param {*} event - Chart.js click event object with a clicked area\n   * @returns {object} name and isSelected flag of the active sector (category)\n   */\n  const onDonutChartSectorClickAnimation = (chartInstance, event) => {\n    const defaultChartRadius = chartInstance.outerRadius;\n    const activeSectors = chartInstance.getElementsAtEvent(event);\n\n    if (!activeSectors.length) { return null; }\n    /* eslint dot-notation:1 */\n    const isActiveSectorSelected = activeSectors[0]['_model'].outerRadius > defaultChartRadius;\n\n    // clear the chart radius\n    Object.assign(chartInstance, { outerRadius: defaultChartRadius });\n    chartInstance.update();\n\n    // toggle active sector shifting\n    if (!isActiveSectorSelected) {\n      activeSectors[0]['_model'].outerRadius = defaultChartRadius + CHART_SECTOR_SHIFT_SIZE;\n      chartInstance.render(RENDERING_ANIMATION_TIME, false);\n    }\n\n    return { name: activeSectors[0]['_model'].label, selected: !isActiveSectorSelected };\n  };\n\n  /**\n   * @description\n   * Clears all slice labels already present in chart area\n   *\n   * @name clearSliceLabels\n   * @type {function}\n   * @inner\n   * @param {object} container DOM element that contains all labels\n   */\n  const clearSliceLabels = (container) =>\n    angular.element(container.querySelectorAll(`div[${CHART_SLICE_LABEL.dataAttr}]`)).remove();\n\n  /**\n   * @description\n   * Renders slice labels\n   *\n   * @name renderSliceLabels\n   * @type {function}\n   * @inner\n   * @param {*} chartInstance - the Chart.js object\n   */\n  const renderSliceLabels = (chartInstance) => {\n    // clear any existing icons if any on render\n    clearSliceLabels(chartInstance.canvas.parentNode);\n\n    if (!chartInstance.config.data.analysisItems) {\n      return;\n    }\n\n    chartInstance.config.data.analysisItems.forEach(item => {\n      if (item.portion < CHART_SLICE_LABEL.minimum) {\n        return;\n      }\n\n      const circlePosition = Math.round(item.totalPortion - (item.portion / 2));\n      // top half of the labels has amount on top of the icon, other half on the bottom\n      const topHalf = circlePosition < 25 || circlePosition > 75;\n      const labelOffset = CHART_SLICE_LABEL.offset;\n\n      const element = getNewSliceLabel(item.category, item.totalAmount, topHalf);\n      // append element to chart in order to make it possible to measure width and height\n      chartInstance.canvas.parentNode.appendChild(element);\n      // use timeout to get real element dimensions once ui component is compiled\n      setTimeout(() => {\n        // position label correctly\n        const yOffset = Math.round(labelOffset + (element.clientHeight / 2) +\n          (topHalf ? (element.clientHeight / 6) : (-element.clientHeight / 3)));\n\n        const radius = chartInstance.outerRadius + labelOffset;\n        Object.assign(element.style, calculatePosition(\n          circlePosition,\n          radius,\n          radius,\n          Math.round(labelOffset + (element.clientWidth / 2)),\n          yOffset\n        ), { opacity: 1 });\n      }, 0);\n    });\n  };\n\n\n  /**\n   * @description\n   * Calculates absolute position of the tooltip, based on\n   * bar height and chart dimensions and assigns them to the\n   * tooltip DOM element\n   *\n   * @name helpers#setTurnoversTooltipPosition\n   * @type {function}\n   * @inner\n   * @param {object} element in DOM\n   * @param {object} tooltip object containing tooltip related data like\n   * positions, current data point, styling from chart options, etc.\n   * @param {object} chart instance\n   */\n  const setTurnoversTooltipPosition = (element, tooltip, chart) => {\n    const dataPoint = tooltip.dataPoints[0];\n    const positionX = (chart.canvas.offsetLeft + Math.floor(dataPoint.x)) -\n      Math.ceil((element.clientWidth) / 2);\n    const positionY = tooltip.caretY - element.clientHeight;\n\n    Object.assign(element.style, {\n      left: `${positionX}px`,\n      top: `${Math.max(0, positionY)}px`,\n    });\n  };\n\n  return {\n    /**\n     * @description\n     * Start period label formatter helper. Returns formatted date.\n     *\n     * @name periodStartLabelFormatter\n     * @type {function}\n     * @param {Date} date\n     * @returns {string} Formatted label\n     */\n    periodStartLabelFormatter: (date) => dateFilter(date, 'd MMM yyyy'),\n\n    /**\n     * @description\n     * End period label formatter helper. In case period is larger than current date\n     * (end date of current month) it returns translation for analysis.label.period.now,\n     * otherwise it returns formatted date\n     *\n     * @name periodEndLabelFormatter\n     * @type {function}\n     * @param {Date} date\n     * @returns {string} Formatted label\n     */\n    periodEndLabelFormatter: (date) => (new Date(new Date().setHours(0, 0, 0, 0)) > date\n      ? dateFilter(date, 'd MMM yyyy')\n      : i18nFilter('analysis.label.period.now')),\n\n    /**\n     * @description\n     * Creates custom tooltip content and places tooltip element on the edge\n     * of currently active portion\n     *\n     * @name customizeTooltip\n     * @type {function}\n     *\n     * @param {object} tooltip object containing tooltip related data like\n     * positions, current data point, styling from chart options, etc.\n     * @param {object} element in DOM\n     * @param {AnalysisCategoryBBSeries} data array of data used to draw the chart\n     * @param {object} chart instance\n     */\n    customizeTooltip: (tooltip, element, data, chart) => {\n      // Calculate container width to prevent tooltip get out of the widget wrapper (borders)\n      const parent = document.querySelector(DEFAULT_WIDGET_SELECTOR);\n      // (element.offsetWidth * 2) because tooltip should fit into left/right sides\n      // (12 * 2 * 2) is the width of the tooltip arrows in both sides (left, right)\n      // (CHART_SECTOR_SHIFT_SIZE * 2) is adding the offset between the chart and the icons\n      // (15 * 2) padding pixels between tooltip and widget border (LF-2554)\n      const isNarrow =\n        (chart.width + (element.offsetWidth * 2)) +\n        (12 * 2 * 2) +\n        (CHART_SECTOR_SHIFT_SIZE * 2) > parent.offsetWidth;\n\n      // get all data for active point\n      const item = data.analysisItems[tooltip.dataPoints[0].index];\n\n      let arrowClass;\n      if (isNarrow) {\n        arrowClass = (item.totalPortion - (item.portion / 2)) < 50 ?\n        'bb-arrow-right' : 'bb-arrow-left';\n      } else {\n        arrowClass = (item.totalPortion - (item.portion / 2)) > 50 ?\n        'bb-arrow-right' : 'bb-arrow-left';\n      }\n\n      Object.assign(element, {\n        innerHTML: buildTooltipContent(item),\n        className: `chart-tooltip chart-tooltip-default ${arrowClass}`,\n      });\n\n      // compile tooltip's content\n      context.$compile(angular.element(element).contents())(context.$rootScope);\n\n      // calculate element position\n      setTooltipPosition(element, tooltip, chart, item, isNarrow);\n\n      chart.$scope.$apply();\n    },\n\n    /**\n     * @description\n     * Creates custom tooltip content and places tooltip element on top\n     * of the currently active bar\n     *\n     * @name customizeTurnoversTooltip\n     * @type {function}\n     *\n     * @param {object} tooltip object containing tooltip related data like\n     * positions, current data point, styling from chart options, etc.\n     * @param {object} element in DOM\n     * @param {TurnoversBBSeries} data array of data used to draw the chart\n     */\n    customizeTurnoversTooltip: (tooltip, element, data, chart) => {\n      // get all data for active point\n      const item = data.original.turnovers[tooltip.dataPoints[0].index];\n      const dataKey = data.datasets[0].dataKey;\n\n      Object.assign(element, {\n        innerHTML: `\n          <div class=\"row\">\n            <span class=\"col-5\">\n              ${isSpending ?\n                i18nFilter('analysis.tooltip.title.spent') :\n                i18nFilter('analysis.tooltip.title.income')\n              }\n            </span>\n            <span class=\"col-7 pl-0 text-right\">\n              <ui-bb-format-amount-ng class=\"amount-regular-color\"\n                data-amount=\"${item[dataKey].amount}\"\n                data-currency=\"'${item[dataKey].currencyCode}'\"\n                data-wrap>\n              </ui-bb-format-amount-ng>\n            </span>\n          </div>\n        `,\n        className:\n          `chart-tooltip chart-tooltip-default chart-tooltip-small text-center\n            bb-arrow-bottom`,\n      });\n\n      // compile tooltip's content\n      context.$compile(angular.element(element).contents())(context.$rootScope);\n\n      // calculate element position\n      setTurnoversTooltipPosition(element, tooltip, chart);\n\n      chart.$scope.$apply();\n    },\n\n    /**\n     * @description\n     * Keeps analysis type flag and returns chart options object\n     *\n     * @name donutChartOptions\n     * @type {function}\n     * @returns {object} Donut chart options object\n     */\n    donutChartOptions: (ctrl) => {\n      isSpending = ctrl.isSpendingAnalysis();\n      return chartOptions;\n    },\n\n    /**\n     * @description\n     * Chart.js options object to be used by bar chart component.\n     * Has higher priority, can be used to override default options\n     * values in a chart.\n     *\n     * @inner\n     * @name barChartOptions\n     * @type {object}\n     */\n\n    barChartOptions: {\n      scales: {\n        xAxes: [{\n          ticks: {\n            fontColor: getStyle(BAR_CHART_CSS_SELECTORS.axisX, 'color'),\n            fontFamily: getStyle(BAR_CHART_CSS_SELECTORS.axisBase, 'fontFamily'),\n          },\n        }],\n        yAxes: [{\n          gridLines: {\n            display: true,\n            drawBorder: false,\n            tickMarkLength: 0,\n          },\n          ticks: {\n            min: 0,\n            maxTicksLimit: MAX_Y_TICKS,\n            padding: getYAxisLabelPadding(),\n            fontColor: getStyle(BAR_CHART_CSS_SELECTORS.axisY, 'color'),\n            fontFamily: getStyle(BAR_CHART_CSS_SELECTORS.axisBase, 'fontFamily'),\n          },\n        }],\n      },\n    },\n\n    /**\n     * @description\n     * Array of plugins used to transform Chart.js rendering in the extension\n     *\n     * @name chartPlugins\n     * @type {array}\n     */\n    chartPlugins: [\n      {\n        beforeEvent: (chartInstance, event) => {\n          if (event.type === 'click') {\n            Object.assign(chartInstance, { onClickLayoutUpdate: true });\n          }\n        },\n        afterEvent: (chartInstance, event) => {\n          if (event.type === 'click') {\n            Object.assign(chartInstance, { onClickLayoutUpdate: false });\n          }\n        },\n        afterRender: (chartInstance) => {\n          chartInstance.$scope.$apply();\n        },\n        afterDatasetsUpdate: (chartInstance) => {\n          if (chartInstance.onClickLayoutUpdate) {\n            return;\n          }\n\n          renderSliceLabels(chartInstance);\n        },\n      },\n    ],\n\n    /**\n     * @description\n     * Callback on period start date value change. This function ensures\n     * that controller property is also updated\n     *\n     * @name onPeriodStartChange\n     * @type {function}\n     * @param {IncomeSpendingAnalysisCategoryController} ctrl\n     */\n    onPeriodStartChange: (ctrl) => (newStartDate) =>\n      Object.assign(ctrl, { periodStartDate: getNewDate(newStartDate) }),\n\n    /**\n     * @description\n     * Callback on period value change. Calls\n     * controller's onPeriodEndChanged listener\n     *\n     * @name onPeriodEndChange\n     * @type {function}\n     * @param {IncomeSpendingAnalysisCategoryController} ctrl\n     */\n    onPeriodEndChange: (ctrl) => (newEndDate) => {\n      Object.assign(ctrl, { periodEndDate: getNewDate(newEndDate) });\n      ctrl.updateAnalysisCategories()\n        .then(ctrl.setSelectedAnalysisItem(null));\n    },\n\n    updatePeriod: (ctrl, monthsRange) => {\n      const date = new Date();\n      // (monthsRange - 1) to get data starting from this month and 5 months before it,\n      // which will end up to 6 months in total (the same of 12 months)\n      const startDate = (monthsRange === 1)\n        ? date.setDate(1)\n        : date.setMonth(date.getMonth() - (monthsRange - 1), 1);\n\n      Object.assign(ctrl, {\n        periodStartDate: getNewDate(new Date(startDate)),\n        periodEndDate: getNewDate(new Date()),\n      });\n      if (monthsRange > 1) {\n        ctrl.updateTurnovers();\n      }\n      ctrl.updateAnalysisCategories();\n    },\n\n    /**\n     * @description\n     * Checks if data for chart is available in series object\n     *\n     * @name isSeriesDataAvailable\n     * @type {function}\n     * @param {AnalysisCategoryBBSeries} series\n     * @returns {boolean} returns true if series data is not empty\n     */\n    isSeriesDataAvailable: (series) => (series ? series.datasets[0].data.length : false),\n\n    /**\n     * @description\n     * Function to create new handler for the chart click handling\n     *\n     * @name getClickHandler\n     * @type {function}\n     * @param {IncomeSpendingAnalysisCategoryController} $ctrl\n     * @returns {function} chart click handler\n     */\n    getClickHandler: function getClickHandler($ctrl) {\n      return function (clickEvent) {\n        const chartInstance = this;\n        const activeSector = onDonutChartSectorClickAnimation(chartInstance, clickEvent);\n        if (activeSector && activeSector.name) {\n          $ctrl.setSelectedAnalysisItem(activeSector.selected\n            ? populateSelectedSectorObject($ctrl, activeSector.name)\n            : null\n          );\n        }\n\n        isParentSelected = $ctrl.selectedParentCategory;\n      };\n    },\n\n    loadFirstLevelCategories: function loadFirstLevelCategories($ctrl) {\n      isParentSelected = false;\n      $ctrl.loadFirstLevelCategories();\n    },\n\n    /**\n     * @description\n     * X axis tick formatter\n     *\n     * @name formatX\n     * @type {function}\n     *\n     * @param {array} ticks Array of scale ticks\n     * @param {TurnoversBBSeries} data Chart series\n     * @returns {array} Formatted array of ticks\n     */\n    formatX: (ticks) => ticks.map(tick => dateFilter(tick, 'MMM')),\n\n    /**\n     * @description\n     * Y axis tick formatter\n     *\n     * @name formatY\n     * @type {function}\n     *\n     * @param {array} ticks Array of scale ticks\n     * @param {TurnoversBBSeries} data Chart series\n     * @returns {array} Formatted array of ticks\n     */\n    formatY: (ticks, data) => {\n      if (!data || !data.original.turnovers.length) {\n        return [];\n      }\n\n      // the same currency is being used for all ticks\n      const currencyCode = data.original.turnovers[0].balance.currencyCode;\n      return ticks.map(tick => {\n        if (parseFloat(tick) === 0) {\n          return null;\n        }\n        return currencyFilter(tick, getSymbol(currencyCode), 0);\n      });\n    },\n    categoryToIconClass,\n  };\n};\n\nexport default helpers;\n\n/**\n * Element absolute position object\n * @typedef {object} Position\n * @property {number} left Distance from left edge of the area\n * @property {number} top Distance from the top of area\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-income-spending-analysis-category-ng/scripts/helpers.js"],"sourceRoot":""}