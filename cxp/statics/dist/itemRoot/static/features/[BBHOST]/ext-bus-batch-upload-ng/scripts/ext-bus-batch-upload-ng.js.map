{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap 8cdceecee155e37df468?d533","webpack:///./ext-bus-batch-upload-ng/model.xml","webpack:///external \"vendor-bb-angular-ng-aria\"?9d0e","webpack:///external \"ui-bb-i18n-ng\"?dc01","webpack:///external \"ui-bb-notification-stripe-ng\"?0663","webpack:///external \"ui-bb-confirm-ng\"?ed9c","webpack:///./ext-bus-batch-upload-ng/scripts/index.js","webpack:///./ext-bus-batch-upload-ng/scripts/helpers.js","webpack:///external \"ui-bb-file-size-ng\""],"names":["default","dependencyKeys","hooks","isUploadAvailable","ctrl","isUploading","state","failedUploadFilesNumber","isContinueEnabled","files","every","f","uploaded","isChangeUnavailable","length","getQueueStatus","key","getUploadedFilesStatus","uploadedFilesNumber","getUploadFilesFailedStatus","getContinueButtonLabel","uploadOptions","title","code","acceptMIMETypes","join","supportedExtensions","handleChangesLinkClick","ext","showSelectTypePage","changeConfirmOpened"],"mappings":"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","file":"ext-bus-batch-upload-ng/scripts/ext-bus-batch-upload-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bb-confirm-ng\"), require(\"ui-bb-file-size-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bus-batch-upload-ng\", [\"vendor-bb-angular-ng-aria\", \"ui-bb-i18n-ng\", \"ui-bb-notification-stripe-ng\", \"ui-bb-confirm-ng\", \"ui-bb-file-size-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bus-batch-upload-ng\"] = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bb-confirm-ng\"), require(\"ui-bb-file-size-ng\"));\n\telse\n\t\troot[\"ext-bus-batch-upload-ng\"] = factory(root[\"vendor-bb-angular-ng-aria\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-notification-stripe-ng\"], root[\"ui-bb-confirm-ng\"], root[\"ui-bb-file-size-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_17__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8cdceecee155e37df468","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bus-batch-upload-ng/model.xml\n// module id = 0\n// module chunks = 1","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-aria\"\n// module id = 2\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 3\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-notification-stripe-ng\"\n// module id = 5\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-confirm-ng\"\n// module id = 9\n// module chunks = 0 1","/**\n * @module ext-bus-batch-upload-ng\n *\n * @description\n * Extension for batch upload.\n *\n * @example\n * <!-- batch upload widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *  <value type=\"string\">ext-bus-batch-upload-ng</value>\n * </property>\n */\nimport ngAriaModuleKey from 'vendor-bb-angular-ng-aria';\nimport uiBbI18nKey from 'ui-bb-i18n-ng';\nimport fileSizeKey from 'ui-bb-file-size-ng';\nimport uiBbNotificationStripeKey from 'ui-bb-notification-stripe-ng';\nimport uiBbConfirmKey from 'ui-bb-confirm-ng';\n\nexport const dependencyKeys = [\n  ngAriaModuleKey,\n  uiBbI18nKey,\n  uiBbNotificationStripeKey,\n  fileSizeKey,\n  uiBbConfirmKey,\n];\n\nexport const hooks = {};\nexport { default as helpers } from './helpers';\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-batch-upload-ng/scripts/index.js","export default {\n  /**\n   * @name isUploadAvailable\n   * @type {function}\n   *\n   * @description\n   * Check if batch upload is available\n   *\n   * @param {object} ctrl object\n   *\n   * @returns {boolean}\n   */\n  isUploadAvailable: ctrl => !ctrl.isUploading() && !ctrl.state.failedUploadFilesNumber,\n\n  /**\n   * @name isContinueEnabled\n   * @type {function}\n   *\n   * @description\n   * Check if user can proceed after uploading files\n   *\n   * @param {object} ctrl object\n   *\n   * @returns {boolean}\n   */\n  isContinueEnabled: ctrl => !ctrl.isUploading() && ctrl.state.files.every(f => f.uploaded),\n\n  /**\n   * @name isChangeUnavailable\n   * @type {function}\n   *\n   * @description\n   * Check if user can change the type of batch upload\n   *\n   * @param {object} ctrl object\n   *\n   * @returns {boolean}\n   */\n  isChangeUnavailable: ctrl =>\n    (ctrl.state.files.length > 0 && ctrl.state.files.every(f => f.uploaded)),\n\n  /**\n   * @name getQueueStatus\n   * @type {function}\n   *\n   * @description\n   * Helper to get queue status label\n   *\n   * @param {object} ctrl object\n   *\n   * @returns {string} Queue status string\n   */\n  getQueueStatus: ctrl => {\n    let key;\n    if (ctrl.isUploading()) {\n      key = ctrl.state.files.length === 1 ? 'label.uploading_file' : 'label.uploading_files';\n    } else {\n      key = ctrl.state.files.length === 1 ? 'label.file_in_queue' : 'label.files_in_queue';\n    }\n    return key;\n  },\n\n  /**\n   * @name getUploadedFilesStatus\n   * @type {function}\n   *\n   * @description\n   * Helper to get label for uploaded files\n   *\n   * @param {object} ctrl object\n   *\n   * @returns {string} Uploaded files status string\n   */\n  getUploadedFilesStatus: ctrl => (ctrl.state.uploadedFilesNumber === 1 ?\n    'label.uploaded_file' : 'label.uploaded_files'),\n\n  /**\n   * @name getUploadFilesFailedStatus\n   * @type {function}\n   *\n   * @description\n   * Helper to get label for failed upload files\n   *\n   * @param {object} ctrl object\n   *\n   * @returns {string} Upload failed files status string\n   */\n  getUploadFilesFailedStatus: ctrl => (ctrl.state.failedUploadFilesNumber === 1 ?\n      'label.upload_file_failed' : 'label.upload_files_failed'),\n\n  /**\n   * @name getContinueButtonLabel\n   * @type {function}\n   *\n   * @description\n   * Helper to get label for continue button\n   *\n   * @param {object} ctrl object\n   *\n   * @returns {string} Continue button label string\n   */\n  getContinueButtonLabel: ctrl =>\n    (!ctrl.isUploading() ? 'label.upload.new.batch' : 'label.uploading'),\n\n  /**\n   * @name uploadOptions\n   * @type {Array}\n   *\n   * @description\n   * List of upload options\n   */\n  uploadOptions: [\n    {\n      title: 'label.credit.transfer',\n      code: 'Clieop.001',\n      acceptMIMETypes: [\n        'text/plain',\n      ].join(','),\n      supportedExtensions: [\n        '.txt',\n      ].join(','),\n    },\n    {\n      title: 'label.sepa.credit.transfer',\n      code: 'PAIN.001',\n      acceptMIMETypes: [\n        'text/xml',\n      ].join(','),\n      supportedExtensions: [\n        '.xml',\n      ].join(','),\n    },\n    {\n      title: 'label.sepa.direct.debit',\n      code: 'PAIN.008',\n      acceptMIMETypes: [\n        'text/xml',\n      ].join(','),\n      supportedExtensions: [\n        '.xml',\n      ].join(','),\n    },\n  ],\n\n  /**\n   * @name handleChangesLinkClick\n   * @type {function}\n   * @description\n   * Shows selectType page or opens confirmation modal for\n   * files list depending on number of uploaded files.\n   * @param {object} ext Extension scope object\n   * @param {object} ctrl Widget controller\n   */\n  handleChangesLinkClick: (ext, ctrl) => {\n    if (!ctrl.state.files.length) {\n      ctrl.showSelectTypePage();\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      ext.changeConfirmOpened = true;\n    }\n  },\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-batch-upload-ng/scripts/helpers.js","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-file-size-ng\"\n// module id = 17\n// module chunks = 1"],"sourceRoot":""}