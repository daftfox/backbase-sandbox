{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6************","webpack:///webpack/bootstrap 16ce69979da567ada154?cec8************","webpack:///./ui-bb-dropdown-select-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114************","webpack:///./ui-bb-dropdown-select-ng/scripts/index.js","webpack:///external \"vendor-bb-uib-dropdown\"","webpack:///./ui-bb-dropdown-select-ng/scripts/select.directive.js","webpack:///./ui-bb-dropdown-select-ng/scripts/selected.directive.js","webpack:///./ui-bb-dropdown-select-ng/scripts/option.directive.js"],"names":["angular","module","uibDropdown","directive","uiBbDropdownSelectDirective","uiBbDropdownSelectedDirective","uiBbDropdownOption","name","UiBbDropdownSelectController","$timeout","$attrs","$scope","instance","$onInit","ngModelController","$render","render","bind","Object","assign","$option","$viewValue","$modelValue","select","option","soft","multiple","Array","isArray","model","currentIndex","indexOf","splice","push","$setDirty","isOpen","ngChange","$item","isSelected","getSelectedConfig","selectedAs","templateUrl","clone","onBlur","event","$setTouched","relatedTarget","target","tagName","originalParent","relatedParent","parentNode","$digest","clickHandler","stopPropagation","require","ngDropdownController","transclude","bindToController","controllerAs","controller","template","element","attrs","class","placeholder","scope","disabled","labels","hasError","menuClass","link","uiBbDropdownSelectLink","removeClass","on","$q","$compile","$templateRequest","restrict","uiBbDropdownSelectController","templateSrc","config","Error","when","then","html","removeAttr","uiBbDropdownOptionController","selected","$ctrl","ngDisabled","$onChanges","replace","arrowNavigation","controllers","appendOption","children","append","el","empty","tplContent","trim"],"mappings":"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","file":"ui-bb-dropdown-select-ng/scripts/ui-bb-dropdown-select-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"vendor-bb-uib-dropdown\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bb-dropdown-select-ng\", [\"vendor-bb-angular\", \"vendor-bb-uib-dropdown\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bb-dropdown-select-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"vendor-bb-uib-dropdown\"));\n\telse\n\t\troot[\"ui-bb-dropdown-select-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"vendor-bb-uib-dropdown\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_56__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 16ce69979da567ada154","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bb-dropdown-select-ng/model.xml\n// module id = 0\n// module chunks = 12","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41","/**\n * @module ui-bb-dropdown-select-ng\n * @description\n * UI dropdown select component\n *\n * @example\n * // In an extension:\n * // file: scripts/index.js\n * import uiBbDropdownSelectKey from 'ui-bb-dropdown-select-ng';\n *\n * export const dependencyKeys = [\n *   uiBbDropdownSelectKey,\n * ];\n *\n * // file: templates/template.ng.html\n * <ui-bb-dropdown-select-ng\n *   ng-model=\"item\"\n *   selected-as=\"$option.name\">\n *   <ui-bb-dropdown-option-ng\n *     option=\"item\"\n *     data-arrow-navigation=\"true\"\n *     ng-repeat=\"item in items\"\n *     class=\"list-group-item-text\">\n *       {{:: $option.name }}\n *   </ui-bb-dropdown-option-ng>\n * </ui-bb-dropdown-select-ng>\n */\n\nimport angular from 'vendor-bb-angular';\nimport uibDropdown from 'vendor-bb-uib-dropdown';\n\nimport uiBbDropdownSelectDirective from './select.directive';\nimport uiBbDropdownSelectedDirective from './selected.directive';\nimport uiBbDropdownOption from './option.directive';\n\n/**\n * @name default\n * @type {string}\n * @description The angular module name\n */\nexport default angular\n  .module('ui-bb-dropdown-select-ng', [uibDropdown])\n  .directive('uiBbDropdownSelectNg', uiBbDropdownSelectDirective)\n  .directive('uiBbDropdownSelectedNg', [\n    '$q',\n    '$compile',\n    '$templateRequest',\n    uiBbDropdownSelectedDirective,\n  ])\n  .directive('uiBbDropdownOptionNg', [\n    '$templateRequest',\n    '$compile',\n    uiBbDropdownOption,\n  ])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-dropdown-select-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_56__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-dropdown\"\n// module id = 56\n// module chunks = 12","/**\n * @name uiBbDropdownSelectDirective\n * @type {object}\n *\n * @property {boolean} isOpen Defines whether or not the dropdown is open\n * @property {?boolean} multiple True if multiple selection is enabled (false by default)\n * @property {boolean} ngDisabled Defines whether or not the dropdown is disabled\n * @property {object} ngModel Dropdown model\n * @property {?string} placeholder Placeholder text\n * @property {function} ngChange Callback function triggered when dropdown item is selected\n * @property {function} selectedAs Allows to customize selected value\n * @property {object} labels Object with labels that will be attached to dropdown's scope\n * @property {?string} menuClass Extra class(es) to place on the menu element\n */\nfunction UiBbDropdownSelectController($timeout, $attrs, $scope) {\n  const instance = {\n    $onInit: () => {\n      instance.ngModelController.$render = instance.render.bind(instance);\n    },\n    render: () => {\n      Object.assign($scope, {\n        $option: instance.ngModelController.$viewValue || instance.ngModelController.$modelValue,\n      });\n    },\n  };\n\n  /**\n   * @description\n   * Selects given option\n   *\n   * @name uiBbDropdownSelectDirective#select\n   * @type {function}\n   * @param {object} option Selected option\n   * @param {boolean} soft True if select method should only set the option to  the model without\n   * calling callback and closing dropdown\n   */\n  instance.select = (option, soft = false) => {\n    // different behaviour is needed for single and multiple selection\n    if (instance.multiple) {\n      if (!Array.isArray(instance.model)) {\n        instance.model = [];\n      }\n      const currentIndex = instance.model.indexOf(option);\n      if (currentIndex >= 0) {\n        instance.model.splice(currentIndex, 1);\n      } else {\n        instance.model.push(option);\n      }\n\n      // update $dirty/$pristine state of model\n      instance.ngModelController.$setDirty();\n    } else {\n      if (!soft) {\n        instance.isOpen = false;\n      }\n\n      // update $dirty/$pristine state of model (only when it has actually changed)\n      if (instance.model !== option) {\n        instance.ngModelController.$setDirty();\n      }\n\n      instance.model = option;\n    }\n\n    instance.ngModelController.$render();\n\n    if (!soft) {\n      $timeout(() => instance.ngChange({ $item: instance.model }));\n    }\n  };\n\n  instance.isSelected = function isSelected(option) {\n    return instance.multiple ? instance.model.indexOf(option) > -1 : instance.model === option;\n  };\n\n  instance.getSelectedConfig = () => ({\n    selectedAs: $attrs.selectedAs ? '{{ $ctrl.selectedAs(this) }}' : false,\n    templateUrl: $attrs.templateUrl,\n    clone: false,\n  });\n\n  /**\n   * @description\n   * Close menu if next focused element is outside of container\n   *\n   * @name uiBbDropdownSelectDirective#onBlur\n   * @type {function}\n   * @param {object} event\n   */\n  instance.onBlur = function onBlur(event) {\n    $timeout(() => instance.ngModelController.$setTouched());\n\n    // For some browsers, when clicking on opened dropdown, additionally to\n    // click event, focusin and focusout events are sent. As focusout changes\n    // isOpen state, dropdown closes and opens back really quick. To prevent that,\n    // focusout will be ignored in this case. Only way to recognize this situation is\n    // by inspecting event object and its relatedTarget and target properties\n    if (event.relatedTarget === null && event.target && event.target.tagName === 'BUTTON') {\n      return;\n    }\n\n    if (event.relatedTarget) {\n      const originalParent = this;\n      let relatedParent = event.relatedTarget;\n\n      while (relatedParent) {\n        if (relatedParent === originalParent) {\n          return;\n        }\n\n        relatedParent = relatedParent.parentNode;\n      }\n    }\n\n    instance.isOpen = false;\n    $scope.$digest();\n  };\n\n  /**\n   * @description\n   * Handles clicks on the items in the list\n   *\n   * @name uiBbDropdownSelectDirective#clickHandler\n   * @type {function}\n   * @param {object} event\n   */\n  instance.clickHandler = (event) => {\n    if (instance.multiple) {\n      event.stopPropagation();\n    }\n  };\n\n  return instance;\n}\n\nexport default function uiBbDropdownSelectDirective() {\n  return {\n    require: {\n      ngModelController: 'ngModel',\n      ngDropdownController: 'uiBbDropdownSelectNg',\n    },\n    transclude: true,\n    bindToController: true,\n    controllerAs: '$ctrl',\n    controller: ['$timeout', '$attrs', '$scope', UiBbDropdownSelectController],\n    template: (element, attrs) => `\n      <div class=\"dropdown d-flex flex-column border rounded\"\n        data-ng-class=\"{\n          'selected': $ctrl.multiple ? $ctrl.model.length : $ctrl.model,\n          'border-danger': $ctrl.hasError\n        }\"\n        uib-dropdown\n        data-keyboard-nav\n        data-is-open=\"$ctrl.isOpen\">\n\n        <button type=\"button\"\n          class=\"btn btn-dropdown-toggle d-flex btn-outline-light text-dark\n            align-items-center justify-content-between ${attrs.class}\"\n          uib-dropdown-toggle\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          data-ng-disabled=\"$ctrl.disabled\"\n        >\n          <span class=\"w-100 dropdown-selected text-left text-truncate\"\n            data-ng-class=\"{ 'd-none': $ctrl.multiple ? !$ctrl.model.length : !$ctrl.model }\"\n            ui-bb-dropdown-selected-ng\n          >\n          </span>\n          <span class=\"placeholder text-left text-truncate\"\n            data-ng-class=\"{ 'd-none': $ctrl.multiple ? $ctrl.model.length : $ctrl.model }\"\n          >${attrs.placeholder || '&nbsp;'}</span>\n          <i class=\"fa fa-chevron-down d-flex align-items-center ml-2\"\n            data-role=\"select-account-button\">\n          </i>\n        </button>\n\n        <ul \n          class=\"uib-dropdown-menu container-fluid ng-transclude-node dropdown-menu pre-scrollable\"\n          uib-dropdown-menu\n          data-ng-class=\"$ctrl.menuClass\"\n          data-ng-transclude\n          data-ng-click=\"$ctrl.clickHandler($event)\"\n          role=\"menu\"\n          tabindex=\"-1\"\n          aria-labelledby=\"single-button\">\n        </ul>\n      </div>\n    `,\n    scope: {\n      isOpen: '=?',\n      disabled: '=ngDisabled',\n      model: '=ngModel',\n      ngChange: '&',\n      selectedAs: '&',\n      multiple: '<',\n      labels: '<',\n      hasError: '<',\n      menuClass: '@',\n    },\n    link: function uiBbDropdownSelectLink(scope, element, attrs, controller) {\n      element.removeClass(attrs.class);\n      element.on('focusout', controller.ngDropdownController.onBlur);\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-dropdown-select-ng/scripts/select.directive.js","/**\n * @name uiBbDropdownSelectedDirective\n * @type {object}\n */\nfunction uiBbDropdownSelectedDirective($q, $compile, $templateRequest) {\n  return {\n    restrict: 'A',\n    require: '^^uiBbDropdownSelectNg',\n    link: (scope, element, attrs, uiBbDropdownSelectController) => {\n      let templateSrc;\n      const config = uiBbDropdownSelectController.getSelectedConfig();\n\n      if (config.selectedAs) {\n        templateSrc = config.selectedAs;\n      } else if (config.templateUrl) {\n        templateSrc = $templateRequest(config.templateUrl);\n      } else {\n        throw new Error(\n          'ui-bb-dropdown-select-ng element expects either selected-as or template-src attribute.'\n        );\n      }\n\n      $q.when(templateSrc).then(template => {\n        element.html(template).removeAttr('ui-bb-dropdown-selected-ng');\n        $compile(element)(scope);\n      });\n    },\n  };\n}\n\nexport default uiBbDropdownSelectedDirective;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-dropdown-select-ng/scripts/selected.directive.js","import { equals } from 'vendor-bb-angular';\n\n/**\n * @name uiBbDropdownOption\n * @type {object}\n */\nfunction uiBbDropdownOptionController($scope) {\n  const instance = {\n    isSelected() {\n      return this.selected || this.uiBbDropdownSelectController.isSelected(instance.option);\n    },\n    select() {\n      if (!$scope.$ctrl.ngDisabled) {\n        this.uiBbDropdownSelectController.select(instance.option);\n      }\n    },\n    $onInit() {\n      Object.assign($scope, { $option: this.option });\n\n      // Mark pre-selected option with checkmark in dropdown list\n      if (equals(this.uiBbDropdownSelectController.model, this.option)) {\n        this.uiBbDropdownSelectController.select(this.option, true);\n      }\n    },\n    $onChanges() {\n      Object.assign($scope, { $option: this.option });\n    },\n  };\n\n  return instance;\n}\n\nexport default function uiBbDropdownOption($templateRequest, $compile) {\n  return {\n    require: {\n      uiBbDropdownSelectController: '^^uiBbDropdownSelectNg',\n    },\n    transclude: true,\n    replace: true,\n    bindToController: true,\n    controllerAs: '$ctrl',\n    controller: ['$scope', uiBbDropdownOptionController],\n    template: `\n      <li role=\"menu-item\"\n        class=\"dropdown-item\"\n        data-ng-class=\"{active: $ctrl.isSelected()}\"\n        data-ng-click=\"$ctrl.select()\" tabindex=\"-1\">\n        <a class=\"clearfix cursor-pointer\" tabindex=\"0\" href=\"javascript:void(0)\"></a>\n      </li>\n    `,\n    scope: {\n      option: '=',\n      arrowNavigation: '<',\n      selected: '<',\n      ngDisabled: '<',\n    },\n    link(scope, element, attrs, controllers, transclude) {\n      const appendOption = el => (\n        scope.$ctrl.arrowNavigation === true\n          ? element.children().append(el)\n          : element.empty().append(el)\n      );\n\n      if (attrs.templateUrl) {\n        $templateRequest(attrs.templateUrl).then(tplContent => {\n          $compile(tplContent.trim())(scope, appendOption);\n        });\n      } else {\n        transclude(scope, appendOption);\n      }\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-dropdown-select-ng/scripts/option.directive.js"],"sourceRoot":""}