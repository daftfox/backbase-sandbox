{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*******","webpack:///webpack/bootstrap 35bfb9b1c80b5da44aff?9560*******","webpack:///./ui-bb-notifications-filter-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*","webpack:///./ui-bb-notifications-filter-ng/scripts/index.js","webpack:///external \"ui-bb-calendar-popup-ng\"","webpack:///external \"ui-bb-track-form-changes-ng\"","webpack:///external \"ui-bb-filter-form-actions-ng\"","webpack:///external \"ui-bb-dropdown-select-ng\"","webpack:///./ui-bb-notifications-filter-ng/scripts/component.js","webpack:///./ui-bb-notifications-filter-ng/scripts/controller.js"],"names":["angular","module","uiBbCalendarPopupKey","uiBbTrackChangesKey","uiBbFilterFormActionsKey","uiBbDropdownSelectKey","component","Component","controller","Controller","name","uiBbNotificationsFilterComponent","bindings","onFilter","headerLabels","levelLabels","statusLabels","buttonLabels","template","uiBbNotificationsFilterController","$scope","$ctrl","defaultFilterParams","levels","status","fromDate","toDate","startDate","endDate","filterParams","Object","assign","key","value","statuses","checked","datePickerParams","config","minDate","maxDate","Date","maxMode","enableRestrictedRange","$watch","newVal","getNormalizedDate","date","correction","timeStamp","parse","toISOString","slice","getParams","isAllLevelSelected","map","item","join","read","clearCheckedMapper","onApplyFilter","params","onClearFilter","Array","toggleFilter","isOpen","isFilterPristine","form","$pristine","level","setDefaultSeverityLevel","selected","find","checkSelectedLevels","lastItem","length","filter","setSelectedOptions","options"],"mappings":"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","file":"ui-bb-notifications-filter-ng/scripts/ui-bb-notifications-filter-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"ui-bb-calendar-popup-ng\"), require(\"ui-bb-track-form-changes-ng\"), require(\"ui-bb-filter-form-actions-ng\"), require(\"ui-bb-dropdown-select-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bb-notifications-filter-ng\", [\"vendor-bb-angular\", \"ui-bb-calendar-popup-ng\", \"ui-bb-track-form-changes-ng\", \"ui-bb-filter-form-actions-ng\", \"ui-bb-dropdown-select-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bb-notifications-filter-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"ui-bb-calendar-popup-ng\"), require(\"ui-bb-track-form-changes-ng\"), require(\"ui-bb-filter-form-actions-ng\"), require(\"ui-bb-dropdown-select-ng\"));\n\telse\n\t\troot[\"ui-bb-notifications-filter-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"ui-bb-calendar-popup-ng\"], root[\"ui-bb-track-form-changes-ng\"], root[\"ui-bb-filter-form-actions-ng\"], root[\"ui-bb-dropdown-select-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_53__, __WEBPACK_EXTERNAL_MODULE_54__, __WEBPACK_EXTERNAL_MODULE_55__, __WEBPACK_EXTERNAL_MODULE_56__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 35bfb9b1c80b5da44aff","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bb-notifications-filter-ng/model.xml\n// module id = 0\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 42\n// module chunks = 6 7 8 9 10 11 12","/**\n * @module ui-bb-notifications-filter-ng\n * @description\n * UI notifications filter component\n *\n * @example\n * // In an extension:\n * // file: scripts/index.js\n * import uiBbNotificationsFilterKey from 'ui-bb-notifications-filter-ng';\n *\n * export const dependencyKeys = [\n *   uiBbNotificationsFilterKey,\n * ];\n *\n * // file: templates/template.ng.html\n * <ui-bb-notifications-filter-ng on-filter=\"$ctrl.filter()\"\n * header-labels=\"{\n *  date: 'Date', searchInText: 'Search', searchInType: 'Search in type', level: 'Levels'\n * }\"\n * level-labels=\"{ info: 'Info', alert: 'Alert', warning: 'Warning', success: 'Success' }\"\n * status-labels=\"{ read: 'Read', unread: 'Unread', all: 'All' }\"\n * button-labels=\"{\n *  main: 'Filter',\n *  apply: 'Apply',\n *  reset: 'Reset',\n *  clearFromDate: 'Clear \"from\" date\"',\n *  clearToDate: 'Clear \"to\" date\"',\n * }\"\n * on-clear-filter=\"$ctrl.clearFilter\">\n * </ui-bb-notifications-filter-ng>\n */\n\nimport angular from 'vendor-bb-angular';\n\nimport uiBbCalendarPopupKey from 'ui-bb-calendar-popup-ng';\nimport uiBbTrackChangesKey from 'ui-bb-track-form-changes-ng';\nimport uiBbFilterFormActionsKey from 'ui-bb-filter-form-actions-ng';\nimport uiBbDropdownSelectKey from 'ui-bb-dropdown-select-ng';\n\nimport Component from './component';\nimport Controller from './controller';\n\n/**\n * @name default\n * @type {string}\n * @description The angular module name\n */\nexport default angular\n  .module('ui-bb-notifications-filter-ng', [\n    uiBbCalendarPopupKey,\n    uiBbTrackChangesKey,\n    uiBbFilterFormActionsKey,\n    uiBbDropdownSelectKey,\n  ])\n  .component('uiBbNotificationsFilterNg', Component)\n  .controller('uiBbNotificationsFilterController', ['$scope', Controller])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-notifications-filter-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_53__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-calendar-popup-ng\"\n// module id = 53\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_54__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-track-form-changes-ng\"\n// module id = 54\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_55__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-filter-form-actions-ng\"\n// module id = 55\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_56__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-dropdown-select-ng\"\n// module id = 56\n// module chunks = 8","\nconst uiBbNotificationsFilterComponent = {\n  bindings: {\n    onFilter: '&?',\n    headerLabels: '<',\n    levelLabels: '<',\n    statusLabels: '<',\n    buttonLabels: '<',\n  },\n  controller: 'uiBbNotificationsFilterController',\n  template: `\n    <div class=\"card-header text-right\">\n      <button class=\"btn btn-secondary\"\n        type=\"button\"\n        data-ng-click=\"$ctrl.toggleFilter()\"\n        title=\"{{ $ctrl.buttonLabels.main }}\">\n        <i class=\"fa fa-sliders-h\" aria-hidden=\"true\"></i>\n        <span data-ng-bind=\"$ctrl.buttonLabels.main\"></span>\n      </button>\n    </div>\n    <form data-ng-show=\"$ctrl.isOpen\"\n      data-role=\"search\"\n      name=\"filterForm\"\n      data-ng-submit=\"$ctrl.onApplyFilter()\"\n      data-ui-bb-track-changes=\"$ctrl.filterParams\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-12 col-lg-4\">\n            <label data-ng-bind=\"$ctrl.headerLabels.date\"></label>\n            <div class=\"form-group\">\n              <ui-bb-calendar-popup-ng\n                data-config=\"$ctrl.datePickerParams.config\"\n                data-date-range=\"$ctrl.filterParams\"\n              >\n              </ui-bb-calendar-popup-ng>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12 col-lg-4\">\n            <label data-ng-bind=\"$ctrl.headerLabels.level\"></label>\n            <div class=\"form-group\">\n              <ui-bb-dropdown-select-ng\n                class=\"form-control\"\n                data-multiple=\"true\"\n                data-template-url=\n                  \"ui-bb-notifications-filter-ng/option-multiple-selected-template.html\"\n                data-ng-model=\"$ctrl.filterParams.levels\"\n                data-role=\"ui-bb-notifications-filter-ng\"\n                data-ng-init=\"$ctrl.setDefaultSeverityLevel()\"\n                data-ng-change=\"$ctrl.checkSelectedLevels()\"\n              >\n                <ui-bb-dropdown-option-ng\n                  data-option=\"level\"\n                  data-ng-repeat=\"level in $ctrl.levels track by $index\"\n                  class=\"list-group-item-text\"\n                >\n                  <a href=\"#\" data-ng-bind=\"$parent.$ctrl.levelLabels[$option.key]\"></a>\n                </ui-bb-dropdown-option-ng>\n              </ui-bb-dropdown-select-ng>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12 col-lg-5\">\n            <label data-ng-bind=\"$ctrl.headerLabels.status\"></label>\n            <div class=\"form-group\">\n              <label class=\"form-check form-check-inline\"\n                data-ng-repeat=\"status in $ctrl.statuses track by $index\">\n                <input type=\"radio\"\n                  class=\"form-check-input\"\n                  name=\"{{ $ctrl.statuses.name }}\"\n                  data-ng-model=\"$ctrl.filterParams.status\"\n                  data-ng-checked=\"status.checked\"\n                  data-ng-value=\"status.value\">\n                <span data-ng-bind=\"$ctrl.statusLabels[status.key]\"></span>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ui-bb-filter-form-actions-ng data-filter-params=\"$ctrl.filterParams\"\n        data-search-filter-form=\"filterForm\"\n        data-on-close=\"$ctrl.toggleFilter()\"\n        data-on-filter=\"$ctrl.onApplyFilter()\"\n        data-on-clear=\"$ctrl.onClearFilter()\"\n        data-button-labels=\"{\n          apply: $ctrl.buttonLabels.apply,\n          closePanel: $ctrl.buttonLabels.cancel,\n          clearAll: $ctrl.buttonLabels.clear\n        }\">\n      </ui-bb-filter-form-actions-ng>\n    </form>\n    <script type=\"text/ng-template\"\n      id=\"ui-bb-notifications-filter-ng/option-multiple-selected-template.html\"\n    >\n      <span data-ng-bind=\"$parent.$ctrl.setSelectedOptions($option)\"></span>\n    </script>\n  `,\n};\n\n/**\n * @name uiBbNotificationsFilterComponent\n * @type {object}\n */\nexport default uiBbNotificationsFilterComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-notifications-filter-ng/scripts/component.js","export default function uiBbNotificationsFilterController($scope) {\n  /**\n   * @name uiBbNotificationsFilterController\n   * @ngkey uiBbNotificationsFilterController\n   * @type {object}\n   * @description Notifications filter controller\n   */\n  const $ctrl = this;\n\n  const defaultFilterParams = {\n    levels: [],\n    status: null,\n    fromDate: null,\n    toDate: null,\n    startDate: null,\n    endDate: null,\n  };\n\n  /**\n   * @description\n   * `filterParams` parameters object.\n   *\n   * @name uiBbNotificationsFilterController#filterParams\n   * @type {object}\n   */\n  const filterParams = Object.assign({}, defaultFilterParams);\n\n  /**\n   * @description\n   * Array of `Severity levels` parameters objects.\n   *\n   * @name uiBbNotificationsFilterController#levels\n   * @type {array}\n   */\n  const levels = [\n    { key: 'all', value: '' },\n    { key: 'info', value: 'INFO' },\n    { key: 'warning', value: 'WARNING' },\n    { key: 'alert', value: 'ALERT' },\n    { key: 'success', value: 'SUCCESS' },\n  ];\n\n  /**\n   * @description\n   * Array of `Statuses` parameters objects.\n   *\n   * @name uiBbNotificationsFilterController#statuses\n   * @type {array}\n   */\n  const statuses = [\n    { key: 'all', value: null, checked: false },\n    { key: 'read', value: true, checked: false },\n    { key: 'unread', value: false, checked: false },\n  ];\n\n  /**\n   * @description\n   * Date picker parameters object.\n   *\n   * @name uiBbNotificationsFilterController#datePickerParams\n   * @type {object}\n   */\n  const datePickerParams = {\n    config: {\n      minDate: null,\n      maxDate: new Date(),\n      maxMode: 'year',\n      enableRestrictedRange: true,\n    },\n  };\n\n  /**\n   * @description\n   * Watcher object evaluating current startDate param config.\n   *\n   * @type {object}\n   */\n  $scope.$watch(() => filterParams.startDate, (newVal) => {\n    datePickerParams.config = Object.assign(datePickerParams.config, {\n      minDate: newVal ? new Date(newVal) : null,\n    });\n  });\n\n  /**\n   * @description\n   * Watcher object evaluation current endDate param config.\n   *\n   * @type {object}\n   */\n  $scope.$watch(() => filterParams.endDate, (newVal) => {\n    datePickerParams.config = Object.assign(datePickerParams.config, {\n      maxDate: newVal ? new Date(newVal) : new Date(),\n    });\n  });\n\n  /**\n   * @description\n   * Normalize date to required format.\n   *\n   * @inner\n   * @name uiBbNotificationsFilterController#getNormalizedDate\n   * @type {function}\n   * @param {object} date Date string\n   * @param {object} correction Number of miliseconds added to given date\n   * @returns {Date|null} Date object or null\n   */\n  const getNormalizedDate = (date, correction = 0) => {\n    const timeStamp = Date.parse(date) + correction;\n\n    // add timezone to returned date\n    return date ? `${new Date(timeStamp).toISOString().slice(0, -5)}Z` : null;\n  };\n\n  /**\n   * @description\n   * Get all filter params.\n   *\n   * @name uiBbNotificationsFilterController#getParams\n   * @type {function}\n   * @returns {object} Filter params\n   */\n  const getParams = () => ({\n    levels: filterParams.levels && !$ctrl.isAllLevelSelected(filterParams.levels[0])\n      ? filterParams.levels.map(item => item.value).join()\n      : null,\n    read: filterParams.status,\n    fromDate: getNormalizedDate(filterParams.startDate),\n    toDate: getNormalizedDate(\n      filterParams.endDate || filterParams.startDate,\n      1000 * 60 * 60 * 24\n    ),\n  });\n\n  /**\n   * @description\n   * Uncheck checkbox input.\n   *\n   * @name uiBbNotificationsFilterController#clearCheckedMapper\n   * @type {function}\n   * @param {object} item Checkbox input object\n   * @returns {object} Processed checkbox input object\n   */\n  const clearCheckedMapper = (item) => Object.assign(item, {\n    checked: false,\n  });\n\n  /**\n   * @description\n   * Call filter method.\n   *\n   * @name uiBbNotificationsFilterController#onApplyFilter\n   * @type {function}\n   * @returns {Promise|null} A Promise that returns from filter method or null if method isn't set\n   */\n  const onApplyFilter = () => ($ctrl.onFilter ? $ctrl.onFilter({ params: getParams() }) : null);\n\n  /**\n   * @description\n   * Reset filter parameters.\n   *\n   * @name uiBbNotificationsFilterController#onClearFilter\n   * @param {object} form Angular form object\n   * @type {function}\n   */\n  const onClearFilter = () => {\n    $ctrl.filterParams.levels = new Array($ctrl.levels[0]);\n    $ctrl.statuses = $ctrl.statuses.map(clearCheckedMapper);\n  };\n\n  /**\n   * @description\n   * Toggle filter component.\n   *\n   * @name uiBbNotificationsFilterController#toggleFilter\n   * @type {function}\n   * @returns {boolean} A status of filter component\n   */\n  const toggleFilter = () => ($ctrl.isOpen = !$ctrl.isOpen);\n\n  /**\n   * @description\n   * Check if filter is pristine or not.\n   *\n   * @name uiBbNotificationsFilterController#isFilterPristine\n   * @type {function}\n   * @param {object} form Angular form object\n   * @returns {boolean} True if filter is pristine\n   */\n  const isFilterPristine = (form) => form.$pristine;\n\n  /**\n   * @description\n   * Check if severity level selected is all or not.\n   *\n   * @name uiBbNotificationsFilterController#isAllLevelSelected\n   * @type {function}\n   * @param {object} level severity level option\n   * @returns {boolean} True if severity level is all\n   */\n  const isAllLevelSelected = (level) => level.key === $ctrl.levels[0].key;\n\n  /**\n   * @description\n   * set default severity level.\n   *\n   * @name uiBbNotificationsFilterController#setDefaultSeverityLevel\n   * @type {function}\n   * @returns {Object} Filter params with updated levels\n   */\n  const setDefaultSeverityLevel = () => {\n    const selected = $ctrl.levels.find(item => $ctrl.isAllLevelSelected(item));\n    return Object.assign($ctrl.filterParams, { levels: new Array(selected) });\n  };\n\n  /**\n   * @description\n   * Update selected levels if 'all' option  was/wasn't s applied\n   *\n   * @name uiBbNotificationsFilterController#checkSelectedLevels\n   * @type {function}\n   * @returns {Object} Filter params with updated levels\n   */\n  const checkSelectedLevels = () => {\n    const lastItem = $ctrl.filterParams.levels[$ctrl.filterParams.levels.length - 1];\n\n    if (lastItem && $ctrl.isAllLevelSelected(lastItem)) {\n      Object.assign($ctrl.filterParams, { levels: new Array(lastItem) });\n    } else {\n      Object.assign(\n        $ctrl.filterParams,\n        { levels: $ctrl.filterParams.levels.filter(item => !$ctrl.isAllLevelSelected(item)) }\n      );\n    }\n  };\n\n  /**\n   * @description\n   * Convert selected options to string for view as selected fields\n   *\n   * @name uiBbNotificationsFilterController#setSelectedOptions\n   * @type {function}\n   * @returns {String} String of selected severity levels\n   */\n  const setSelectedOptions = options => options.map(item => $ctrl.levelLabels[item.key]).join(', ');\n\n  Object.assign($ctrl, {\n    isOpen: false,\n    filterParams,\n    levels,\n    statuses,\n    datePickerParams,\n    onApplyFilter,\n    onClearFilter,\n    toggleFilter,\n    isFilterPristine,\n    setDefaultSeverityLevel,\n    checkSelectedLevels,\n    isAllLevelSelected,\n    setSelectedOptions,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-notifications-filter-ng/scripts/controller.js"],"sourceRoot":""}