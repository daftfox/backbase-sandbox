{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*****","webpack:///webpack/bootstrap 70052c6c6190d07a36f3?d006*****","webpack:///./ext-bbm-initiate-payment-schedule-ng/model.xml","webpack:///external \"ui-bb-i18n-ng\"?dc01*****","webpack:///external \"ui-bb-date-label-filter-ng\"?be82","webpack:///external \"ui-bbm-textfield-ng\"?0f1f","webpack:///external \"lib-bbm-plugins\"?dfbe*","webpack:///./ext-bbm-initiate-payment-schedule-ng/scripts/index.js","webpack:///external \"ui-bbm-datepicker-ng\"","webpack:///external \"ui-bbm-dropdown-ng\"","webpack:///./ext-bbm-initiate-payment-schedule-ng/scripts/helpers.js","webpack:///./ext-bbm-initiate-payment-schedule-ng/scripts/intents.js","webpack:///./ext-bbm-initiate-payment-schedule-ng/scripts/constants.js"],"names":["helpers","extHelpers","intents","extIntents","dependencyKeys","uiBbI18nKey","uiBbmDatepickerKey","uiBbmDropdownKey","uiBbmTextfieldKey","RecurrenceEnding","NEVER","ON","AFTER","TransferFrequency","ONCE","DAILY","WEEKLY","MONTHLY","QUARTERLY","YEARLY","$filter","service","stateContainer","date","i18n","frequencyOptions","id","text","recurrenceEndingOptions","getPayment","createSelector","state","payment","data","getSchedule","schedule","getToday","Date","now","getDayStart","dateStr","setHours","isPaymentRecurring","transferFrequency","isEndDateValid","endDate","startDate","isRepeatValid","repeat","checkValidity","end","plugins","Snackbar","error","getFrequencyOptions","getMinimumRecurrenceEndDate","getMinimumExecutionDate","getMinimumRecurrenceStartDate","getRecurrenceEndingOptions","getStartDateLabel","getStartDateTitle","hasPayment","Boolean","submitSchedule","selectSchedule","onScheduleFormSubmit","isRecurringPaymentAllowed","getPreferences","recurring","showEndingControl","showEndDateControl","showRepeatControl","dateLabels","TimePeriod","TODAY","createRequest","handleRequest","Intent","SELECT_SCHEDULE","showSchedule","SHOW_SCHEDULE"],"mappings":"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","file":"ext-bbm-initiate-payment-schedule-ng/scripts/ext-bbm-initiate-payment-schedule-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-date-label-filter-ng\"), require(\"ui-bbm-textfield-ng\"), require(\"lib-bbm-plugins\"), require(\"ui-bbm-datepicker-ng\"), require(\"ui-bbm-dropdown-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bbm-initiate-payment-schedule-ng\", [\"ui-bb-i18n-ng\", \"ui-bb-date-label-filter-ng\", \"ui-bbm-textfield-ng\", \"lib-bbm-plugins\", \"ui-bbm-datepicker-ng\", \"ui-bbm-dropdown-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bbm-initiate-payment-schedule-ng\"] = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-date-label-filter-ng\"), require(\"ui-bbm-textfield-ng\"), require(\"lib-bbm-plugins\"), require(\"ui-bbm-datepicker-ng\"), require(\"ui-bbm-dropdown-ng\"));\n\telse\n\t\troot[\"ext-bbm-initiate-payment-schedule-ng\"] = factory(root[\"ui-bb-i18n-ng\"], root[\"ui-bb-date-label-filter-ng\"], root[\"ui-bbm-textfield-ng\"], root[\"lib-bbm-plugins\"], root[\"ui-bbm-datepicker-ng\"], root[\"ui-bbm-dropdown-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_38__, __WEBPACK_EXTERNAL_MODULE_49__, __WEBPACK_EXTERNAL_MODULE_51__, __WEBPACK_EXTERNAL_MODULE_65__, __WEBPACK_EXTERNAL_MODULE_66__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 70052c6c6190d07a36f3","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bbm-initiate-payment-schedule-ng/model.xml\n// module id = 0\n// module chunks = 5","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 3\n// module chunks = 0 1 2 3 4 5 8 9 10 11 12 13 14 19 24","module.exports = __WEBPACK_EXTERNAL_MODULE_38__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-date-label-filter-ng\"\n// module id = 38\n// module chunks = 2 5","module.exports = __WEBPACK_EXTERNAL_MODULE_49__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-textfield-ng\"\n// module id = 49\n// module chunks = 3 5 24","module.exports = __WEBPACK_EXTERNAL_MODULE_51__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bbm-plugins\"\n// module id = 51\n// module chunks = 3 4 5","/**\n * @module ext-bbm-initiate-payment-schedule-ng\n *\n * @description\n * Mobile extension for the payment schedule view in the Mobile initiate payment widget.\n *\n * @example\n * <!-- File model.xml of widget-bbm-initiate-payment-ng -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *   <value type=\"string\">ext-bbm-initiate-payment-schedule-ng</value>\n * </property>\n */\nimport uiBbI18nKey from 'ui-bb-i18n-ng';\nimport uiBbmDatepickerKey from 'ui-bbm-datepicker-ng';\nimport uiBbmDropdownKey from 'ui-bbm-dropdown-ng';\nimport uiBbmTextfieldKey from 'ui-bbm-textfield-ng';\n\nimport extHelpers from './helpers';\nimport extIntents from './intents';\n\nexport const helpers = extHelpers;\nexport const intents = extIntents;\n\nexport const dependencyKeys = [\n  uiBbI18nKey,\n  uiBbmDatepickerKey,\n  uiBbmDropdownKey,\n  uiBbmTextfieldKey,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-initiate-payment-schedule-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_65__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-datepicker-ng\"\n// module id = 65\n// module chunks = 5","module.exports = __WEBPACK_EXTERNAL_MODULE_66__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-dropdown-ng\"\n// module id = 66\n// module chunks = 5","// Temporary disable capsInNew until it fixed in lib-bbm-plugins\n/* eslint new-cap: [\"error\", { \"capIsNew\": false }] */\nimport plugins from 'lib-bbm-plugins';\nimport { TimePeriod } from 'ui-bb-date-label-filter-ng';\n\nconst RecurrenceEnding = {\n  NEVER: 'NEVER',\n  ON: 'ON',\n  AFTER: 'AFTER',\n};\n\nconst TransferFrequency = {\n  ONCE: 'ONCE',\n  DAILY: 'DAILY',\n  WEEKLY: 'WEEKLY',\n  MONTHLY: 'MONTHLY',\n  QUARTERLY: 'QUARTERLY',\n  YEARLY: 'YEARLY',\n};\n\n/**\n * @description\n * Helpers for ext-bbm-initiate-payment-schedule-ng\n *\n * @name Helpers\n * @type {Object}\n */\n\nexport default ({ $filter, intents, service, stateContainer }) => {\n  const date = $filter('date');\n  const i18n = $filter('i18n');\n\n  const frequencyOptions = [\n    { id: TransferFrequency.ONCE, text: i18n('message.payment.schedule.frequency.once') },\n    { id: TransferFrequency.DAILY, text: i18n('message.payment.schedule.frequency.daily') },\n    { id: TransferFrequency.WEEKLY, text: i18n('message.payment.schedule.frequency.weekly') },\n    { id: TransferFrequency.MONTHLY, text: i18n('message.payment.schedule.frequency.monthly') },\n    { id: TransferFrequency.QUARTERLY, text: i18n('message.payment.schedule.frequency.quarterly') },\n    { id: TransferFrequency.YEARLY, text: i18n('message.payment.schedule.frequency.yearly') },\n  ];\n\n  const recurrenceEndingOptions = [\n    { id: RecurrenceEnding.NEVER, text: i18n('recurrence.ending.never') },\n    { id: RecurrenceEnding.ON, text: i18n('recurrence.ending.on') },\n    { id: RecurrenceEnding.AFTER, text: i18n('recurrence.ending.after') },\n  ];\n\n  const getPayment = stateContainer.createSelector(\n    state => state.payment.data\n  );\n\n  /**\n   * @name Helpers#getSchedule\n   * @type {function}\n   * @description\n   * Returns the schedule object.\n   * @returns {module:widget-bbm-initiate-payment-ng.Schedule}\n   */\n  const getSchedule = stateContainer.createSelector(\n    () => (getPayment() ? getPayment().schedule : null)\n  );\n\n  const getToday = () => date(Date.now(), 'yyyy-MM-ddTHH:mm:ssZ');\n\n  const getDayStart = dateStr => (new Date(dateStr)).setHours(0, 0, 0, 0);\n\n  const isPaymentRecurring = () => (\n    getSchedule().transferFrequency !== TransferFrequency.ONCE\n  );\n\n  const isEndDateValid = ({ endDate, startDate }) => (\n    getDayStart(startDate) <= getDayStart(endDate)\n  );\n\n  const isRepeatValid = ({ repeat }) => repeat > 0 && repeat <= 99;\n\n  const checkValidity = () => {\n    if (isPaymentRecurring()) {\n      const schedule = getSchedule();\n\n      // End date is not entered\n      if (schedule.end === RecurrenceEnding.ON && !schedule.endDate) {\n        plugins.Snackbar().error(i18n('errors.payment.schedule.endDate.required'));\n        return false;\n      }\n\n      // End date is not valid\n      if (schedule.end === RecurrenceEnding.ON && !isEndDateValid(schedule)) {\n        plugins.Snackbar().error(i18n('errors.payment.schedule.endDate.invalid'));\n        return false;\n      }\n\n      // Repeat is not valid\n      if (schedule.end === RecurrenceEnding.AFTER && !isRepeatValid(schedule)) {\n        plugins.Snackbar().error(i18n('errors.payment.schedule.repeat.invalid'));\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * @name Helpers#getFrequencyOptions\n   * @type {function}\n   * @description\n   * Returns a list of frequency options.\n   * @returns {Array.<PaymentFrequency>}\n   */\n  const getFrequencyOptions = () => frequencyOptions;\n\n  /**\n   * @name Helpers#getMinimumRecurrenceEndDate\n   * @type {function}\n   * @description\n   * Returns a minimum allowed date to start a recurring payment.\n   * @returns {string}\n   */\n  const getMinimumRecurrenceEndDate = () => getSchedule().startDate;\n\n  /**\n   * @name Helpers#getMinimumExecutionDate\n   * @type {function}\n   * @description\n   * Returns a minimum allowed date to make a payment.\n   * @returns {string}\n   */\n  const getMinimumExecutionDate = () => getToday();\n\n  /**\n   * @name Helpers#getMinimumStartDate\n   * @type {function}\n   * @description\n   * Returns a minimum allowed date to start a recurring payment.\n   * @returns {string}\n   */\n  const getMinimumRecurrenceStartDate = () => getToday();\n\n  /**\n   * @name Helpers#getRecurrenceEndingOptions\n   * @type {function}\n   * @description\n   * Returns a list of possible recurring payment endings.\n   * @returns {Array.<RecurrenceEnding>}\n   */\n  const getRecurrenceEndingOptions = () => recurrenceEndingOptions;\n\n  /**\n   * @name Helpers#getStartDateLabel\n   * @type {function}\n   * @description\n   * Returns the label of the start date field.\n   * @returns {string}\n   */\n  const getStartDateLabel = () => (\n    isPaymentRecurring()\n      ? i18n('form.label.startDate')\n      : i18n('form.label.executionDate')\n  );\n\n  /**\n   * @name Helpers#getStartDateTitle\n   * @type {function}\n   * @description\n   * Returns the title of the start date datepicker.\n   * @returns {string}\n   */\n  const getStartDateTitle = () => (\n    isPaymentRecurring()\n      ? i18n('form.title.selectStartDate')\n      : i18n('form.title.selectExecutionDate')\n  );\n\n  /**\n   * @name Helpers#hasPayment\n   * @type {function}\n   * @description\n   * Returns true, if there is already a payment object available. False otherwise.\n   * @returns {boolean}\n   */\n  const hasPayment = () => Boolean(getPayment());\n\n  /**\n   * @description\n   * Fulfils the select schedule intent with the given data.\n   *\n   * @name Helpers#submitSchedule\n   * @type {function}\n   */\n  const submitSchedule = () => {\n    intents.selectSchedule(getSchedule());\n  };\n\n  /**\n   * @name Helpers#onScheduleFormSubmit\n   * @type {function}\n   * @description\n   * Handles submit of the schedule payment form.\n   * @returns {string}\n   */\n  const onScheduleFormSubmit = () => {\n    if (checkValidity()) {\n      submitSchedule();\n    }\n  };\n\n  /**\n   * @name Helpers#isRecurringPaymentAllowed\n   * @type {function}\n   * @description\n   * Returns true, if recurring payments are allowed in preferences and false otherwise.\n   * @returns {boolean}\n   */\n  const isRecurringPaymentAllowed = () => Boolean(service.getPreferences().recurring);\n\n  /**\n   * @name Helpers#showEndingControl\n   * @type {function}\n   * @description\n   * Returns true, if the ending control should be shown.\n   * @returns {boolean}\n   */\n  const showEndingControl = () => isRecurringPaymentAllowed() && isPaymentRecurring();\n\n  /**\n   * @name Helpers#showEndDateControl\n   * @type {function}\n   * @description\n   * Returns true, if the end date control should be shown.\n   * @returns {boolean}\n   */\n  const showEndDateControl = () => (isRecurringPaymentAllowed() &&\n    isPaymentRecurring() && getSchedule().end === RecurrenceEnding.ON\n  );\n\n  /**\n   * @name Helpers#showRepeatControl\n   * @type {function}\n   * @description\n   * Returns true, if the repeat control should be shown.\n   * @returns {boolean}\n   */\n  const showRepeatControl = () => (isRecurringPaymentAllowed() &&\n    isPaymentRecurring() && getSchedule().end === RecurrenceEnding.AFTER);\n\n  /**\n   * @name Helpers.dateLabels\n   * @type {Object}\n   * @description\n   * Set of date labels.\n   */\n  const dateLabels = {\n    [TimePeriod.TODAY]: i18n('calendar.label.today'),\n  };\n\n  return {\n    getFrequencyOptions,\n    getMinimumExecutionDate,\n    getMinimumRecurrenceEndDate,\n    getMinimumRecurrenceStartDate,\n    getRecurrenceEndingOptions,\n    getSchedule,\n    getStartDateLabel,\n    getStartDateTitle,\n    hasPayment,\n    isRecurringPaymentAllowed,\n    onScheduleFormSubmit,\n    showEndingControl,\n    showEndDateControl,\n    showRepeatControl,\n    dateLabels,\n  };\n};\n\n/**\n * @typedef {Object} PaymentFrequency\n * @property {string} id Frequency identifier\n * @property {string} text Frequency as a text to be displayed\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-initiate-payment-schedule-ng/scripts/helpers.js","import { Intent } from './constants';\n\n/**\n * @name Intents\n * @type {Object}\n */\nexport default ({ createRequest, handleRequest }) => ({\n  /**\n   * @name Intents#selectSchedule\n   * @description The intent to select schedule.\n   * @type {function}\n   */\n  selectSchedule: createRequest(Intent.SELECT_SCHEDULE),\n\n  /**\n   * @name Intents#showSchedule\n   * @description Handles the intent to show schedule.\n   * @type {function}\n   * @param {Object} schedule\n   */\n  showSchedule: handleRequest(Intent.SHOW_SCHEDULE),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-initiate-payment-schedule-ng/scripts/intents.js","/* eslint import/prefer-default-export: \"off\" */\n\n/**\n * Intents\n * @type {Object}\n */\nexport const Intent = {\n  SELECT_SCHEDULE: 'intent.rbm.paymentOrder.schedule.select',\n  SHOW_SCHEDULE: 'intent.rbm.paymentOrder.schedule.show',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-initiate-payment-schedule-ng/scripts/constants.js"],"sourceRoot":""}