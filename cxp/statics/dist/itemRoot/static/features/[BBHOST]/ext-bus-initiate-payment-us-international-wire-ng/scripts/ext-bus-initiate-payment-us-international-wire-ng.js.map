{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**********","webpack:///webpack/bootstrap 70052c6c6190d07a36f3?d006**********","webpack:///./ext-bus-initiate-payment-us-international-wire-ng/model.xml","webpack:///external \"vendor-bb-angular-ng-aria\"?9d0e****","webpack:///external \"ui-bb-i18n-ng\"?dc01*******","webpack:///external \"ui-bb-loading-overlay-ng\"?3561****","webpack:///external \"ui-bb-account-selector-ng\"?7f70****","webpack:///external \"ui-bb-currency-input-ng\"?3ab2***","webpack:///external \"ui-bb-char-counter-ng\"?e680***","webpack:///external \"ui-bb-calendar-popup-ng\"?7edd***","webpack:///external \"ui-bb-expandable-ng\"?18ac***","webpack:///external \"vendor-bb-angular-ng-messages\"?7dc7****","webpack:///external \"vendor-bb-uib-alert\"?7299***","webpack:///external \"ui-bb-confirm-ng\"?ed9c****","webpack:///external \"ui-bb-autocomplete-search-ng\"?bbd4*","webpack:///external \"ui-bb-switcher-ng\"?b444***","webpack:///external \"vendor-bb-angular\"?a114***","webpack:///external \"vendor-bb-uib-popover\"?2eab**","webpack:///external \"vendor-bb-angular-sanitize\"?d9b1**","webpack:///external \"ui-bb-substitute-error-ng\"?f57a***","webpack:///external \"ui-bb-parent-responsiveness-ng\"?c738**","webpack:///external \"ui-bb-credit-suggest-ng\"?17c6**","webpack:///external \"ui-bb-button-spinner-ng\"?5932**","webpack:///external \"ui-bb-empty-state-ng\"?88ee**","webpack:///external \"ui-bb-notification-stripe-ng\"?0663**","webpack:///external \"ui-bus-format-amount-ng\"?331c*","webpack:///external \"ui-bb-submit-dropup-ng\"?61cf*","webpack:///external \"ui-bus-beneficiary-select-modal-ng\"?5713*","webpack:///external \"ui-bb-form-navigate-away-ng\"?fa25*","webpack:///external \"lib-bb-iban\"?bb02","webpack:///external \"ui-bb-dropdown-select-ng\"?4101","webpack:///external \"ui-bb-bank-validations-ng\"?da11","webpack:///./ext-bus-initiate-payment-us-international-wire-ng/scripts/index.js","webpack:///./ext-bus-initiate-payment-us-international-wire-ng/scripts/intents.js","webpack:///./ext-bus-initiate-payment-us-international-wire-ng/scripts/constants.js","webpack:///./ext-bus-initiate-payment-us-international-wire-ng/scripts/helpers.js","webpack:///./ext-bus-initiate-payment-us-international-wire-ng/scripts/events.js","webpack:///./ext-bus-initiate-payment-us-international-wire-ng/scripts/hooks.js","webpack:///external \"ui-bb-scheduling-ng\"","webpack:///external \"vendor-bb-uib-tooltip\""],"names":["default","dependencyKeys","ngAriaModuleKey","ngSanitizeKey","i18nNgKey","uiBbSubstituteErrorNgKey","vendorBbUibAlertKey","uiBbLoadingOverlayKey","uiBbAccountSelector","uiBbCreditSuggestNgKey","bbAngularNgMessagesKey","uiBbCurrencyInputNgKey","uiBbParentResponsivenessNg","uibPopoverKey","uiBusFormatAmountKey","uiBbCharCounterNgKey","uiBbExpandableNg","uiBbCalendarPopupNgKey","uiBbDropdownSelectKey","uiBbConfirmNgKey","uiBbSwitcherNgKey","uiBbAutocompleteSearchNgKey","uiBbBankValidations","uiBbSubmitDropupNgKey","uiBbEmptyStateNg","uiBbSchedulingNg","uiBbNotificationStripeKey","uiBusBeneficiarySelectModalNg","uiBbButtonSpinnerNg","uiBbFormNavigateAwayNg","vendorBbUibTooltipKey","handleRequest","createRequest","service","$timeout","initiatePayment","Intent","INITIATE_PAYMENT","initialPaymentData","setDraftPayment","publishPaymentTypeChange","paymentType","viewPaymentOrders","VIEW_PAYMENT_ORDERS","WidgetName","PaymentType","countries","name","code","bankTypes","TransferFrequency","ONCE","MONTHLY","YEARLY","SingleFrequency","value","ScheduleRepeatValue","RecurrenceEnding","NEVER","ON","AFTER","specialSymbols","escapedSpecialSymbols","split","map","a","join","PaymentReferencePattern","BENEFICIARY_SELECTOR_MODAL","BENEFICIARY_LIST_SIZE","templates","form","review","currencies","minOccurrences","maxOccurences","maxDigits","fromListeners","toListeners","charCounterConfig","description","maxChars","reference","capitalizeIfPrefix","str","prefix","Boolean","toUpperCase","substr","toPostalAddressModel","item","addressLine1","addressLine2","streetName","postCode","town","countrySubDivision","country","fromContactToBeneficiary","contact","postalAddress","bank","accountNumber","bankName","bankCode","bic","BIC","flattenContactAccounts","contacts","resultContacts","accounts","account","Object","assign","accountName","alias","formatIban","acc","external","push","fromArrangementToContact","arrangement","accountHolderName","accountHolderAddressLine1","accountHolderAddressLine2","accountHolderStreetName","accountHolderCountry","BBAN","amount","currency","bankBranchCode","remapObject","obj","keys","reduce","result","fromBeneficiaryToContact","beneficiary","getAddressText","accumulator","currentValue","trim","getDateOnly","dateArg","date","Date","month","String","getMonth","day","getDate","year","getFullYear","padStart","getRecurringTransactionDay","schedule","transferFrequency","startDate","getDay","fromModelToForm","payment","paymentForm","createdAt","data","id","debtorAccount","debitAccount","angular","copy","arrangementId","creditTransferTransactionInformation","length","creditInfo","instructedAmount","currencyCode","toAmount","targetCurrency","creditor","message","remittanceInformation","content","creditorBank","creditorAccount","identification","messageToBank","correspondentBank","intermediaryBank","paymentReference","endToEndIdentification","every","parseInt","endDate","repeat","endingType","requestedExecutionDate","stateContainer","router","intents","postActions","$filter","i18nFilter","getPaymentState","createSelector","state","saveNewContact","getContacts","getPayment","getCreditAccounts","creditAccounts","getSchedule","getBeneficiary","getCorrespondent","correspondent","getBeneficiaryBank","getBeneficiaryBankPostalAddress","getCorrespondentBank","getBeneficiaryPostalAddress","getBeneficiaryAddressText","getBeneficiaryIntermediaryBank","getIntermadiaryAddressText","getBankAddressText","isNewContact","find","isBeneficiarySet","isSaveNewContactEnabled","formToContact","canSelectUrgentPayment","urgentTransferAllowed","getReview","getDraft","draft","getBeneficiaryCorrespondentBank","getDebitAccounts","debitAccounts","getExchangeRate","rate","getCurrencies","convertTwoDecimals","toString","match","killAmountWatchers","watchers","watcher","pop","convertAmount","fromAmount","cb","parseFloat","toFixed","referenceAmount","setFromAmountWatcher","scope","$watch","newValue","oldValue","updateToAmount","setToAmountWatcher","updateAmount","convertAmounts","getRate","currencyFrom","currencyTo","then","updateToAmountByCurrency","showExchangeRateInfo","resetContact","resetBeneficiary","selectContact","model","setBeneficiary","selectContactModal","removeSelectedDebitAccount","selectedDebitAccount","groupAccounts","accountsList","totalItemsCount","internalAccounts","filter","externalAccounts","group","list","more","count","loadContactsByName","size","combinedAccounts","includes","Promise","resolve","slice","totalItems","postActionsOptions","key","postAction","type","NONE","selected","permission","CREATE","APPROVE","formToPayment","paymentState","isSinglePayment","schemeName","hasToAmountChanged","isCorrespondentEnabled","isIntermediaryEnabled","paymentOrder","paymentMode","urgent","instructionPriority","on","canSaveDraft","validations","hasUserErrors","$error","memo","current","purifyDraftPaymentData","purifiedPayment","credit","creditAcc","getDraftPayment","deleteDraft","closeEditDraft","originalDraft","currentDraft","equals","editConfirmOpened","updateDraft","getPrivileges","privileges","isAllowedPaymentPrivilege","privilege","context","response","Payments","error","getPostActionsOptions","action","getApprovalNotification","success","level","getNotificationByType","msg","removeNotification","notification","notificationsList","paymentTypeOptions","label","US_FOREIGN_WIRE","US_DOMESTIC_WIRE","getCountryName","countryCode","foundCountry","isModal","configValue","toggleModalSelector","ext","extension","isModalSelectorOpen","scrollToFirstError","firstError","$$controls","control","$invalid","$$element","bodyRect","document","body","getBoundingClientRect","elemRect","offset","top","navBar","querySelector","navBarRect","navBarStyles","window","getComputedStyle","position","height","scrollTo","behavior","reviewPayment","$ctrl","showSpecialValidationMessages","formUntouched","hasDebitAccount","hasBeneficiaryName","hasBeneficiaryMessage","hasBeneficiaryPostalAddress","hasBeneficiaryBank","bankPostalAddress","hasBeneficiaryBankPostalAddress","hasCorrespondentBank","hasIntermediaryBank","hasAmountValue","hasTargetAmountValue","hasPaymentReference","today","paymentStartDate","sameStartDate","getYear","switchPaymentType","showPaymentSelectorConfirmation","template","getRoute","getIntermediaryCodePattern","paymentReferencePattern","selectedPaymentType","show","hide","defaultPaymentType","defaultScheduleRepeat","processPrivileges","configuration","constants","resource","PAYMENTS","function","defaultCountry"],"mappings":"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","file":"ext-bus-initiate-payment-us-international-wire-ng/scripts/ext-bus-initiate-payment-us-international-wire-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-loading-overlay-ng\"), require(\"ui-bb-account-selector-ng\"), require(\"ui-bb-currency-input-ng\"), require(\"ui-bb-char-counter-ng\"), require(\"ui-bb-calendar-popup-ng\"), require(\"ui-bb-expandable-ng\"), require(\"vendor-bb-angular-ng-messages\"), require(\"vendor-bb-uib-alert\"), require(\"ui-bb-confirm-ng\"), require(\"ui-bb-autocomplete-search-ng\"), require(\"ui-bb-switcher-ng\"), require(\"vendor-bb-angular\"), require(\"vendor-bb-uib-popover\"), require(\"vendor-bb-angular-sanitize\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-parent-responsiveness-ng\"), require(\"ui-bb-credit-suggest-ng\"), require(\"ui-bb-button-spinner-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bus-format-amount-ng\"), require(\"ui-bb-submit-dropup-ng\"), require(\"ui-bus-beneficiary-select-modal-ng\"), require(\"ui-bb-form-navigate-away-ng\"), require(\"lib-bb-iban\"), require(\"ui-bb-dropdown-select-ng\"), require(\"ui-bb-bank-validations-ng\"), require(\"ui-bb-scheduling-ng\"), require(\"vendor-bb-uib-tooltip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bus-initiate-payment-us-international-wire-ng\", [\"vendor-bb-angular-ng-aria\", \"ui-bb-i18n-ng\", \"ui-bb-loading-overlay-ng\", \"ui-bb-account-selector-ng\", \"ui-bb-currency-input-ng\", \"ui-bb-char-counter-ng\", \"ui-bb-calendar-popup-ng\", \"ui-bb-expandable-ng\", \"vendor-bb-angular-ng-messages\", \"vendor-bb-uib-alert\", \"ui-bb-confirm-ng\", \"ui-bb-autocomplete-search-ng\", \"ui-bb-switcher-ng\", \"vendor-bb-angular\", \"vendor-bb-uib-popover\", \"vendor-bb-angular-sanitize\", \"ui-bb-substitute-error-ng\", \"ui-bb-parent-responsiveness-ng\", \"ui-bb-credit-suggest-ng\", \"ui-bb-button-spinner-ng\", \"ui-bb-empty-state-ng\", \"ui-bb-notification-stripe-ng\", \"ui-bus-format-amount-ng\", \"ui-bb-submit-dropup-ng\", \"ui-bus-beneficiary-select-modal-ng\", \"ui-bb-form-navigate-away-ng\", \"lib-bb-iban\", \"ui-bb-dropdown-select-ng\", \"ui-bb-bank-validations-ng\", \"ui-bb-scheduling-ng\", \"vendor-bb-uib-tooltip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bus-initiate-payment-us-international-wire-ng\"] = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-loading-overlay-ng\"), require(\"ui-bb-account-selector-ng\"), require(\"ui-bb-currency-input-ng\"), require(\"ui-bb-char-counter-ng\"), require(\"ui-bb-calendar-popup-ng\"), require(\"ui-bb-expandable-ng\"), require(\"vendor-bb-angular-ng-messages\"), require(\"vendor-bb-uib-alert\"), require(\"ui-bb-confirm-ng\"), require(\"ui-bb-autocomplete-search-ng\"), require(\"ui-bb-switcher-ng\"), require(\"vendor-bb-angular\"), require(\"vendor-bb-uib-popover\"), require(\"vendor-bb-angular-sanitize\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-parent-responsiveness-ng\"), require(\"ui-bb-credit-suggest-ng\"), require(\"ui-bb-button-spinner-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bus-format-amount-ng\"), require(\"ui-bb-submit-dropup-ng\"), require(\"ui-bus-beneficiary-select-modal-ng\"), require(\"ui-bb-form-navigate-away-ng\"), require(\"lib-bb-iban\"), require(\"ui-bb-dropdown-select-ng\"), require(\"ui-bb-bank-validations-ng\"), require(\"ui-bb-scheduling-ng\"), require(\"vendor-bb-uib-tooltip\"));\n\telse\n\t\troot[\"ext-bus-initiate-payment-us-international-wire-ng\"] = factory(root[\"vendor-bb-angular-ng-aria\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-loading-overlay-ng\"], root[\"ui-bb-account-selector-ng\"], root[\"ui-bb-currency-input-ng\"], root[\"ui-bb-char-counter-ng\"], root[\"ui-bb-calendar-popup-ng\"], root[\"ui-bb-expandable-ng\"], root[\"vendor-bb-angular-ng-messages\"], root[\"vendor-bb-uib-alert\"], root[\"ui-bb-confirm-ng\"], root[\"ui-bb-autocomplete-search-ng\"], root[\"ui-bb-switcher-ng\"], root[\"vendor-bb-angular\"], root[\"vendor-bb-uib-popover\"], root[\"vendor-bb-angular-sanitize\"], root[\"ui-bb-substitute-error-ng\"], root[\"ui-bb-parent-responsiveness-ng\"], root[\"ui-bb-credit-suggest-ng\"], root[\"ui-bb-button-spinner-ng\"], root[\"ui-bb-empty-state-ng\"], root[\"ui-bb-notification-stripe-ng\"], root[\"ui-bus-format-amount-ng\"], root[\"ui-bb-submit-dropup-ng\"], root[\"ui-bus-beneficiary-select-modal-ng\"], root[\"ui-bb-form-navigate-away-ng\"], root[\"lib-bb-iban\"], root[\"ui-bb-dropdown-select-ng\"], root[\"ui-bb-bank-validations-ng\"], root[\"ui-bb-scheduling-ng\"], root[\"vendor-bb-uib-tooltip\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_25__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_29__, __WEBPACK_EXTERNAL_MODULE_37__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_80__, __WEBPACK_EXTERNAL_MODULE_81__, __WEBPACK_EXTERNAL_MODULE_82__, __WEBPACK_EXTERNAL_MODULE_83__, __WEBPACK_EXTERNAL_MODULE_93__, __WEBPACK_EXTERNAL_MODULE_96__, __WEBPACK_EXTERNAL_MODULE_97__, __WEBPACK_EXTERNAL_MODULE_104__, __WEBPACK_EXTERNAL_MODULE_105__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 70052c6c6190d07a36f3","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bus-initiate-payment-us-international-wire-ng/model.xml\n// module id = 0\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-aria\"\n// module id = 2\n// module chunks = 0 1 2 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 3\n// module chunks = 0 1 2 3 4 5 8 9 10 11 12 13 14 19 24","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-loading-overlay-ng\"\n// module id = 4\n// module chunks = 0 1 2 8 9 10 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-account-selector-ng\"\n// module id = 5\n// module chunks = 0 1 2 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-currency-input-ng\"\n// module id = 6\n// module chunks = 0 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-char-counter-ng\"\n// module id = 7\n// module chunks = 0 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-calendar-popup-ng\"\n// module id = 8\n// module chunks = 0 1 8 9 10 13 14 22","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-expandable-ng\"\n// module id = 9\n// module chunks = 0 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-messages\"\n// module id = 10\n// module chunks = 0 1 3 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-alert\"\n// module id = 12\n// module chunks = 0 1 8 9 10 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-confirm-ng\"\n// module id = 13\n// module chunks = 0 1 2 8 9 10 11 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-autocomplete-search-ng\"\n// module id = 14\n// module chunks = 0 9 10 13 14 21","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-switcher-ng\"\n// module id = 16\n// module chunks = 0 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 18\n// module chunks = 0 8 9 10 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-popover\"\n// module id = 23\n// module chunks = 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_24__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-sanitize\"\n// module id = 24\n// module chunks = 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_25__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-substitute-error-ng\"\n// module id = 25\n// module chunks = 1 2 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_26__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-parent-responsiveness-ng\"\n// module id = 26\n// module chunks = 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-credit-suggest-ng\"\n// module id = 27\n// module chunks = 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_29__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-button-spinner-ng\"\n// module id = 29\n// module chunks = 1 8 9 10 23","module.exports = __WEBPACK_EXTERNAL_MODULE_37__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-empty-state-ng\"\n// module id = 37\n// module chunks = 2 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-notification-stripe-ng\"\n// module id = 39\n// module chunks = 2 8 9 10 11 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_80__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bus-format-amount-ng\"\n// module id = 80\n// module chunks = 8 9 10 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_81__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-submit-dropup-ng\"\n// module id = 81\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_82__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bus-beneficiary-select-modal-ng\"\n// module id = 82\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_83__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-form-navigate-away-ng\"\n// module id = 83\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_93__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-iban\"\n// module id = 93\n// module chunks = 9 10 13 14 19 25","module.exports = __WEBPACK_EXTERNAL_MODULE_96__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-dropdown-select-ng\"\n// module id = 96\n// module chunks = 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_97__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-bank-validations-ng\"\n// module id = 97\n// module chunks = 9 10","/**\n * @module ext-bus-initiate-payment-us-international-wire-ng\n *\n * @description\n * ext-bus-initiate-payment-us-international-wire-ng\n *\n */\nimport ngAriaModuleKey from 'vendor-bb-angular-ng-aria';\nimport ngSanitizeKey from 'vendor-bb-angular-sanitize';\nimport i18nNgKey from 'ui-bb-i18n-ng';\nimport uiBbSubstituteErrorNgKey from 'ui-bb-substitute-error-ng';\nimport vendorBbUibAlertKey from 'vendor-bb-uib-alert';\nimport uiBbLoadingOverlayKey from 'ui-bb-loading-overlay-ng';\nimport uiBbAccountSelector from 'ui-bb-account-selector-ng';\nimport uiBbCreditSuggestNgKey from 'ui-bb-credit-suggest-ng';\nimport bbAngularNgMessagesKey from 'vendor-bb-angular-ng-messages';\nimport uiBbCurrencyInputNgKey from 'ui-bb-currency-input-ng';\nimport uiBbParentResponsivenessNg from 'ui-bb-parent-responsiveness-ng';\nimport uibPopoverKey from 'vendor-bb-uib-popover';\nimport uiBusFormatAmountKey from 'ui-bus-format-amount-ng';\nimport uiBbCharCounterNgKey from 'ui-bb-char-counter-ng';\nimport uiBbExpandableNg from 'ui-bb-expandable-ng';\nimport uiBbCalendarPopupNgKey from 'ui-bb-calendar-popup-ng';\nimport uiBbDropdownSelectKey from 'ui-bb-dropdown-select-ng';\nimport uiBbConfirmNgKey from 'ui-bb-confirm-ng';\nimport uiBbSwitcherNgKey from 'ui-bb-switcher-ng';\nimport uiBbAutocompleteSearchNgKey from 'ui-bb-autocomplete-search-ng';\nimport uiBbBankValidations from 'ui-bb-bank-validations-ng';\nimport uiBbSubmitDropupNgKey from 'ui-bb-submit-dropup-ng';\nimport uiBbEmptyStateNg from 'ui-bb-empty-state-ng';\nimport uiBbSchedulingNg from 'ui-bb-scheduling-ng';\nimport uiBbNotificationStripeKey from 'ui-bb-notification-stripe-ng';\nimport uiBusBeneficiarySelectModalNg from 'ui-bus-beneficiary-select-modal-ng';\nimport uiBbButtonSpinnerNg from 'ui-bb-button-spinner-ng';\nimport uiBbFormNavigateAwayNg from 'ui-bb-form-navigate-away-ng';\nimport vendorBbUibTooltipKey from 'vendor-bb-uib-tooltip';\n\n/**\n * @name intents\n * @type {module:lib-bb-extension-intents-ng.ExtensionIntents}\n */\nexport { default as intents } from './intents';\n\n/**\n * @name helpers\n * @type {module:lib-bb-extension-helpers-ng.ExtensionHelpers}\n */\nexport { default as helpers } from './helpers';\n\n/**\n * @name events\n * @type {module:lib-bb-extension-events-ng.ExtensionEvents}\n */\nexport { default as events } from './events';\n\nexport { default as hooks } from './hooks';\n\nexport const dependencyKeys = [\n  ngAriaModuleKey,\n  ngSanitizeKey,\n  i18nNgKey,\n  uiBbSubstituteErrorNgKey,\n  vendorBbUibAlertKey,\n  uiBbLoadingOverlayKey,\n  uiBbAccountSelector,\n  uiBbCreditSuggestNgKey,\n  bbAngularNgMessagesKey,\n  uiBbCurrencyInputNgKey,\n  uiBbParentResponsivenessNg,\n  uibPopoverKey,\n  uiBusFormatAmountKey,\n  uiBbCharCounterNgKey,\n  uiBbExpandableNg,\n  uiBbCalendarPopupNgKey,\n  uiBbDropdownSelectKey,\n  uiBbConfirmNgKey,\n  uiBbSwitcherNgKey,\n  uiBbAutocompleteSearchNgKey,\n  uiBbBankValidations,\n  uiBbSubmitDropupNgKey,\n  uiBbEmptyStateNg,\n  uiBbSchedulingNg,\n  uiBbNotificationStripeKey,\n  uiBusBeneficiarySelectModalNg,\n  uiBbButtonSpinnerNg,\n  uiBbFormNavigateAwayNg,\n  vendorBbUibTooltipKey,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-international-wire-ng/scripts/index.js","import { Intent } from './constants';\nimport { fromModelToForm } from './helpers';\n/**\n * @name Intents\n * @type {Object}\n */\nexport default ({ handleRequest, createRequest, service, $timeout }) => ({\n  /**\n   * @name Intents#initiatePayment\n   * @description Handles the intent to initiate a payment\n   * @type {function}\n   * @param {Object} initialPaymentData Initial payment\n   */\n  initiatePayment: handleRequest(Intent.INITIATE_PAYMENT, (initialPaymentData) => {\n    service.setDraftPayment(fromModelToForm(initialPaymentData));\n    $timeout(() => { service.publishPaymentTypeChange(initialPaymentData.paymentType); });\n  }),\n\n  /**\n   * @name Intents#viewPaymentOrders\n   * @description The intent to view payment orders.\n   * @type {function}\n   */\n  viewPaymentOrders: createRequest(Intent.VIEW_PAYMENT_ORDERS),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-international-wire-ng/scripts/intents.js","/**\n * @name Constants\n * @type {object}\n */\n\n/**\n * @description\n * Widget name\n *\n * @name Constants#WidgetName\n * @type {string}\n */\nexport const WidgetName = 'widget-bb-initiate-us-payment-ng';\n\n/**\n * @description\n * Payment type identifier\n *\n * @name Constants#PaymentType\n * @type {string}\n */\nexport const PaymentType = 'US_FOREIGN_WIRE';\n\n/**\n * @description\n * List of supported countries\n *\n * @property {string} name Full country name\n * @property {string} code ISO 3166-1 alpha-2\n *\n * @example\n * [\n *   {\n *     name: 'Netherlands',\n *     code: 'NL',\n *   },\n *   ...\n *   {\n *     name: 'India',\n *     abbreviation: 'IN',\n *   },\n * ]\n *\n * @name Constants#countries\n * @type {array}\n */\nexport const countries = [\n  {\n    name: 'Netherlands',\n    code: 'NL',\n  },\n  {\n    name: 'India',\n    code: 'IN',\n  },\n  {\n    name: 'United Kingdom',\n    code: 'UK',\n  },\n  {\n    name: 'Spain',\n    code: 'ES',\n  },\n  {\n    name: 'United States',\n    code: 'US',\n  },\n];\n\n/**\n * @description\n * List of bank types\n *\n * @name Constants#bankTypes\n * @type {array}\n */\nexport const bankTypes = ['SWIFT/BIC', 'ABA'];\n\n/**\n * @description\n * Object representing single payment\n *\n * @name Constants#TransferFrequency\n * @type {object}\n */\nexport const TransferFrequency = {\n  ONCE: 'ONCE',\n  MONTHLY: 'MONTHLY',\n  YEARLY: 'YEARLY',\n};\n\n/**\n * @description\n * Object representing single payment\n *\n * @property {string} name Translation key of the label\n * that will be displayed to the end user\n * @property {string} value Denotes frequency, holds value 'ONCE'\n *\n * @name Constants#SingleFrequency\n * @type {object}\n */\nexport const SingleFrequency = {\n  name: 'form.schedule.frequency.once',\n  value: TransferFrequency.ONCE,\n};\n\n/**\n * @description\n * Minimum ocurrences value by default\n * @name Constants#ScheduleRepeatValue\n * @type {Number}\n */\nexport const ScheduleRepeatValue = 2;\n\n/**\n * @description\n * Widget recurrence ending enum\n *\n * @name Constants#RecurrenceEnding\n * @type {object}\n */\nexport const RecurrenceEnding = {\n  NEVER: 'NEVER',\n  ON: 'ON',\n  AFTER: 'AFTER',\n};\n\nconst specialSymbols = \"/-?:().,'+\";\nconst escapedSpecialSymbols = specialSymbols.split('').map((a) => `|\\\\${a}`).join('');\n\n/**\n * @description\n * Pattern for payment reference validation\n * @name Constants#PaymentReferencePattern\n * @type {string}\n */\nexport const PaymentReferencePattern = `^(\\\\w|\\\\d| ${escapedSpecialSymbols})*$`;\n\n/**\n * @name Constants#Intent\n * @description\n *\n * @type {Object}\n */\nexport const Intent = {\n  INITIATE_PAYMENT: 'intent.bus.paymentOrder.usInternationalWirePayment.initiate',\n  VIEW_PAYMENT_ORDERS: 'view.account.managePayments',\n};\n\n/**\n * @name BENEFICIARY_SELECTOR_MODAL\n * @type {String}\n * @description\n * Beneficiary selector modal type\n */\nexport const BENEFICIARY_SELECTOR_MODAL = 'modal';\n\n\n/**\n * @name BENEFICIARY_LIST_SIZE\n * @type {number}\n * @description\n * Max number of item that should be visible in beneficiary account seleter listbox\n */\nexport const BENEFICIARY_LIST_SIZE = 10;\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-international-wire-ng/scripts/constants.js","/* globals window, document */\nimport angular from 'vendor-bb-angular';\nimport { isValidIBAN, formatByGroups } from 'lib-bb-iban';\n\nimport {\n  WidgetName,\n  countries,\n  bankTypes,\n  SingleFrequency,\n  TransferFrequency,\n  RecurrenceEnding,\n  PaymentReferencePattern,\n  ScheduleRepeatValue,\n  BENEFICIARY_SELECTOR_MODAL,\n  BENEFICIARY_LIST_SIZE,\n} from './constants';\n\nconst templates = {\n  form: `#${WidgetName}/form.html`,\n  review: `#${WidgetName}/review.html`,\n};\n\nconst currencies = [];\nconst minOccurrences = ScheduleRepeatValue;\nconst maxOccurences = 200;\nconst maxDigits = 13;\nconst fromListeners = [];\nconst toListeners = [];\n\nconst charCounterConfig = {\n  description: {\n    maxChars: 140,\n  },\n  reference: {\n    maxChars: 35,\n  },\n};\n\nconst capitalizeIfPrefix = (str, prefix) => (\n  !Boolean(prefix) || !str ? str : `${prefix}${str[0].toUpperCase()}${str.substr(1)}`\n);\n\nconst toPostalAddressModel = (item, prefix = '') => ({\n  addressLine1: item[capitalizeIfPrefix('addressLine1', prefix)],\n  addressLine2: item[capitalizeIfPrefix('addressLine2', prefix)],\n  streetName: item[capitalizeIfPrefix('streetName', prefix)],\n  postCode: item[capitalizeIfPrefix('postCode', prefix)],\n  town: item[capitalizeIfPrefix('town', prefix)],\n  countrySubDivision: item[capitalizeIfPrefix('countrySubDivision', prefix)],\n  country: item[capitalizeIfPrefix('country', prefix)],\n});\n\nconst fromContactToBeneficiary = (contact) => ({\n  postalAddress: toPostalAddressModel(contact),\n  bank: {\n    accountNumber: contact.accountNumber,\n    name: contact.bankName,\n    code: contact.bankCode,\n    bic: contact.BIC,\n    postalAddress: toPostalAddressModel(contact, 'bank'),\n  },\n});\n\nconst flattenContactAccounts = (contacts) => {\n  const resultContacts = [];\n  for (const contact of contacts) {\n    for (const account of contact.accounts) {\n      Object.assign(account, {\n        ...contact,\n        // following line overwrites account.accountName with this preference\n        accountName: account.accountName || account.name || account.alias,\n        formatIban: (acc) => (isValidIBAN(acc) ? formatByGroups(acc) : acc),\n        external: true,\n      });\n      resultContacts.push(account);\n    }\n  }\n\n  return resultContacts;\n};\n\nconst fromArrangementToContact = (arrangement) => ({\n  name: arrangement.name || arrangement.accountHolderName,\n  ...toPostalAddressModel(arrangement),\n  addressLine1: arrangement.accountHolderAddressLine1,\n  addressLine2: arrangement.accountHolderAddressLine2,\n  streetName: arrangement.accountHolderStreetName,\n  country: arrangement.accountHolderCountry,\n  accountNumber: arrangement.BBAN,\n  amount: arrangement.amount,\n  currency: arrangement.currency,\n  bankCode: arrangement.bankBranchCode,\n  BIC: arrangement.BIC,\n});\n\n/**\n * @name remapObject\n * @description\n * Takes an object and return new object with same properties, but adding\n * prefix to property name, property name will be camelcase.\n * @type {Function}\n * @inner\n * @param {Object} obj Input object to remap\n * @param {String} prefix Prefix text to prepend to every property\n * @returns {Object} Output object with renamed properties\n */\nconst remapObject = (obj, prefix) => Object.keys(obj)\n  .reduce((result, name) => Object.assign(result, {\n    [capitalizeIfPrefix(name, prefix)]: obj[name],\n  }), {});\n\nconst fromBeneficiaryToContact = (beneficiary) => ({\n  name: beneficiary.name,\n  ...beneficiary.postalAddress,\n  accounts: [{\n    name: beneficiary.name,\n    bankName: beneficiary.bank.name,\n    accountNumber: beneficiary.bank.accountNumber,\n    bankCode: beneficiary.bank.code,\n    ...remapObject(beneficiary.bank.postalAddress, 'bank'),\n  }],\n});\n\nconst getAddressText = (postalAddress) => [\n  postalAddress.addressLine1,\n  postalAddress.addressLine2,\n  postalAddress.streetName,\n  postalAddress.postCode,\n  postalAddress.town,\n].reduce((accumulator, currentValue) => {\n  if (typeof currentValue === 'string' && currentValue.trim()) {\n    accumulator.push(currentValue.trim());\n  }\n  return accumulator;\n}, []).join(', ');\n\n/**\n * @name getDateOnly\n * @inner\n * @type {function}\n *\n * @description\n * Parses a javascript date to a yyyy-MM-DD format string, dropping time and timezone information.\n *\n * @param {date} dateArg the date to parse\n * @returns {string} the formatted string/date\n */\nconst getDateOnly = (dateArg) => {\n  if (!dateArg) {\n    return null;\n  }\n  const date = new Date(dateArg);\n\n  const month = String(date.getMonth() + 1);\n  const day = String(date.getDate());\n  const year = String(date.getFullYear());\n\n  return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n};\n\n/**\n * @name getRecurringTransactionDay\n * @inner\n * @type {function}\n *\n * @description\n * Denotes day on which transfer should be executed.\n * For weekly it will be 1..7 indicating weekday.\n * For monthly it will be 1..31 indicating day of month.\n * For yearly it will be 1..12 indicating month of the year\n *\n * @param {object} schedule Recurring payment schedule object\n * @returns {number} Recurring transaction day\n */\nconst getRecurringTransactionDay = schedule => {\n  switch (schedule.transferFrequency.value) {\n    case TransferFrequency.YEARLY:\n      return schedule.startDate.getMonth() + 1;\n    case TransferFrequency.MONTHLY:\n      return schedule.startDate.getDate();\n    default:\n      return schedule.startDate.getDay() + 1;\n  }\n};\n\n/**\n * @name Helpers#fromModelToForm\n * @description\n * Transforms payment model coming from server to for model\n * @type {Function}\n * @param {Object} payment Payment model from server\n * @returns {Object} Transformed payment\n */\nexport const fromModelToForm = (payment) => {\n  const paymentForm = {\n    createdAt: payment.createdAt ? new Date(payment.createdAt) : null,\n    data: {\n      id: payment.id ? payment.id : null,\n    },\n  };\n\n  // select debtor info\n  if (payment.debtorAccount) {\n    paymentForm.data.debitAccount = {\n      ...angular.copy(payment.debtorAccount),\n      id: payment.debtorAccount.arrangementId,\n    };\n  }\n\n  // creditor info\n  if (payment.creditTransferTransactionInformation &&\n    payment.creditTransferTransactionInformation.length) {\n    const creditInfo = payment.creditTransferTransactionInformation[0];\n    // amount and currency\n    if (creditInfo.instructedAmount) {\n      Object.assign(paymentForm.data, {\n        amount: {\n          currency: creditInfo.instructedAmount.currencyCode || null,\n          value: creditInfo.instructedAmount.amount || null,\n        },\n        toAmount: {\n          currency: creditInfo.targetCurrency || null,\n        },\n      });\n    }\n\n    Object.assign(paymentForm.data, {\n      beneficiary: {\n        name: creditInfo.creditor ? creditInfo.creditor.name : null,\n        postalAddress: creditInfo.creditor ? creditInfo.creditor.postalAddress : null,\n        message: creditInfo.remittanceInformation ? creditInfo.remittanceInformation.content : null,\n        bank: {\n          name: creditInfo.creditorBank ? creditInfo.creditorBank.name : null,\n          accountNumber: creditInfo.creditorAccount && creditInfo.creditorAccount.identification\n            ? creditInfo.creditorAccount.identification.identification : null,\n          bic: creditInfo.creditorBank ? creditInfo.creditorBank.bic : null,\n          code: creditInfo.creditorBank ? creditInfo.creditorBank.bankBranchCode : null,\n          postalAddress: creditInfo.creditorBank ? creditInfo.creditorBank.postalAddress : null,\n          message: creditInfo.messageToBank || null,\n        },\n      },\n    });\n\n    if (creditInfo.correspondentBank) {\n      Object.assign(paymentForm.data.beneficiary, {\n        correspondentBank: {\n          name: creditInfo.correspondentBank.name || null,\n          code: creditInfo.correspondentBank.bankBranchCode,\n        },\n      });\n    }\n\n    if (creditInfo.intermediaryBank) {\n      Object.assign(paymentForm.data.beneficiary, {\n        intermediaryBank: {\n          name: creditInfo.intermediaryBank.name || null,\n          code: creditInfo.intermediaryBank.bankBranchCode,\n          bic: creditInfo.intermediaryBank.bic,\n        },\n      });\n    }\n\n    // reference and description\n    Object.assign(paymentForm.data, {\n      paymentReference: creditInfo.endToEndIdentification || null,\n    });\n  }\n\n  // schedule\n  if (payment.schedule) {\n    Object.assign(paymentForm.data, {\n      schedule: {\n        transferFrequency: {\n          value: payment.schedule.transferFrequency,\n        },\n      },\n    });\n\n    if (payment.schedule.transferFrequency === 'WEEKLY') {\n      paymentForm.data.schedule.transferFrequency.name = 'form.schedule.frequency.weekly';\n    } else if (payment.schedule.transferFrequency === 'DAILY') {\n      paymentForm.data.schedule.transferFrequency.name = 'form.schedule.frequency.daily';\n    } else if (payment.schedule.transferFrequency === 'MONTHLY') {\n      paymentForm.data.schedule.transferFrequency.name = 'form.schedule.frequency.monthly';\n    } else if (payment.schedule.transferFrequency === 'QUARTERLY') {\n      paymentForm.data.schedule.transferFrequency.name = 'form.schedule.frequency.quarterly';\n    } else if (payment.schedule.transferFrequency === 'YEARLY') {\n      paymentForm.data.schedule.transferFrequency.name = 'form.schedule.frequency.annually';\n    }\n\n    paymentForm.data.schedule.startDate = payment.schedule.startDate ?\n      new Date(payment.schedule.startDate) : null;\n\n    if (payment.schedule.every) {\n      paymentForm.data.schedule.transferFrequency.every = parseInt(payment.schedule.every, 10);\n    }\n\n    if (payment.schedule.endDate) {\n      paymentForm.data.schedule.endDate = new Date(payment.schedule.endDate);\n    }\n\n    if (payment.schedule.repeat) {\n      paymentForm.data.schedule.repeat = payment.schedule.repeat;\n      paymentForm.data.endingType = RecurrenceEnding.AFTER;\n    } else if (payment.schedule.endDate) {\n      paymentForm.data.endingType = RecurrenceEnding.ON;\n    }\n  } else {\n    Object.assign(paymentForm.data, {\n      endingType: RecurrenceEnding.NEVER,\n      schedule: {\n        transferFrequency: angular.copy(SingleFrequency),\n        startDate: new Date(payment.requestedExecutionDate),\n        endDate: new Date(payment.requestedExecutionDate),\n      },\n    });\n  }\n\n  return paymentForm;\n};\n\n/**\n * @name Helpers\n * @type {object}\n */\nexport default ({ service, stateContainer, router, intents, postActions, $filter, $timeout }) => {\n  const i18nFilter = $filter('i18n');\n\n  /**\n   * @description\n   * Retrieve payment state\n   * @name getPaymentState\n   * @inner\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getPaymentState = stateContainer.createSelector((state) => state.payment);\n\n  /**\n   * @description\n   * Retrieve save new contact flag from state\n   * @name saveNewContact\n   * @inner\n   * @type {Function}\n   * @returns {Boolean}\n   */\n  const saveNewContact = stateContainer.createSelector((state) => state.payment.saveNewContact);\n\n  /**\n   * @description\n   * Retrieve payment data from state store\n   * @name Helpers#getContacts\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getContacts = stateContainer.createSelector((state) => state.contacts.data);\n\n  /**\n   * @description\n   * Retrieve payment data from state store\n   * @name Helpers#getPayment\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getPayment = stateContainer.createSelector((state) => state.payment.data);\n\n  /**\n   * @description\n   * Retrieve credit accounts data from state store\n   * @name Helpers#getCreditAccounts\n   * @type {Function}\n   * @returns {Array}\n   */\n  const getCreditAccounts = stateContainer.createSelector((state) => state.creditAccounts.data);\n\n  /**\n   * @description\n   * Retrieve payment schedule data from state store\n   * @name Helpers#getSchedule\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getSchedule = stateContainer.createSelector(() => getPayment().schedule);\n\n  /**\n   * @description\n   * Retrieve payment beneficiary data from state store\n   * @name Helpers#getBeneficiary\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getBeneficiary = stateContainer.createSelector(() => getPayment().beneficiary);\n\n  /**\n   * @description\n   * Retrieve payment correspondent data from state store\n   * @name Helpers#getCorrespondent\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getCorrespondent = stateContainer.createSelector(() => getPayment().correspondent);\n\n  /**\n   * @description\n   * Retrieve beneficiary bank data from state store\n   * @name Helpers#getBeneficiaryBank\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getBeneficiaryBank = stateContainer.createSelector(() => getBeneficiary().bank);\n\n  /**\n   * @description\n   * Retrieve beneficiary bank postal address data from state store\n   * @name Helpers#getBeneficiaryBankPostalAddress\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getBeneficiaryBankPostalAddress = () => getBeneficiaryBank().postalAddress;\n\n  /**\n   * @description\n   * Retrieve correspondent bank data from state store\n   * @name Helpers#getCorrespondentBank\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getCorrespondentBank = stateContainer.createSelector(() => getCorrespondent().bank);\n\n  /**\n   * @description\n   * Retrieve beneficiary postalAddress data from state store\n   * @name Helpers#getBeneficiaryPostalAddress\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getBeneficiaryPostalAddress = stateContainer.createSelector(\n    () => getBeneficiary().postalAddress\n  );\n\n  /**\n   * @description\n   * Get human readable beneficiary address text\n   *\n   * @returns {string}\n   *\n   * @name Helpers#getBeneficiaryAddressText\n   * @type {function}\n   */\n  const getBeneficiaryAddressText = () => getAddressText(getBeneficiaryPostalAddress());\n\n  /**\n   * @description\n   * Retrieve beneficiary intermediary bank data from state store\n   * @name Helpers#getBeneficiaryIntermediaryBank\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getBeneficiaryIntermediaryBank = stateContainer.createSelector(\n    () => getBeneficiary().intermediaryBank\n  );\n\n  /**\n   * @description\n   * Get human readable intermediary address text\n   *\n   * @returns {string}\n   *\n   * @name Helpers#getIntermadiaryAddressText\n   * @type {function}\n   */\n  const getIntermadiaryAddressText = () =>\n    getAddressText(getBeneficiaryIntermediaryBank().postalAddress);\n\n  /**\n   * @description\n   * Get human readable bank address text\n   *\n   * @returns {string}\n   *\n   * @name Helpers#getBankAddressText\n   * @type {function}\n   */\n  const getBankAddressText = () => getAddressText(getBeneficiaryBankPostalAddress());\n\n  /**\n   * @description\n   * Check if contact is not in address book\n   *\n   * @returns {boolean}\n   *\n   * @name Helpers#isNewContact\n   * @inner\n   * @type {function}\n   */\n  const isNewContact = () => {\n    const beneficiary = getBeneficiary();\n    const contacts = getContacts();\n\n    return !Boolean(contacts && contacts.find((contact) => (\n      contact.name === beneficiary.name &&\n      contact.accountNumber === beneficiary.bank.accountNumber &&\n      contact.bankCode === beneficiary.bank.code\n    )));\n  };\n\n  /**\n   * @description\n   * Check if beneficiary fields are set\n   *\n   * @returns {boolean}\n   *\n   * @name Helpers#isBeneficiarySet\n   * @inner\n   * @type {function}\n   */\n  const isBeneficiarySet = () => {\n    const beneficiary = getBeneficiary();\n    return Boolean(\n      beneficiary.name &&\n      beneficiary.bank.accountNumber &&\n      beneficiary.bank.bic\n    );\n  };\n\n  /**\n   * @description\n   * Checks if save new contact checkbox should be enabled\n   *\n   * @returns {boolean}\n   *\n   * @name Helpers#isSaveNewContactEnabled\n   * @type {function}\n   */\n  const isSaveNewContactEnabled = () => isBeneficiarySet() && isNewContact();\n\n  /**\n   * @description\n   * Transforms form fields to contact model to be saved\n   *\n   * @param {object} beneficiary The beneficiary fields\n   * @returns {object}\n   *\n   * @name Helpers#formToContact\n   * @type {function}\n   */\n  const formToContact = (beneficiary) => (\n    isSaveNewContactEnabled() &&\n    saveNewContact() &&\n    fromBeneficiaryToContact(beneficiary)\n  );\n\n  /**\n   * @description\n   * Checks if layout should show 'Urgent payment' switcher\n   *\n   * @name canSelectUrgentPayment\n   * @type {function}\n   * @param {object} $ctrl Widget controller\n   * @returns {boolean} True if urget payment switchet should be shown, false otherwise\n   */\n  const canSelectUrgentPayment = stateContainer.createSelector(() =>\n    getPayment().debitAccount && getPayment().debitAccount.urgentTransferAllowed);\n\n  /**\n   * @description\n   * Retrieve review from state store\n   * @name Helpers#getReview\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getReview = stateContainer.createSelector((state) => state.review);\n\n  /**\n   * @description\n   * Retrieve draft from state store\n   * @name getDraft\n   * @inner\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getDraft = stateContainer.createSelector((state) => state.draft);\n\n  /**\n   * @description\n   * Retrieve beneficiary correspondent bank data from state store\n   * @name Helpers#getBeneficiaryCorrespondentBank\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getBeneficiaryCorrespondentBank = stateContainer.createSelector(\n    () => getBeneficiary().correspondentBank\n  );\n\n  /**\n   * @description\n   * Retrieve debit accounts data from state store\n   * @name Helpers#getDebitAccounts\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getDebitAccounts = stateContainer.createSelector((state) => state.debitAccounts);\n\n  /**\n   * @description\n   * Retrieve exchange rate data from state store\n   * @name Helpers#getExchangeRate\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getExchangeRate = stateContainer.createSelector((state) => state.rate.data);\n\n  /**\n   * @description\n   * Retrieve available currencies list from state store\n   * @name Helpers#getCurrencies\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getCurrencies = stateContainer.createSelector((state) => state.currencies.data);\n\n  /**\n   * @description\n   * Trims amount to have two decimals\n   *\n   * @type {function}\n   * @inner\n   *\n   * @param value Initial amount\n   * @return      Converted amount\n   */\n  const convertTwoDecimals = (value) => (value ?\n    value.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] : '0.00');\n\n  /**\n   * @description\n   * Calls all registered watchers in a list\n   *\n   * @type {Function}\n   * @inner\n   *\n   * @param {Array} watchers List of angular watchers\n   */\n  const killAmountWatchers = (watchers) => {\n    let watcher = watchers.pop();\n    while (watcher) {\n      watcher();\n      watcher = watchers.pop();\n    }\n  };\n\n  /**\n   * @description\n   * Check if conversion is valid and update appropriate value\n   * @inner\n   * @type {function}\n   *\n   * @param fromAmount  Amount to convert from\n   * @param toAmount    Amount to convert to\n   * @param cb          Service method callback\n   */\n  const convertAmount = (fromAmount, toAmount, currency, cb) => {\n    const value = parseFloat(fromAmount).toFixed(2);\n    const referenceAmount = parseFloat(toAmount).toFixed(2);\n\n    if (value !== referenceAmount) {\n      cb({ value, currency });\n    }\n  };\n\n  /**\n   * @description\n   * Set watcher on amount field\n   *\n   * @type {function}\n   * @inner\n   *\n   * @param scope\n   * @return {function}\n   */\n  const setFromAmountWatcher = scope =>\n    scope.$watch('paymentForm.amount.$viewValue.value', (newValue, oldValue) => {\n      if (newValue !== oldValue) {\n        killAmountWatchers(toListeners);\n\n        convertAmount(\n          convertTwoDecimals(newValue * getExchangeRate()),\n          getPayment().toAmount.value,\n          getPayment().toAmount.currency,\n          service.updateToAmount\n        );\n\n        // eslint-disable-next-line no-use-before-define\n        $timeout(() => { toListeners.push(setToAmountWatcher(scope)); });\n      }\n    });\n\n  /**\n   * @description\n   * Set watcher on toAmount field\n   *\n   * @type {function}\n   * @inner\n   *\n   * @param scope\n   * @return {function}\n   */\n  const setToAmountWatcher = scope =>\n    scope.$watch('paymentForm.toAmount.$viewValue.value', (newValue, oldValue) => {\n      if (newValue !== oldValue) {\n        killAmountWatchers(fromListeners);\n\n        convertAmount(\n          convertTwoDecimals(newValue / getExchangeRate()),\n          getPayment().amount.value,\n          getPayment().amount.currency,\n          service.updateAmount\n        );\n\n        $timeout(() => { fromListeners.push(setFromAmountWatcher(scope)); });\n      }\n    });\n\n  /**\n   * @description\n   * Keep amounts to pay and beneficiary receives in sync\n   *\n   * @name Helpers#convertAmounts\n   * @type {function}\n   * @param scope\n   */\n  const convertAmounts = (scope) => {\n    fromListeners.push(setFromAmountWatcher(scope));\n    toListeners.push(setToAmountWatcher(scope));\n\n    // Initialize watcher for further currency changes\n    scope.$watch('paymentForm.toAmount.$viewValue.currency', (newValue, oldValue) => {\n      if (newValue && newValue !== oldValue) {\n        killAmountWatchers(toListeners);\n        service.getRate({\n          currencyFrom: getPayment().amount.currency,\n          currencyTo: newValue,\n        }).then(() => {\n          convertAmount(\n            getPayment().amount.value * getExchangeRate(),\n            getPayment().toAmount.value,\n            newValue,\n            service.updateToAmountByCurrency\n          );\n\n          $timeout(() => { toListeners.push(setToAmountWatcher(scope)); });\n        });\n      }\n    });\n  };\n\n  /**\n   * @description\n   * Check if exchange rate section should be displayed.\n   * Visible only when target currency is selected and different\n   * from base currency.\n   *\n   * @name Helpers#showExchangeRateInfo\n   * @type {Function}\n   * @returns {Boolean} Flag indicating if exchange rate visibility\n   */\n  const showExchangeRateInfo = () => {\n    const payment = getPayment();\n\n    if (!payment.toAmount.currency || !payment.amount.value) {\n      return false;\n    }\n\n    return payment.toAmount.currency !== payment.amount.currency;\n  };\n\n  /**\n   * @description\n   * Resets all the beneficiary fields\n   *\n   * @name Helpers#resetContact\n   * @type {function}\n   */\n  const resetContact = () => {\n    service.resetBeneficiary();\n  };\n\n  /**\n   * @description\n   * Set beneficiary fields when selecting contact\n   *\n   * @param {object} model Contact model\n   * @name Helpers#selectContact\n   * @type {function}\n   */\n  const selectContact = (model) => service.setBeneficiary(fromContactToBeneficiary(model));\n\n  /**\n   * @description\n   * Set beneficiary fields when selecting contact\n   *\n   * @param {object} model Contact model\n   * @name Helpers#selectContactModal\n   * @type {function}\n   */\n  const selectContactModal = (model) => {\n    let item = model;\n\n    if (item.BBAN) {\n      item = fromArrangementToContact(item);\n    }\n\n    return service.setBeneficiary({\n      ...(fromContactToBeneficiary(item)),\n      name: item.name,\n    });\n  };\n\n  /**\n   * @description\n   * Check that `account` is not in the current list of beneficiaries\n   * @name removeSelectedDebitAccount\n   * @type {Function}\n   * @inner\n   * @param {Object} account The debit account to check\n   * @returns {Boolean}\n   */\n  const removeSelectedDebitAccount = (account) => {\n    const selectedDebitAccount = getPayment().debitAccount;\n    if (!selectedDebitAccount || !selectedDebitAccount.BBAN) {\n      return true;\n    }\n\n    return account.BBAN !== selectedDebitAccount.BBAN;\n  };\n\n  /**\n   * @inner\n   * @name groupAccounts\n   * @type {Function}\n   *\n   * @description\n   * Restructure the accounts' list by adding an extra item to that list\n   * just before the start of each group of accounts,that extra item\n   * represents the group.\n   *\n   * @param {Array} accountsList\n   * @param {Number} totalItemsCount\n   * @returns {Array}\n   */\n  const groupAccounts = (accountsList, totalItemsCount) => {\n    let internalAccounts = accountsList.filter(account => !account.external);\n    let externalAccounts = accountsList.filter(account => account.external);\n\n    if (internalAccounts.length) {\n      internalAccounts = [\n        { group: i18nFilter('form.beneficiary.group.internal') },\n        ...internalAccounts,\n      ];\n    }\n\n    if (externalAccounts.length) {\n      externalAccounts = [\n        { group: i18nFilter('form.beneficiary.group.external') },\n        ...externalAccounts,\n      ];\n    }\n\n    const list = [...internalAccounts, ...externalAccounts];\n\n    // add extra item as indicator for more results\n    if (totalItemsCount > BENEFICIARY_LIST_SIZE) {\n      list.push({\n        more: i18nFilter('form.beneficiary.group.more', {\n          count: (totalItemsCount - BENEFICIARY_LIST_SIZE), // count remaining items\n        }),\n      });\n    }\n\n    return list;\n  };\n\n  /**\n   * @description\n   * Loads list of contacts filtered by contact name\n   * Group accounts by internal or external type\n   *\n   * @param {string} name Name of the contact\n   * @param {number} [size = BENEFICIARY_LIST_SIZE] - Number of returned items\n   * @return {Promise.<Object>}\n   *\n   * @name Helpers#loadContactsByName\n   * @type {function}\n   */\n  const loadContactsByName = (name, size = BENEFICIARY_LIST_SIZE) => {\n    const contacts = getContacts();\n    const creditAccounts = getCreditAccounts() || [];\n\n    let combinedAccounts = [\n      ...creditAccounts.filter(removeSelectedDebitAccount).map(fromArrangementToContact),\n      ...flattenContactAccounts(contacts),\n    ];\n\n    if (name) {\n      combinedAccounts = combinedAccounts.filter(account =>\n        account.name.toUpperCase().includes(name.toUpperCase()) ||\n        (\n          account.accountName &&\n          account.accountName.toUpperCase().includes(name.toUpperCase())\n        ) ||\n        (\n          account.accountNumber &&\n          account.accountNumber.toUpperCase().includes(name.toUpperCase())\n        )\n      );\n    }\n\n    return Promise.resolve({\n      data: groupAccounts(combinedAccounts.slice(0, size), combinedAccounts.length),\n      totalItems: combinedAccounts.length,\n    });\n  };\n\n  /**\n   * @name postActionsOptions\n   * @description\n   * List of configuration objects defining submit post actions options\n   * @type {PostActionOption[]}\n   * @inner\n   */\n  const postActionsOptions = [\n    {\n      id: 1,\n      key: 'review.label.submit',\n      postAction: postActions.type.NONE,\n      selected: true,\n      permission: 'create',\n    },\n    {\n      id: 2,\n      key: 'review.label.submit.create',\n      postAction: postActions.type.CREATE,\n      permission: 'create',\n    },\n    {\n      id: 3,\n      key: 'review.label.submit.approve',\n      postAction: postActions.type.APPROVE,\n      permission: 'approve',\n    },\n  ];\n\n  /**\n   * @description\n   * Transforms form fields to payment model to be saved\n   *\n   * @param {object} payment The payment fields\n   * @returns {object}\n   *\n   * @name Helpers#formToPayment\n   * @type {function}\n   */\n  const formToPayment = (payment) => {\n    const { beneficiary, debitAccount, schedule, amount, toAmount } = payment;\n    const paymentState = getPaymentState();\n    const isSinglePayment = !schedule.transferFrequency\n      || schedule.transferFrequency.value === TransferFrequency.ONCE;\n\n    const debtorAccount = debitAccount ? {\n      identification: {\n        identification: debitAccount.id,\n        schemeName: 'ID',\n      },\n    } : null;\n\n    if (debitAccount && debitAccount.name) {\n      Object.assign(debtorAccount, { name: debitAccount.name });\n    }\n\n\n    const creditTransferTransactionInformation = [{\n      instructedAmount: {\n        amount: paymentState.hasToAmountChanged ? toAmount.value : amount.value,\n        currencyCode: paymentState.hasToAmountChanged ? toAmount.currency : amount.currency,\n      },\n      targetCurrency: toAmount.currency,\n      creditor: {\n        name: beneficiary.name,\n        postalAddress: { ...beneficiary.postalAddress },\n      },\n      creditorAccount: {\n        identification: {\n          identification: beneficiary.bank.accountNumber,\n          schemeName: 'BBAN',\n        },\n      },\n      creditorBank: {\n        bankBranchCode: beneficiary.bank.code,\n        bic: beneficiary.bank.bic,\n        name: beneficiary.bank.name,\n        postalAddress: { ...beneficiary.bank.postalAddress },\n      },\n    }];\n\n    if (paymentState.isCorrespondentEnabled && beneficiary.correspondentBank.code) {\n      Object.assign(creditTransferTransactionInformation[0], {\n        correspondentBank: {\n          bankBranchCode: beneficiary.correspondentBank.code,\n          name: beneficiary.correspondentBank.name,\n        },\n      });\n    }\n\n    if (paymentState.isIntermediaryEnabled) {\n      if (beneficiary.intermediaryBank.code) {\n        Object.assign(creditTransferTransactionInformation[0], {\n          intermediaryBank: {\n            name: beneficiary.intermediaryBank.name,\n            bankBranchCode: beneficiary.intermediaryBank.code,\n          },\n        });\n      } else if (beneficiary.intermediaryBank.bic) {\n        Object.assign(creditTransferTransactionInformation[0], {\n          intermediaryBank: {\n            name: beneficiary.intermediaryBank.name,\n            bic: beneficiary.intermediaryBank.bic,\n          },\n        });\n      }\n    }\n\n    if (beneficiary.bank.message) {\n      Object.assign(creditTransferTransactionInformation[0], {\n        messageToBank: beneficiary.bank.message,\n      });\n    }\n\n    if (beneficiary.message) {\n      Object.assign(creditTransferTransactionInformation[0], {\n        remittanceInformation: beneficiary.message,\n      });\n    }\n\n    if (payment.paymentReference) {\n      Object.assign(creditTransferTransactionInformation[0], {\n        endToEndIdentification: payment.paymentReference,\n      });\n    }\n\n    const paymentOrder = {\n      debtorAccount,\n      requestedExecutionDate: getDateOnly(schedule.startDate),\n      paymentMode: isSinglePayment ? 'SINGLE' : 'RECURRING',\n      paymentType: 'US_FOREIGN_WIRE',\n      creditTransferTransactionInformation,\n    };\n\n    if (payment.id) {\n      Object.assign(paymentOrder, { id: payment.id });\n    }\n\n    if (payment.urgent) {\n      Object.assign(paymentOrder, { instructionPriority: 'HIGH' });\n    }\n\n    if (!isSinglePayment) {\n      Object.assign(paymentOrder, {\n        schedule: {\n          transferFrequency: schedule.transferFrequency.value,\n          on: getRecurringTransactionDay(schedule),\n          startDate: getDateOnly(schedule.startDate),\n          every: schedule.transferFrequency.every,\n          endDate: payment.endingType === RecurrenceEnding.ON ?\n            getDateOnly(schedule.endDate) : null,\n          repeat: payment.endingType === RecurrenceEnding.AFTER ?\n            schedule.repeat : null,\n        },\n      });\n    }\n\n    return paymentOrder;\n  };\n\n  /**\n   * @name Helpers#canSaveDraft\n   * @type {Function}\n   * @description\n   * Returns true if at least credit account, beneficiary or any amount\n   * filled in\n   *\n   * @param {Object} form Form state\n   * @returns {Boolean}\n   */\n  const canSaveDraft = (form) => {\n    const payment = getPayment();\n    const validations = ['pattern', 'maxlength', 'customRtn'];\n    const hasUserErrors = form.$error &&\n      validations.reduce((memo, current) => memo || (current in form.$error), false);\n\n    return !hasUserErrors && (\n      payment.debitAccount ||\n      payment.beneficiary.name ||\n      payment.beneficiary.bank.accountNumber ||\n      payment.amount.value\n    );\n  };\n\n  /**\n   * @description\n   * Removes not needed data from draft object before sending\n   *\n   * @name purifyDraftPaymentData\n   * @type {function}\n   * @inner\n   * @param {object} payment Payment data\n   * @returns {object} transformed draft payment order data\n   */\n  const purifyDraftPaymentData = payment => {\n    const purifiedPayment = angular.copy(payment);\n    const credit = purifiedPayment.creditTransferTransactionInformation[0];\n    const creditAcc = credit.creditorAccount.identification.identification;\n\n    if (!payment.debtorAccount) {\n      delete purifiedPayment.debtorAccount;\n    }\n\n    if (!credit.creditor.name) {\n      delete credit.creditor;\n    }\n\n    if (!creditAcc) {\n      delete credit.creditorAccount;\n    }\n\n    if (!credit.instructedAmount.amount) {\n      delete credit.instructedAmount;\n    }\n\n    return purifiedPayment;\n  };\n\n  /**\n   * @description\n   * Get purified draft payment model\n   *\n   * @param {object} payment The payment fields\n   * @returns {object}\n   *\n   * @name Helpers#getDraftPayment\n   * @type {function}\n   */\n  const getDraftPayment = (payment) => purifyDraftPaymentData(formToPayment(payment));\n\n  const deleteDraft = (id) => {\n    service.deleteDraft(id)\n      .then(() => {\n        intents.viewPaymentOrders();\n      });\n  };\n\n  /**\n   * @description\n   * Close edit draft and navigate to view payment orders intent\n   *\n   * @name Helpers#closeEditDraft\n   * @type {Function}\n   */\n  const closeEditDraft = (form) => {\n    const draft = getDraft();\n    const originalDraft = getDraftPayment(draft.data);\n    const currentDraft = getDraftPayment(getPayment());\n\n    if (canSaveDraft(form) && !angular.equals(originalDraft, currentDraft)) {\n      draft.editConfirmOpened = true;\n    } else {\n      intents.viewPaymentOrders();\n    }\n  };\n\n  /**\n   * @description\n   * Updates current draft payment and redirects to view draft payments if succesfully edited\n   * @name Helpers#updateDraft\n   * @type {Function}\n   */\n  const updateDraft = () => {\n    const payment = getPayment();\n    service.updateDraft(getDraftPayment(payment))\n      .then(() => {\n        intents.viewPaymentOrders();\n      });\n  };\n\n  const getPrivileges = stateContainer.createSelector((state) => state.privileges);\n\n  /**\n   * @name Helpers#isAllowedPaymentPrivilege\n   * @description\n   * Checks if use is allowed to perform `privilege` on international wire payment context\n   * @type {Function}\n   * @param {String} privilege\n   * @returns {Boolean} Wether if user is allowed or not on `privilege`\n   */\n  const isAllowedPaymentPrivilege = (privilege) => {\n    const privileges = getPrivileges();\n    const context = privileges.response.Payments['US Foreign Wire'];\n    if (privileges.error || !context) {\n      return true;\n    }\n\n    return context[privilege];\n  };\n\n  /**\n   * @name Helpers#getPostActionsOptions\n   * @description\n   * Returns available post submit actions depending on privileges\n   * @type {Function}\n   * @returns {PostActionOption[]} Allowed post submit actions collection\n   */\n  const getPostActionsOptions = () => postActionsOptions\n    .filter((action) => isAllowedPaymentPrivilege(action.permission));\n\n  /**\n   * @name Helpers#getApprovalNotification\n   * @description\n   * Returns approval notification object\n   * @inner\n   *\n   * @type {Function}\n   * @param {Boolean} success Approval result\n   * @returns {{message: string, level: string}}\n   */\n  const getApprovalNotification = (success) => ({\n    message: success ? 'notification.auth.success' : 'notification.auth.fail',\n    level: success ? 'success' : 'danger',\n  });\n\n  /**\n   * @name Helpers#getNotificationByType\n   * @description\n   * Returns notification object depends on its type\n   *\n   * @type {Function}\n   * @param {object} msg Approval result\n   * @returns {{message: string, level: string}}\n   */\n  const getNotificationByType = (msg) => {\n    let result;\n\n    switch (msg.type) {\n      case 'approve':\n        result = getApprovalNotification(msg.result);\n        break;\n      default:\n        result = false;\n    }\n\n    return result;\n  };\n\n  /**\n   * @name Helpers#removeNotification\n   * @type {function}\n   *\n   * @description\n   * Helper to remove notification from the list\n   *\n   * @param {object} notification\n   * @param {Array} notificationsList\n   * @returns {Array}\n   */\n  const removeNotification = (notification, notificationsList) =>\n    notificationsList.filter(item => item !== notification);\n\n  /**\n   * @name Helpers#paymentTypeOptions\n   * @description\n   * Collection of supported payment types to switch between each other\n   * @type {module:ext-bus-initiate-us-domestic-wire-ng.PaymentTypeOption[]}\n   */\n  const paymentTypeOptions = [\n    {\n      label: i18nFilter('label.payment.type.international'),\n      value: service.PaymentType.US_FOREIGN_WIRE,\n    },\n    {\n      label: i18nFilter('label.payment.type.domestic'),\n      value: service.PaymentType.US_DOMESTIC_WIRE,\n    },\n  ];\n\n  /**\n   * @name Helpers#getCountryName\n   * @description\n   * Returns human readable country name\n   * @type {Function}\n   * @returns {String} Country name\n   */\n  const getCountryName = (countryCode) => {\n    const foundCountry = countries.find((country) => country.code === countryCode);\n    if (!foundCountry) {\n      return '';\n    }\n\n    return foundCountry.name;\n  };\n\n  /**\n   * @name Helpers#isModal\n   * @type {function}\n   *\n   * @description\n   * Helper to check if we should use modal beneficiary selector\n   *\n   * @param {String} configValue\n   * @returns {Boolean}\n   */\n  const isModal = (configValue) =>\n    configValue === BENEFICIARY_SELECTOR_MODAL;\n\n  /**\n   * @description\n   * Toggle modal selector popup visibility (show/hide)\n   *\n   * @name Helpers#toggleModalSelector\n   * @type {function}\n   * @param {Object} ext\n   */\n  const toggleModalSelector = (ext) => {\n    const extension = ext;\n    extension.isModalSelectorOpen = !extension.isModalSelectorOpen;\n  };\n\n  /**\n   * @name Helpers#scrollToFirstError\n   * @description Focus or scroll to first error in ```form``` depending if it is visible or not.\n   * @inner\n   * @type {Function}\n   * @param {Object} form Angular form object to check errors\n   * @returns {Object} First angular element that is invalid\n   */\n  const scrollToFirstError = (form) => {\n    const firstError = form.$$controls.find((control) => control.$invalid).$$element;\n    const bodyRect = document.body.getBoundingClientRect();\n    const elemRect = firstError[0].getBoundingClientRect();\n    let offset = elemRect.top - bodyRect.top;\n\n    // Correct position to navigation bar's height\n    const navBar = document.querySelector('nav');\n    if (navBar) {\n      const navBarRect = navBar.getBoundingClientRect();\n      const navBarStyles = window.getComputedStyle(navBar, null);\n\n      if (navBarStyles.position === 'fixed' && navBarRect.top === 0) {\n        offset -= navBarRect.height;\n      }\n    }\n\n    window.scrollTo({\n      top: offset,\n      behavior: 'smooth',\n    });\n\n    return firstError;\n  };\n\n  /**\n   * @name Helpers#reviewPayment\n   * @type {function}\n   *\n   * @description\n   * Called when submitting payment for review, it actually calls a hook that\n   * can be customized with all the validations needed by the specific project.\n   *\n   * @param {object} $ctrl Payment controller\n   * @param {object} form Angular form object\n   * @returns {Promise|HTMLElement}\n   */\n  const reviewPayment = ($ctrl, form) => {\n    if (form.$invalid) {\n      // Show validation messages for complex fields\n      Object.assign(form, { showSpecialValidationMessages: true });\n      return scrollToFirstError(form);\n    }\n\n    // Hide validation messages for complex fields (if any)\n    Object.assign(form, { showSpecialValidationMessages: false });\n\n    return $ctrl.reviewPayment();\n  };\n\n  /**\n   * @name Helpers#formUntouched\n   * @type {Function}\n   *\n   * @description\n   * Checks if form model has been changed\n   * @returns {Boolean} Wheter model has been updated or not\n   */\n  const formUntouched = () => {\n    const payment = getPayment();\n\n    // from\n    const hasDebitAccount = Boolean(payment.debitAccount);\n    // to\n    const beneficiary = payment.beneficiary;\n    const hasBeneficiaryName = Boolean(beneficiary.name);\n    const hasBeneficiaryMessage = Boolean(beneficiary.message);\n\n    // address\n    const postalAddress = beneficiary.postalAddress;\n    const hasBeneficiaryPostalAddress = Boolean(postalAddress.addressLine1) ||\n      Boolean(postalAddress.addressLine2) ||\n      Boolean(postalAddress.countrySubDivision) ||\n      Boolean(postalAddress.postCode) ||\n      Boolean(postalAddress.streetName) ||\n      Boolean(postalAddress.town);\n\n    // beneficiary's bank\n    const bank = beneficiary.bank;\n    const hasBeneficiaryBank = Boolean(bank.accountNumber) ||\n      Boolean(bank.code) ||\n      Boolean(bank.bic) ||\n      Boolean(bank.message) ||\n      Boolean(bank.name);\n\n    const bankPostalAddress = bank.postalAddress;\n    const hasBeneficiaryBankPostalAddress = Boolean(bankPostalAddress.addressLine1) ||\n      Boolean(bankPostalAddress.addressLine2) ||\n      Boolean(bankPostalAddress.countrySubDivision) ||\n      Boolean(bankPostalAddress.postCode) ||\n      Boolean(bankPostalAddress.streetName) ||\n      Boolean(bankPostalAddress.town);\n\n    // correspondent bank\n    const hasCorrespondentBank = Boolean(beneficiary.correspondentBank.code) ||\n      Boolean(beneficiary.correspondentBank.name);\n\n    // intermediary bank\n    const hasIntermediaryBank = Boolean(beneficiary.intermediaryBank.bic) ||\n      Boolean(beneficiary.intermediaryBank.code) ||\n      Boolean(beneficiary.intermediaryBank.name) ||\n      beneficiary.intermediaryBank.type !== bankTypes[0];\n\n    // amount\n    const hasAmountValue = parseFloat(payment.amount.value) > 0;\n\n    // target amount\n    const hasTargetAmountValue = parseFloat(payment.toAmount.value) > 0;\n\n    // payment reference\n    const hasPaymentReference = Boolean(payment.paymentReference);\n\n    // schedule\n    const today = new Date();\n    const paymentStartDate = payment.schedule.startDate;\n    const sameStartDate = today.getYear() === paymentStartDate.getYear() &&\n      today.getMonth() === paymentStartDate.getMonth() &&\n      today.getDate() === paymentStartDate.getDate();\n\n    return !hasDebitAccount && !hasBeneficiaryName && !hasBeneficiaryMessage &&\n      !hasBeneficiaryPostalAddress && !hasBeneficiaryBank && !hasBeneficiaryBankPostalAddress &&\n      !hasCorrespondentBank && !hasIntermediaryBank && !hasAmountValue && !hasTargetAmountValue &&\n      !hasPaymentReference && sameStartDate &&\n      payment.schedule.transferFrequency.value === TransferFrequency.ONCE &&\n      payment.endingType === RecurrenceEnding.NEVER;\n  };\n\n  /**\n   * @name Helpers#switchPaymentType\n   * @description\n   * Shows confirmation popup if data in payment has been changed\n   * @type {Function}\n   * @param {module:model-bb-payment-orders-ng.PaymentType} paymentType Payment type identifier\n   * @returns {Boolean} True if payment has not been changed, false otherwise\n   */\n  const switchPaymentType = (paymentType) => {\n    if (!formUntouched()) {\n      service.showPaymentSelectorConfirmation(paymentType);\n      return false;\n    }\n\n    return true;\n  };\n\n  return {\n    get template() {\n      return templates[router.getRoute()];\n    },\n    getIntermediaryCodePattern() {\n      return getBeneficiary().intermediaryBank.type === 'ABA' ?\n        '/^\\\\d{9}$/' :\n        '/^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3})?$/';\n    },\n    get countries() { return countries; },\n    get bankTypes() { return bankTypes; },\n    get paymentReferencePattern() { return PaymentReferencePattern; },\n    getBeneficiary,\n    getBeneficiaryPostalAddress,\n    getBeneficiaryBank,\n    getBeneficiaryBankPostalAddress,\n    getCorrespondentBank,\n    getBeneficiaryCorrespondentBank,\n    getBeneficiaryIntermediaryBank,\n    getIntermadiaryAddressText,\n    getDebitAccounts,\n    canSelectUrgentPayment,\n    isAllowedPaymentPrivilege,\n    isSaveNewContactEnabled,\n    getBeneficiaryAddressText,\n    getBankAddressText,\n    getPostActionsOptions,\n    maxDigits,\n    currencies,\n    minOccurrences,\n    maxOccurences,\n    charCounterConfig,\n    loadContactsByName,\n    formToContact,\n    formToPayment,\n    resetContact,\n    selectContact,\n    selectContactModal,\n    getReview,\n    getPayment,\n    getExchangeRate,\n    convertAmounts,\n    getCurrencies,\n    getSchedule,\n    canSaveDraft,\n    getDraftPayment,\n    deleteDraft,\n    closeEditDraft,\n    updateDraft,\n    getCreditAccounts,\n    getNotificationByType,\n    removeNotification,\n    paymentTypeOptions,\n    switchPaymentType,\n    getCountryName,\n    isModal,\n    toggleModalSelector,\n    showExchangeRateInfo,\n    reviewPayment,\n    formUntouched,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-international-wire-ng/scripts/helpers.js","import { PaymentType } from './constants';\n\nexport default ({ service }) => ({\n  'widget-bb-initiate-us-payment.payment-type.selected': (selectedPaymentType) => {\n    if (PaymentType === selectedPaymentType) {\n      service.show();\n    } else {\n      service.hide();\n    }\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-international-wire-ng/scripts/events.js","import angular from 'vendor-bb-angular';\n\nimport { PaymentType, ScheduleRepeatValue } from './constants';\n\n/**\n * @name Hooks\n * @type {Object}\n */\nexport default {\n  /**\n   * @name Hooks#defaultPaymentType\n   * @type {Function}\n   *\n   * @description\n   * Gets the current extension payment type\n   *\n   * @returns {String} Default payment type\n   */\n  defaultPaymentType: () => PaymentType,\n\n  /**\n   * @name Hooks#defaultScheduleRepeat\n   * @type {Function}\n   *\n   * @description\n   * Get the default repeat value of minimum ocurrences\n   *\n   * @returns {Number} Default schedule repeat default value\n   */\n  defaultScheduleRepeat: () => ScheduleRepeatValue,\n\n  /**\n   * @name Hooks#processPrivileges\n   * @description\n   * Allows to modify any property of the configured privileges\n   * @type {Function}\n   *\n   * @param {PrivilegesConfiguration} privileges Base collection of privileges\n   *\n   * @returns {Privilege[]} Processed collection of privileges\n   *\n   * @example\n   * // Privilege collection\n   * [\n   *  {\n   *     resource: 'Payments',\n   *     function: 'US Foreign Wire',\n   *     privileges: ['create', 'approve'],\n   *   },\n   * ]\n   */\n  processPrivileges: (privileges) => {\n    const { configuration, constants } = privileges;\n    return angular.copy(configuration).map((privilege) => {\n      if (privilege.resource === constants.resource.PAYMENTS) {\n        Object.assign(privilege, { function: constants.function.US_FOREIGN_WIRE });\n      }\n      return privilege;\n    });\n  },\n\n  /**\n   * @name Hooks#defaultCountry\n   * @type {Function}\n   *\n   * @description\n   * Set beneficiary postal address country by default\n   *\n   * @returns {String} Returns the country code, which should either be the empty string or\n   *                   an uppercase ISO 3166 2-letter code\n   */\n  defaultCountry: () => '',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-international-wire-ng/scripts/hooks.js","module.exports = __WEBPACK_EXTERNAL_MODULE_104__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-scheduling-ng\"\n// module id = 104\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_105__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-tooltip\"\n// module id = 105\n// module chunks = 10"],"sourceRoot":""}