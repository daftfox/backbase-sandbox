{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap 1105374c68bcf2052e41?9125","webpack:///./model-bb-audit-query-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114","webpack:///./model-bb-audit-query-ng/scripts/index.js","webpack:///external \"data-bb-audit-http-ng\"","webpack:///external \"data-bb-legalentity-http-ng\"","webpack:///external \"data-bb-accessgroups-http-ng\"","webpack:///./model-bb-audit-query-ng/scripts/audit-query.js","webpack:///external \"lib-bb-model-errors\"","webpack:///./model-bb-audit-query-ng/scripts/legal-entities.js","webpack:///./model-bb-audit-query-ng/scripts/access-groups.js"],"names":["moduleKey","legalEntitiesModuleKey","accessGroupsModuleKey","modelAuditQueryKey","modelLegalEntitiesKey","modelAccessGroupsKey","angular","module","auditDataModuleKey","legalEntityDataModuleKey","accessGroupsDataModuleKey","factory","legalEntityDataKey","LegalEntitiesModel","accessGroupsDataKey","AccessGroupsModel","auditDataKey","Model","name","AuditQueryModel","knownParms","Promise","auditQueryData","mapParameters","parms","mapVal","val","Array","isArray","join","parmsWithValue","Object","entries","filter","key","includes","length","reduce","acc","assign","getAuditLogMessages","params","headerParams","mappedParameters","then","headers","data","catch","error","getAuditLogEventCategories","legalEntityQueryData","searchLegalEntities","query","getLegalentitiesSubEntities","accessGroupQueryData","searchServiceAgreements","getAccessgroupsUsercontextServiceagreements"],"mappings":"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","file":"model-bb-audit-query-ng/scripts/model-bb-audit-query-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"data-bb-audit-http-ng\"), require(\"data-bb-legalentity-http-ng\"), require(\"data-bb-accessgroups-http-ng\"), require(\"lib-bb-model-errors\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"model-bb-audit-query-ng\", [\"vendor-bb-angular\", \"data-bb-audit-http-ng\", \"data-bb-legalentity-http-ng\", \"data-bb-accessgroups-http-ng\", \"lib-bb-model-errors\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"model-bb-audit-query-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"data-bb-audit-http-ng\"), require(\"data-bb-legalentity-http-ng\"), require(\"data-bb-accessgroups-http-ng\"), require(\"lib-bb-model-errors\"));\n\telse\n\t\troot[\"model-bb-audit-query-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"data-bb-audit-http-ng\"], root[\"data-bb-legalentity-http-ng\"], root[\"data-bb-accessgroups-http-ng\"], root[\"lib-bb-model-errors\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_22__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1105374c68bcf2052e41","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./model-bb-audit-query-ng/model.xml\n// module id = 0\n// module chunks = 1","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 5\n// module chunks = 0 1 2","/**\n * @module model-bb-audit-query-ng\n *\n * @description\n * Model for widget-bb-audit-query-ng\n *\n * @example\n * import modelAuditQueryModuleKey, { modelAuditQueryKey } from 'model-bb-audit-query-ng';\n *\n * angular\n *   .module('ExampleModule', [\n *     modelAuditQueryModuleKey,\n *   ])\n *   .factory('someFactory', [\n *     modelAuditQueryKey,\n *     // into\n *     function someFactory(auditQueryModel) {\n *       // ...\n *     },\n *   ]);\n */\nimport angular from 'vendor-bb-angular';\n\nimport auditDataModuleKey, { auditDataKey } from 'data-bb-audit-http-ng';\nimport legalEntityDataModuleKey, { legalEntityDataKey } from 'data-bb-legalentity-http-ng';\nimport accessGroupsDataModuleKey, { accessGroupsDataKey } from 'data-bb-accessgroups-http-ng';\n\nimport Model from './audit-query';\nimport LegalEntitiesModel from './legal-entities';\nimport AccessGroupsModel from './access-groups';\n\nconst moduleKey = 'model-bb-audit-query-ng';\nconst legalEntitiesModuleKey = 'model-bb-legal-entities-ng';\nconst accessGroupsModuleKey = 'model-bb-access-groups-ng';\nexport const modelAuditQueryKey = `${moduleKey}:model`;\nexport const modelLegalEntitiesKey = `${legalEntitiesModuleKey}:model`;\nexport const modelAccessGroupsKey = `${accessGroupsModuleKey}:model`;\n\nexport default angular\n  .module(moduleKey, [\n    auditDataModuleKey,\n    legalEntityDataModuleKey,\n    accessGroupsDataModuleKey,\n  ])\n\n  .factory(modelLegalEntitiesKey, [\n    '$q',\n    legalEntityDataKey,\n    /* into */\n    LegalEntitiesModel,\n  ])\n\n  .factory(modelAccessGroupsKey, [\n    '$q',\n    accessGroupsDataKey,\n    /* into */\n    AccessGroupsModel,\n  ])\n\n  .factory(modelAuditQueryKey, [\n    '$q',\n    auditDataKey,\n    legalEntityDataKey,\n    /* into */\n    Model,\n  ])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-audit-query-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-audit-http-ng\"\n// module id = 18\n// module chunks = 1","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-legalentity-http-ng\"\n// module id = 19\n// module chunks = 1","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-accessgroups-http-ng\"\n// module id = 20\n// module chunks = 1","import { fromHttpError } from 'lib-bb-model-errors';\n\nconst knownParms = [\n  'startDate',\n  'endDate',\n  'eventCategories',\n  'objectType',\n  'eventAction',\n  'usernames',\n  'userId',\n  'legalEntityIds',\n  'serviceAgreementId',\n  'from',\n  'size',\n];\n\n/**\n * @typedef {Object} QueryParameters\n * @property {?string} startDate - in format YYYY-MM-DD\n * @property {?string} endDate - in format YYYY-MM-DD\n * @property {?string[]} eventCategories - to filter by\n * @property {?string} objectType - to filter by\n * @property {?string} eventAction - to filter by\n * @property {?string[]} usernames - to filter by\n * @property {?string} userId - to filter by\n * @property {?string[]} legalEntityIds - to filter by\n * @property {?string} serviceAgreementId - to filter by\n */\n\n/**\n * @typedef {Object} MappedQueryParameters\n * @property {?string} startDate - in format YYYY-MM-DD\n * @property {?string} endDate - in format YYYY-MM-DD\n * @property {?string} eventCategories - comma separated list to filter by\n * @property {?string} objectType - to filter by\n * @property {?string} eventAction - to filter by\n * @property {?string} usernames - comma separated list to filter by\n * @property {?string} userId - to filter by\n * @property {?string} legalEntityIds - comma separated list to filter by\n * @property {?string} serviceAgreementId - to filter by\n */\n\n/**\n *\n * @name AuditQueryModel\n * @type {function}\n * @param {Object} Promise An ES2015 compatible `Promise` object.\n * @param {module:data-bb-audit-query-http-ng.AuditQueryData} auditQueryData\n * @return {Object}\n *\n * @description Model factory for model-bb-audit-query-ng\n */\nexport default function AuditQueryModel(Promise, auditQueryData) {\n  /**\n   * @name AuditQueryModel#mapParameters\n   * @inner\n   * @param {QueryParameters} parms - raw parameters.\n   * @type {function}\n   * @returns {MappedQueryParameters}\n   *\n   * @description Map known parameters through to the data api.\n   * Converting any string arrays to comma separated strings.\n   */\n  const mapParameters = (parms) => {\n    // traditional function rather than arrow function to avoid es-lint no-confusing-arrow\n    function mapVal(val) {\n      return Array.isArray(val) ? val.join(',') : val;\n    }\n    const parmsWithValue = Object.entries(parms).\n      filter(([key, val]) => knownParms.includes(key) && (Array.isArray(val) ? val.length : val));\n    return parmsWithValue.\n      reduce((acc, [key, val]) => Object.assign(acc, { [key]: mapVal(val) }), {});\n  };\n\n  /**\n   * @name AuditQueryModel#getAuditLogMessages\n   * @param {QueryParameters} parms - raw parameters.\n   * @type {function}\n   * @returns {Promise<AuditResponse, ModelError>}\n   *\n   * @description Get the response of a list of audit query messages and the header information\n   */\n  const getAuditLogMessages = (params, headerParams) => {\n    const mappedParameters = mapParameters(params);\n    return auditQueryData.getAuditLogMessages(mappedParameters, headerParams)\n      .then(({ headers, data }) => ({ headers, data }))\n      .catch(error => {\n        throw fromHttpError(error);\n      });\n  };\n\n  /**\n   * @name AuditQueryModel#getAuditLogEventCategories\n   * @type {function}\n   * @returns {Promise<AuditEventCategoryResponse, ModelError>}\n   *\n   * @description Get the response of a list of event Categories\n   *   with nested types and statuses\n   */\n  const getAuditLogEventCategories = () =>\n    auditQueryData.getAuditLogEventCategories()\n      .then((data) => (data))\n      .catch(error => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   * @name AuditQueryModel\n   * @type {Object}\n   *\n   * @description Audit Query model service\n   */\n  return {\n    getAuditLogMessages,\n    getAuditLogEventCategories,\n  };\n}\n\n/**\n * Audit Response type definition - header total count and data\n * @typedef {Object} AuditResponse\n * @property {number} totalCount\n * @property {Array<module:data-bb-audit-query-http-ng.AuditMessage>} auditMessages\n */\n\n/**\n * Event Data type definition\n * @typedef {Object} EventData\n * @property {string} key - key\n * @property {string} value - value\n */\n\n/**\n * Audit Response type definition - header total count and data\n * @typedef {Object} AuditEventCategoryResponse\n * @property {Array<EventCategory>} eventCategories\n */\n\n/**\n * Audit event category type definition\n * @typedef {Object} EventCategory\n * @property {string} eventCategory - name of the event category\n * @property {Array<EventCategoryObjectType>} objectTypes - object types\n */\n\n/**\n * Audit event category type definition\n * @typedef {Object} EventCategoryObjectType\n * @property {string} objectType - name of object type\n * @property {Array<String>} eventActions - event actions\n */\n\n/**\n * Audit Log type definition\n * @typedef {Object} AuditMessage\n * @property {string} messageSetId       - id of the message set\n * @property {string} eventCategory      - event category\n * @property {string} objectType         - object type\n * @property {string} eventAction        - event action\n * @property {string} username           - user name\n * @property {string} userId             - user id\n * @property {string} timestamp          - time stamp\n * @property {string} eventDescription   - event description\n * @property {string} legalEntityId      - legal entity id\n * @property {string} serviceAgreementId - service agreement id\n * @property {EventData[]} eventData     - event data collection\n */\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-audit-query-ng/scripts/audit-query.js","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 22\n// module chunks = 1 2","import { fromHttpError } from 'lib-bb-model-errors';\n\n/**\n *\n * @name LegalEntitiesModel\n * @type {function}\n * @param {Object} Promise An ES2015 compatible `Promise` object.\n * @param {module:data-bb-legal-entity-http-ng.LegalEntityQueryData} legalEntityQueryData\n * @return {Object}\n *\n * @description Model factory for model-bb-audit-query-ng\n */\nexport default function LegalEntitiesModel(Promise, legalEntityQueryData) {\n  /**\n   * @name LegalEntitiesModel#searchLegalEntities\n   * @param {string} query\n   * @type {function}\n   * @returns {Promise<Object, ModelError>}\n   *\n   * @description Get a list of legal entities based on query param\n   */\n  const searchLegalEntities = (query) =>\n    legalEntityQueryData.getLegalentitiesSubEntities({ query })\n      .then(data => data)\n      .catch(error => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   * @name LegalEntitiesModel\n   * @type {Object}\n   *\n   * @description Legal Entities model service\n   */\n  return {\n    searchLegalEntities,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-audit-query-ng/scripts/legal-entities.js","import { fromHttpError } from 'lib-bb-model-errors';\n\n/**\n *\n * @name AccessGroupsModel\n * @type {function}\n * @param {Object} Promise An ES2015 compatible `Promise` object.\n * @param {module:data-bb-legal-entity-http-ng.AccessGroupQueryData} AccessGroupQueryData\n * @return {Object}\n *\n * @description Model factory for model-bb-audit-query-ng\n */\nexport default function AccessGroupsModel(Promise, accessGroupQueryData) {\n  /**\n   * @name AccessGroupsModel#searchServiceAgreements\n   * @param {string} query\n   * @type {function}\n   * @returns {Promise<Object, ModelError>}\n   *\n   * @description Get a list of service agreements based on query param\n   */\n  const searchServiceAgreements = (query) =>\n    accessGroupQueryData.getAccessgroupsUsercontextServiceagreements({ query })\n      .then(data => data)\n      .catch(error => {\n        throw fromHttpError(error);\n      });\n\n  /**\n   * @name AccessGroupsModel\n   * @type {Object}\n   *\n   * @description Access Groups model service\n   */\n  return {\n    searchServiceAgreements,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-audit-query-ng/scripts/access-groups.js"],"sourceRoot":""}