{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6****","webpack:///webpack/bootstrap 50256e16f76c6c9e44d8?45a5****","webpack:///./lib-fx-trading-view-model-helper/model.xml","webpack:///./lib-fx-trading-view-model-helper/scripts/index.js"],"names":["isObject","obj","isArray","arr","Array","isDate","date","Date","mergeStatesFields","initialState","stateChunk","key","mergeStatesFn","mergeStates","currentState","keysSet","Set","Object","keys","concat","reduce","newState","wrapAction","stateContainer","action","createAction","state","args","wrapActions","viewModel","vm","assign"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;;;;;;;;;;;;;ACAA,KAAMA,WAAW,SAAXA,QAAW,CAACC,GAAD;AAAA,UAAS,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAf,IAA2BA,QAAQ,IAA5C;AAAA,EAAjB;AACA,KAAMC,UAAU,SAAVA,OAAU,CAACC,GAAD;AAAA,UAASC,MAAMF,OAAN,CAAcC,GAAd,CAAT;AAAA,EAAhB;AACA,KAAME,SAAS,SAATA,MAAS,CAACC,IAAD;AAAA,UAAUA,gBAAgBC,IAA1B;AAAA,EAAf;;AAEA;;;;;;;;;;;AAWA,KAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,YAAD,EAAeC,UAAf,EAA2BC,GAA3B,EAAgCC,aAAhC,EAAkD;AAC1E,OAAI,EAAED,OAAOD,UAAT,CAAJ,EAA0B;AACxB,YAAOD,aAAaE,GAAb,CAAP;AACD,IAFD,MAEO,IACLX,SAASU,WAAWC,GAAX,CAAT,KAA6BX,SAASS,aAAaE,GAAb,CAAT,CAA7B,IACG,CAACT,QAAQQ,WAAWC,GAAX,CAAR,CADJ,IACgC,CAACT,QAAQO,aAAaE,GAAb,CAAR,CADjC,IAEG,CAACN,OAAOK,WAAWC,GAAX,CAAP,CAFJ,IAE+B,CAACN,OAAOI,aAAaE,GAAb,CAAP,CAH3B,EAIL;AACA,YAAOC,cAAcH,aAAaE,GAAb,CAAd,EAAiCD,WAAWC,GAAX,CAAjC,CAAP;AACD;AACD,UAAOD,WAAWC,GAAX,CAAP;AACD,EAXD;;AAaA;;;;;;;;;;;AAWO,KAAME,oCAAc,SAAdA,WAAc,CAACC,YAAD,EAAeJ,UAAf,EAA8B;AACvD,OAAI,CAACI,YAAL,EAAmB;AACjB,YAAOJ,UAAP;AACD;;AAED,OAAMK,UAAU,IAAIC,GAAJ,CAAQC,OAAOC,IAAP,CAAYJ,YAAZ,EAA0BK,MAA1B,CAAiCF,OAAOC,IAAP,CAAYR,UAAZ,CAAjC,CAAR,CAAhB;;AAEA,UAAO,6BAAIK,OAAJ,GAAaK,MAAb,CAAoB,UAACC,QAAD,EAAWV,GAAX;AAAA,8BACtBU,QADsB,sBAExBV,GAFwB,EAElBH,kBAAkBM,YAAlB,EAAgCJ,UAAhC,EAA4CC,GAA5C,EAAiDE,WAAjD,CAFkB;AAAA,IAApB,EAGH,EAHG,CAAP;AAID,EAXM;;AAaP;;;;;;;;;;;;;;AAcO,KAAMS,kCAAa,SAAbA,UAAa,CAACC,cAAD,EAAiBC,MAAjB;AAAA,UACxBD,eAAeE,YAAf,CAA4B,UAACC,KAAD;AAAA,uCAAWC,IAAX;AAAWA,WAAX;AAAA;;AAAA,YAC1Bd,YAAYa,KAAZ,EAAmBF,yBAAOE,KAAP,SAAiBC,IAAjB,EAAnB,CAD0B;AAAA,IAA5B,CADwB;AAAA,EAAnB;;AAOP;;;;;;;;;;;;;AAaO,KAAMC,oCAAc,SAAdA,WAAc,CAACL,cAAD,EAAiBM,SAAjB;AAAA,UACzBZ,OAAOC,IAAP,CAAYW,SAAZ,EACGT,MADH,CAEI,UAACU,EAAD,EAAKnB,GAAL;AAAA,YAAaM,OAAOc,MAAP,CAAcD,EAAd,sBACVnB,GADU,EACJW,WAAWC,cAAX,EAA2BM,UAAUlB,GAAV,CAA3B,CADI,EAAb;AAAA,IAFJ,EAKI,EALJ,CADyB;AAAA,EAApB,C","file":"lib-fx-trading-view-model-helper/scripts/lib-fx-trading-view-model-helper.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-fx-trading-view-model-helper\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-fx-trading-view-model-helper\"] = factory();\n\telse\n\t\troot[\"lib-fx-trading-view-model-helper\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50256e16f76c6c9e44d8","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-fx-trading-view-model-helper/model.xml\n// module id = 0\n// module chunks = 4","const isObject = (obj) => typeof obj === 'object' && obj !== null;\nconst isArray = (arr) => Array.isArray(arr);\nconst isDate = (date) => date instanceof Date;\n\n/**\n * @name mergeStatesFields\n * @description Decides how initial state field and new state field should be merged\n *\n * @private\n * @type {function}\n * @param {object | number | string} initialStateField\n * @param {object | number | string} stateChunkField\n * @param {function} mergeStatesFn\n * @return {object}\n */\nconst mergeStatesFields = (initialState, stateChunk, key, mergeStatesFn) => {\n  if (!(key in stateChunk)) {\n    return initialState[key];\n  } else if (\n    isObject(stateChunk[key]) && isObject(initialState[key])\n    && !isArray(stateChunk[key]) && !isArray(initialState[key])\n    && !isDate(stateChunk[key]) && !isDate(initialState[key])\n  ) {\n    return mergeStatesFn(initialState[key], stateChunk[key]);\n  }\n  return stateChunk[key];\n};\n\n/**\n * @name mergeStates\n * @description Merges state chunk into current state returning\n *              new object (does not modify passed state)\n *\n * @public\n * @type {function}\n * @param {object} currentState\n * @param {object} stateChunk\n * @return {object}\n */\nexport const mergeStates = (currentState, stateChunk) => {\n  if (!currentState) {\n    return stateChunk;\n  }\n\n  const keysSet = new Set(Object.keys(currentState).concat(Object.keys(stateChunk)));\n\n  return [...keysSet].reduce((newState, key) => ({\n    ...newState,\n    [key]: mergeStatesFields(currentState, stateChunk, key, mergeStates),\n  }), {});\n};\n\n/**\n * @name wrapActions\n * @description Wraps action into stateContainer`s createAction\n *              and merges result of action with current state.\n *              Does not modify current state, but returns new object.\n *              Allows to simplify store reducers, taking care\n *              about merging new and previous states.\n *\n * @public\n * @type {function}\n * @param {StateContainer} stateContainer State container\n * @param {object} action action to wrap\n * @return {object} action wrapped with stateContainer`s createAction\n */\nexport const wrapAction = (stateContainer, action) => (\n  stateContainer.createAction((state, ...args) => (\n    mergeStates(state, action(state, ...args))\n  ))\n);\n\n\n/**\n * @name wrapActions\n * @description Loops through methods on view model and wrap them\n *              into stateContainer`s createAction and merges their result into new state.\n *              Allows to simplify store reducers, taking care\n *              about merging new and previous states.\n *\n * @public\n * @type {function}\n * @param {StateContainer} stateContainer State container\n * @param {object} viewModel Object containing store reducers to wrap\n * @return {object} viewModel with methods wrapped with stateContainer`s createAction\n */\nexport const wrapActions = (stateContainer, viewModel) => (\n  Object.keys(viewModel)\n    .reduce(\n      (vm, key) => Object.assign(vm, {\n        [key]: wrapAction(stateContainer, viewModel[key]),\n      }),\n      {}\n    )\n);\n\n\n\n// WEBPACK FOOTER //\n// ./lib-fx-trading-view-model-helper/scripts/index.js"],"sourceRoot":""}