{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*******","webpack:///webpack/bootstrap d0309a746b17cd403690?c295*******","webpack:///./ext-wm-portfolio-summary-dashboard-ng/model.xml","webpack:///external \"ui-bb-loading-indicator-ng\"","webpack:///external \"ui-bb-i18n-ng\"","webpack:///external \"ui-bb-empty-state-ng\"","webpack:///external \"ui-bb-format-amount-ng\"?8f72******","webpack:///external \"lib-bb-model-errors\"?7567*******","webpack:///external \"lib-wm-colorset\"?5f86***","webpack:///external \"ui-bb-chartjs-chart-donut-ng\"?010b","webpack:///external \"vendor-bb-angular-ng-aria\"?9d0e****","webpack:///./ext-wm-portfolio-summary-dashboard-ng/scripts/index.js","webpack:///external \"ui-bb-ellipsis-tooltip-ng\"","webpack:///external \"vendor-bb-uib-tooltip\"","webpack:///external \"vendor-bb-uib-popover\"","webpack:///external \"vendor-bb-angular-ui-tree\"","webpack:///external \"ui-bb-notification-stripe-ng\"","webpack:///external \"ui-bb-focus-ng\"","webpack:///./ext-wm-portfolio-summary-dashboard-ng/scripts/helpers.js"],"names":["extHooks","hooks","helpers","extHelpers","dependencyKeys","angularUiTreeKey","uiBbFormatAmountKey","ngAriaModuleKey","uiBbEllipsisTooltipKey","uiBbChartjsChartDonutKey","uibPopoverKey","uiBbTooltipKey","uiBbLoadingIndicatorKey","i18nKey","uiBbEmptyStateKey","uiBbNotifacationStripeKey","uiBbFocusKey","errors","E_AUTH","message","title","icon","E_CONNECTIVITY","E_USER","E_UNEXPECTED","$filter","stateContainer","numberFilter","i18nFilter","PRECISION","DISMISS_MESSAGE_TIME","notifications","data","dismissMessageTime","status","isOpen","success","showNotification","i18nKeyName","i18n","notificationError","getNotifications","closeNotification","getNetCashTotalAmount","inCashTotalAmount","outCashTotalAmount","decimalCount","number","NO_DECIMAL_NUMBERS","match","toString","length","localizeNumber","showSign","absNumber","Math","abs","toFixed","sign","localizedNumber","chartOptions","tooltips","enabled","hover","mode","cutoutPercentage","changeTooltipStyle","tooltip","document","querySelector","Object","assign","style","plugins","afterInit","chartInstance","setTimeout","update","isPortfoliosAvailable","createSelector","state","portfolios","order","getLegendRowClass","classPrefix","$index","map","portfolio","list","iban","backgroundColor","assetClasses","_","index","a","valuePct","filter","dataseries","labels","name","datasets","showChangeNameInput","portfolioSelected","item","IBAN","showInput","changeAlias","$ctrl","getState","selectedPortfolio","alias","updatePortfolio","catch","id","getError","code","mapOfOpenItems","Map","isFirstPortfolioOpen","portfolioIndex","Array","from","values","some","v","get","set","onToggle","getDragAndDropOptions","dropped","saveOrder","getColorClassByIndex","getColorByIndex"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,0C;;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;;ACAA,gD;;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;;;ACAA,iD;;;;;;;;;;;ACAA,iD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;KAAYA,Q;;;;;;AAEZ;;;;;;;AAjCA;;;;;;;;;;;;;;;;;AAwCO,KAAMC,wBAAQD,QAAd;AACA,KAAME,4BAAUC,iBAAhB;;AAEA,KAAMC,0CAAiB,CAC5BC,+BAD4B,EAE5BC,4BAF4B,EAG5BC,+BAH4B,EAI5BC,+BAJ4B,EAK5BC,iCAL4B,EAM5BC,4BAN4B,EAO5BC,4BAP4B,EAQ5BC,gCAR4B,EAS5BC,oBAT4B,EAU5BC,0BAV4B,EAW5BC,kCAX4B,EAY5BC,qBAZ4B,CAAvB;;AAeP;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;AAOA;;;;;;;AAOA;;;;;;AAMA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;;;AC1HA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;;;;;;;;;ACEA;;AACA;;mNAHA;AACA;;;AAOA;;;;;;;AAOA;;;;;;;;AAQA,KAAMC,iDACHC,wBADG,EACM;AACRC,YAAS,0BADD;AAERC,UAAO,wBAFC;AAGRC,SAAM;AAHE,EADN,4BAMHC,gCANG,EAMc;AAChBH,YAAS,kCADO;AAEhBC,UAAO,gCAFS;AAGhBC,SAAM;AAHU,EANd,4BAWHE,wBAXG,EAWM;AACRJ,YAAS,0BADD;AAERC,UAAO,wBAFC;AAGRC,SAAM;AAHE,EAXN,4BAgBHG,8BAhBG,EAgBY;AACdL,YAAS,gCADK;AAEdC,UAAO,8BAFO;AAGdC,SAAM;AAHQ,EAhBZ,WAAN;;mBAuBe,gBAAiC;AAAA,OAA9BI,OAA8B,QAA9BA,OAA8B;AAAA,OAArBC,cAAqB,QAArBA,cAAqB;;AAC9C,OAAMC,eAAeF,QAAQ,QAAR,CAArB;AACA,OAAMG,aAAaH,QAAQ,MAAR,CAAnB;;AAEA;;;;;;;AAOA,OAAMI,YAAY,CAAlB;;AAEA;;;;;;;;AAQA,OAAMC,uBAAuB,CAA7B;;AAEA;;;;;;;AAOA,OAAMC,gBAAgB;AACpBC,WAAM,IADc;AAEpBC,yBAAoBH,oBAFA;AAGpBI,aAAQ;AACNC,eAAQ,KADF;AAENC,gBAAS,KAFH;AAGNvB,gBAAS;AAHH;AAHY,IAAtB;;AAUA;;;;;;;;;;AAUA,OAAMwB,mBAAmB,SAAnBA,gBAAmB,CAACC,WAAD,EAAcN,IAAd,EAAuB;AAC9CD,mBAAcG,MAAd,CAAqBC,MAArB,GAA8B,IAA9B;AACAJ,mBAAcG,MAAd,CAAqBE,OAArB,GAA+B,KAA/B;AACAL,mBAAcG,MAAd,CAAqBK,IAArB,GAA4BX,WAC1BU,WAD0B,EAE1BN,IAF0B,CAA5B;AAID,IAPD;;AASA;;;;;;;;;;AAUA,OAAMQ,oBAAoB,SAApBA,iBAAoB,CAACF,WAAD,EAAcN,IAAd,EAAuB;AAC/CD,mBAAcG,MAAd,CAAqBC,MAArB,GAA8B,IAA9B;AACAJ,mBAAcG,MAAd,CAAqBE,OAArB,GAA+B,KAA/B;AACAL,mBAAcG,MAAd,CAAqBK,IAArB,GAA4BX,WAC1BU,WAD0B,EAE1BN,IAF0B,CAA5B;AAID,IAPD;;AASA;;;;;;;;;;;AAWA,OAAMS,mBAAmB,SAAnBA,gBAAmB;AAAA,YAAMV,aAAN;AAAA,IAAzB;;AAEA;;;;;;;;;;AAUA,OAAMW,oBAAoB,SAApBA,iBAAoB,GAAM;AAC9BX,mBAAcG,MAAd,CAAqBC,MAArB,GAA8B,KAA9B;AACAJ,mBAAcG,MAAd,CAAqBE,OAArB,GAA+B,KAA/B;AACD,IAHD;;AAKA;;;;;;;;;;;;AAYA,OAAMO,wBAAwB,SAAxBA,qBAAwB,CAACC,iBAAD,EAAoBC,kBAApB;AAAA,YAC5BD,oBAAoBC,kBADQ;AAAA,IAA9B;;AAIA;;;;;;;;;;;AAWA,OAAMC,eAAe,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/B,SAAMC,qBAAqB,CAA3B;AACA,SAAMC,QAASF,OAAOG,QAAP,EAAD,CAAoBD,KAApB,CAA0B,SAA1B,CAAd;;AAEA,SAAIA,KAAJ,EAAW;AACT,cAAOA,MAAM,CAAN,IAAWA,MAAM,CAAN,EAASE,MAApB,GAA6BH,kBAApC;AACD;;AAED,YAAOA,kBAAP;AACD,IATD;;AAYA;;;;;;;;;;;AAWA,OAAMI,iBAAiB,SAAjBA,cAAiB,CAACL,MAAD;AAAA,YAAYpB,aAAaoB,MAAb,EAAqBD,aAAaC,MAAb,CAArB,CAAZ;AAAA,IAAvB;;AAEA;;;;;;;;;;;AAWA,OAAMM,WAAW,SAAXA,QAAW,SAAU;AACzB,SAAMC,YAAYC,KAAKC,GAAL,CAAST,MAAT,EAAiBU,OAAjB,CAAyB5B,SAAzB,CAAlB;AACA,SAAM6B,OAAOX,SAAS,CAAT,GAAa,GAAb,GAAmB,GAAhC;AACA,SAAMY,kBAAkBhC,aAAa2B,SAAb,EAAwBzB,SAAxB,CAAxB;AACA,YAAU6B,IAAV,SAAkBC,eAAlB;AACD,IALD;;AAOA;;;;;;;AAOA,OAAMC,eAAe;AACnBC,eAAU;AACRC,gBAAS;AADD,MADS;AAInBC,YAAO;AACLC,aAAM;AADD,MAJY;AAOnBC,uBAAkB;AAPC,IAArB;;AAWA,OAAMC,qBAAqB,SAArBA,kBAAqB,GAAM;AAC/B,SAAMC,UAAUC,SAASC,aAAT,CAAuB,UAAvB,CAAhB;AACA,SAAIF,OAAJ,EAAa;AACXG,cAAOC,MAAP,CAAcJ,QAAQK,KAAtB,EAA6B,EAAE,kBAAkB,MAApB,EAA7B;AACD;AACF,IALD;;AAQA;;;;;;;AAOA,OAAMC,UAAU,CAAC;AACfC,gBAAW,mBAACC,aAAD,EAAmB;AAC5BC,kBAAW;AAAA,gBAAMD,cAAcE,MAAd,EAAN;AAAA,QAAX,EAAyC,GAAzC;AACD;AAHc,IAAD,CAAhB;;AAOA;;;;;;;;;AASA,OAAMC,wBAAwBpD,eAAeqD,cAAf,CAC5B;AAAA,YAASC,MAAMC,UAAN,CAAiBC,KAAjB,CAAuB/B,MAAhC;AAAA,IAD4B,CAA9B;;AAIA;;;;;;;;;AASA,OAAMgC,oBAAoB,SAApBA,iBAAoB,SAAU;AAClC,SAAMC,cAAc,iCAApB;AACA,YAAOC,SAAS,CAAT,QAAgBD,WAAhB,GAA8BC,MAA9B,GAA4CD,WAA5C,MAAP;AACD,IAHD;;AAKA;;;;;;;;;;AAUA,OAAMH,aAAavD,eAAeqD,cAAf,CAA8B;AAAA,YAC/CC,MAAMC,UAAN,CAAiBC,KAAjB,CAAuBI,GAAvB,CAA2B,gBAAQ;AACjC,WAAMC,YAAYP,MAAMC,UAAN,CAAiBO,IAAjB,CAAsBC,IAAtB,CAAlB;AACA,WAAMC,kBAAkBH,UAAUI,YAAV,CACrBL,GADqB,CACjB,UAACM,CAAD,EAAIC,KAAJ;AAAA,gBAAc,oCAAgBA,KAAhB,CAAd;AAAA,QADiB,CAAxB;AAEA,WAAM7D,OAAOuD,UAAUI,YAAV,CACVL,GADU,CACN;AAAA,gBAAKQ,EAAEC,QAAP;AAAA,QADM,EAEVC,MAFU,CAEH;AAAA,gBAAKF,IAAI,CAAT;AAAA,QAFG,CAAb;AAGA,gCACKP,SADL;AAEEU,qBAAY;AACVC,mBAAQX,UAAUI,YAAV,CAAuBL,GAAvB,CAA2B;AAAA,oBAAKQ,EAAEK,IAAP;AAAA,YAA3B,CADE;AAEVC,qBAAU,CAAC;AACTpE,uBADS;AAET0D;AAFS,YAAD;AAFA;AAFd;AAUD,MAjBD,CAD+C;AAAA,IAA9B,CAAnB;;AAqBA;;;;;;;;;;;AAWA,OAAMW,sBAAsB,SAAtBA,mBAAsB,CAACC,iBAAD,EAAoBC,IAApB;AAAA,YAC1BD,kBAAkBE,IAAlB,KAA2BD,KAAKC,IAAhC,IAAwCF,kBAAkBG,SADhC;AAAA,IAA5B;;AAGA;;;;;;;;;AASA,OAAMC,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAQJ,IAAR,EAAiB;AACnC,SAAMvB,QAAQtD,eAAekF,QAAf,EAAd;AACA,SAAMC,oBAAoB7B,MAAMC,UAAN,CAAiBO,IAAjB,CAAsBe,KAAKC,IAA3B,CAA1B;AACA,SAAIK,kBAAkBC,KAAlB,KAA4BP,KAAKO,KAArC,EAA4C;AAC1CH,aAAMI,eAAN,CAAsBR,IAAtB,EACGS,KADH,CACS,YAAM;AACX1C,gBAAOC,MAAP,CAAcgC,IAAd,EAAoB,EAAEO,OAAOD,kBAAkBC,KAA3B,EAApB;AACA,gBAAOtE,kBAAkB,sBAAlB,EAA0C,EAA1C,CAAP;AACD,QAJH;AAKD;AACDwC,WAAMC,UAAN,CAAiBqB,iBAAjB,GAAqC,EAAEW,IAAI,IAAN,EAAYR,WAAW,KAAvB,EAArC;AACD,IAXD;;AAaA;;;;;;;;AAQA,OAAMA,YAAY,SAAZA,SAAY,CAACF,IAAD,EAAU;AAC1B,SAAMvB,QAAQtD,eAAekF,QAAf,EAAd;AACA5B,WAAMC,UAAN,CAAiBqB,iBAAjB,GAAqCC,IAArC;AACAvB,WAAMC,UAAN,CAAiBqB,iBAAjB,CAAmCG,SAAnC,GAA+C,IAA/C;AACD,IAJD;;AAMA;;;;;;;;AAQA,OAAMS,WAAW,SAAXA,QAAW,CAACC,IAAD;AAAA,YAAUlG,OAAOkG,IAAP,CAAV;AAAA,IAAjB;;AAEA;;;;;;;;AAQA,OAAMC,iBAAiB,IAAIC,GAAJ,EAAvB;;AAEA;;;;;;;;;;AAUA,OAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,cAAD,EAAiBN,EAAjB;AAAA,YAC3BM,mBAAmB,CAAnB,IACG,CAACC,MAAMC,IAAN,CAAWL,eAAeM,MAAf,EAAX,EAAoCC,IAApC,CAAyC;AAAA,cAAK,OAAOC,CAAP,KAAa,WAAlB;AAAA,MAAzC,CADJ,IAEG,OAAOR,eAAeS,GAAf,CAAmBZ,EAAnB,CAAP,KAAkC,WAFrC,IAGG,CAAC,CAACG,eAAeU,GAAf,CAAmBb,EAAnB,EAAuB,IAAvB,CAJsB;AAAA,IAA7B;;AAMA;;;;;;;;;AASA,OAAM9E,SAAS,SAATA,MAAS,CAAC8E,EAAD,EAAKpB,KAAL;AAAA,YACbuB,eAAeS,GAAf,CAAmBZ,EAAnB,KAA0BK,qBAAqBzB,KAArB,EAA4BoB,EAA5B,CADb;AAAA,IAAf;;AAGA;;;;;;;;AAQA,OAAMc,WAAW,SAAXA,QAAW;AAAA,YAAMX,eAAeU,GAAf,CAAmBb,EAAnB,EAAuB,CAACG,eAAeS,GAAf,CAAmBZ,EAAnB,CAAxB,CAAN;AAAA,IAAjB;;AAEA;;;;;;;;;;AAUA,OAAMe,wBACJ,SADIA,qBACJ,CAACrB,KAAD;AAAA,YAAY;AACVsB,cADU,qBACA;AACRtB,eACGuB,SADH,CACajD,aAAaK,GAAb,CAAiB;AAAA,kBAAaC,UAAUiB,IAAvB;AAAA,UAAjB,CADb,EAEGQ,KAFH,CAES;AAAA,kBAAM3E,iBAAiB,gCAAjB,CAAN;AAAA,UAFT;AAGD;AALS,MAAZ;AAAA,IADF;;AASA,UAAO;AACL,SAAI4C,UAAJ,GAAiB;AACf,cAAOA,YAAP;AACD,MAHI;AAILlD,iCAJK;AAKLU,uCALK;AAML0F,8DANK;AAOLC,oDAPK;AAQL1F,yCARK;AASLC,iDATK;AAULU,uBAVK;AAWLO,+BAXK;AAYLkB,iDAZK;AAaL1B,mCAbK;AAcL+B,yCAdK;AAeLV,qBAfK;AAgBLyC,uBAhBK;AAiBL/E,mBAjBK;AAkBL4F,uBAlBK;AAmBLC,iDAnBK;AAoBL3B,6CApBK;AAqBLK,6BArBK;AAsBLxC,2CAtBK;AAuBLuC;AAvBK,IAAP;AAyBD,E","file":"ext-wm-portfolio-summary-dashboard-ng/scripts/ext-wm-portfolio-summary-dashboard-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-loading-indicator-ng\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-format-amount-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-wm-colorset\"), require(\"ui-bb-chartjs-chart-donut-ng\"), require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-ellipsis-tooltip-ng\"), require(\"vendor-bb-uib-tooltip\"), require(\"vendor-bb-uib-popover\"), require(\"vendor-bb-angular-ui-tree\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bb-focus-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-wm-portfolio-summary-dashboard-ng\", [\"ui-bb-loading-indicator-ng\", \"ui-bb-i18n-ng\", \"ui-bb-empty-state-ng\", \"ui-bb-format-amount-ng\", \"lib-bb-model-errors\", \"lib-wm-colorset\", \"ui-bb-chartjs-chart-donut-ng\", \"vendor-bb-angular-ng-aria\", \"ui-bb-ellipsis-tooltip-ng\", \"vendor-bb-uib-tooltip\", \"vendor-bb-uib-popover\", \"vendor-bb-angular-ui-tree\", \"ui-bb-notification-stripe-ng\", \"ui-bb-focus-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-wm-portfolio-summary-dashboard-ng\"] = factory(require(\"ui-bb-loading-indicator-ng\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-format-amount-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-wm-colorset\"), require(\"ui-bb-chartjs-chart-donut-ng\"), require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-ellipsis-tooltip-ng\"), require(\"vendor-bb-uib-tooltip\"), require(\"vendor-bb-uib-popover\"), require(\"vendor-bb-angular-ui-tree\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bb-focus-ng\"));\n\telse\n\t\troot[\"ext-wm-portfolio-summary-dashboard-ng\"] = factory(root[\"ui-bb-loading-indicator-ng\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-empty-state-ng\"], root[\"ui-bb-format-amount-ng\"], root[\"lib-bb-model-errors\"], root[\"lib-wm-colorset\"], root[\"ui-bb-chartjs-chart-donut-ng\"], root[\"vendor-bb-angular-ng-aria\"], root[\"ui-bb-ellipsis-tooltip-ng\"], root[\"vendor-bb-uib-tooltip\"], root[\"vendor-bb-uib-popover\"], root[\"vendor-bb-angular-ui-tree\"], root[\"ui-bb-notification-stripe-ng\"], root[\"ui-bb-focus-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_40__, __WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_43__, __WEBPACK_EXTERNAL_MODULE_44__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d0309a746b17cd403690","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-wm-portfolio-summary-dashboard-ng/model.xml\n// module id = 0\n// module chunks = 7","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-loading-indicator-ng\"\n// module id = 2\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 3\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-empty-state-ng\"\n// module id = 4\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-format-amount-ng\"\n// module id = 6\n// module chunks = 0 1 2 3 5 6 7 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 8\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 21","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-wm-colorset\"\n// module id = 9\n// module chunks = 0 1 2 3 7 8","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-chartjs-chart-donut-ng\"\n// module id = 12\n// module chunks = 1 7 8","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-aria\"\n// module id = 18\n// module chunks = 2 4 5 6 7 9 10 11 12 13 14","/**\n * @module ext-wm-portfolio-summary-dashboard-ng\n *\n * @description\n * Default extension for portfolio summary dashboard widget.\n *\n *\n * @requires vendor-bb-uib-popover\n * @example\n * <!-- portfolio widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *  <value type=\"string\">ext-wm-portfolio-summary-dashboard-ng</value>\n * </property>\n *\n *\n */\n\nimport uiBbFormatAmountKey from 'ui-bb-format-amount-ng';\nimport ngAriaModuleKey from 'vendor-bb-angular-ng-aria';\nimport uiBbEllipsisTooltipKey from 'ui-bb-ellipsis-tooltip-ng';\nimport uiBbChartjsChartDonutKey from 'ui-bb-chartjs-chart-donut-ng';\nimport uiBbTooltipKey from 'vendor-bb-uib-tooltip';\nimport uibPopoverKey from 'vendor-bb-uib-popover';\nimport angularUiTreeKey from 'vendor-bb-angular-ui-tree';\nimport uiBbLoadingIndicatorKey from 'ui-bb-loading-indicator-ng';\nimport i18nKey from 'ui-bb-i18n-ng';\nimport uiBbEmptyStateKey from 'ui-bb-empty-state-ng';\nimport uiBbNotifacationStripeKey from 'ui-bb-notification-stripe-ng';\nimport uiBbFocusKey from 'ui-bb-focus-ng';\n\nimport extHelpers from './helpers';\nimport * as extHooks from './hooks';\n\n/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-wm-portfolio-summary-ng\n */\nexport const hooks = extHooks;\nexport const helpers = extHelpers;\n\nexport const dependencyKeys = [\n  angularUiTreeKey,\n  uiBbFormatAmountKey,\n  ngAriaModuleKey,\n  uiBbEllipsisTooltipKey,\n  uiBbChartjsChartDonutKey,\n  uibPopoverKey,\n  uiBbTooltipKey,\n  uiBbLoadingIndicatorKey,\n  i18nKey,\n  uiBbEmptyStateKey,\n  uiBbNotifacationStripeKey,\n  uiBbFocusKey,\n];\n\n/**\n * Portfolio type definition\n * @typedef {Object} Portfolio\n * @property {string}               IBAN               - International Bank Account Number\n * @property {string}               clientName         - Client name\n * @property {string}               alias              - A portfolio name manually set by the client\n * @property {assetClass[]}         assetClasses       - Asset classes list for portfolio\n * @property {object}               valuation          - Total cost of all assets in the portfolio\n * @property {object}               inCashTotal        - Incoming cash for the period of time\n * @property {object}               outCashTotal       - Outgoing cash for the period of time\n * @property {number}               performanceMTD     - Portfolio performance for month\n * @property {number}               performanceMTDpct  - Portfolio performance for month in percents\n * @property {number}               performanceYTD     - Portfolio performance amount for year\n * @property {number}               performanceYTDpct  - Portfolio performance amount for year\n *                                                       in percents\n * @property {string}               riskClass          - Risk of portfolio investement strategy\n * @property {manager[]}            managers           - Managers of portfolio\n * @property {attorney[]}           attorneys          - Attorneys of portfolio\n * @property {BBSeriesPortfolio[]}  dataseries         - data in format suitable for chart\n *                                                       UI components\n */\n\n\n/**\n * Portfolio specific BBSeries object\n * @typedef {object} BBSeriesPortfolio\n * @property {string[]} labels  Array chart slices labels\n * @property {PortfolioDataset[]} datasets Array of chart datasets\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} PortfolioDataset\n * @extends Dataset\n * @property {string[]} backgroundColor Array  which represent rgb colors of chart\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} Dataset\n * @property {number[]} data Array of data points for chart slices\n */\n\n/**\n * Assetclass object\n * @typedef {object} AssetClass\n * @property {string} name name of asset class\n * @property {number} valuePct value that represents percentage of asset\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} attorney\n * @property {string} id id of a portfolio manager\n * @property {string} name name of a portfolio manager\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} manager\n * @property {string} id id of a portfolio manager\n * @property {string} name name of a portfolio manager\n */\n\n/**\n * Settings object with options available for bar chart.\n * More info {@link http://www.chartjs.org/docs/latest/charts/bar.html}\n * @typedef {object} ChartjsSettings\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-wm-portfolio-summary-dashboard-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-ellipsis-tooltip-ng\"\n// module id = 39\n// module chunks = 7 8 9 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_40__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-tooltip\"\n// module id = 40\n// module chunks = 7 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-popover\"\n// module id = 41\n// module chunks = 7","module.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ui-tree\"\n// module id = 42\n// module chunks = 7","module.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-notification-stripe-ng\"\n// module id = 43\n// module chunks = 7 8","module.exports = __WEBPACK_EXTERNAL_MODULE_44__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-focus-ng\"\n// module id = 44\n// module chunks = 7","/* eslint max-len: [\"error\", { \"ignoreComments\": true }] */\n/* global document */\nimport { getColorClassByIndex, getColorByIndex } from 'lib-wm-colorset';\nimport {\n  E_AUTH, E_CONNECTIVITY, E_UNEXPECTED, E_USER,\n}\n  from 'lib-bb-model-errors';\n\n/**\n * @typedef {Object} errorMessageDescriptor\n * @property {string} message Localization key of the error message\n * @property {string} title Localization key of the error message`s title\n * @property {string} icon CSS class for icon\n */\n\n/**\n * @description\n * Map of error code to message, title and icon to display to user\n *\n * @public\n * @name errors\n * @type {object.<E_AUTH | E_CONNECTIVITY | E_UNEXPECTED | E_USER, errorMessageDescriptor>}\n */\nconst errors = {\n  [E_AUTH]: {\n    message: 'model.error.auth.message',\n    title: 'model.error.auth.title',\n    icon: 'fa-sign-in-alt',\n  },\n  [E_CONNECTIVITY]: {\n    message: 'model.error.connectivity.message',\n    title: 'model.error.connectivity.title',\n    icon: 'fa-exclamation-triangle',\n  },\n  [E_USER]: {\n    message: 'model.error.user.message',\n    title: 'model.error.user.title',\n    icon: 'fa-user',\n  },\n  [E_UNEXPECTED]: {\n    message: 'model.error.unexpected.message',\n    title: 'model.error.unexpected.title',\n    icon: 'fa-server',\n  },\n};\n\nexport default ({ $filter, stateContainer }) => {\n  const numberFilter = $filter('number');\n  const i18nFilter = $filter('i18n');\n\n  /**\n   * @name PRECISION\n   * @type {number}\n   *\n   * @description\n   * Number of decimals to display\n   */\n  const PRECISION = 2;\n\n  /**\n   * @description\n   * Dismiss message time of notification\n   * @public\n   *\n   * @name DISMISS_MESSAGE_TIME\n   * @type {number}\n   */\n  const DISMISS_MESSAGE_TIME = 3;\n\n  /**\n   * @description\n   * Contains default notification config (if any) used to init notification popup\n   *\n   * @name notifications\n   * @type {object}\n   */\n  const notifications = {\n    data: null,\n    dismissMessageTime: DISMISS_MESSAGE_TIME,\n    status: {\n      isOpen: false,\n      success: false,\n      i18nKey: null,\n    },\n  };\n\n  /**\n   * @description\n   * Function that displays notification\n   *\n   * @public\n   * @name showNotification\n   * @type {function}\n   * @param {string}              i18nKeyName     i18n name of notification to display in message\n   *\n   */\n  const showNotification = (i18nKeyName, data) => {\n    notifications.status.isOpen = true;\n    notifications.status.success = false;\n    notifications.status.i18n = i18nFilter(\n      i18nKeyName,\n      data\n    );\n  };\n\n  /**\n   * @description\n   * Function that invokes a error notification\n   *\n   * @public\n   * @name notificationError\n   * @type {function}\n   * @param {string} i18nKeyName i18n name of notification to display in message\n   *\n   */\n  const notificationError = (i18nKeyName, data) => {\n    notifications.status.isOpen = true;\n    notifications.status.success = false;\n    notifications.status.i18n = i18nFilter(\n      i18nKeyName,\n      data\n    );\n  };\n\n  /**\n   * @description\n   * Function that gets notifications configuration object\n   *\n   * @public\n   * @name getNotifications\n   * @type {function}\n   *\n   * @returns {object}\n   *\n   */\n  const getNotifications = () => notifications;\n\n  /**\n   * @description\n   *\n   * Function that closes notifications\n   *\n   * @public\n   * @name closeNotification\n   * @type {function}\n   *\n   */\n  const closeNotification = () => {\n    notifications.status.isOpen = false;\n    notifications.status.success = false;\n  };\n\n  /**\n   * @description\n   * Substitutes outCashTotalAmount from inCashTotalAmount value and returns new value of netCashTotalAmount\n   *\n   * @public\n   * @name getNetCashTotalAmount\n   * @type {function}\n   * @param {number} inCashTotalAmountIncoming        Cash for the period of time amaunt value\n   * @param {number} outCashTotalAmount               Outgoing cash for the period of time amaunt value\n   *\n   * @returns {number}\n   */\n  const getNetCashTotalAmount = (inCashTotalAmount, outCashTotalAmount) =>\n    inCashTotalAmount - outCashTotalAmount;\n\n\n  /**\n   * @description\n   * Get the count of decimal numbers\n   *\n   * @private\n   * @name decimalCount\n   * @type {function}\n   * @param {number} number                           number to for counting its decimal numbers\n   *\n   * @returns {number}\n   */\n  const decimalCount = (number) => {\n    const NO_DECIMAL_NUMBERS = 0;\n    const match = (number.toString()).match(/\\.(\\d*)/);\n\n    if (match) {\n      return match[1] ? match[1].length : NO_DECIMAL_NUMBERS;\n    }\n\n    return NO_DECIMAL_NUMBERS;\n  };\n\n\n  /**\n   * @description\n   * Transform number to its localized string representation\n   *\n   * @public\n   * @name localizeNumber\n   * @type {function}\n   * @param {number} number                           number to localize\n   *\n   * @returns {string}\n   */\n  const localizeNumber = (number) => numberFilter(number, decimalCount(number));\n\n  /**\n   * @description\n   * Appends + or - sign if number is positive or negative\n   *\n   * @public\n   * @name showSign\n   * @type {function}\n   * @param {number} number     Number inputed\n   *\n   * @returns {string}          String with appended sign and number\n   */\n  const showSign = number => {\n    const absNumber = Math.abs(number).toFixed(PRECISION);\n    const sign = number > 0 ? '+' : '-';\n    const localizedNumber = numberFilter(absNumber, PRECISION);\n    return `${sign} ${localizedNumber}`;\n  };\n\n  /**\n   * @description\n   * Object with chart options that need to be overriden\n   *\n   * @name chartOptions\n   * @type {ChartjsSettings}\n   */\n  const chartOptions = {\n    tooltips: {\n      enabled: false,\n    },\n    hover: {\n      mode: null,\n    },\n    cutoutPercentage: 65,\n  };\n\n\n  const changeTooltipStyle = () => {\n    const tooltip = document.querySelector('.tooltip');\n    if (tooltip) {\n      Object.assign(tooltip.style, { 'pointer-events': 'none' });\n    }\n  };\n\n\n  /**\n   * @description\n   * Array with plugins objects for chartjs\n   *\n   * @name plugins\n   * @type {array}\n   */\n  const plugins = [{\n    afterInit: (chartInstance) => {\n      setTimeout(() => chartInstance.update(), 100);\n    },\n  },\n  ];\n\n  /**\n   * @description\n   * Checks if portfolios data is available\n   *\n   * @name isPortfoliosAvailable\n   * @type {function}\n   * @param {object} portfolios\n   * @returns {boolean} returns true if portfolios data is not present\n   */\n  const isPortfoliosAvailable = stateContainer.createSelector(\n    state => state.portfolios.order.length\n  );\n\n  /**\n   * @description\n   * Returns correct class for element\n   *\n   * @name getLegendRowClass\n   * @type {function}\n   * @param {number} $index\n   * @returns {string} returns class name\n   */\n  const getLegendRowClass = $index => {\n    const classPrefix = 'portfolio-stripe-assets-legend-';\n    return $index < 4 ? `${classPrefix}${$index}` : `${classPrefix}4`;\n  };\n\n  /**\n   * @name portfolios\n   * @type {function}\n   *\n   * @description\n   * Selector for portfolio data processing\n   *\n   * @param {Portfolio[]} data original data object\n   * @returns {Portfolio[]} data processed data object\n   */\n  const portfolios = stateContainer.createSelector(state => (\n    state.portfolios.order.map(iban => {\n      const portfolio = state.portfolios.list[iban];\n      const backgroundColor = portfolio.assetClasses\n        .map((_, index) => getColorByIndex(index));\n      const data = portfolio.assetClasses\n        .map(a => a.valuePct)\n        .filter(a => a > 0);\n      return {\n        ...portfolio,\n        dataseries: {\n          labels: portfolio.assetClasses.map(a => a.name),\n          datasets: [{\n            data,\n            backgroundColor,\n          }],\n        },\n      };\n    })\n  ));\n\n  /**\n   * @description\n   * Checking if the condition is met to display the editable input\n   * for changing the name or alias.\n   *\n   * @name showChangeNameInput\n   * @type {function}\n   * @param {object} portfolioSelected The selected portfolio.\n   * @param {object} item The portfolio that needs to be checked.\n   * @returns {boolean} true if condition is met or false otherwise\n   */\n  const showChangeNameInput = (portfolioSelected, item) =>\n    portfolioSelected.IBAN === item.IBAN && portfolioSelected.showInput;\n\n  /**\n   * @description\n   * Checking the alias name and update it if it is needed.\n   *\n   * @name changeAlias\n   * @type {function}\n   * @param {object} $ctrl Controller of the widget\n   * @param {object} item The portfolio that needs to be checked and updated.\n   */\n  const changeAlias = ($ctrl, item) => {\n    const state = stateContainer.getState();\n    const selectedPortfolio = state.portfolios.list[item.IBAN];\n    if (selectedPortfolio.alias !== item.alias) {\n      $ctrl.updatePortfolio(item)\n        .catch(() => {\n          Object.assign(item, { alias: selectedPortfolio.alias });\n          return notificationError('aliasSaveError.error', {});\n        });\n    }\n    state.portfolios.portfolioSelected = { id: null, showInput: false };\n  };\n\n  /**\n   * @description\n   * Displays input field if icon was clicked.\n   *\n   * @name showInput\n   * @type {function}\n   * @param {object} item The selected portfolio.\n   */\n  const showInput = (item) => {\n    const state = stateContainer.getState();\n    state.portfolios.portfolioSelected = item;\n    state.portfolios.portfolioSelected.showInput = true;\n  };\n\n  /**\n   * @description\n   * Returns error object by error code\n   *\n   * @public\n   * @name getError\n   * @type {function}\n   */\n  const getError = (code) => errors[code];\n\n  /**\n   * @name mapOfOpenItems\n   * @type {map}\n   * @inner\n   *\n   * @description\n   * Map keeping portfolios` open state\n   */\n  const mapOfOpenItems = new Map();\n\n  /**\n   * @name isFirstPortfolioOpen\n   * @inner\n   * @type {function}\n   * @description Tells, whether first item in portfolios collection is open.\n   *              On first invocation, has side-effect - changes state of first item opening in mapOfOpenItems.\n   * @param {number} portfolioIndex Index of portfolio in portfolios collection\n   * @param {number} id IBAN of portfolio\n   * @returns {boolean} Flag (true|false) that stands for open state of item\n   */\n  const isFirstPortfolioOpen = (portfolioIndex, id) =>\n    portfolioIndex === 0\n    && !Array.from(mapOfOpenItems.values()).some(v => typeof v !== 'undefined')\n    && typeof mapOfOpenItems.get(id) === 'undefined'\n    && !!mapOfOpenItems.set(id, true);\n\n  /**\n   * @name isOpen\n   * @public\n   * @type {function}\n   * @description Tells, whether item's open property is truthy\n   * @param {number} id\n   * @param {number} index Index of portfolio in portfolios collection\n   * @returns {boolean} Flag (true|false) that stands for open state of item\n   */\n  const isOpen = (id, index) =>\n    mapOfOpenItems.get(id) || isFirstPortfolioOpen(index, id);\n\n  /**\n   * @name onToggle\n   * @public\n   * @type {function}\n   * @description Changes open state of item to the opposite\n   * @param {number} id\n   * @returns {map} Map of items\n   */\n  const onToggle = id => mapOfOpenItems.set(id, !mapOfOpenItems.get(id));\n\n  /**\n   * @name getDragAndDropOptions\n   * @public\n   * @type {function}\n   * @description\n   * Returns drag and drop options.\n   * Specify `dropped` callback saving new order of portfolios\n   * @param {object} $ctrl Controller of the widget\n   * @returns {object} Options of drag and drop library\n   */\n  const getDragAndDropOptions =\n    ($ctrl) => ({\n      dropped() {\n        $ctrl\n          .saveOrder(portfolios().map(portfolio => portfolio.IBAN))\n          .catch(() => showNotification('model.error.unexpected.message'));\n      },\n    });\n\n  return {\n    get portfolios() {\n      return portfolios();\n    },\n    notifications,\n    getNotifications,\n    getColorClassByIndex,\n    getColorByIndex,\n    closeNotification,\n    getNetCashTotalAmount,\n    showSign,\n    chartOptions,\n    isPortfoliosAvailable,\n    localizeNumber,\n    getLegendRowClass,\n    plugins,\n    getError,\n    isOpen,\n    onToggle,\n    getDragAndDropOptions,\n    showChangeNameInput,\n    changeAlias,\n    changeTooltipStyle,\n    showInput,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-wm-portfolio-summary-dashboard-ng/scripts/helpers.js"],"sourceRoot":""}