{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6****","webpack:///webpack/bootstrap ae100f90e7d971b83ff6?df48****","webpack:///./lib-bb-event-bus/model.xml","webpack:///./lib-bb-event-bus/scripts/index.js","webpack:///./lib-bb-event-bus/scripts/event-bus.js","webpack:///./lib-bb-event-bus/scripts/detect-bus.js"],"names":["default","widget","events","window","Error","eventBus","publish","topic","payload","subscribe","callback","subscription","unsubscribe","bind","global","features","pubsub","gadgets"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,0C;;;;;;;;;;;;;;;;;;;;;;;;;;;8CCASA,O;;;;;;;;;;;;;;;;ACCT;;;;;;AAEA;;;;;mBAKe,UAACC,MAAD,EAAY;AACzB,OAAMC,SAAS,yBAAUC,MAAV,EAAkBF,MAAlB,CAAf;AACA,OAAI,CAACC,MAAL,EAAa;AACX,WAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED;;;;;AAKA,OAAMC,WAAW;AACf;;;;;;;;;;;AAWAC,cAAS,iBAACC,KAAD,EAAQC,OAAR;AAAA,cAAoBN,OAAOI,OAAP,CAAeC,KAAf,EAAsBC,OAAtB,CAApB;AAAA,MAZM;;AAcf;;;;;;;;;;;;;;;;AAgBAC,gBAAW,mBAACF,KAAD,EAAQG,QAAR,EAAqB;AAC9B,WAAMC,eAAeT,OAAOO,SAAP,CAAiBF,KAAjB,EAAwBG,QAAxB,CAArB;;AAEA,WAAIC,gBAAgBA,aAAaC,WAAjC,EAA8C;AAC5C,gBAAOD,aAAaC,WAAb,CAAyBC,IAAzB,CAA8BF,YAA9B,CAAP;AACD;;AAED,cAAO;AAAA,gBAAMT,OAAOU,WAAP,CAAmBL,KAAnB,EAA0BG,QAA1B,CAAN;AAAA,QAAP;AACD;AAtCc,IAAjB;AAwCA,UAAOL,QAAP;AACD,E;;AAED;;;;;;;AAOA;;;;;AArEA,oB;;;;;;;;;;;;mBCAe,UAACS,MAAD,EAASb,MAAT;AAAA,UACZA,UAAUA,OAAOc,QAAjB,IAA6Bd,OAAOc,QAAP,CAAgBC,MAA9C,IACCF,UAAUA,OAAOG,OAAjB,IAA4BH,OAAOG,OAAP,CAAeD,MAF/B;AAAA,E","file":"lib-bb-event-bus/scripts/lib-bb-event-bus.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-bb-event-bus\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-bb-event-bus\"] = factory();\n\telse\n\t\troot[\"lib-bb-event-bus\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ae100f90e7d971b83ff6","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-bb-event-bus/model.xml\n// module id = 0\n// module chunks = 4","export { default } from './event-bus';\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-event-bus/scripts/index.js","/* global window */\nimport detectBus from './detect-bus';\n\n/**\n * @module lib-bb-event-bus\n *\n * @description Event bus module, wrapper around CXP's gadgets.pubsub.\n */\nexport default (widget) => {\n  const events = detectBus(window, widget);\n  if (!events) {\n    throw new Error('pubsub is not available.');\n  }\n\n  /**\n   * @name EventBus\n   * @type {object}\n   * @description\n   */\n  const eventBus = {\n    /**\n     * @name EventBus#publish\n     * @type {function}\n     * @description Publish an event to the bus. Any subscribers should be notified\n     * @param {string} topic The name of the event, this value is needed to subscribe\n     * @param {any} payload The data payload to provide additional context to the event\n     *\n     * @example\n     * bbEventBus\n     *  .publish('test', {})\n     */\n    publish: (topic, payload) => events.publish(topic, payload),\n\n    /**\n     * @name EventBus#subscribe\n     * @type {function}\n     * @description Subscribe to be notified when an event on the same topic event is `publish`ed.\n     * The callback will trigger an angular digest.\n     *\n     * @param {string} topic\n     * @param {Callback} callback To be called when an event is published on the same topic\n     * @return {Subscription}\n     *\n     * @example\n     * bbEventBus\n     *  .subscribe('test', function(){\n     *    console.log('event')\n     *  })\n     */\n    subscribe: (topic, callback) => {\n      const subscription = events.subscribe(topic, callback);\n\n      if (subscription && subscription.unsubscribe) {\n        return subscription.unsubscribe.bind(subscription);\n      }\n\n      return () => events.unsubscribe(topic, callback);\n    },\n  };\n  return eventBus;\n};\n\n/**\n * @typedef Callback\n * @type {function}\n * @param {any} payload The data payload that was `publish`ed with the event\n * @returns {void}\n */\n\n/**\n * @typedef Subscription\n * @type {Object}\n * @property {function} unsubscribe The function to unsubscribe the subscription\n */\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-event-bus/scripts/event-bus.js","export default (global, widget) =>\n  (widget && widget.features && widget.features.pubsub) ||\n  (global && global.gadgets && global.gadgets.pubsub);\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-event-bus/scripts/detect-bus.js"],"sourceRoot":""}