{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///webpack/bootstrap 3162d9cea18411c49a35?401b**","webpack:///./lib-bb-google-maps-ng/model.xml","webpack:///./lib-bb-google-maps-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///./lib-bb-google-maps-ng/scripts/google-maps-helper.js"],"names":["moduleKey","angular","module","factory","getGoogleMapsApi","name","Promise","loadGoogleMapsApi","url","mapKey","callback","cbFuncName","window","script","document","createElement","type","async","src","querySelector","appendChild","getGoogleMapsApiSingleton","deferred","promise","defer","resolve","google","maps","$q"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;;;;;;;ACKA;;;;AACA;;;;;;AANA;;;;;AAQA,KAAMA,YAAY,uBAAlB;;mBAEeC,0BACZC,MADY,CACLF,SADK,EACM,EADN,EAEZG,OAFY,CAEJ,kBAFI,EAEgB,CAAC,IAAD,EAAOC,0BAAP,CAFhB,EAGZC,I;;;;;;;ACbH,iD;;;;;;;;;;;;ACAA;;AAEA,KAAIC,gBAAJ;;AAEA,UAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,MAAhC,EAAwCC,QAAxC,EAAkD;AAChD,OAAMC,aAAa,mBAAnB;;AAEA;AACAC,UAAOD,UAAP,IAAqB,YAAM;AACzBD;AACA,YAAOE,OAAOD,UAAP,CAAP;AACD,IAHD;;AAKA,OAAME,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAF,UAAOG,IAAP,GAAc,iBAAd;AACAH,UAAOI,KAAP,GAAe,MAAf;AACAJ,UAAOK,GAAP,GAAgBV,GAAhB,0CAAwDC,MAAxD,kBAA2EE,UAA3E;;AAEAG,YAASK,aAAT,CAAuB,MAAvB,EAA+BC,WAA/B,CAA2CP,MAA3C;AACD;;AAED,KAAMQ,4BAA6B,YAAM;AACvC,OAAIC,iBAAJ;;AAEA,UAAO,SAASlB,gBAAT,CAA0BI,GAA1B,EAA+BC,MAA/B,EAAuC;AAC5C,SAAIa,QAAJ,EAAc;AACZ,cAAOA,SAASC,OAAhB;AACD;;AAEDD,gBAAWhB,QAAQkB,KAAR,EAAX;;AAEAjB,uBAAkBC,GAAlB,EAAuBC,MAAvB,EAA+B,YAAM;AACnC;AACA;AACAa,gBAASG,OAAT,CAAiBC,OAAOC,IAAxB;AACD,MAJD;;AAMA,YAAOL,SAASC,OAAhB;AACD,IAdD;AAeD,EAlBiC,EAAlC;;AAoBA;;;;;;;;;;AAUA,KAAMnB,mBAAmB,SAAnBA,gBAAmB,CAACwB,EAAD,EAAQ;AAC/BtB,aAAUsB,EAAV;;AAEA,UAAOP,yBAAP;AACD,EAJD;;mBAMejB,gB","file":"lib-bb-google-maps-ng/scripts/lib-bb-google-maps-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-bb-google-maps-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-bb-google-maps-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"lib-bb-google-maps-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_16__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3162d9cea18411c49a35","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-bb-google-maps-ng/model.xml\n// module id = 0\n// module chunks = 3","/**\n * @module lib-bb-google-maps-ng\n * @description Library to load the Google Maps API (not more than once)\n */\n\nimport angular from 'vendor-bb-angular';\nimport getGoogleMapsApi from './google-maps-helper';\n\nconst moduleKey = 'lib-bb-google-maps-ng';\n\nexport default angular\n  .module(moduleKey, [])\n  .factory('getGoogleMapsApi', ['$q', getGoogleMapsApi])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-google-maps-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 16\n// module chunks = 3 4 5 6 7","/* global google, document, window */\n\nlet Promise;\n\nfunction loadGoogleMapsApi(url, mapKey, callback) {\n  const cbFuncName = 'googleMapsAPILoad';\n\n  // Ugly global function -- cannot be avoided...\n  window[cbFuncName] = () => {\n    callback();\n    delete window[cbFuncName];\n  };\n\n  const script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.async = 'true';\n  script.src = `${url}/js?libraries=geometry,places&key=${mapKey}&callback=${cbFuncName}`;\n\n  document.querySelector('head').appendChild(script);\n}\n\nconst getGoogleMapsApiSingleton = (() => {\n  let deferred;\n\n  return function getGoogleMapsApi(url, mapKey) {\n    if (deferred) {\n      return deferred.promise;\n    }\n\n    deferred = Promise.defer();\n\n    loadGoogleMapsApi(url, mapKey, () => {\n      // This promise is resolved when the google maps API is loaded, which\n      // means the google.maps object is available on window.\n      deferred.resolve(google.maps);\n    });\n\n    return deferred.promise;\n  };\n})();\n\n/**\n * Load and get a reference to the Google Maps API.  The API is only loaded\n * once on the page.\n *\n * @name getGoogleMapsApi\n * @type {function}\n * @param {Promise} $q Instance of the Promise API\n * @returns {function} A function that returns a promise that will resolve as\n * soon as Google Maps is loaded.\n */\nconst getGoogleMapsApi = ($q) => {\n  Promise = $q;\n\n  return getGoogleMapsApiSingleton;\n};\n\nexport default getGoogleMapsApi;\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-google-maps-ng/scripts/google-maps-helper.js"],"sourceRoot":""}