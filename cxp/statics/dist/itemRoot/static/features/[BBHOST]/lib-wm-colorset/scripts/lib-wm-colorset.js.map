{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6***************","webpack:///webpack/bootstrap d0309a746b17cd403690?c295***************","webpack:///./lib-wm-colorset/model.xml","webpack:///external \"lib-bb-styles\"?c155*****","webpack:///./lib-wm-colorset/scripts/index.js"],"names":["colors","Array","map","_","index","getColorset","length","getColorByIndex","getColorClassByIndex"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;ACAA,iD;;;;;;;;;;;;;;ACAA;;;;;;;;AAEA,KAAMA,SAAS,6BAAIC,MAAM,EAAN,CAAJ,GAAeC,GAAf,CAAmB,UAACC,CAAD,EAAIC,KAAJ;AAAA,UAAc,8CAAyBA,QAAQ,CAAjC,GAAsC,OAAtC,CAAd;AAAA,EAAnB,CAAf;;AAEA;;;;;;;;;;AAUO,KAAMC,oCAAc,SAAdA,WAAc;AAAA,OAACC,MAAD,uEAAUN,OAAOM,MAAjB;AAAA,UACzB,6BAAIL,MAAMK,MAAN,CAAJ,GAAmBJ,GAAnB,CAAuB,UAACC,CAAD,EAAIC,KAAJ;AAAA,YAAcJ,OAAOI,QAAQJ,OAAOM,MAAtB,CAAd;AAAA,IAAvB,CADyB;AAAA,EAApB;;AAGP;;;;;;;;;;AAUO,KAAMC,4CAAkB,SAAlBA,eAAkB,CAACH,KAAD;AAAA,UAAWJ,OAAOI,QAAQJ,OAAOM,MAAtB,CAAX;AAAA,EAAxB;;AAEP;;;;;;;;;;AAUO,KAAME,sDAAuB,SAAvBA,oBAAuB,CAACJ,KAAD;AAAA,2BAA0BA,QAAQJ,OAAOM,MAAzC;AAAA,EAA7B,C","file":"lib-wm-colorset/scripts/lib-wm-colorset.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lib-bb-styles\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-wm-colorset\", [\"lib-bb-styles\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-wm-colorset\"] = factory(require(\"lib-bb-styles\"));\n\telse\n\t\troot[\"lib-wm-colorset\"] = factory(root[\"lib-bb-styles\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_15__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d0309a746b17cd403690","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-wm-colorset/model.xml\n// module id = 0\n// module chunks = 15","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-styles\"\n// module id = 15\n// module chunks = 1 2 3 4 5 14 15","import getStyle from 'lib-bb-styles';\n\nconst colors = [...Array(20)].map((_, index) => getStyle(`.chart-color-${index + 1}`, 'color'));\n\n/**\n * @description\n * Gets colors for given length of data\n *\n * @public\n * @name getColorset\n * @type {function}\n * @param {number} length Length of data\n * @returns {string[]} Array of colors\n */\nexport const getColorset = (length = colors.length) =>\n  [...Array(length)].map((_, index) => colors[index % colors.length]);\n\n/**\n * @description\n * Gets color from colorset for given data index\n *\n * @public\n * @type {function}\n * @name getColorByIndex\n * @param {number} index Index of data item\n * @returns {string} Color for given index\n */\nexport const getColorByIndex = (index) => colors[index % colors.length];\n\n/**\n * @description\n * Gets class with color for given data index\n *\n * @public\n * @type {function}\n * @name getColorClassByIndex\n * @param {number} index Index of data item\n * @returns {string} Class with color for given index\n */\nexport const getColorClassByIndex = (index) => `chart-color-${index % colors.length}`;\n\n\n\n// WEBPACK FOOTER //\n// ./lib-wm-colorset/scripts/index.js"],"sourceRoot":""}