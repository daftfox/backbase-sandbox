{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*******","webpack:///webpack/bootstrap 16ce69979da567ada154?cec8*******","webpack:///./ui-bb-chartjs-chart-donut-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*******","webpack:///external \"vendor-bb-chartjs\"?d5ea","webpack:///./ui-bb-chartjs-chart-donut-ng/scripts/index.js","webpack:///./ui-bb-chartjs-chart-donut-ng/scripts/component.js","webpack:///./ui-bb-chartjs-chart-donut-ng/scripts/controller.js","webpack:///./ui-bb-chartjs-chart-donut-ng/scripts/utils.js"],"names":["angular","module","value","chartjs","component","name","controller","uiBbChartjsChartDonutController","bindings","title","series","legend","cutoutPercentage","tooltip","plugins","options","clickGetter","transclude","template","$element","$scope","Chartjs","$ctrl","drawTooltip","tooltipDataAttr","tooltipSelector","tooltipEl","querySelector","document","createElement","setAttribute","chart","canvas","parentNode","appendChild","opacity","style","display","getChartOptions","Object","assign","text","tooltips","enabled","HAS_CUSTOM_TOOLTIP","custom","utils","removeEmptyProperties","createChart","element","type","merge","onClick","data","updateChart","update","$onInit","find","$onChanges","removeEmptyProperty","prop","obj","target","item","undefined","forEach","key"],"mappings":"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","file":"ui-bb-chartjs-chart-donut-ng/scripts/ui-bb-chartjs-chart-donut-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"vendor-bb-chartjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bb-chartjs-chart-donut-ng\", [\"vendor-bb-angular\", \"vendor-bb-chartjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bb-chartjs-chart-donut-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"vendor-bb-chartjs\"));\n\telse\n\t\troot[\"ui-bb-chartjs-chart-donut-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"vendor-bb-chartjs\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_32__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 16ce69979da567ada154","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bb-chartjs-chart-donut-ng/model.xml\n// module id = 0\n// module chunks = 7","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41","module.exports = __WEBPACK_EXTERNAL_MODULE_32__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-chartjs\"\n// module id = 32\n// module chunks = 6 7 8","/**\n * @module ui-bb-chartjs-chart-donut-ng\n *\n * @example\n * // In an extension:\n * // file: scripts/index.js\n * import uiBbChartjsChartDonut from 'ui-bb-chartjs-chart-donut-ng';\n *\n * export const dependencyKeys = [\n *   uiBbChartjsChartDonut,\n * ];\n *\n * // file: templates/template.ng.html\n * <ui-bb-chartjs-chart-donut-ng\n *   data-series=\"$ctrl.series\"\n *   data-title=\"$ctrl.title\"\n *   data-cutout-percentage=\"30\"\n *   data-legend=\"ext.helpers.customizeLegend\"\n *   data-options=\"ext.helpers.chartOptions\"\n *   data-click-getter=\"ext.helpers.getClickHandler($ctrl)\">\n *     <!-- Optional content that can be inserted over the canvas -->\n *     <div class=\"absolute-center\">Total amount: 100</div>\n * </ui-bb-chartjs-chart-donut-ng>\n */\n\nimport angular from 'vendor-bb-angular';\nimport chartjs from 'vendor-bb-chartjs';\n\nimport component from './component';\n\n/**\n * @description The angular module name\n * @name default\n * @type {string}\n */\nexport default angular\n  .module('ui-bb-chartjs-chart-donut-ng', [])\n  .value('chartjs', chartjs)\n  .component('uiBbChartjsChartDonutNg', component)\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-chartjs-chart-donut-ng/scripts/index.js","import uiBbChartjsChartDonutController from './controller';\n\n/**\n * @name uiBbChartjsChartDonutComponent\n * @type {object}\n * @description\n * Chart.js Donut chart component object\n *\n * @property {string} title Title of the chart\n * @property {ChartjsDonutSeries} series Object used to draw Chartjs donut chart\n * @property {ChartjsLegend} legend Object used to define chart's legend behavior and look\n * @property {number} cutoutPercentage The percentage of the chart that is cut out of the middle.\n * Example: 50 - for doughnut, 0 - for pie\n * @property {function} tooltip Method for drawing custom tooltip. If this property is not\n * used, default tooltip will be rendered. Otherwise, this method will be provided with:\n * - tooltip: Chart.js tooltip object\n * - element: tooltip DOM element\n * - data: series used to draw chart\n * - chart: Chart.js chart object\n * Custom method needs at least to fill in internal HTML of custom tooltip\n * by injecting the content into element provided\n * - Example:\n * customTooltip: (tooltip, element, data, chart) =>\n * Object.assign(element, { innerHTML: '<div>Custom content</div>' }),\n * @property {ChartjsPlugin[]} plugins\n * @property {ChartjsSettings} options Object that overrides any property of\n * Chart.js default settings object\n * @property {ChartjsEvents} clickGetter Function, which returns click handler\n * for the Donut chart.\n */\nconst component = {\n  controller: ['$element', '$scope', 'chartjs', uiBbChartjsChartDonutController],\n  bindings: {\n    title: '@',\n    series: '<',\n    legend: '<',\n    cutoutPercentage: '<',\n    tooltip: '<',\n    plugins: '<',\n    options: '<',\n    clickGetter: '&',\n  },\n  transclude: true,\n  template: `\n    <div class=\"donut-chart-container\">\n      <ng-transclude></ng-transclude>\n      <div class=\"donut-chart-canvas-container position-relative\">\n        <canvas></canvas>\n      </div>\n    </div>`,\n};\n\nexport default component;\n\n/**\n * Series object used to draw Chartjs donut chart. Compatible with BBSeries generated\n * by model modules.\n * @typedef {object} ChartjsDonutSeries\n * @property {string[]} labels Array of chart labels\n * @property {ChartjsDonutDataset[]} datasets Array of datasets\n */\n\n/**\n * Dataset object for donut chart as defined by Chart.js library.\n * Compatible with BBDataset object used in BBSeries.\n * It is required for it to contain data as array of values.\n * More info about additional (optional) properties can be found at\n * {@link http://www.chartjs.org/docs/latest/charts/doughnut.html#dataset-properties}\n * @typedef {object} ChartjsDonutDataset\n * @property {number[]} data Array of data points to be drawn for each label\n */\n\n/**\n * Legend object as defined in Chart.js library.\n * More info\n * {@link http://www.chartjs.org/docs/latest/configuration/legend.html#configuration-options}\n * @typedef {object} ChartjsLegend\n */\n\n/**\n * Plugin object as defined in Chart.js library. It should define at least one hook from\n * {@link http://www.chartjs.org/docs/latest/developers/plugins.html#plugin-core-api}\n * @typedef {object} ChartjsPlugin\n */\n\n/**\n * Settings object with options available for Donut chart.\n * More info {@link http://www.chartjs.org/docs/latest/charts/doughnut.html}\n * @typedef {object} ChartjsSettings\n */\n\n/**\n * Function, which returns click handler for the Donut chart.\n * More info {@link http://www.chartjs.org/docs/latest/general/interactions/events.html}\n * @typedef {object} ChartjsEvents\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-chartjs-chart-donut-ng/scripts/component.js","/* global angular, document */\n\n/**\n * @name uiBbChartjsChartDonutController\n * @ngkey uiBbChartjsChartDonutController\n * @type {function}\n *\n * @description\n * Chart.js donut chart controller\n */\n\nimport utils from './utils';\n\nconst uiBbChartjsChartDonutController =\n  function uiBbChartjsChartDonutController($element, $scope, Chartjs) {\n    const $ctrl = this;\n\n    /**\n     * @name drawTooltip\n     * @type {function}\n     * @inner\n     * @description\n     * In case there is custom tooltip callback, this method will prepare\n     * DOM element and provide reference to it, additionally with all\n     * series data and chart instance\n     *\n     * @param {object} tooltip Chart.js tooltip object\n     */\n    const drawTooltip = (tooltip) => {\n      // retrieve existing tooltip DOM element or create a new one\n      const tooltipDataAttr = 'data-chartjs-tooltip';\n      const tooltipSelector = `div[${tooltipDataAttr}]`;\n      let tooltipEl = $element[0].querySelector(tooltipSelector);\n      if (!tooltipEl) {\n        tooltipEl = document.createElement('div');\n        tooltipEl.setAttribute(tooltipDataAttr, '');\n        // prevent flickering when hovering above tooltip that covers part of the chart\n        tooltipEl.setAttribute('onmouseenter', 'event.target.style.display = \\'inherit\\'');\n        tooltipEl.setAttribute('onmouseleave', 'event.target.style.display = \\'none\\'');\n        $ctrl.chart.canvas.parentNode.appendChild(tooltipEl);\n      }\n\n      // if tooltip should not be visible, hide it and stop execution\n      if (tooltip.opacity === 0) {\n        tooltipEl.style.display = 'none';\n        return;\n      }\n\n      tooltipEl.style.display = 'inherit';\n      // execute custom tooltip builder\n      $ctrl.tooltip(tooltip, tooltipEl, $ctrl.series, $ctrl.chart);\n    };\n\n    /**\n     * @name getChartOptions\n     * @type {function}\n     * @inner\n     * @description\n     * Builds JSON structure needed for chart rendering\n     */\n    const getChartOptions = () => {\n      // legend is displayed by default, so if there is no legend data\n      // create an object that forces it to be hidden\n      const legend = $ctrl.legend ?\n        Object.assign($ctrl.legend, { display: true }) :\n        { display: false };\n\n      const options = {\n        title: {\n          display: !!$ctrl.title,\n          text: $ctrl.title,\n        },\n        legend,\n        cutoutPercentage: $ctrl.cutoutPercentage,\n        tooltips: {\n          enabled: !$ctrl.HAS_CUSTOM_TOOLTIP,\n          custom: $ctrl.HAS_CUSTOM_TOOLTIP ? tooltip => drawTooltip(tooltip) : null,\n        },\n      };\n      utils.removeEmptyProperties(options);\n      return options;\n    };\n\n    /**\n     * @name createChart\n     * @type {function}\n     * @inner\n     * @description\n     * Creates new chart instance\n     */\n    const createChart = () => {\n      // generate chart with all the options combined\n      $ctrl.chart = Object.assign(new Chartjs($ctrl.element, {\n        type: 'doughnut',\n        options: angular.merge(getChartOptions(), $ctrl.options, {\n          onClick: $ctrl.clickGetter(),\n        }),\n        data: $ctrl.series,\n        plugins: $ctrl.plugins,\n      }), { $scope });\n    };\n\n    /**\n     * @name updateChart\n     * @type {function}\n     * @inner\n     * @description\n     * Redraws chart with the new data\n     */\n    const updateChart = () => {\n      $ctrl.chart.data = $ctrl.series;\n      $ctrl.chart.options = angular.merge($ctrl.chart.options, $ctrl.options);\n      $ctrl.chart.update();\n    };\n\n    /**\n     * AngularJS Lifecycle hook used to initialize the controller\n     *\n     * @name $onInit\n     * @type {function}\n     * @returns {void}\n     */\n    const $onInit = () => {\n      $ctrl.element = $element.find('canvas')[0];\n      $ctrl.HAS_CUSTOM_TOOLTIP = typeof ($ctrl.tooltip) === 'function';\n\n      createChart();\n    };\n\n    /**\n     * AngularJS Lifecycle hook used to update chart\n     *\n     * @name $onChanges\n     * @type {function}\n     * @returns {void}\n     */\n    const $onChanges = () => {\n      // Skip update before init\n      if ($ctrl.chart) {\n        updateChart();\n      }\n    };\n\n    Object.assign($ctrl, {\n      $onInit,\n      $onChanges,\n    });\n  };\n\nexport default uiBbChartjsChartDonutController;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-chartjs-chart-donut-ng/scripts/controller.js","/* global angular */\n// TODO: move to common library\n/**\n * @name removeEmptyProperty\n * @type {function}\n * @inner\n * @description\n * Returns a copy of the scanned object without selected property\n * if the property is null or undefined\n *\n * @param {string} prop Name of the property\n * @param {object} obj Object to be scanned\n * @returns {object} Cleared object\n */\nconst removeEmptyProperty = (prop, obj) => {\n  const target = obj;\n  const item = target[prop];\n  if (item === null || item === undefined) {\n    delete target[prop];\n  } else if (typeof item === 'object') {\n    angular.forEach(item, (value, key) => removeEmptyProperty(key, item));\n  }\n\n  return target;\n};\n\n/**\n * @name removeEmptyProperties\n * @type {function}\n * @inner\n * @description\n * Removes all null or undefined properties from an object\n *\n * @param {object} obj Object to be scanned\n */\nconst removeEmptyProperties = (obj) =>\n  angular.forEach(obj, (value, key) => removeEmptyProperty(key, obj));\n\nexport default {\n  removeEmptyProperty,\n  removeEmptyProperties,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-chartjs-chart-donut-ng/scripts/utils.js"],"sourceRoot":""}