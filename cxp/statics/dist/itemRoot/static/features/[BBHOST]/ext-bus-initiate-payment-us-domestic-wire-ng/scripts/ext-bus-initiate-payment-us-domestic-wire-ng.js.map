{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*********","webpack:///webpack/bootstrap 59b29c6361f41ebec32c?d678*********","webpack:///./ext-bus-initiate-payment-us-domestic-wire-ng/model.xml","webpack:///external \"vendor-bb-angular-ng-aria\"?9d0e***","webpack:///external \"ui-bb-i18n-ng\"","webpack:///external \"ui-bb-loading-overlay-ng\"?3561***","webpack:///external \"ui-bb-account-selector-ng\"?7f70***","webpack:///external \"ui-bb-currency-input-ng\"?3ab2**","webpack:///external \"ui-bb-char-counter-ng\"?e680**","webpack:///external \"ui-bb-calendar-popup-ng\"?7edd**","webpack:///external \"ui-bb-expandable-ng\"?18ac**","webpack:///external \"vendor-bb-angular-ng-messages\"?7dc7***","webpack:///external \"vendor-bb-uib-alert\"?7299**","webpack:///external \"ui-bb-confirm-ng\"?ed9c***","webpack:///external \"ui-bb-autocomplete-search-ng\"?bbd4","webpack:///external \"ui-bb-switcher-ng\"?b444**","webpack:///external \"vendor-bb-angular\"?a114**","webpack:///external \"vendor-bb-uib-popover\"?2eab*","webpack:///external \"vendor-bb-angular-sanitize\"?d9b1*","webpack:///external \"ui-bb-substitute-error-ng\"?f57a**","webpack:///external \"ui-bb-parent-responsiveness-ng\"?c738*","webpack:///external \"ui-bb-credit-suggest-ng\"?17c6*","webpack:///external \"ui-bb-button-spinner-ng\"?5932*","webpack:///external \"ui-bb-empty-state-ng\"?88ee*","webpack:///external \"ui-bb-notification-stripe-ng\"?0663*","webpack:///external \"ui-bus-format-amount-ng\"?331c","webpack:///external \"ui-bb-submit-dropup-ng\"?61cf","webpack:///external \"ui-bus-beneficiary-select-modal-ng\"?5713","webpack:///external \"ui-bb-form-navigate-away-ng\"?fa25","webpack:///./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/index.js","webpack:///./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/intents.js","webpack:///./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/constants.js","webpack:///./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/helpers.js","webpack:///external \"lib-bb-iban\"","webpack:///./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/events.js","webpack:///./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/hooks.js","webpack:///external \"ui-bb-dropdown-select-ng\"","webpack:///external \"ui-bb-bank-validations-ng\""],"names":["default","dependencyKeys","ngAriaModuleKey","ngSanitizeKey","i18nKey","uiBbSubstituteErrorKey","vendorBbUibAlertKey","uiBbLoadingOverlayKey","uiBbAccountSelectorKey","uiBbCreditSuggestKey","bbAngularNgMessagesKey","uiBbCurrencyInputKey","uiBbParentResponsivenessKey","uibPopoverKey","uiBusFormatAmountKey","uiBbCharCounterKey","uiBbExpandableKey","uiBbCalendarPopupKey","uiBbDropdownSelectKey","uiBbConfirmKey","uiBbSwitcherKey","uiBbAutocompleteSearchKey","uiBbBankValidationsKey","uiBbSubmitDropupKey","uiBbEmptyStateKey","uiBbNotificationStripeKey","uiBusBeneficiarySelectModalNg","uiBbButtonSpinnerNg","uiBbFormNavigateAwayNg","handleRequest","createRequest","service","initiatePayment","Intent","INITIATE_PAYMENT","initialPaymentData","setDraftPayment","viewPaymentOrders","VIEW_PAYMENT_ORDERS","WidgetName","PaymentType","RecurrenceEnding","NEVER","ON","AFTER","TransferFrequency","ONCE","DAILY","WEEKLY","MONTHLY","QUARTERLY","YEARLY","RecurrenceFrequencies","name","value","every","SingleFrequency","ScheduleRepeatValue","specialSymbols","escapedSpecialSymbols","split","map","a","join","PaymentReferencePattern","USStates","abbreviation","BENEFICIARY_SELECTOR_MODAL","BENEFICIARY_LIST_SIZE","templates","form","review","currencies","minOccurrences","maxOccurences","maxDigits","charCounterConfig","description","maxChars","reference","capitalizeIfPrefix","str","prefix","Boolean","toUpperCase","substr","toPostalAddressModel","item","addressLine1","addressLine2","streetName","postCode","town","countrySubDivision","fromContactToBeneficiary","contact","postalAddress","bank","accountNumber","bankName","code","bankCode","flattenContactAccounts","contacts","resultContacts","accounts","account","Object","assign","accountName","alias","formatIban","acc","external","push","fromArrangementToContact","arrangement","BBAN","amount","currency","accountHolderName","bankBranchCode","bankAddressLine1","bankAddressLine2","bankStreetName","bankPostCode","bankTown","bankCountrySubDivision","remapObject","obj","keys","reduce","result","fromBeneficiaryToContact","beneficiary","getAddressText","accumulator","currentValue","trim","getDateOnly","dateArg","date","Date","month","String","getMonth","day","getDate","year","getFullYear","padStart","getRecurringTransactionDay","schedule","transferFrequency","startDate","getDay","fromModelToForm","payment","paymentForm","createdAt","data","id","debtorAccount","debitAccount","angular","copy","arrangementId","creditTransferTransactionInformation","length","creditInfo","instructedAmount","currencyCode","creditor","message","remittanceInformation","content","creditorBank","creditorAccount","identification","messageToBank","correspondentBank","paymentReference","endToEndIdentification","parseInt","endDate","repeat","endingType","requestedExecutionDate","stateContainer","router","intents","postActions","$filter","i18nFilter","dateFilter","getPaymentState","createSelector","state","saveNewContact","getContacts","getPayment","getCreditAccounts","creditAccounts","getSchedule","getBeneficiary","getBeneficiaryPostalAddress","getBeneficiaryBank","getBeneficiaryCorrespondentBank","getDebitAccounts","debitAccounts","getReview","getDraft","draft","getMinDate","minDate","daysInMonth","addDays","toDate","days","getTime","addWeeks","weeks","addYears","years","addMonths","months","newMonth","newYear","newDay","getScheduleText","words","today","setHours","isToday","multipleOccurrences","hasEnd","isEndingAfter","todayString","toLowerCase","hasLimitedOccurences","isMinOccurences","getFrequencies","concat","preferences","recurring","setEndDate","removeSelectedDebitAccount","selectedDebitAccount","groupAccounts","accountsList","totalItemsCount","internalAccounts","filter","externalAccounts","group","list","more","count","loadContactsByName","size","combinedAccounts","includes","Promise","resolve","slice","totalItems","selectContact","model","setBeneficiary","selectContactModal","resetContact","resetBeneficiary","setDefaultOcurrencesValue","getBeneficiaryAddressText","getBankAddressText","isNewContact","find","isBeneficiarySet","isSaveNewContactEnabled","formToContact","formToPayment","isSinglePayment","schemeName","isCorrespondentEnabled","paymentOrder","paymentMode","paymentType","urgent","instructionPriority","on","canSaveDraft","validations","hasUserErrors","$error","memo","current","purifyDraftPaymentData","purifiedPayment","credit","creditAcc","getDraftPayment","deleteDraft","then","closeEditDraft","originalDraft","currentDraft","equals","editConfirmOpened","updateDraft","postActionsOptions","key","postAction","type","NONE","selected","permission","CREATE","APPROVE","getPrivileges","privileges","isAllowedPaymentPrivilege","privilege","context","response","Payments","error","getPostActionsOptions","action","getApprovalNotification","success","level","getNotificationByType","msg","removeNotification","notification","notificationsList","paymentTypeOptions","label","US_DOMESTIC_WIRE","US_FOREIGN_WIRE","switchPaymentType","paymentHasChanged","showPaymentSelectorConfirmation","isModal","configValue","toggleModalSelector","ext","extension","isModalSelectorOpen","scrollToFirstError","firstError","$$controls","control","$invalid","$$element","bodyRect","document","body","getBoundingClientRect","elemRect","offset","top","navBar","querySelector","navBarRect","navBarStyles","window","getComputedStyle","position","height","scrollTo","behavior","reviewPayment","$ctrl","showSpecialValidationMessages","formUntouched","hasDebitAccount","hasBeneficiaryName","hasBeneficiaryMessage","hasBeneficiaryPostalAddress","hasBeneficiaryBank","bankPostalAddress","hasBeneficiaryBankPostalAddress","hasCorrespondentBank","hasAmountValue","parseFloat","hasPaymentReference","paymentStartDate","sameStartDate","getYear","template","getRoute","states","recurrenceEnding","singleFrequency","paymentReferencePattern","selectedPaymentType","show","hide","defaultPaymentType","defaultScheduleRepeat"],"mappings":"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","file":"ext-bus-initiate-payment-us-domestic-wire-ng/scripts/ext-bus-initiate-payment-us-domestic-wire-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-loading-overlay-ng\"), require(\"ui-bb-account-selector-ng\"), require(\"ui-bb-currency-input-ng\"), require(\"ui-bb-char-counter-ng\"), require(\"ui-bb-calendar-popup-ng\"), require(\"ui-bb-expandable-ng\"), require(\"vendor-bb-angular-ng-messages\"), require(\"vendor-bb-uib-alert\"), require(\"ui-bb-confirm-ng\"), require(\"ui-bb-autocomplete-search-ng\"), require(\"ui-bb-switcher-ng\"), require(\"vendor-bb-angular\"), require(\"vendor-bb-uib-popover\"), require(\"vendor-bb-angular-sanitize\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-parent-responsiveness-ng\"), require(\"ui-bb-credit-suggest-ng\"), require(\"ui-bb-button-spinner-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bus-format-amount-ng\"), require(\"ui-bb-submit-dropup-ng\"), require(\"ui-bus-beneficiary-select-modal-ng\"), require(\"ui-bb-form-navigate-away-ng\"), require(\"lib-bb-iban\"), require(\"ui-bb-dropdown-select-ng\"), require(\"ui-bb-bank-validations-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bus-initiate-payment-us-domestic-wire-ng\", [\"vendor-bb-angular-ng-aria\", \"ui-bb-i18n-ng\", \"ui-bb-loading-overlay-ng\", \"ui-bb-account-selector-ng\", \"ui-bb-currency-input-ng\", \"ui-bb-char-counter-ng\", \"ui-bb-calendar-popup-ng\", \"ui-bb-expandable-ng\", \"vendor-bb-angular-ng-messages\", \"vendor-bb-uib-alert\", \"ui-bb-confirm-ng\", \"ui-bb-autocomplete-search-ng\", \"ui-bb-switcher-ng\", \"vendor-bb-angular\", \"vendor-bb-uib-popover\", \"vendor-bb-angular-sanitize\", \"ui-bb-substitute-error-ng\", \"ui-bb-parent-responsiveness-ng\", \"ui-bb-credit-suggest-ng\", \"ui-bb-button-spinner-ng\", \"ui-bb-empty-state-ng\", \"ui-bb-notification-stripe-ng\", \"ui-bus-format-amount-ng\", \"ui-bb-submit-dropup-ng\", \"ui-bus-beneficiary-select-modal-ng\", \"ui-bb-form-navigate-away-ng\", \"lib-bb-iban\", \"ui-bb-dropdown-select-ng\", \"ui-bb-bank-validations-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bus-initiate-payment-us-domestic-wire-ng\"] = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-loading-overlay-ng\"), require(\"ui-bb-account-selector-ng\"), require(\"ui-bb-currency-input-ng\"), require(\"ui-bb-char-counter-ng\"), require(\"ui-bb-calendar-popup-ng\"), require(\"ui-bb-expandable-ng\"), require(\"vendor-bb-angular-ng-messages\"), require(\"vendor-bb-uib-alert\"), require(\"ui-bb-confirm-ng\"), require(\"ui-bb-autocomplete-search-ng\"), require(\"ui-bb-switcher-ng\"), require(\"vendor-bb-angular\"), require(\"vendor-bb-uib-popover\"), require(\"vendor-bb-angular-sanitize\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-parent-responsiveness-ng\"), require(\"ui-bb-credit-suggest-ng\"), require(\"ui-bb-button-spinner-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bus-format-amount-ng\"), require(\"ui-bb-submit-dropup-ng\"), require(\"ui-bus-beneficiary-select-modal-ng\"), require(\"ui-bb-form-navigate-away-ng\"), require(\"lib-bb-iban\"), require(\"ui-bb-dropdown-select-ng\"), require(\"ui-bb-bank-validations-ng\"));\n\telse\n\t\troot[\"ext-bus-initiate-payment-us-domestic-wire-ng\"] = factory(root[\"vendor-bb-angular-ng-aria\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-loading-overlay-ng\"], root[\"ui-bb-account-selector-ng\"], root[\"ui-bb-currency-input-ng\"], root[\"ui-bb-char-counter-ng\"], root[\"ui-bb-calendar-popup-ng\"], root[\"ui-bb-expandable-ng\"], root[\"vendor-bb-angular-ng-messages\"], root[\"vendor-bb-uib-alert\"], root[\"ui-bb-confirm-ng\"], root[\"ui-bb-autocomplete-search-ng\"], root[\"ui-bb-switcher-ng\"], root[\"vendor-bb-angular\"], root[\"vendor-bb-uib-popover\"], root[\"vendor-bb-angular-sanitize\"], root[\"ui-bb-substitute-error-ng\"], root[\"ui-bb-parent-responsiveness-ng\"], root[\"ui-bb-credit-suggest-ng\"], root[\"ui-bb-button-spinner-ng\"], root[\"ui-bb-empty-state-ng\"], root[\"ui-bb-notification-stripe-ng\"], root[\"ui-bus-format-amount-ng\"], root[\"ui-bb-submit-dropup-ng\"], root[\"ui-bus-beneficiary-select-modal-ng\"], root[\"ui-bb-form-navigate-away-ng\"], root[\"lib-bb-iban\"], root[\"ui-bb-dropdown-select-ng\"], root[\"ui-bb-bank-validations-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_25__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_29__, __WEBPACK_EXTERNAL_MODULE_37__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_80__, __WEBPACK_EXTERNAL_MODULE_81__, __WEBPACK_EXTERNAL_MODULE_82__, __WEBPACK_EXTERNAL_MODULE_83__, __WEBPACK_EXTERNAL_MODULE_93__, __WEBPACK_EXTERNAL_MODULE_96__, __WEBPACK_EXTERNAL_MODULE_97__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 59b29c6361f41ebec32c","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bus-initiate-payment-us-domestic-wire-ng/model.xml\n// module id = 0\n// module chunks = 9","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-aria\"\n// module id = 2\n// module chunks = 0 1 2 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 3\n// module chunks = 0 1 2 3 4 5 8 9 10 11 12 13 14 19 24","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-loading-overlay-ng\"\n// module id = 4\n// module chunks = 0 1 2 8 9 10 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-account-selector-ng\"\n// module id = 5\n// module chunks = 0 1 2 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-currency-input-ng\"\n// module id = 6\n// module chunks = 0 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-char-counter-ng\"\n// module id = 7\n// module chunks = 0 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-calendar-popup-ng\"\n// module id = 8\n// module chunks = 0 1 8 9 10 13 14 22","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-expandable-ng\"\n// module id = 9\n// module chunks = 0 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-messages\"\n// module id = 10\n// module chunks = 0 1 3 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-alert\"\n// module id = 12\n// module chunks = 0 1 8 9 10 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-confirm-ng\"\n// module id = 13\n// module chunks = 0 1 2 8 9 10 11 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-autocomplete-search-ng\"\n// module id = 14\n// module chunks = 0 9 10 13 14 21","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-switcher-ng\"\n// module id = 16\n// module chunks = 0 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 18\n// module chunks = 0 8 9 10 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-popover\"\n// module id = 23\n// module chunks = 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_24__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-sanitize\"\n// module id = 24\n// module chunks = 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_25__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-substitute-error-ng\"\n// module id = 25\n// module chunks = 1 2 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_26__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-parent-responsiveness-ng\"\n// module id = 26\n// module chunks = 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-credit-suggest-ng\"\n// module id = 27\n// module chunks = 1 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_29__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-button-spinner-ng\"\n// module id = 29\n// module chunks = 1 8 9 10 23","module.exports = __WEBPACK_EXTERNAL_MODULE_37__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-empty-state-ng\"\n// module id = 37\n// module chunks = 2 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-notification-stripe-ng\"\n// module id = 39\n// module chunks = 2 8 9 10 11 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_80__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bus-format-amount-ng\"\n// module id = 80\n// module chunks = 8 9 10 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_81__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-submit-dropup-ng\"\n// module id = 81\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_82__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bus-beneficiary-select-modal-ng\"\n// module id = 82\n// module chunks = 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_83__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-form-navigate-away-ng\"\n// module id = 83\n// module chunks = 8 9 10","/**\n * @module ext-bus-initiate-payment-us-domestic-wire-ng\n *\n * @extends module:widget-bb-initiate-us-payment-ng.Extension\n *\n */\nimport ngAriaModuleKey from 'vendor-bb-angular-ng-aria';\nimport ngSanitizeKey from 'vendor-bb-angular-sanitize';\nimport i18nKey from 'ui-bb-i18n-ng';\nimport uiBbSubstituteErrorKey from 'ui-bb-substitute-error-ng';\nimport vendorBbUibAlertKey from 'vendor-bb-uib-alert';\nimport uiBbLoadingOverlayKey from 'ui-bb-loading-overlay-ng';\nimport uiBbAccountSelectorKey from 'ui-bb-account-selector-ng';\nimport uiBbCreditSuggestKey from 'ui-bb-credit-suggest-ng';\nimport bbAngularNgMessagesKey from 'vendor-bb-angular-ng-messages';\nimport uiBbCurrencyInputKey from 'ui-bb-currency-input-ng';\nimport uiBbParentResponsivenessKey from 'ui-bb-parent-responsiveness-ng';\nimport uibPopoverKey from 'vendor-bb-uib-popover';\nimport uiBusFormatAmountKey from 'ui-bus-format-amount-ng';\nimport uiBbCharCounterKey from 'ui-bb-char-counter-ng';\nimport uiBbExpandableKey from 'ui-bb-expandable-ng';\nimport uiBbCalendarPopupKey from 'ui-bb-calendar-popup-ng';\nimport uiBbDropdownSelectKey from 'ui-bb-dropdown-select-ng';\nimport uiBbConfirmKey from 'ui-bb-confirm-ng';\nimport uiBbSwitcherKey from 'ui-bb-switcher-ng';\nimport uiBbAutocompleteSearchKey from 'ui-bb-autocomplete-search-ng';\nimport uiBbBankValidationsKey from 'ui-bb-bank-validations-ng';\nimport uiBbSubmitDropupKey from 'ui-bb-submit-dropup-ng';\nimport uiBbEmptyStateKey from 'ui-bb-empty-state-ng';\nimport uiBbNotificationStripeKey from 'ui-bb-notification-stripe-ng';\nimport uiBusBeneficiarySelectModalNg from 'ui-bus-beneficiary-select-modal-ng';\nimport uiBbButtonSpinnerNg from 'ui-bb-button-spinner-ng';\nimport uiBbFormNavigateAwayNg from 'ui-bb-form-navigate-away-ng';\n\n/**\n * @name intents\n * @type {module:lib-bb-extension-intents-ng.ExtensionIntents}\n */\nexport { default as intents } from './intents';\n\n/**\n * @name helpers\n * @type {module:lib-bb-extension-helpers-ng.ExtensionHelpers}\n */\nexport { default as helpers } from './helpers';\n\n/**\n * @name events\n * @type {module:lib-bb-extension-events-ng.ExtensionEvents}\n */\nexport { default as events } from './events';\nexport { default as hooks } from './hooks';\n\nexport const dependencyKeys = [\n  ngAriaModuleKey,\n  ngSanitizeKey,\n  i18nKey,\n  uiBbSubstituteErrorKey,\n  vendorBbUibAlertKey,\n  uiBbLoadingOverlayKey,\n  uiBbAccountSelectorKey,\n  uiBbCreditSuggestKey,\n  bbAngularNgMessagesKey,\n  uiBbCurrencyInputKey,\n  uiBbParentResponsivenessKey,\n  uibPopoverKey,\n  uiBusFormatAmountKey,\n  uiBbCharCounterKey,\n  uiBbExpandableKey,\n  uiBbCalendarPopupKey,\n  uiBbDropdownSelectKey,\n  uiBbConfirmKey,\n  uiBbSwitcherKey,\n  uiBbAutocompleteSearchKey,\n  uiBbBankValidationsKey,\n  uiBbSubmitDropupKey,\n  uiBbEmptyStateKey,\n  uiBbNotificationStripeKey,\n  uiBusBeneficiarySelectModalNg,\n  uiBbButtonSpinnerNg,\n  uiBbFormNavigateAwayNg,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/index.js","import { Intent } from './constants';\nimport { fromModelToForm } from './helpers';\n/**\n * @name Intents\n * @type {Object}\n */\nexport default ({ handleRequest, createRequest, service }) => ({\n  /**\n   * @name Intents#initiatePayment\n   * @description Handles the intent to initiate a payment\n   * @type {function}\n   * @param {Object} initialPaymentData Initial payment\n   */\n  initiatePayment: handleRequest(Intent.INITIATE_PAYMENT, (initialPaymentData) => {\n    service.setDraftPayment(fromModelToForm(initialPaymentData));\n  }),\n\n  /**\n   * @name Intents#viewPaymentOrders\n   * @description The intent to view payment orders.\n   * @type {function}\n   */\n  viewPaymentOrders: createRequest(Intent.VIEW_PAYMENT_ORDERS),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/intents.js","/**\n * @name Constants\n * @type {object}\n */\n\n/**\n * @description\n * Widget name\n *\n * @name Constants#WidgetName\n * @type {string}\n */\nexport const WidgetName = 'widget-bb-initiate-us-payment-ng';\n\n/**\n * @description\n * Payment type identifier\n *\n * @name Constants#PaymentType\n * @type {string}\n */\nexport const PaymentType = 'US_DOMESTIC_WIRE';\n\n/**\n * @description\n * Widget recurrence ending enum\n *\n * @name Constants#RecurrenceEnding\n * @type {object}\n */\nexport const RecurrenceEnding = {\n  NEVER: 'NEVER',\n  ON: 'ON',\n  AFTER: 'AFTER',\n};\n\n/**\n * @description\n * Widget transfer frequencies enum\n *\n * @name Constants#TransferFrequency\n * @type {object}\n */\nexport const TransferFrequency = {\n  ONCE: 'ONCE',\n  DAILY: 'DAILY',\n  WEEKLY: 'WEEKLY',\n  MONTHLY: 'MONTHLY',\n  QUARTERLY: 'QUARTERLY',\n  YEARLY: 'YEARLY',\n};\n\n/**\n * @description\n * Array of recurring frequency objects with the following properties (all mandatory)\n *\n * @property {string} name Translation key of the label\n * that will be displayed to the end user\n * @property {string} value Denotes frequency type of transfer.\n * Possible values: DAILY/WEEKLY/MONTHLY/YEARLY\n * @property {number} every Indicates skip interval of transfer.\n * 1 would mean execute every time, 2 - every other time\n *\n * @example\n * {\n *   name: 'form.schedule.frequency.weekly',\n *   value: 'WEEKLY',\n *   every: 1,\n * },\n * {\n *   name: 'form.schedule.frequency.bi.weekly',\n *   value: 'WEEKLY',\n *   every: 2,\n * }\n *\n * @name Constants#RecurrenceFrequencies\n * @type {array}\n */\nexport const RecurrenceFrequencies = [\n  {\n    name: 'form.schedule.frequency.daily',\n    value: TransferFrequency.DAILY,\n    every: 1,\n  },\n  {\n    name: 'form.schedule.frequency.weekly',\n    value: TransferFrequency.WEEKLY,\n    every: 1,\n  },\n  {\n    name: 'form.schedule.frequency.monthly',\n    value: TransferFrequency.MONTHLY,\n    every: 1,\n  },\n  {\n    name: 'form.schedule.frequency.quarterly',\n    value: TransferFrequency.QUARTERLY,\n    every: 1,\n  },\n  {\n    name: 'form.schedule.frequency.annually',\n    value: TransferFrequency.YEARLY,\n    every: 1,\n  },\n];\n\n/**\n * @description\n * Object representing single payment\n *\n * @property {string} name Translation key of the label\n * that will be displayed to the end user\n * @property {string} value Denotes frequency, holds value 'ONCE'\n *\n * @name Constants#SingleFrequency\n * @type {object}\n */\nexport const SingleFrequency = {\n  name: 'form.schedule.frequency.once',\n  value: TransferFrequency.ONCE,\n};\n\n/**\n * @description\n * Minimum ocurrences value by default\n * @name Constants#ScheduleRepeatValue\n * @type {Number}\n */\nexport const ScheduleRepeatValue = 2;\n\nconst specialSymbols = \"/-?:().,'+\";\nconst escapedSpecialSymbols = specialSymbols.split('').map((a) => `|\\\\${a}`).join('');\n\n/**\n * @description\n * Pattern for payment reference validation\n * @name Constants#PaymentReferencePattern\n * @type {string}\n */\nexport const PaymentReferencePattern = `^(\\\\w|\\\\d| ${escapedSpecialSymbols})*$`;\n\n\n/**\n * @description\n * List of United States of America states\n *\n * @property {string} name Full state name\n * @property {string} abbreviation Two character state identifier\n *\n * @example\n * [\n *   {\n *     name: 'Alabama',\n *     abbreviation: 'AL',\n *   },\n *   ...\n *   {\n *     name: 'New York',\n *     abbreviation: 'NY',\n *   },\n * ]\n *\n * @name Constants#USStates\n * @type {array}\n */\nexport const USStates = [\n  {\n    name: 'Alabama',\n    abbreviation: 'AL',\n  },\n  {\n    name: 'Alaska',\n    abbreviation: 'AK',\n  },\n  {\n    name: 'American Samoa',\n    abbreviation: 'AS',\n  },\n  {\n    name: 'Arizona',\n    abbreviation: 'AZ',\n  },\n  {\n    name: 'Arkansas',\n    abbreviation: 'AR',\n  },\n  {\n    name: 'California',\n    abbreviation: 'CA',\n  },\n  {\n    name: 'Colorado',\n    abbreviation: 'CO',\n  },\n  {\n    name: 'Connecticut',\n    abbreviation: 'CT',\n  },\n  {\n    name: 'Delaware',\n    abbreviation: 'DE',\n  },\n  {\n    name: 'District Of Columbia',\n    abbreviation: 'DC',\n  },\n  {\n    name: 'Federated States Of Micronesia',\n    abbreviation: 'FM',\n  },\n  {\n    name: 'Florida',\n    abbreviation: 'FL',\n  },\n  {\n    name: 'Georgia',\n    abbreviation: 'GA',\n  },\n  {\n    name: 'Guam',\n    abbreviation: 'GU',\n  },\n  {\n    name: 'Hawaii',\n    abbreviation: 'HI',\n  },\n  {\n    name: 'Idaho',\n    abbreviation: 'ID',\n  },\n  {\n    name: 'Illinois',\n    abbreviation: 'IL',\n  },\n  {\n    name: 'Indiana',\n    abbreviation: 'IN',\n  },\n  {\n    name: 'Iowa',\n    abbreviation: 'IA',\n  },\n  {\n    name: 'Kansas',\n    abbreviation: 'KS',\n  },\n  {\n    name: 'Kentucky',\n    abbreviation: 'KY',\n  },\n  {\n    name: 'Louisiana',\n    abbreviation: 'LA',\n  },\n  {\n    name: 'Maine',\n    abbreviation: 'ME',\n  },\n  {\n    name: 'Marshall Islands',\n    abbreviation: 'MH',\n  },\n  {\n    name: 'Maryland',\n    abbreviation: 'MD',\n  },\n  {\n    name: 'Massachusetts',\n    abbreviation: 'MA',\n  },\n  {\n    name: 'Michigan',\n    abbreviation: 'MI',\n  },\n  {\n    name: 'Minnesota',\n    abbreviation: 'MN',\n  },\n  {\n    name: 'Mississippi',\n    abbreviation: 'MS',\n  },\n  {\n    name: 'Missouri',\n    abbreviation: 'MO',\n  },\n  {\n    name: 'Montana',\n    abbreviation: 'MT',\n  },\n  {\n    name: 'Nebraska',\n    abbreviation: 'NE',\n  },\n  {\n    name: 'Nevada',\n    abbreviation: 'NV',\n  },\n  {\n    name: 'New Hampshire',\n    abbreviation: 'NH',\n  },\n  {\n    name: 'New Jersey',\n    abbreviation: 'NJ',\n  },\n  {\n    name: 'New Mexico',\n    abbreviation: 'NM',\n  },\n  {\n    name: 'New York',\n    abbreviation: 'NY',\n  },\n  {\n    name: 'North Carolina',\n    abbreviation: 'NC',\n  },\n  {\n    name: 'North Dakota',\n    abbreviation: 'ND',\n  },\n  {\n    name: 'Northern Mariana Islands',\n    abbreviation: 'MP',\n  },\n  {\n    name: 'Ohio',\n    abbreviation: 'OH',\n  },\n  {\n    name: 'Oklahoma',\n    abbreviation: 'OK',\n  },\n  {\n    name: 'Oregon',\n    abbreviation: 'OR',\n  },\n  {\n    name: 'Palau',\n    abbreviation: 'PW',\n  },\n  {\n    name: 'Pennsylvania',\n    abbreviation: 'PA',\n  },\n  {\n    name: 'Puerto Rico',\n    abbreviation: 'PR',\n  },\n  {\n    name: 'Rhode Island',\n    abbreviation: 'RI',\n  },\n  {\n    name: 'South Carolina',\n    abbreviation: 'SC',\n  },\n  {\n    name: 'South Dakota',\n    abbreviation: 'SD',\n  },\n  {\n    name: 'Tennessee',\n    abbreviation: 'TN',\n  },\n  {\n    name: 'Texas',\n    abbreviation: 'TX',\n  },\n  {\n    name: 'Utah',\n    abbreviation: 'UT',\n  },\n  {\n    name: 'Vermont',\n    abbreviation: 'VT',\n  },\n  {\n    name: 'Virgin Islands',\n    abbreviation: 'VI',\n  },\n  {\n    name: 'Virginia',\n    abbreviation: 'VA',\n  },\n  {\n    name: 'Washington',\n    abbreviation: 'WA',\n  },\n  {\n    name: 'West Virginia',\n    abbreviation: 'WV',\n  },\n  {\n    name: 'Wisconsin',\n    abbreviation: 'WI',\n  },\n  {\n    name: 'Wyoming',\n    abbreviation: 'WY',\n  },\n];\n\n/**\n * @name Constants#Intent\n * @description\n *\n * @type {Object}\n */\nexport const Intent = {\n  INITIATE_PAYMENT: 'intent.bus.paymentOrder.usDomesticWirePayment.initiate',\n  VIEW_PAYMENT_ORDERS: 'view.account.managePayments',\n};\n\n/**\n * @name BENEFICIARY_SELECTOR_MODAL\n * @type {String}\n * @description\n * Beneficiary selector modal type\n */\nexport const BENEFICIARY_SELECTOR_MODAL = 'modal';\n\n/**\n * @name BENEFICIARY_LIST_SIZE\n * @type {number}\n * @description\n * Max number of item that should be visible in beneficiary account seleter listbox\n */\nexport const BENEFICIARY_LIST_SIZE = 10;\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/constants.js","/* globals window, document */\nimport angular from 'vendor-bb-angular';\nimport { isValidIBAN, formatByGroups } from 'lib-bb-iban';\n\nimport {\n  SingleFrequency,\n  RecurrenceFrequencies,\n  RecurrenceEnding,\n  TransferFrequency,\n  ScheduleRepeatValue,\n  PaymentReferencePattern,\n  WidgetName,\n  USStates,\n  BENEFICIARY_SELECTOR_MODAL,\n  BENEFICIARY_LIST_SIZE,\n} from './constants';\n\nconst templates = {\n  form: `#${WidgetName}/form.html`,\n  review: `#${WidgetName}/review.html`,\n};\n\nconst currencies = [];\nconst minOccurrences = ScheduleRepeatValue;\nconst maxOccurences = 200;\nconst maxDigits = 13;\n\nconst charCounterConfig = {\n  description: {\n    maxChars: 140,\n  },\n  reference: {\n    maxChars: 35,\n  },\n};\n\nconst capitalizeIfPrefix = (str, prefix) => (\n  !Boolean(prefix) || !str ? str : `${prefix}${str[0].toUpperCase()}${str.substr(1)}`\n);\n\nconst toPostalAddressModel = (item, prefix = '') => ({\n  addressLine1: item[capitalizeIfPrefix('addressLine1', prefix)],\n  addressLine2: item[capitalizeIfPrefix('addressLine2', prefix)],\n  streetName: item[capitalizeIfPrefix('streetName', prefix)],\n  postCode: item[capitalizeIfPrefix('postCode', prefix)],\n  town: item[capitalizeIfPrefix('town', prefix)],\n  countrySubDivision: item[capitalizeIfPrefix('countrySubDivision', prefix)],\n});\n\nconst fromContactToBeneficiary = (contact) => ({\n  postalAddress: toPostalAddressModel(contact),\n  bank: {\n    accountNumber: contact.accountNumber,\n    name: contact.bankName,\n    code: contact.bankCode,\n    postalAddress: toPostalAddressModel(contact, 'bank'),\n  },\n});\n\nconst flattenContactAccounts = (contacts) => {\n  const resultContacts = [];\n  for (const contact of contacts) {\n    for (const account of contact.accounts) {\n      Object.assign(account, {\n        ...contact,\n        // following line overwrites account.accountName with this preference\n        accountName: account.accountName || account.name || account.alias,\n        formatIban: (acc) => (isValidIBAN(acc) ? formatByGroups(acc) : acc),\n        external: true,\n      });\n      resultContacts.push(account);\n    }\n  }\n\n  return resultContacts;\n};\n\nconst fromArrangementToContact = (arrangement) => ({\n  name: arrangement.name,\n  ...toPostalAddressModel(arrangement, 'accountHolder'),\n  accountNumber: arrangement.BBAN,\n  amount: arrangement.amount,\n  currency: arrangement.currency,\n  bankName: arrangement.accountHolderName,\n  bankCode: arrangement.bankBranchCode,\n  bankAddressLine1: arrangement.addressLine1,\n  bankAddressLine2: arrangement.addressLine2,\n  bankStreetName: arrangement.streetName,\n  bankPostCode: arrangement.postCode,\n  bankTown: arrangement.town,\n  bankCountrySubDivision: arrangement.countrySubDivision,\n});\n\n/**\n * @name remapObject\n * @description\n * Takes an object and return new object with same properties, but adding\n * prefix to property name, property name will be camelcase.\n * @type {Function}\n * @inner\n * @param {Object} obj Input object to remap\n * @param {String} prefix Prefix text to prepend to every property\n * @returns {Object} Output object with renamed properties\n */\nconst remapObject = (obj, prefix) => Object.keys(obj)\n  .reduce((result, name) => Object.assign(result, {\n    [capitalizeIfPrefix(name, prefix)]: obj[name],\n  }), {});\n\nconst fromBeneficiaryToContact = (beneficiary) => ({\n  name: beneficiary.name,\n  ...beneficiary.postalAddress,\n  accounts: [{\n    name: beneficiary.name,\n    bankName: beneficiary.bank.name,\n    accountNumber: beneficiary.bank.accountNumber,\n    bankCode: beneficiary.bank.code,\n    ...remapObject(beneficiary.bank.postalAddress, 'bank'),\n  }],\n});\n\nconst getAddressText = (postalAddress) => [\n  postalAddress.addressLine1,\n  postalAddress.addressLine2,\n  postalAddress.streetName,\n  postalAddress.postCode,\n  postalAddress.town,\n  postalAddress.countrySubDivision,\n].reduce((accumulator, currentValue) => {\n  if (typeof currentValue === 'string' && currentValue.trim()) {\n    accumulator.push(currentValue.trim());\n  }\n  return accumulator;\n}, []).join(', ');\n\n/**\n * @name getDateOnly\n * @inner\n * @type {function}\n *\n * @description\n * Parses a javascript date to a yyyy-MM-DD format string, dropping time and timezone information.\n *\n * @param {date} dateArg the date to parse\n * @returns {string} the formatted string/date\n */\nconst getDateOnly = (dateArg) => {\n  if (!dateArg) {\n    return null;\n  }\n  const date = new Date(dateArg);\n\n  const month = String(date.getMonth() + 1);\n  const day = String(date.getDate());\n  const year = String(date.getFullYear());\n\n  return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n};\n\n/**\n * @name getRecurringTransactionDay\n * @inner\n * @type {function}\n *\n * @description\n * Denotes day on which transfer should be executed.\n * For weekly it will be 1..7 indicating weekday.\n * For monthly it will be 1..31 indicating day of month.\n * For yearly it will be 1..12 indicating month of the year\n *\n * @param {object} schedule Recurring payment schedule object\n * @returns {number} Recurring transaction day\n */\nconst getRecurringTransactionDay = schedule => {\n  switch (schedule.transferFrequency.value) {\n    case TransferFrequency.YEARLY:\n      return schedule.startDate.getMonth() + 1;\n    case TransferFrequency.MONTHLY:\n      return schedule.startDate.getDate();\n    default:\n      return schedule.startDate.getDay() + 1;\n  }\n};\n\n/**\n * @name Helpers#fromModelToForm\n * @description\n * Transforms payment model coming from server to for model\n * @type {Function}\n * @param {Object} payment Payment model from server\n * @returns {Object} Transformed payment\n */\nexport const fromModelToForm = (payment) => {\n  const paymentForm = {\n    createdAt: payment.createdAt ? new Date(payment.createdAt) : null,\n    data: {\n      id: payment.id ? payment.id : null,\n    },\n  };\n\n  // select debtor info\n  if (payment.debtorAccount) {\n    paymentForm.data.debitAccount = {\n      ...angular.copy(payment.debtorAccount),\n      id: payment.debtorAccount.arrangementId,\n    };\n  }\n\n  // creditor info\n  if (payment.creditTransferTransactionInformation &&\n    payment.creditTransferTransactionInformation.length) {\n    const creditInfo = payment.creditTransferTransactionInformation[0];\n    // amount and currency\n    if (creditInfo.instructedAmount) {\n      Object.assign(paymentForm.data, {\n        amount: {\n          currency: creditInfo.instructedAmount.currencyCode || null,\n          value: creditInfo.instructedAmount.amount || null,\n        },\n      });\n    }\n\n    Object.assign(paymentForm.data, {\n      beneficiary: {\n        name: creditInfo.creditor ? creditInfo.creditor.name : null,\n        postalAddress: creditInfo.creditor ? creditInfo.creditor.postalAddress : null,\n        message: creditInfo.remittanceInformation ? creditInfo.remittanceInformation.content : null,\n        bank: {\n          name: creditInfo.creditorBank ? creditInfo.creditorBank.name : null,\n          accountNumber: creditInfo.creditorAccount && creditInfo.creditorAccount.identification\n            ? creditInfo.creditorAccount.identification.identification : null,\n          code: creditInfo.creditorBank ? creditInfo.creditorBank.bankBranchCode : null,\n          postalAddress: creditInfo.creditorBank ? creditInfo.creditorBank.postalAddress : null,\n          message: creditInfo.messageToBank || null,\n        },\n      },\n    });\n\n    if (creditInfo.correspondentBank) {\n      Object.assign(paymentForm.data.beneficiary, {\n        correspondentBank: {\n          name: creditInfo.correspondentBank.name || null,\n          code: creditInfo.correspondentBank.bankBranchCode,\n        },\n      });\n    }\n\n    // reference and description\n    Object.assign(paymentForm.data, {\n      paymentReference: creditInfo.endToEndIdentification || null,\n    });\n  }\n\n  // schedule\n  if (payment.schedule) {\n    Object.assign(paymentForm.data, {\n      schedule: {\n        transferFrequency: {\n          value: payment.schedule.transferFrequency,\n        },\n      },\n    });\n\n    if (payment.schedule.transferFrequency === 'WEEKLY') {\n      paymentForm.data.schedule.transferFrequency.name = 'form.schedule.frequency.weekly';\n    } else if (payment.schedule.transferFrequency === 'DAILY') {\n      paymentForm.data.schedule.transferFrequency.name = 'form.schedule.frequency.daily';\n    } else if (payment.schedule.transferFrequency === 'MONTHLY') {\n      paymentForm.data.schedule.transferFrequency.name = 'form.schedule.frequency.monthly';\n    } else if (payment.schedule.transferFrequency === 'QUARTERLY') {\n      paymentForm.data.schedule.transferFrequency.name = 'form.schedule.frequency.quarterly';\n    } else if (payment.schedule.transferFrequency === 'YEARLY') {\n      paymentForm.data.schedule.transferFrequency.name = 'form.schedule.frequency.annually';\n    }\n\n    paymentForm.data.schedule.startDate = payment.schedule.startDate ?\n      new Date(payment.schedule.startDate) : null;\n\n    if (payment.schedule.every) {\n      paymentForm.data.schedule.transferFrequency.every = parseInt(payment.schedule.every, 10);\n    }\n\n    if (payment.schedule.endDate) {\n      paymentForm.data.schedule.endDate = new Date(payment.schedule.endDate);\n    }\n\n    if (payment.schedule.repeat) {\n      paymentForm.data.schedule.repeat = payment.schedule.repeat;\n      paymentForm.data.endingType = RecurrenceEnding.AFTER;\n    } else if (payment.schedule.endDate) {\n      paymentForm.data.endingType = RecurrenceEnding.ON;\n    }\n  } else {\n    Object.assign(paymentForm.data, {\n      endingType: RecurrenceEnding.NEVER,\n      schedule: {\n        transferFrequency: angular.copy(SingleFrequency),\n        startDate: new Date(payment.requestedExecutionDate),\n        endDate: new Date(payment.requestedExecutionDate),\n      },\n    });\n  }\n\n  return paymentForm;\n};\n\n/**\n * @name Helpers\n * @type {object}\n */\nexport default ({ service, stateContainer, router, intents, postActions, $filter }) => {\n  const i18nFilter = $filter('i18n');\n  const dateFilter = $filter('date');\n\n  /**\n   * @description\n   * Retrieve payment state\n   * @name getPaymentState\n   * @inner\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getPaymentState = stateContainer.createSelector((state) => state.payment);\n\n  /**\n   * @description\n   * Retrieve save new contact flag from state\n   * @name saveNewContact\n   * @inner\n   * @type {Function}\n   * @returns {Boolean}\n   */\n  const saveNewContact = stateContainer.createSelector((state) => state.payment.saveNewContact);\n\n  /**\n   * @description\n   * Retrieve payment data from state store\n   * @name Helpers#getContacts\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getContacts = stateContainer.createSelector((state) => state.contacts.data);\n\n  /**\n   * @description\n   * Retrieve payment data from state store\n   * @name Helpers#getPayment\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getPayment = stateContainer.createSelector((state) => state.payment.data);\n\n  /**\n   * @description\n   * Retrieve credit accounts data from state store\n   * @name Helpers#getCreditAccounts\n   * @type {Function}\n   * @returns {Array}\n   */\n  const getCreditAccounts = stateContainer.createSelector((state) => state.creditAccounts.data);\n\n  /**\n   * @description\n   * Retrieve payment schedule data from state store\n   * @name Helpers#getSchedule\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getSchedule = stateContainer.createSelector(() => getPayment().schedule);\n\n  /**\n   * @description\n   * Retrieve payment beneficiary data from state store\n   * @name Helpers#getBeneficiary\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getBeneficiary = stateContainer.createSelector(() => getPayment().beneficiary);\n\n  /**\n   * @description\n   * Retrieve beneficiary postalAddress data from state store\n   * @name Helpers#getBeneficiaryPostalAddress\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getBeneficiaryPostalAddress = stateContainer.createSelector(\n    () => getBeneficiary().postalAddress\n  );\n\n  /**\n   * @description\n   * Retrieve beneficiary bank data from state store\n   * @name Helpers#getBeneficiaryBank\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getBeneficiaryBank = stateContainer.createSelector(() => getBeneficiary().bank);\n\n  /**\n   * @description\n   * Retrieve beneficiary correspondent bank data from state store\n   * @name Helpers#getBeneficiaryCorrespondentBank\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getBeneficiaryCorrespondentBank = stateContainer.createSelector(\n    () => getBeneficiary().correspondentBank\n  );\n\n  /**\n   * @description\n   * Retrieve debit accounts data from state store\n   * @name Helpers#getDebitAccounts\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getDebitAccounts = stateContainer.createSelector((state) => state.debitAccounts);\n\n  /**\n   * @description\n   * Retrieve review from state store\n   * @name Helpers#getReview\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getReview = stateContainer.createSelector((state) => state.review);\n\n  /**\n   * @description\n   * Retrieve draft from state store\n   * @name getDraft\n   * @inner\n   * @type {Function}\n   * @returns {Object}\n   */\n  const getDraft = stateContainer.createSelector((state) => state.draft);\n\n  /**\n   * @name Helpers#getMinDate\n   * @type {function}\n   * @description\n   * Get the minimum available date for specific frequency\n   *\n   * @param {date} startDate\n   * @param {object} transferFrequency\n   * @return {date}\n   */\n  const getMinDate = (startDate, transferFrequency = {}) => {\n    let minDate;\n\n    const daysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\n    const addDays = (toDate, days) => new Date(toDate.getTime() + (days * 24 * 60 * 60 * 1000));\n    const addWeeks = (toDate, weeks) => addDays(toDate, weeks * 7);\n    const addYears = (toDate, years) => new Date(toDate.getFullYear() + years,\n      toDate.getMonth(), (toDate.getDate() > daysInMonth(toDate.getMonth(),\n        toDate.getFullYear()) ? daysInMonth(toDate.getMonth(),\n          toDate.getFullYear()) : toDate.getDate()));\n    const addMonths = (toDate, months) => {\n      const newMonth = toDate.getMonth() + months + 1 > 12 ?\n        ((toDate.getMonth() + months + 1) % 12) - 1 : toDate.getMonth() + months;\n      const newYear = toDate.getMonth() + months + 1 > 12 ?\n        addYears(toDate, 1).getFullYear() : toDate.getFullYear();\n      const newDay = toDate.getDate() > daysInMonth(newMonth, newYear) ?\n        daysInMonth(newMonth, newYear) : toDate.getDate();\n      return new Date(newYear, newMonth, newDay);\n    };\n\n    switch (transferFrequency.value) {\n      case 'DAILY':\n        minDate = addDays(startDate, transferFrequency.every);\n        break;\n      case 'WEEKLY':\n        minDate = addWeeks(startDate, transferFrequency.every);\n        break;\n      case 'MONTHLY':\n        minDate = addMonths(startDate, transferFrequency.every);\n        break;\n      case 'QUARTERLY':\n        minDate = addMonths(startDate, (transferFrequency.every * 3));\n        break;\n      case 'YEARLY':\n        minDate = addYears(startDate, transferFrequency.every);\n        break;\n      default:\n        minDate = startDate;\n    }\n\n    return minDate;\n  };\n\n  /**\n   * @description\n   * Compiles the scheduling description out of payment object params.\n   * In this process, following translation keys are being used:\n   * form.schedule.starting, for word \"Starting\"\n   * form.schedule.today, for word \"Today\"\n   * form.schedule.on, for word \"On\" (used before date to form \"on 01.01.2017\")\n   * form.schedule.until, for word \"until\" (used before date to form \"until 01.01.2017\")\n   * form.schedule.repeat.count, for word \"times\" (used after repeat count to form \"5 times\")\n   * and name of the transfer frequency set in constants file\n   *\n   * @name Helpers#getScheduleText\n   * @type {function}\n   * @returns {string} Compiled text that can be used as scheduling value in views\n   */\n  const getScheduleText = () => {\n    const payment = getPayment();\n    const schedule = getSchedule();\n    const words = [];\n    const today = (new Date()).setHours(0, 0, 0, 0);\n    const startDate = new Date(schedule.startDate);\n    const isToday = startDate.setHours(0, 0, 0, 0) === today;\n    const multipleOccurrences = schedule.transferFrequency.value !== TransferFrequency.ONCE;\n    const hasEnd = payment.endingType !== RecurrenceEnding.NEVER;\n    const isEndingAfter = payment.endingType === RecurrenceEnding.AFTER;\n\n    // add frequency\n    words.push(i18nFilter(schedule.transferFrequency.name));\n    words.push('-');\n\n    // if there are multiple occurrences, add word starting\n    if (multipleOccurrences) {\n      words.push(i18nFilter('form.schedule.starting'));\n    }\n\n    // if start date is today use word instead of date\n    if (isToday) {\n      let todayString = i18nFilter('form.schedule.today');\n      // for multiple occurrences, there is a prefix word, so this on should be lowercase\n      if (multipleOccurrences) {\n        todayString = todayString.toLowerCase();\n      }\n\n      words.push(todayString);\n    }\n\n    // for single transfer in the future, we need prefix word on\n    if (!multipleOccurrences && !isToday) {\n      words.push(i18nFilter('form.schedule.on').toLowerCase());\n    }\n\n    if (!isToday) {\n      words.push(dateFilter(schedule.startDate));\n    }\n\n    const hasLimitedOccurences = hasEnd && multipleOccurrences;\n    const isMinOccurences = !schedule.repeat || schedule.repeat < minOccurrences;\n\n    // if there are limited number of occurrences,\n    // add comma for the last word, so that there is no space between them\n    if (hasLimitedOccurences && !(isEndingAfter && isMinOccurences)) {\n      words[words.length - 1] += ',';\n    }\n\n    if (hasEnd && multipleOccurrences) {\n      // there is an end for this schedule\n      // based on the type of ending construct words differently\n      if (payment.endingType === RecurrenceEnding.ON) {\n        words.push(i18nFilter('form.schedule.until'));\n        words.push(dateFilter(schedule.endDate));\n      } else if (schedule.repeat >= minOccurrences) {\n        words.push(schedule.repeat);\n        words.push(schedule.repeat ? i18nFilter('form.schedule.repeat.count') : '');\n      }\n    }\n\n    // output everything together\n    return words.join(' ');\n  };\n\n  /**\n   * @description\n   * Returns frequencies for payment depending on occurences number\n   *\n   * @name Helpers#getFrequencies\n   * @type {function}\n   * @returns {array<object>} Array of transfer frequencies\n   */\n  const getFrequencies = stateContainer.createSelector(\n    (state) => [SingleFrequency]\n      .concat(state.preferences.recurring ? RecurrenceFrequencies : [])\n  );\n\n  /**\n   * @description\n   * Updates scheduled end date\n   *\n   * @name Helpers#setEndDate\n   * @type {function}\n   */\n  const setEndDate = () => {\n    const schedule = getSchedule();\n    schedule.endDate = getMinDate(schedule.startDate, schedule.transferFrequency);\n  };\n\n  /**\n   * @description\n   * Check that `account` is not in the current list of beneficiaries\n   * @name removeSelectedDebitAccount\n   * @type {Function}\n   * @inner\n   * @param {Object} account The debit account to check\n   * @returns {Boolean}\n   */\n  const removeSelectedDebitAccount = (account) => {\n    const selectedDebitAccount = getPayment().debitAccount;\n    if (!selectedDebitAccount || !selectedDebitAccount.BBAN) {\n      return true;\n    }\n\n    return account.BBAN !== selectedDebitAccount.BBAN;\n  };\n\n  /**\n   * @inner\n   * @name groupAccounts\n   * @type {Function}\n   *\n   * @description\n   * Restructure the accounts' list by adding an extra item to that list\n   * just before the start of each group of accounts,that extra item\n   * represents the group.\n   *\n   * @param {Array} accountsList\n   * @param {Number} totalItemsCount\n   * @returns {Array}\n   */\n  const groupAccounts = (accountsList, totalItemsCount) => {\n    let internalAccounts = accountsList.filter(account => !account.external);\n    let externalAccounts = accountsList.filter(account => account.external);\n\n    if (internalAccounts.length) {\n      internalAccounts = [\n        { group: i18nFilter('form.beneficiary.group.internal') },\n        ...internalAccounts,\n      ];\n    }\n\n    if (externalAccounts.length) {\n      externalAccounts = [\n        { group: i18nFilter('form.beneficiary.group.external') },\n        ...externalAccounts,\n      ];\n    }\n\n    const list = [...internalAccounts, ...externalAccounts];\n\n    // add extra item as indicator for more results\n    if (totalItemsCount > BENEFICIARY_LIST_SIZE) {\n      list.push({\n        more: i18nFilter('form.beneficiary.group.more', {\n          count: (totalItemsCount - BENEFICIARY_LIST_SIZE), // count remaining item\n        }),\n      });\n    }\n\n    return list;\n  };\n\n  /**\n   * @description\n   * Loads list of contacts filtered by contact name\n   * Group accounts by internal or external type\n   *\n   * @param {string} name Name of the contact\n   * @param {number} [size = BENEFICIARY_LIST_SIZE] - Number of returned items\n   * @return {Promise.<Object>}\n   *\n   * @name Helpers#loadContactsByName\n   * @type {function}\n   */\n  const loadContactsByName = (name, size = BENEFICIARY_LIST_SIZE) => {\n    const contacts = getContacts();\n    const creditAccounts = getCreditAccounts() || [];\n\n    let combinedAccounts = [\n      ...creditAccounts.filter(removeSelectedDebitAccount).map(fromArrangementToContact),\n      ...flattenContactAccounts(contacts),\n    ];\n\n    if (name) {\n      combinedAccounts = combinedAccounts.filter(account =>\n        account.name.toUpperCase().includes(name.toUpperCase()) ||\n        (\n          account.accountName &&\n          account.accountName.toUpperCase().includes(name.toUpperCase())\n        ) ||\n        (\n          account.accountNumber &&\n          account.accountNumber.toUpperCase().includes(name.toUpperCase())\n        )\n      );\n    }\n\n    return Promise.resolve({\n      data: groupAccounts(combinedAccounts.slice(0, size), combinedAccounts.length),\n      totalItems: combinedAccounts.length,\n    });\n  };\n\n  /**\n   * @description\n   * Set beneficiary fields when selecting contact\n   *\n   * @param {object} model Contact model\n   * @name Helpers#selectContact\n   * @type {function}\n   */\n  const selectContact = (model) => service.setBeneficiary(fromContactToBeneficiary(model));\n\n  /**\n   * @description\n   * Set beneficiary fields when selecting contact\n   *\n   * @param {object} model Contact model\n   * @name Helpers#selectContactModal\n   * @type {function}\n   */\n  const selectContactModal = (model) => {\n    let item = model;\n\n    if (item.BBAN) {\n      item = fromArrangementToContact(item);\n    }\n\n    return service.setBeneficiary({\n      ...(fromContactToBeneficiary(item)),\n      name: item.name,\n    });\n  };\n\n\n  /**\n   * @description\n   * Resets all the beneficiary fields\n   *\n   * @name Helpers#resetContact\n   * @type {function}\n   */\n  const resetContact = () => {\n    service.resetBeneficiary();\n  };\n\n  /**\n   * @description\n   * Sets starting ocurrences number if not defined use default one\n   *\n   * @name Helpers#setDefaultOcurrencesValue\n   * @type {function}\n   */\n  const setDefaultOcurrencesValue = () => {\n    const schedule = getSchedule();\n    if (!schedule.repeat) {\n      schedule.repeat = minOccurrences;\n    }\n  };\n\n  /**\n   * @description\n   * Get human readable beneficiary address text\n   *\n   * @returns {string}\n   *\n   * @name Helpers#getBeneficiaryAddressText\n   * @type {function}\n   */\n  const getBeneficiaryAddressText = () => getAddressText(getBeneficiaryPostalAddress());\n\n  /**\n   * @description\n   * Get human readable bank address text\n   *\n   * @returns {string}\n   *\n   * @name Helpers#getBankAddressText\n   * @type {function}\n   */\n  const getBankAddressText = () => getAddressText(getBeneficiaryBank().postalAddress);\n\n  /**\n   * @description\n   * Check if contact is not in address book\n   *\n   * @returns {boolean}\n   *\n   * @name Helpers#isNewContact\n   * @inner\n   * @type {function}\n   */\n  const isNewContact = () => {\n    const beneficiary = getBeneficiary();\n    const contacts = getContacts();\n\n    return !Boolean(contacts && contacts.find((contact) => (\n      contact.name === beneficiary.name &&\n      contact.accountNumber === beneficiary.bank.accountNumber &&\n      contact.bankCode === beneficiary.bank.code\n    )));\n  };\n\n  /**\n   * @description\n   * Check if beneficiary fields are set\n   *\n   * @returns {boolean}\n   *\n   * @name Helpers#isBeneficiarySet\n   * @inner\n   * @type {function}\n   */\n  const isBeneficiarySet = () => {\n    const beneficiary = getBeneficiary();\n    return Boolean(\n      beneficiary.name &&\n      beneficiary.bank.accountNumber &&\n      beneficiary.bank.code\n    );\n  };\n\n  /**\n   * @description\n   * Checks if save new contact checkbox should be enabled\n   *\n   * @returns {boolean}\n   *\n   * @name Helpers#isSaveNewContactEnabled\n   * @type {function}\n   */\n  const isSaveNewContactEnabled = () => isBeneficiarySet() && isNewContact();\n\n  /**\n   * @description\n   * Transforms form fields to contact model to be saved\n   *\n   * @param {object} beneficiary The beneficiary fields\n   * @returns {object}\n   *\n   * @name Helpers#formToContact\n   * @type {function}\n   */\n  const formToContact = (beneficiary) => (\n    isSaveNewContactEnabled() &&\n    saveNewContact() &&\n    fromBeneficiaryToContact(beneficiary)\n  );\n\n  /**\n   * @description\n   * Transforms form fields to payment model to be saved\n   *\n   * @param {object} payment The payment fields\n   * @returns {object}\n   *\n   * @name Helpers#formToPayment\n   * @type {function}\n   */\n  const formToPayment = (payment) => {\n    const { beneficiary, debitAccount, schedule, amount } = payment;\n    const isSinglePayment = !schedule.transferFrequency\n      || schedule.transferFrequency.value === SingleFrequency.value;\n\n    const debtorAccount = debitAccount ? {\n      identification: {\n        identification: debitAccount.id,\n        schemeName: 'ID',\n      },\n    } : null;\n\n    if (debitAccount && debitAccount.name) {\n      Object.assign(debtorAccount, { name: debitAccount.name });\n    }\n\n    const creditTransferTransactionInformation = [{\n      instructedAmount: {\n        amount: amount.value,\n        currencyCode: amount.currency,\n      },\n      creditor: {\n        name: beneficiary.name,\n        postalAddress: { ...beneficiary.postalAddress },\n      },\n      creditorAccount: {\n        identification: {\n          identification: beneficiary.bank.accountNumber,\n          schemeName: 'BBAN',\n        },\n      },\n      creditorBank: {\n        bankBranchCode: beneficiary.bank.code,\n        name: beneficiary.bank.name,\n        postalAddress: { ...beneficiary.bank.postalAddress },\n      },\n    }];\n\n    if (getPaymentState().isCorrespondentEnabled && beneficiary.correspondentBank.code) {\n      Object.assign(creditTransferTransactionInformation[0], {\n        correspondentBank: {\n          bankBranchCode: beneficiary.correspondentBank.code,\n          name: beneficiary.correspondentBank.name,\n        },\n      });\n    }\n\n    if (beneficiary.bank.message) {\n      Object.assign(creditTransferTransactionInformation[0], {\n        messageToBank: beneficiary.bank.message,\n      });\n    }\n\n    if (beneficiary.message) {\n      Object.assign(creditTransferTransactionInformation[0], {\n        remittanceInformation: beneficiary.message,\n      });\n    }\n\n    if (payment.paymentReference) {\n      Object.assign(creditTransferTransactionInformation[0], {\n        endToEndIdentification: payment.paymentReference,\n      });\n    }\n\n    const paymentOrder = {\n      debtorAccount,\n      requestedExecutionDate: getDateOnly(schedule.startDate),\n      paymentMode: isSinglePayment ? 'SINGLE' : 'RECURRING',\n      paymentType: 'US_DOMESTIC_WIRE',\n      creditTransferTransactionInformation,\n    };\n\n    if (payment.id) {\n      Object.assign(paymentOrder, { id: payment.id });\n    }\n\n    if (payment.urgent) {\n      Object.assign(paymentOrder, { instructionPriority: 'HIGH' });\n    }\n\n    if (!isSinglePayment) {\n      Object.assign(paymentOrder, {\n        schedule: {\n          transferFrequency: schedule.transferFrequency.value,\n          on: getRecurringTransactionDay(schedule),\n          startDate: getDateOnly(schedule.startDate),\n          every: schedule.transferFrequency.every,\n          endDate: payment.endingType === RecurrenceEnding.ON ?\n            getDateOnly(schedule.endDate) : null,\n          repeat: payment.endingType === RecurrenceEnding.AFTER ?\n            schedule.repeat : null,\n        },\n      });\n    }\n\n    return paymentOrder;\n  };\n\n  /**\n   * @name Helpers#canSaveDraft\n   * @type {Function}\n   * @description\n   * Returns true if at least credit account, beneficiary or any amount\n   * filled in\n   *\n   * @param {Object} form Form state\n   * @returns {Boolean}\n   */\n  const canSaveDraft = (form) => {\n    const payment = getPayment();\n    const validations = ['pattern', 'maxlength', 'customRtn'];\n    const hasUserErrors = form.$error &&\n      validations.reduce((memo, current) => memo || (current in form.$error), false);\n\n    return !hasUserErrors && (\n      payment.debitAccount ||\n      payment.beneficiary.name ||\n      payment.beneficiary.bank.accountNumber ||\n      payment.amount.value\n    );\n  };\n\n  /**\n   * @description\n   * Removes not needed data from draft object before sending\n   *\n   * @name purifyDraftPaymentData\n   * @type {function}\n   * @inner\n   * @param {object} payment Payment data\n   * @returns {object} transformed draft payment order data\n   */\n  const purifyDraftPaymentData = payment => {\n    const purifiedPayment = angular.copy(payment);\n    const credit = purifiedPayment.creditTransferTransactionInformation[0];\n    const creditAcc = credit.creditorAccount.identification.identification;\n\n    if (!payment.debtorAccount) {\n      delete purifiedPayment.debtorAccount;\n    }\n\n    if (!credit.creditor.name) {\n      delete credit.creditor;\n    }\n\n    if (!creditAcc) {\n      delete credit.creditorAccount;\n    }\n\n    if (!credit.instructedAmount.amount) {\n      delete credit.instructedAmount;\n    }\n\n    return purifiedPayment;\n  };\n\n  /**\n   * @description\n   * Get purified draft payment model\n   *\n   * @param {object} payment The payment fields\n   * @returns {object}\n   *\n   * @name Helpers#getDraftPayment\n   * @type {function}\n   */\n  const getDraftPayment = (payment) => purifyDraftPaymentData(formToPayment(payment));\n\n  const deleteDraft = (id) => {\n    service.deleteDraft(id)\n      .then(() => {\n        intents.viewPaymentOrders();\n      });\n  };\n\n  /**\n   * @description\n   * Close edit draft and navigate to view payment orders intent\n   *\n   * @name Helpers#closeEditDraft\n   * @type {Function}\n   */\n  const closeEditDraft = (form) => {\n    const draft = getDraft();\n    const originalDraft = getDraftPayment(draft.data);\n    const currentDraft = getDraftPayment(getPayment());\n\n    if (canSaveDraft(form) && !angular.equals(originalDraft, currentDraft)) {\n      draft.editConfirmOpened = true;\n    } else {\n      intents.viewPaymentOrders();\n    }\n  };\n\n  /**\n   * @description\n   * Updates current draft payment and redirects to view draft payments if succesfully edited\n   * @name Helpers#updateDraft\n   * @type {Function}\n   */\n  const updateDraft = () => {\n    const payment = getPayment();\n    service.updateDraft(getDraftPayment(payment))\n      .then(() => {\n        intents.viewPaymentOrders();\n      });\n  };\n\n  /**\n   * @name postActionsOptions\n   * @description\n   * List of configuration objects defining submit post actions options\n   * @type {PostActionOption[]}\n   * @inner\n   */\n  const postActionsOptions = [\n    {\n      id: 1,\n      key: 'review.label.submit',\n      postAction: postActions.type.NONE,\n      selected: true,\n      permission: 'create',\n    },\n    {\n      id: 2,\n      key: 'review.label.submit.create',\n      postAction: postActions.type.CREATE,\n      permission: 'create',\n    },\n    {\n      id: 3,\n      key: 'review.label.submit.approve',\n      postAction: postActions.type.APPROVE,\n      permission: 'approve',\n    },\n  ];\n\n  const getPrivileges = stateContainer.createSelector((state) => state.privileges);\n\n  /**\n   * @name Helpers#isAllowedPaymentPrivilege\n   * @description\n   * Checks if use is allowed to perform `privilege` on domestic wire payment context\n   * @type {Function}\n   * @param {String} privilege\n   * @returns {Boolean} Wether if user is allowed or not on `privilege`\n   */\n  const isAllowedPaymentPrivilege = (privilege) => {\n    const privileges = getPrivileges();\n    const context = privileges.response.Payments['US Domestic Wire'];\n    if (privileges.error || !context) {\n      return true;\n    }\n\n    return context[privilege];\n  };\n\n  /**\n   * @name Helpers#getPostActionsOptions\n   * @description\n   * Returns available post submit actions depending on privileges\n   * @type {Function}\n   * @returns {PostActionOption[]} Allowed post submit actions collection\n   */\n  const getPostActionsOptions = () => postActionsOptions\n    .filter((action) => isAllowedPaymentPrivilege(action.permission));\n\n  /**\n   * @name Helpers#getApprovalNotification\n   * @description\n   * Returns approval notification object\n   * @inner\n   *\n   * @type {Function}\n   * @param {Boolean} success Approval result\n   * @returns {{message: string, level: string}}\n   */\n  const getApprovalNotification = (success) => ({\n    message: success ? 'notification.auth.success' : 'notification.auth.fail',\n    level: success ? 'success' : 'danger',\n  });\n\n  /**\n   * @name Helpers#getNotificationByType\n   * @description\n   * Returns notification object depends on its type\n   *\n   * @type {Function}\n   * @param {object} msg Approval result\n   * @returns {{message: string, level: string}}\n   */\n  const getNotificationByType = (msg) => {\n    let result;\n\n    switch (msg.type) {\n      case 'approve':\n        result = getApprovalNotification(msg.result);\n        break;\n      default:\n        result = false;\n    }\n\n    return result;\n  };\n\n  /**\n   * @name Helpers#removeNotification\n   * @type {function}\n   *\n   * @description\n   * Helper to remove notification from the list\n   *\n   * @param {object} notification\n   * @param {Array} notificationsList\n   * @returns {Array}\n   */\n  const removeNotification = (notification, notificationsList) =>\n    notificationsList.filter(item => item !== notification);\n\n  /**\n   * @name Helpers#paymentTypeOptions\n   * @description\n   * Collection of supported payment types to switch between each other\n   * @type {PaymentTypeOption[]}\n   */\n  const paymentTypeOptions = [\n    {\n      label: i18nFilter('label.payment.type.domestic'),\n      value: service.PaymentType.US_DOMESTIC_WIRE,\n    },\n    {\n      label: i18nFilter('label.payment.type.international'),\n      value: service.PaymentType.US_FOREIGN_WIRE,\n    },\n  ];\n\n  /**\n   * @name Helpers#switchPaymentType\n   * @description\n   * Shows confirmation popup if data in payment has been changed\n   * @type {Function}\n   * @param {module:model-bb-payment-orders-ng.PaymentType} paymentType Payment type identifier\n   * @returns {Boolean} True if payment has not been changed, false otherwise\n   */\n  const switchPaymentType = (paymentType) => {\n    if (service.paymentHasChanged()) {\n      service.showPaymentSelectorConfirmation(paymentType);\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * @name Helpers#isModal\n   * @type {function}\n   *\n   * @description\n   * Helper to check if we should use modal beneficiary selector\n   *\n   * @param {String} configValue\n   * @returns {Boolean}\n   */\n  const isModal = (configValue) =>\n    configValue === BENEFICIARY_SELECTOR_MODAL;\n\n  /**\n   * @description\n   * Toggle modal selector popup visibility (show/hide)\n   *\n   * @name Helpers#toggleModalSelector\n   * @type {function}\n   * @param {Object} ext\n   */\n  const toggleModalSelector = (ext) => {\n    const extension = ext;\n    extension.isModalSelectorOpen = !extension.isModalSelectorOpen;\n  };\n\n  /**\n   * @name Helpers#scrollToFirstError\n   * @description Focus or scroll to first error in ```form``` depending if it is visible or not.\n   * @inner\n   * @type {Function}\n   * @param {Object} form Angular form object to check errors\n   * @returns {Object} First angular element that is invalid\n   */\n  const scrollToFirstError = (form) => {\n    const firstError = form.$$controls.find((control) => control.$invalid).$$element;\n    const bodyRect = document.body.getBoundingClientRect();\n    const elemRect = firstError[0].getBoundingClientRect();\n    let offset = elemRect.top - bodyRect.top;\n\n    // Correct position to navigation bar's height\n    const navBar = document.querySelector('nav');\n    if (navBar) {\n      const navBarRect = navBar.getBoundingClientRect();\n      const navBarStyles = window.getComputedStyle(navBar, null);\n\n      if (navBarStyles.position === 'fixed' && navBarRect.top === 0) {\n        offset -= navBarRect.height;\n      }\n    }\n\n    window.scrollTo({\n      top: offset,\n      behavior: 'smooth',\n    });\n\n    return firstError;\n  };\n\n  /**\n   * @name Helpers#reviewPayment\n   * @type {function}\n   *\n   * @description\n   * Called when submitting payment for review, it actually calls a hook that\n   * can be customized with all the validations needed by the specific project.\n   *\n   * @param {object} $ctrl Payment controller\n   * @param {object} form Angular form object\n   * @returns {Promise|HTMLElement}\n   */\n  const reviewPayment = ($ctrl, form) => {\n    if (form.$invalid) {\n      // Show validation messages for complex fields\n      Object.assign(form, { showSpecialValidationMessages: true });\n      return scrollToFirstError(form);\n    }\n\n    // Hide validation messages for complex fields (if any)\n    Object.assign(form, { showSpecialValidationMessages: false });\n\n    return $ctrl.reviewPayment();\n  };\n\n  /**\n   * @name Helpers#formUntouched\n   * @type {Function}\n   *\n   * @description\n   * Checks if form model has been changed\n   * @returns {Boolean} Wheter model has been updated or not\n   */\n  const formUntouched = () => {\n    const payment = getPayment();\n\n    // from\n    const hasDebitAccount = Boolean(payment.debitAccount);\n    // to\n    const beneficiary = payment.beneficiary;\n    const hasBeneficiaryName = Boolean(beneficiary.name);\n    const hasBeneficiaryMessage = Boolean(beneficiary.message);\n\n    // address\n    const postalAddress = beneficiary.postalAddress;\n    const hasBeneficiaryPostalAddress = Boolean(postalAddress.addressLine1)\n      || Boolean(postalAddress.addressLine2)\n      || Boolean(postalAddress.countrySubDivision)\n      || Boolean(postalAddress.postCode)\n      || Boolean(postalAddress.streetName)\n      || Boolean(postalAddress.town);\n\n    // beneficiary's bank\n    const bank = beneficiary.bank;\n    const hasBeneficiaryBank = Boolean(bank.accountNumber)\n      || Boolean(bank.code)\n      || Boolean(bank.message)\n      || Boolean(bank.name);\n\n    const bankPostalAddress = bank.postalAddress;\n    const hasBeneficiaryBankPostalAddress = Boolean(bankPostalAddress.addressLine1)\n      || Boolean(bankPostalAddress.addressLine2)\n      || Boolean(bankPostalAddress.countrySubDivision)\n      || Boolean(bankPostalAddress.postCode)\n      || Boolean(bankPostalAddress.streetName)\n      || Boolean(bankPostalAddress.town);\n\n    // correspondent bank\n    const hasCorrespondentBank = Boolean(beneficiary.correspondentBank.code)\n      || Boolean(beneficiary.correspondentBank.name);\n\n    // amount\n    const hasAmountValue = parseFloat(payment.amount.value) > 0;\n\n    // payment reference\n    const hasPaymentReference = Boolean(payment.paymentReference);\n\n    // schedule\n    const today = new Date();\n    const paymentStartDate = payment.schedule.startDate;\n    const sameStartDate = today.getYear() === paymentStartDate.getYear() &&\n      today.getMonth() === paymentStartDate.getMonth() &&\n      today.getDate() === paymentStartDate.getDate();\n\n    return !hasDebitAccount && !hasBeneficiaryName && !hasBeneficiaryMessage\n      && !hasBeneficiaryPostalAddress && !hasBeneficiaryBank && !hasBeneficiaryBankPostalAddress\n      && !hasCorrespondentBank && !hasAmountValue && !hasPaymentReference && sameStartDate\n      && payment.schedule.transferFrequency.value === TransferFrequency.ONCE\n      && payment.endingType === RecurrenceEnding.NEVER;\n  };\n\n  return {\n    get template() {\n      return templates[router.getRoute()];\n    },\n    get states() { return USStates; },\n    get recurrenceEnding() { return RecurrenceEnding; },\n    get singleFrequency() { return SingleFrequency; },\n    get paymentReferencePattern() { return PaymentReferencePattern; },\n    maxDigits,\n    currencies,\n    minOccurrences,\n    maxOccurences,\n    charCounterConfig,\n    getPayment,\n    getSchedule,\n    getDebitAccounts,\n    getBeneficiary,\n    getBeneficiaryPostalAddress,\n    getBeneficiaryBank,\n    getBeneficiaryCorrespondentBank,\n    getReview,\n    getMinDate,\n    getScheduleText,\n    getFrequencies,\n    setEndDate,\n    loadContactsByName,\n    selectContact,\n    selectContactModal,\n    resetContact,\n    setDefaultOcurrencesValue,\n    getBeneficiaryAddressText,\n    getBankAddressText,\n    isSaveNewContactEnabled,\n    formToContact,\n    formToPayment,\n    canSaveDraft,\n    getDraftPayment,\n    deleteDraft,\n    closeEditDraft,\n    updateDraft,\n    isAllowedPaymentPrivilege,\n    getPostActionsOptions,\n    getNotificationByType,\n    removeNotification,\n    paymentTypeOptions,\n    switchPaymentType,\n    isModal,\n    toggleModalSelector,\n    reviewPayment,\n    formUntouched,\n  };\n};\n\n/**\n * Post Action Option type definition\n * @typedef {Object} PostActionOption\n * @property {Number} id - Unique id to identify the option\n * @property {String} key - Translation key\n * @property {module:widget-bb-initiate-us-payment-ng.SubmitPostActions} postAction\n *   Type of post action\n * @property {?Boolean} selected - Indicates if it is selected or not\n * @property {String} permission - Permission that allows to select the option\n */\n\n /**\n  * Payment Type Option type definition\n  * @typedef {Object} PaymentTypeOption\n  * @property {String} label                                        - Localized payment type option\n  * @property {module:model-bb-payment-orders-ng.PaymentType} value - Payment type identifier\n  */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/helpers.js","module.exports = __WEBPACK_EXTERNAL_MODULE_93__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-iban\"\n// module id = 93\n// module chunks = 9 10 13 14 19 25","import { PaymentType } from './constants';\n\nexport default ({ service }) => ({\n  'widget-bb-initiate-us-payment.payment-type.selected': (selectedPaymentType) => {\n    if (PaymentType === selectedPaymentType) {\n      service.show();\n    } else {\n      service.hide();\n    }\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/events.js","import { PaymentType, ScheduleRepeatValue } from './constants';\n\n/**\n * @name Hooks\n * @type {Object}\n */\nexport default {\n  /**\n   * @name Hooks#defaultPaymentType\n   * @type {Function}\n   *\n   * @description\n   * Gets the current extension payment type\n   *\n   * @returns {String} Default payment type\n   */\n  defaultPaymentType: () => PaymentType,\n\n  /**\n   * @name Hooks#defaultScheduleRepeat\n   * @type {Function}\n   *\n   * @description\n   * Get the default repeat value of minimum ocurrences\n   *\n   * @returns {Number} Default schedule repeat default value\n   */\n  defaultScheduleRepeat: () => ScheduleRepeatValue,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bus-initiate-payment-us-domestic-wire-ng/scripts/hooks.js","module.exports = __WEBPACK_EXTERNAL_MODULE_96__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-dropdown-select-ng\"\n// module id = 96\n// module chunks = 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_97__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-bank-validations-ng\"\n// module id = 97\n// module chunks = 9 10"],"sourceRoot":""}