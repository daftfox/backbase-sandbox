{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///webpack/bootstrap d55e1b15032dbd9fb9d3?118c**","webpack:///./ext-bbm-contact-form-ng/model.xml","webpack:///external \"ui-bb-iban-ng\"?26a5","webpack:///external \"ui-bb-i18n-ng\"?dc01*","webpack:///external \"vendor-bb-angular-ng-messages\"?7dc7","webpack:///./ext-bbm-contact-form-ng/scripts/index.js","webpack:///external \"ui-bbm-textfield-ng\"","webpack:///./ext-bbm-contact-form-ng/scripts/events.js","webpack:///external \"lib-bbm-plugins\"","webpack:///./ext-bbm-contact-form-ng/scripts/constants.js","webpack:///./ext-bbm-contact-form-ng/scripts/helpers.js","webpack:///./ext-bbm-contact-form-ng/scripts/intents.js"],"names":["events","extEvents","helpers","extHelpers","intents","extIntents","dependencyKeys","uiBbIbanKey","i18nKey","vendorBbAngularNgMessagesKey","uiBbmTextfieldNgKey","$filter","stateContainer","service","bus","withNativeEvents","i18n","getSelectedContact","createSelector","state","contact","data","ToolbarButtonEvent","DELETE_CONTACT","confirmOptions","title","message","buttons","type","ButtonType","POSITIVE","text","callbackFn","ConfirmAction","CONFIRM","NEGATIVE","CANCEL","plugins","AlertDialog","show","then","response","callback","isConfirmed","deleteContact","publish","Event","SHOW_CONTACT_LIST","CONTACT_DELETE_START","ActivityIndicator","CONTACT_DELETE_DONE","hide","Snackbar","success","CONTACT_DELETE_FAILED","error","CONTACT_UPDATE_START","CONTACT_UPDATE_DONE","CONTACT_UPDATE_FAILED","CONTACT_CREATE_START","CONTACT_CREATE_DONE","CONTACT_CREATE_FAILED","Intent","CREATE_CONTACT","EDIT_CONTACT","SHOW_CONTACT_DETAILS","saveContact","contactForm","$setUntouched","$setPristine","isNewContact","handleRequest","createContact","setInitialContact","editContact","setSelectedContact","Error"],"mappings":"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","file":"ext-bbm-contact-form-ng/scripts/ext-bbm-contact-form-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-iban-ng\"), require(\"ui-bb-i18n-ng\"), require(\"vendor-bb-angular-ng-messages\"), require(\"ui-bbm-textfield-ng\"), require(\"lib-bbm-plugins\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bbm-contact-form-ng\", [\"ui-bb-iban-ng\", \"ui-bb-i18n-ng\", \"vendor-bb-angular-ng-messages\", \"ui-bbm-textfield-ng\", \"lib-bbm-plugins\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bbm-contact-form-ng\"] = factory(require(\"ui-bb-iban-ng\"), require(\"ui-bb-i18n-ng\"), require(\"vendor-bb-angular-ng-messages\"), require(\"ui-bbm-textfield-ng\"), require(\"lib-bbm-plugins\"));\n\telse\n\t\troot[\"ext-bbm-contact-form-ng\"] = factory(root[\"ui-bb-iban-ng\"], root[\"ui-bb-i18n-ng\"], root[\"vendor-bb-angular-ng-messages\"], root[\"ui-bbm-textfield-ng\"], root[\"lib-bbm-plugins\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_28__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d55e1b15032dbd9fb9d3","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bbm-contact-form-ng/model.xml\n// module id = 0\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-iban-ng\"\n// module id = 7\n// module chunks = 0 2 4 5 6","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 8\n// module chunks = 0 1 2 3 4 5 6 11","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-messages\"\n// module id = 12\n// module chunks = 0 2 4 5 6","/**\n * @module ext-bbm-contact-form-ng\n *\n * @description\n * Mobile extension for a contact form in the Contacts widget.\n *\n * @example\n * <!-- Contact widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *   <value type=\"string\">ext-bbm-contact-form-ng</value>\n * </property>\n */\nimport uiBbIbanKey from 'ui-bb-iban-ng';\nimport i18nKey from 'ui-bb-i18n-ng';\nimport vendorBbAngularNgMessagesKey from 'vendor-bb-angular-ng-messages';\nimport uiBbmTextfieldNgKey from 'ui-bbm-textfield-ng';\n\nimport extEvents from './events';\nimport extHelpers from './helpers';\nimport extIntents from './intents';\n\nexport const events = extEvents;\nexport const helpers = extHelpers;\nexport const intents = extIntents;\n\nexport const dependencyKeys = [\n  uiBbIbanKey,\n  i18nKey,\n  vendorBbAngularNgMessagesKey,\n  uiBbmTextfieldNgKey,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-contact-form-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_26__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-textfield-ng\"\n// module id = 26\n// module chunks = 2","// Temporary disable capsInNew until it fixed in lib-bbm-plugins\n/* eslint new-cap: [\"error\", { \"capIsNew\": false }] */\nimport plugins from 'lib-bbm-plugins';\n\nimport {\n  Event,\n  ButtonType,\n  ConfirmAction,\n  ToolbarButtonEvent,\n} from './constants';\n\nexport default ({ $filter, stateContainer, service, bus, withNativeEvents }) => {\n  const i18n = $filter('i18n');\n\n  /**\n   * @description\n   * Returns the current selected `contact` from the state\n   *\n   * @name getSelectedContact\n   * @type {function}\n   * @returns {Object} contact Contact from the state\n   * @inner\n   */\n  const getSelectedContact = stateContainer.createSelector(\n    state => state.contact.data\n  );\n\n  return withNativeEvents(\n    {\n      [ToolbarButtonEvent.DELETE_CONTACT]: () => {\n        const confirmOptions = {\n          title: i18n('message.contact.delete.confirm.title'),\n          message: i18n('message.contact.delete.confirm.message'),\n          buttons: [\n            {\n              type: ButtonType.POSITIVE,\n              text: i18n('message.contact.delete.confirm.button.ok'),\n              callbackFn: ConfirmAction.CONFIRM,\n            },\n            {\n              type: ButtonType.NEGATIVE,\n              text: i18n('message.contact.delete.confirm.button.cancel'),\n              callbackFn: ConfirmAction.CANCEL,\n            },\n          ],\n        };\n\n        plugins.AlertDialog().show(confirmOptions)\n          .then(response => response.callback === ConfirmAction.CONFIRM)\n          .then(isConfirmed => {\n            if (isConfirmed) {\n              const contact = getSelectedContact();\n              service.deleteContact(contact)\n                .then(() => {\n                  bus.publish(Event.SHOW_CONTACT_LIST);\n                });\n            }\n          });\n      },\n    },\n    {\n      [Event.CONTACT_DELETE_START]() {\n        plugins.ActivityIndicator().show(i18n('message.contact.delete.start'));\n      },\n\n      [Event.CONTACT_DELETE_DONE]() {\n        plugins.ActivityIndicator().hide();\n        plugins.Snackbar().success(i18n('message.contact.delete.done'));\n      },\n\n      [Event.CONTACT_DELETE_FAILED]() {\n        plugins.ActivityIndicator().hide();\n        plugins.Snackbar().error(i18n('message.contact.delete.failed'));\n      },\n\n      [Event.CONTACT_UPDATE_START]() {\n        plugins.ActivityIndicator().show(i18n('message.contact.update.start'));\n      },\n\n      [Event.CONTACT_UPDATE_DONE]() {\n        plugins.ActivityIndicator().hide();\n        plugins.Snackbar().success(i18n('message.contact.update.done'));\n      },\n\n      [Event.CONTACT_UPDATE_FAILED]() {\n        plugins.ActivityIndicator().hide();\n        plugins.Snackbar().error(i18n('message.contact.update.failed'));\n      },\n\n      [Event.CONTACT_CREATE_START]() {\n        plugins.ActivityIndicator().show(i18n('message.contact.create.start'));\n      },\n\n      [Event.CONTACT_CREATE_DONE]() {\n        plugins.ActivityIndicator().hide();\n        plugins.Snackbar().success(i18n('message.contact.create.done'));\n      },\n\n      [Event.CONTACT_CREATE_FAILED]() {\n        plugins.ActivityIndicator().hide();\n        plugins.Snackbar().error(i18n('message.contact.create.failed'));\n      },\n    }\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-contact-form-ng/scripts/events.js","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bbm-plugins\"\n// module id = 28\n// module chunks = 2","/**\n * Toolbar button events enum\n * @name ToolbarButtonEvent\n * @type {Object}\n * @inner\n */\nexport const ToolbarButtonEvent = {\n  DELETE_CONTACT: 'bb.action.contact.delete',\n};\n\n/**\n * Confirm dialog button types\n * @type {Object}\n * @inner\n */\nexport const ButtonType = {\n  POSITIVE: 'POSITIVE',\n  NEGATIVE: 'NEGATIVE',\n};\n\n/**\n * Confirm dialog actions\n * @type {Object}\n * @inner\n */\nexport const ConfirmAction = {\n  CANCEL: 'cancel',\n  CONFIRM: 'confirm',\n};\n\n/**\n * Intents enum\n * @name Intent\n * @type {Object}\n * @inner\n */\nexport const Intent = {\n  CREATE_CONTACT: 'intent.rbm.contact.create',\n  EDIT_CONTACT: 'intent.rbm.contact.edit',\n};\n\n/**\n * Pubsub events\n * @name Event\n * @type {Object}\n * @inner\n */\nexport const Event = {\n  /**\n   * A contact will be created on the server\n   * @event bb.event.contact.create.start\n   * @type {string}\n   */\n  CONTACT_CREATE_START: 'bb.event.contact.create.start',\n\n  /**\n   * A contact has been created on the server\n   * @event bb.event.contact.create.done\n   * @type {string}\n   */\n  CONTACT_CREATE_DONE: 'bb.event.contact.create.done',\n\n  /**\n   * A contact fails to be created on the server\n   * @event bb.event.contact.create.failed\n   * @type {string}\n   */\n  CONTACT_CREATE_FAILED: 'bb.event.contact.create.failed',\n\n  /**\n   * A contact will be updated on the server\n   * @event bb.event.contact.update.start\n   * @type {string}\n   */\n  CONTACT_UPDATE_START: 'bb.event.contact.update.start',\n\n  /**\n   * A contact has been updated on the server\n   * @event bb.event.contact.update.done\n   * @type {string}\n   */\n  CONTACT_UPDATE_DONE: 'bb.event.contact.update.done',\n\n  /**\n   * A contact fails to be updated on the server\n   * @event bb.event.contact.update.failed\n   * @type {string}\n   */\n  CONTACT_UPDATE_FAILED: 'bb.event.contact.update.failed',\n\n  /**\n   * A contact will be deleted on the server\n   * @event bb.event.contact.delete.start\n   * @type {string}\n   */\n  CONTACT_DELETE_START: 'bb.event.contact.delete.start',\n\n  /**\n   * A contact has been deleted on the server\n   * @event bb.event.contact.delete.done\n   * @type {string}\n   */\n  CONTACT_DELETE_DONE: 'bb.event.contact.delete.done',\n\n  /**\n   * A contact fails to be deleted on the server\n   * @event bb.event.contact.delete.failed\n   * @type {string}\n   */\n  CONTACT_DELETE_FAILED: 'bb.event.contact.delete.failed',\n\n  /**\n   * An event to navigate to the contact list\n   * @event bb.action.contact.list.show\n   * @type {string}\n   */\n  SHOW_CONTACT_LIST: 'bb.action.contact.list.show',\n\n  /**\n   * An event to navigate to the contact details\n   * @event bb.action.contact.details.show\n   * @type {string}\n   */\n  SHOW_CONTACT_DETAILS: 'bb.action.contact.details.show',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-contact-form-ng/scripts/constants.js","import { Event } from './constants';\n\n/**\n * @description\n * Helpers for ext-bbm-contact-form-ng.\n *\n * @name Helpers\n * @type {Object}\n */\nexport default ({ service, bus, stateContainer }) => {\n  /**\n   * @description\n   * Returns the selected `contact` from the state\n   *\n   * @name Helpers#getSelectedContact\n   * @type {function}\n   * @returns {Object} contact The current selected contact from the state\n   */\n  const getSelectedContact = stateContainer.createSelector(\n    state => state.contact.data\n  );\n\n  /**\n   * @description\n   * Saves the edited contact and reset the form state\n   *\n   * @name Helpers#saveContact\n   * @type {function}\n   * @param {Object} contactForm The angular contact form object\n   */\n  const saveContact = contactForm => (\n    service.saveContact()\n      .then(() => {\n        contactForm.$setUntouched();\n        contactForm.$setPristine();\n\n        bus.publish(\n          service.isNewContact()\n            ? Event.SHOW_CONTACT_LIST\n            : Event.SHOW_CONTACT_DETAILS\n        );\n      })\n  );\n\n  return {\n    getSelectedContact,\n    saveContact,\n  };\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-contact-form-ng/scripts/helpers.js","import { Intent } from './constants';\n\n/**\n * @name Intents\n * @type {Object}\n */\nexport default ({ handleRequest, service }) => ({\n  /**\n   * @name Intents#createContact\n   * @description Handles the intent to create a new contact\n   * @type {function}\n   */\n  createContact: handleRequest(Intent.CREATE_CONTACT, () => {\n    service.setInitialContact();\n  }),\n\n  /**\n   * @name Intents#editContact\n   * @description Handles the intent to edit a contact\n   * @type {function}\n   * @param {Object} contact The contact to edit\n   */\n  editContact: handleRequest(Intent.EDIT_CONTACT, contact => {\n    if (contact) {\n      service.setSelectedContact(contact);\n    } else {\n      throw new Error(\n        'Contact is undefined. Please pass a contact object as the payload of the intent'\n      );\n    }\n  }),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-contact-form-ng/scripts/intents.js"],"sourceRoot":""}