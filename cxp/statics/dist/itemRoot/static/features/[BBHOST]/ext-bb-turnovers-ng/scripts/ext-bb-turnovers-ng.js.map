{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap 3ef30015219e38414ee1?dc48","webpack:///./ext-bb-turnovers-ng/model.xml","webpack:///external \"vendor-bb-angular-ng-aria\"?9d0e","webpack:///external \"vendor-bb-uib-buttons\"?6a15","webpack:///external \"ui-bb-i18n-ng\"?dc01","webpack:///external \"ui-bb-substitute-error-ng\"?f57a","webpack:///external \"ui-bb-format-amount-ng\"?8f72","webpack:///external \"ui-bb-chartjs-chart-bar-ng\"?9799","webpack:///external \"ui-bb-empty-state-ng\"?88ee","webpack:///external \"lib-bb-styles\"?c155","webpack:///./ext-bb-turnovers-ng/scripts/index.js","webpack:///./ext-bb-turnovers-ng/scripts/hooks.js","webpack:///./ext-bb-turnovers-ng/scripts/constants.js","webpack:///./ext-bb-turnovers-ng/scripts/helpers.js"],"names":["dependencyKeys","ngAriaModuleKey","uibBbButtonsKey","i18nKey","uiBbSubstituteErrorKey","uiBbFormatAmountKey","uiBbChartjsChartBarKey","uiBbEmptyStateKey","hooks","extHooks","helpers","extHelpers","events","defaultPeriodStart","defaultInterval","interval","MONTH","onTurnoversUpdate","startDate","Date","params","periodStartDate","setDate","intervalStartDay","Object","assign","toISOString","slice","processTurnoverSeries","series","data","datasets","forEach","dataset","index","datasetColor","backgroundColor","hoverBackgroundColor","reverse","original","updated","processLoadError","err","PARAM_ERROR","PERIODS","duration","label","default","DATASET_LABELS","BAR_COUNT_BREAK_POINT","MAX_Y_TICKS","CSS_SELECTORS","axisBase","axisX","axisY","arrowOuter","layoutBreak","arrowNear","arrowFar","legend","getPeriods","periodToDate","period","date","intervalCount","getDate","setFullYear","getFullYear","setMonth","getMonth","getDefaultPeriod","periods","Math","max","map","item","indexOf","context","dateFilter","$filter","currencyFilter","i18nFilter","getSymbol","code","getRule","symbol","onSmallScreen","initialBarPercentage","tooltipContentCache","isScreenChanged","smallScreen","changed","buildTooltipContent","creditAmount","amount","currencyCode","debitAmount","balance","getBreakingPoint","parseFloat","getTooltipArrowHeight","getYAxisLabelPadding","isSmallScreen","window","innerWidth","setTooltipPosition","element","tooltip","chart","dataPoint","dataPoints","barWidth","getDatasetMeta","datasetIndex","_model","width","positionX","canvas","offsetLeft","floor","x","ceil","clientWidth","positionY","caretY","clientHeight","adjustmentClass","chartArea","left","right","style","top","afterContentReady","classes","additionalClass","className","opacity","onPeriodChange","ctrl","currentPeriod","periodEndDate","onPeriodStartDateChanged","chartPlugins","beforeUpdate","chartInstance","scales","config","options","xAxes","categoryPercentage","count","labels","length","smallScreenBarPercentage","min","yAxes","display","legendEl","parentNode","getElementsByClassName","removeChild","document","createElement","innerHTML","generateLegend","appendChild","afterUpdate","makeOffset","w","meta","metaData","i","model","customizeTooltip","pointIndex","defaultClasses","turnovers","$compile","angular","contents","$scope","$digest","setTimeout","formatX","ticks","tick","formatY","chartOptions","fontColor","fontFamily","gridLines","drawBorder","tickMarkLength","maxTicksLimit","padding","hasDataToDraw"],"mappings":"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","file":"ext-bb-turnovers-ng/scripts/ext-bb-turnovers-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"vendor-bb-uib-buttons\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-format-amount-ng\"), require(\"ui-bb-chartjs-chart-bar-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"lib-bb-styles\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bb-turnovers-ng\", [\"vendor-bb-angular-ng-aria\", \"vendor-bb-uib-buttons\", \"ui-bb-i18n-ng\", \"ui-bb-substitute-error-ng\", \"ui-bb-format-amount-ng\", \"ui-bb-chartjs-chart-bar-ng\", \"ui-bb-empty-state-ng\", \"lib-bb-styles\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bb-turnovers-ng\"] = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"vendor-bb-uib-buttons\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-format-amount-ng\"), require(\"ui-bb-chartjs-chart-bar-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"lib-bb-styles\"));\n\telse\n\t\troot[\"ext-bb-turnovers-ng\"] = factory(root[\"vendor-bb-angular-ng-aria\"], root[\"vendor-bb-uib-buttons\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-substitute-error-ng\"], root[\"ui-bb-format-amount-ng\"], root[\"ui-bb-chartjs-chart-bar-ng\"], root[\"ui-bb-empty-state-ng\"], root[\"lib-bb-styles\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_13__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3ef30015219e38414ee1","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bb-turnovers-ng/model.xml\n// module id = 0\n// module chunks = 1","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-aria\"\n// module id = 2\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-buttons\"\n// module id = 3\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 4\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-substitute-error-ng\"\n// module id = 5\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-format-amount-ng\"\n// module id = 6\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-chartjs-chart-bar-ng\"\n// module id = 8\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-empty-state-ng\"\n// module id = 9\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-styles\"\n// module id = 13\n// module chunks = 0 1","/**\n * @module ext-bb-turnovers-ng\n *\n * @description\n * Default extension for widget-bb-turnovers-ng\n *\n * @requires vendor-bb-angular-ng-aria\n * @requires ui-bb-i18n-ng\n * @requires ui-bb-substitute-error-ng\n * @requires ui-bb-dropdown-select\n * @requires ui-bb-format-amount\n * @requires ui-bb-chartjs-chart-bar-ng\n * @requires ui-bb-empty-state-ng\n */\nimport ngAriaModuleKey from 'vendor-bb-angular-ng-aria';\nimport uibBbButtonsKey from 'vendor-bb-uib-buttons';\nimport i18nKey from 'ui-bb-i18n-ng';\nimport uiBbSubstituteErrorKey from 'ui-bb-substitute-error-ng';\nimport uiBbFormatAmountKey from 'ui-bb-format-amount-ng';\nimport uiBbChartjsChartBarKey from 'ui-bb-chartjs-chart-bar-ng';\nimport uiBbEmptyStateKey from 'ui-bb-empty-state-ng';\n\nimport extHooks from './hooks';\nimport extHelpers from './helpers';\n\nexport const dependencyKeys = [\n  ngAriaModuleKey,\n  uibBbButtonsKey,\n  i18nKey,\n  uiBbSubstituteErrorKey,\n  uiBbFormatAmountKey,\n  uiBbChartjsChartBarKey,\n  uiBbEmptyStateKey,\n];\n\nexport const hooks = extHooks;\nexport const helpers = extHelpers;\nexport const events = {};\n\n/**\n * Turnovers specific BBSeries object\n * @typedef {object} TurnoversBBSeries\n * @property {string[]} labels Array of x axis labels\n * @property {TurnoversDataset[]} datasets Array of all y axis value datasets\n * @property {module:model-bb-turnovers-ng.Turnover} original Original turnover object\n * @property {boolean} updated Flag that signals that series are processed by hook\n */\n\n/**\n * Turnovers specific dataset object for y axis\n * @typedef {object} TurnoversDataset\n * @extends module:model-bb-turnovers-ng.Dataset\n * @property {string} backgroundColor Background color of bars that represent this dataset\n * @property {string} hoverBackgroundColor Hover color of bars that represent this dataset\n */\n\n/**\n * Settings object with options available for bar chart.\n * More info {@link http://www.chartjs.org/docs/latest/charts/bar.html}\n * @typedef {object} ChartjsSettings\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-turnovers-ng/scripts/index.js","import getStyle from 'lib-bb-styles';\nimport { PARAM_ERROR } from './constants';\nimport { periodToDate, getDefaultPeriod } from './helpers';\n\n/**\n * @name defaultPeriodStart\n * @type {function}\n *\n * @description\n * Sets period start property on init\n *\n * @returns {string} Start period string in format yyyy-mm-dd\n */\nconst defaultPeriodStart = () => periodToDate(getDefaultPeriod());\n\n/**\n * @name defaultInterval\n * @type {function}\n *\n * @description\n * Sets interval property on init\n *\n * @param {module:widget-bb-turnovers-ng.Interval} interval Available intervals\n * @returns {string} One of the available intervals\n */\nconst defaultInterval = (interval) => interval.MONTH;\n\n/**\n * @name onTurnoversUpdate\n * @type {function}\n *\n * @description\n * Process parameters before they are sent to the model's load method\n *\n * @param {object} params to process\n * @returns {object} processed params\n */\nconst onTurnoversUpdate = params => {\n  // make sure that period start date covers the whole month at the beginning\n  // other intervals are not covered because extension doesn't have them as an option\n  const startDate = new Date(params.periodStartDate);\n  startDate.setDate(params.intervalStartDay);\n  Object.assign(params, {\n    periodStartDate: startDate.toISOString().slice(0, 10),\n  });\n\n  return params;\n};\n\n/**\n * @name processTurnoverSeries\n * @type {function}\n *\n * @description\n * Default hook for turnovers chart series object post processing\n *\n * @param {module:model-bb-turnovers-ng.BBSeries} series chart series data\n * @param {module:model-bb-turnovers-ng.Turnover} data original turnover object\n * @returns {TurnoversBBSeries} processed series\n */\nconst processTurnoverSeries = (series, data) => {\n  series.datasets.forEach((dataset, index) => {\n    const datasetColor = getStyle(`.chart-bar-dataset-${index}`, 'color');\n    Object.assign(dataset, {\n      backgroundColor: datasetColor,\n      hoverBackgroundColor: datasetColor,\n    });\n  });\n\n  return Object.assign(series, {\n    datasets: series.datasets.reverse(),\n    original: data,\n    updated: true,\n  });\n};\n\n/**\n * @name processLoadError\n * @type {function}\n *\n * @description\n * Ignores parameter missing errors\n *\n * @param {error} The error passed\n * @returns {string} The actual error\n */\nconst processLoadError = err => {\n  if (err === PARAM_ERROR) {\n    return null;\n  }\n  return err;\n};\n\nexport default {\n  defaultPeriodStart,\n  defaultInterval,\n  onTurnoversUpdate,\n  processTurnoverSeries,\n  processLoadError,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-turnovers-ng/scripts/hooks.js","/* eslint-disable import/prefer-default-export */\n/**\n * @name PERIODS\n * @description\n * Periods definition array\n * @type {Period[]}\n */\nexport const PERIODS = [\n  {\n    interval: 'MONTH',\n    duration: 6,\n    label: 'turnovers.label.duration.month.six',\n    default: true,\n  },\n  {\n    interval: 'MONTH',\n    duration: 12,\n    label: 'turnovers.label.duration.month.twelve',\n  },\n];\n\n/**\n * @name DATASET_LABELS\n * @description\n * Array of dataset labels\n * @type {string[]}\n */\nexport const DATASET_LABELS = [\n  'turnovers.label.incoming',\n  'turnovers.label.outgoing',\n];\n\n/**\n * @name PARAM_ERROR\n * @description\n * Error code for parameter missing error\n * @type {string}\n */\nexport const PARAM_ERROR = 'error.load.params';\n\n/**\n * @name BAR_COUNT_BREAK_POINT\n * @description\n * Number of bars from which they should be put closer together\n * @type {number}\n */\nexport const BAR_COUNT_BREAK_POINT = 10;\n\n/**\n * @name MAX_Y_TICKS\n * @description\n * Maximum number of ticks on Y axis\n * @type {number}\n */\nexport const MAX_Y_TICKS = 7;\n\n/**\n * @name CSS_SELECTORS\n * @description\n * Object with all selectors needed for correct styling of canvas parts\n * @type {CSS}\n */\nexport const CSS_SELECTORS = {\n  axisBase: '.chart-bar-axis',\n  axisX: '.chart-bar-axis-x',\n  axisY: '.chart-bar-axis-y',\n  arrowOuter: '.chart-tooltip-default.bb-arrow-bottom::before',\n  layoutBreak: '.chart-layout-change',\n  arrowNear: 'bb-arrow-near',\n  arrowFar: 'bb-arrow-far',\n  legend: 'chart-bar-legend',\n};\n\n/**\n * @typedef {object} CSS\n * @description\n * Object that containes all CSS selectors needed to style canvas parts\n *\n * @property {string} axisBase Axis CSS selector prefix\n * @property {string} axisX X axis CSS selector\n * @property {string} axisY Y axis CSS selector\n * @property {string} arrowOuter Chart's tooltip arrow CSS selector (outer)\n * @property {string} layoutBreak Selector for getting breaking point between\n * small and medium screen\n * @property {string} arrowNear CSS class for tooltip's arrow moved to the front\n * @property {string} arrowFar CSS class for tooltip's arrow moved to the back\n * @property {string} legend CSS class for legend wrapper\n */\n\n/**\n * @typedef {object} Period\n * @description\n * Object used to create list of period options\n *\n * @property {string} interval Interval name\n * @property {number} duration Number of intervals\n * (for creation period of multiple days, weeks, months...)\n * @property {string} label Key used to generate localized title for the option\n * @property {?boolean} default Optional flag to mark default period.\n * If there is no default, first period will be shown\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-turnovers-ng/scripts/constants.js","/* eslint no-underscore-dangle: [2, { \"allow\": [\"_model\"] }]*/\n/* global angular, window, document */\nimport getStyle from 'lib-bb-styles';\nimport {\n  PERIODS,\n  DATASET_LABELS,\n  BAR_COUNT_BREAK_POINT,\n  MAX_Y_TICKS,\n  CSS_SELECTORS,\n} from './constants';\n\n/**\n * @description\n * Retrieves list of all periods\n *\n * @name getPeriods\n * @type {function}\n * @returns {Period[]} List of all available periods\n */\nexport const getPeriods = () => PERIODS;\n\n/**\n * @description\n * Checks period object and converts it into format needed\n * for request (yyyy-mm-dd)\n *\n * @name periodToDate\n * @type {function}\n * @param {Period} period\n * @returns {string} Formatted date\n */\nexport const periodToDate = (period) => {\n  const date = new Date();\n  // current date already covers one period\n  const intervalCount = period.duration - 1;\n  switch (period.interval) {\n    case 'DAY':\n      date.setDate(date.getDate() - intervalCount);\n      break;\n    case 'WEEK':\n      date.setDate(date.getDate() - (intervalCount * 7));\n      break;\n    case 'YEAR':\n      date.setFullYear(date.getFullYear() - intervalCount);\n      break;\n    case 'MONTH':\n    default:\n      date.setMonth(date.getMonth() - intervalCount);\n      break;\n  }\n\n  return date.toISOString().slice(0, 10);\n};\n\n/**\n * @description\n * Finds default period from period list\n *\n * @name getDefaultPeriod\n * @type {function}\n * @returns {Period} Period marked as default\n */\nexport const getDefaultPeriod = () => {\n  const periods = getPeriods();\n  const index = Math.max(periods.map(item => item.default).indexOf(true), 0);\n  return periods[index];\n};\n\nconst helpers = (context) => {\n  const dateFilter = context.$filter('date');\n  const currencyFilter = context.$filter('currency');\n  const i18nFilter = context.$filter('i18n');\n  const getSymbol = (code) => context.getRule(code).symbol || code;\n\n  /**\n   * @description\n   * Keeps state of last screen mode\n   *\n   * @name helpers#onSmallScreen\n   * @type {boolean}\n   * @inner\n   */\n  let onSmallScreen = false;\n\n  /**\n   * @description\n   * Keeps state of initial bar percentage\n   * This value gets increased for small screens and reverted back\n   * on resize\n   *\n   * @name helpers#initialBarPercentage\n   * @type {number}\n   * @inner\n   */\n  let initialBarPercentage = 0;\n\n  /**\n   * @description\n   * To lower impact on performance, tooltip content will be stored in cache array once\n   * it is compiled. Both datasets present the same tooltip for same point index, so\n   * having cache per index is enough.\n   *\n   * @name helpers#tooltipContentCache\n   * @type {string[]}\n   * @inner\n   */\n  let tooltipContentCache = [];\n\n  /**\n   * @description\n   * Checks if screen mode has changed from last time it was checked\n   *\n   * @name helpers#isScreenChanged\n   * @type {function}\n   * @inner\n   * @param {boolean} smallScreen\n   * @returns {boolean}\n   */\n  const isScreenChanged = (smallScreen) => {\n    const changed = smallScreen !== onSmallScreen;\n    if (changed) {\n      onSmallScreen = smallScreen;\n    }\n\n    return changed;\n  };\n\n  /**\n   * @description\n   * Builds HTML content of the tooltip\n   *\n   * @name helpers#buildTooltipContent\n   * @type {function}\n   * @inner\n   * @param {module:model-bb-turnovers-ng.TurnoverItem} item Selected item\n   * @returns {string}\n   */\n  const buildTooltipContent = (item) => `\n    <div class=\"row\">\n      <span class=\"col-5 pr-0\">\n        ${i18nFilter('turnovers.label.incoming')}\n      </span>\n      <span class=\"col-7 text-right\">\n        <ui-bb-format-amount-ng class=\"amount-regular-color\"\n          data-amount=\"${item.creditAmount.amount}\"\n          data-currency=\"'${item.creditAmount.currencyCode}'\"\n          data-wrap\n          data-show-plus-sign>\n        </ui-bb-format-amount-ng>\n      </span>\n    </div>\n    <div class=\"row\">\n      <span class=\"col-5 pr-0\">\n        ${i18nFilter('turnovers.label.outgoing')}\n      </span>\n      <span class=\"col-7 text-right\">\n        <ui-bb-format-amount-ng class=\"amount-regular-color\"\n          data-amount=\"${item.debitAmount.amount * -1}\"\n          data-currency=\"'${item.debitAmount.currencyCode}'\"\n          data-wrap>\n        </ui-bb-format-amount-ng>\n      </span>\n    </div>\n    <hr class=\"chart-tooltip-divider p-0\">\n    <div class=\"row\">\n      <span class=\"col-5 pr-0\">\n        <strong>${i18nFilter('turnovers.label.difference')}</strong>\n      </span>\n      <span class=\"col-7 text-right text-${item.balance.amount < 0 ? 'danger' : 'success'}\">\n        <ui-bb-format-amount-ng class=\"amount-regular-color\"\n          data-amount=\"${item.balance.amount}\"\n          data-currency=\"'${item.balance.currencyCode}'\"\n          data-wrap>\n        </ui-bb-format-amount-ng>\n      </span>\n    </div>\n  `;\n\n  /**\n   * @description\n   * Tries to get breaking point between small and medium screen width\n   * Returns 0 if selector is not correct\n   *\n   * @name helpers#getBreakingPoint\n   * @type {function}\n   * @inner\n   * @returns {number}\n   */\n  const getBreakingPoint = () => parseFloat(getStyle(CSS_SELECTORS.layoutBreak, 'width') || 0);\n\n  /**\n   * @description\n   * Tries to get height of the tooltip arrow\n   * Returns 0 if selector is not correct\n   *\n   * @name helpers#getTooltipArrowHeight\n   * @type {function}\n   * @inner\n   * @returns {number}\n   */\n  const getTooltipArrowHeight = () =>\n    parseFloat(getStyle(CSS_SELECTORS.arrowOuter, 'borderWidth')) || 0;\n\n  /**\n   * @description\n   * Tries to get Y axis label padding\n   * Returns 0 if selector is not correct\n   *\n   * @name helpers#getYAxisLabelPadding\n   * @type {function}\n   * @inner\n   * @returns {number}\n   */\n  const getYAxisLabelPadding = () =>\n    parseFloat(getStyle(CSS_SELECTORS.axisY, 'padding')) || 0;\n\n  /**\n   * @description\n   * Checks if current window width is lower than small screen break point\n   *\n   * @name helpers#isSmallScreen\n   * @type {function}\n   * @inner\n   * @returns {boolean}\n   */\n  const isSmallScreen = () => window.innerWidth <= getBreakingPoint();\n\n  /**\n   * @description\n   * Calculates absolute position of the tooltip, based on\n   * bar height and chart dimensions and assigns them to the\n   * tooltip DOM element\n   *\n   * @name helpers#setTooltipPosition\n   * @type {function}\n   * @inner\n   * @param {object} element in DOM\n   * @param {object} tooltip object containing tooltip related data like\n   * positions, current data point, styling from chart options, etc.\n   * @param {object} chart instance\n   * @returns {string} CSS class that needs to be appended to tooltip's arrow\n   */\n  const setTooltipPosition = (element, tooltip, chart) => {\n    const dataPoint = tooltip.dataPoints[0];\n    const barWidth = chart.getDatasetMeta(dataPoint.datasetIndex)\n      .data[dataPoint.index]._model.width;\n    let positionX = (chart.canvas.offsetLeft + Math.floor(dataPoint.x) +\n      Math.floor((dataPoint.datasetIndex === 0 ? 1 : -1) * (barWidth / 2))) -\n      Math.ceil(element.clientWidth / 2);\n    const positionY = tooltip.caretY - getTooltipArrowHeight() - element.clientHeight;\n\n    // in case when tooltip is outside chart area, it needs to be moved inside\n    let adjustmentClass = '';\n    if (positionX < chart.chartArea.left) {\n      adjustmentClass = CSS_SELECTORS.arrowNear;\n      positionX += element.clientWidth / 4;\n    } else if (positionX + element.clientWidth > chart.chartArea.right) {\n      adjustmentClass = CSS_SELECTORS.arrowFar;\n      positionX -= element.clientWidth / 4;\n    }\n\n    Object.assign(element.style, {\n      left: `${positionX}px`,\n      top: `${Math.max(0, positionY)}px`,\n    });\n\n    return adjustmentClass;\n  };\n\n  /**\n   * @description\n   * Post processing of tooltip's content\n   *\n   * @name helpers#afterContentReady\n   * @type {function}\n   * @inner\n   * @param {object} element in DOM\n   * @param {object} tooltip object containing tooltip related data like\n   * positions, current data point, styling from chart options, etc.\n   * @param {object} chart instance\n   * @param {string} classes Default CSS classes of tooltip element\n   */\n  const afterContentReady = (element, tooltip, chart, classes) => {\n    // calculate element's position and determine if some additional CSS class is needed\n    const additionalClass = setTooltipPosition(element, tooltip, chart);\n    Object.assign(element, { className: `${classes} ${additionalClass}` });\n    Object.assign(element.style, { opacity: 1 });\n  };\n\n  return {\n    periodToDate,\n    getPeriods,\n    getDefaultPeriod,\n\n    /**\n     * @description\n     * Callback on period value change. This function makes sure\n     * that controller properties are updated accordingly and calls\n     * controller's onPeriodChanged listener\n     *\n     * @name helpers#onPeriodChange\n     * @type {function}\n     * @param {TurnoversController} ctrl\n     */\n    onPeriodChange: (ctrl) => {\n      Object.assign(ctrl, { periodStartDate: periodToDate(ctrl.currentPeriod) });\n      Object.assign(ctrl, { periodEndDate: new Date().toISOString().slice(0, 10) });\n      ctrl.onPeriodStartDateChanged();\n    },\n\n    /**\n     * @description\n     * Array of plugins used to transform Chart.js rendering in the extension\n     *\n     * @name chartPlugins\n     * @type {array}\n     */\n    chartPlugins: [\n      {\n        beforeUpdate: (chartInstance) => {\n          tooltipContentCache = [];\n          const scales = chartInstance.config.options.scales;\n          if (!initialBarPercentage) {\n            initialBarPercentage = scales.xAxes[0].categoryPercentage;\n          }\n\n          const smallScreen = isSmallScreen();\n          const data = chartInstance.config.data;\n          const count = (data && data.labels) ? data.labels.length : 0;\n          const smallScreenBarPercentage = Math.min(1, count >= BAR_COUNT_BREAK_POINT ?\n            initialBarPercentage + 0.2 : initialBarPercentage + 0.1);\n\n          if (isScreenChanged(smallScreen)) {\n            chartInstance.config.data.datasets.reverse();\n          } else if (chartInstance.config.data.updated && smallScreen) {\n            // after data reload, we need immediate reverse for small screens\n            chartInstance.config.data.datasets.reverse();\n          }\n\n          scales.yAxes[0].display = !smallScreen;\n          scales.xAxes[0].categoryPercentage =\n            smallScreen ? smallScreenBarPercentage : initialBarPercentage;\n          data.updated = false;\n\n          // append dataset labels\n          let legendEl = chartInstance.canvas.parentNode\n            .getElementsByClassName(CSS_SELECTORS.legend);\n\n          if (legendEl.length) {\n            chartInstance.canvas.parentNode.removeChild(legendEl[0]);\n          }\n\n          chartInstance.config.data.datasets.forEach((dataset, index) => {\n            Object.assign(dataset, {\n              label: i18nFilter(DATASET_LABELS[index]),\n            });\n          });\n\n          legendEl = document.createElement('div');\n          legendEl.className = CSS_SELECTORS.legend;\n          legendEl.innerHTML = chartInstance.generateLegend();\n          chartInstance.canvas.parentNode.appendChild(legendEl);\n        },\n        afterUpdate: (chartInstance) => {\n          if (!isSmallScreen()) {\n            return;\n          }\n\n          const makeOffset = (datasetIndex, x, w) => {\n            const meta = chartInstance.getDatasetMeta(datasetIndex);\n            if (!meta) {\n              return;\n            }\n\n            const metaData = meta.data;\n            for (let i = 0; i < metaData.length; i++) {\n              const model = metaData[i]._model;\n              model.x += model.width * x;\n              model.width *= w;\n            }\n          };\n\n          makeOffset(0, 0.5, 1.43);\n          makeOffset(1, -0.5, 2);\n        },\n      },\n    ],\n\n    /**\n     * @description\n     * Creates custom tooltip content and places tooltip element on top\n     * of the currently active bar\n     *\n     * @name customizeTooltip\n     * @type {function}\n     *\n     * @param {object} tooltip object containing tooltip related data like\n     * positions, current data point, styling from chart options, etc.\n     * @param {object} element in DOM\n     * @param {TurnoversBBSeries} data array of data used to draw the chart\n     * @param {object} chart instance\n     */\n    customizeTooltip: (tooltip, element, data, chart) => {\n      const pointIndex = tooltip.dataPoints[0].index;\n      const defaultClasses =\n        'chart-tooltip chart-tooltip-wide chart-tooltip-default bb-arrow-bottom';\n      Object.assign(element, { className: defaultClasses });\n      // do not show element until it's content is ready\n      Object.assign(element.style, { opacity: 0 });\n      // if content is cached skip building and compilation and go straight to post processing\n      if (tooltipContentCache[pointIndex]) {\n        Object.assign(element, { innerHTML: tooltipContentCache[pointIndex] });\n        afterContentReady(element, tooltip, chart, defaultClasses);\n        return;\n      }\n\n      // get data object for active point\n      const item = data.original.turnovers[tooltip.dataPoints[0].index];\n      Object.assign(element, { innerHTML: buildTooltipContent(item) });\n      // compile tooltip's content\n      context.$compile(angular.element(element).contents())(chart.$scope);\n\n      // Needed in order to trigger the compile of the template after Angular 1.6 update\n      chart.$scope.$digest();\n\n      // use timeout to get real element dimensions once ui component is compiled\n      setTimeout(() => {\n        afterContentReady(element, tooltip, chart, defaultClasses);\n        // cache the content\n        tooltipContentCache[pointIndex] = element.innerHTML;\n      }, 0);\n    },\n\n    /**\n     * @description\n     * X axis tick formatter\n     *\n     * @name formatX\n     * @type {function}\n     *\n     * @param {array} ticks Array of scale ticks\n     * @param {TurnoversBBSeries} data Chart series\n     * @returns {array} Formatted array of ticks\n     */\n    formatX: (ticks) => ticks.map(tick => dateFilter(tick, 'MMM')),\n\n    /**\n     * @description\n     * Y axis tick formatter\n     *\n     * @name formatY\n     * @type {function}\n     *\n     * @param {array} ticks Array of scale ticks\n     * @param {TurnoversBBSeries} data Chart series\n     * @returns {array} Formatted array of ticks\n     */\n    formatY: (ticks, data) => {\n      if (!data || !data.original.turnovers.length) {\n        return [];\n      }\n      // the same currency is being used for all ticks\n      const currencyCode = data.original.turnovers[0].balance.currencyCode;\n      return ticks.map(tick => {\n        if (parseFloat(tick) === 0) {\n          return null;\n        }\n        return currencyFilter(tick, getSymbol(currencyCode), 0);\n      });\n    },\n\n    /**\n     * @description\n     * Object with chart options that need to be overriden\n     *\n     * @name chartOptions\n     * @type {ChartjsSettings}\n     */\n    chartOptions: {\n      scales: {\n        xAxes: [{\n          ticks: {\n            fontColor: getStyle(CSS_SELECTORS.axisX, 'color'),\n            fontFamily: getStyle(CSS_SELECTORS.axisBase, 'fontFamily'),\n          },\n        }],\n        yAxes: [{\n          gridLines: {\n            display: true,\n            drawBorder: false,\n            tickMarkLength: 0,\n          },\n          ticks: {\n            min: 0,\n            maxTicksLimit: MAX_Y_TICKS,\n            padding: getYAxisLabelPadding(),\n            fontColor: getStyle(CSS_SELECTORS.axisY, 'color'),\n            fontFamily: getStyle(CSS_SELECTORS.axisBase, 'fontFamily'),\n          },\n        }],\n      },\n    },\n\n    /**\n     * @description\n     * Checks chart series object to see if there are actual chart points to draw\n     *\n     * @name hasDataToDraw\n     * @type {function}\n     *\n     * @param {TurnoversBBSeries} series Chart series\n     * @returns {boolean}\n     */\n    hasDataToDraw: (series) =>\n      series && series.datasets && series.datasets[0] &&\n      series.datasets[0].data && series.datasets[0].data.length,\n  };\n};\n\nexport default helpers;\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-turnovers-ng/scripts/helpers.js"],"sourceRoot":""}