{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///webpack/bootstrap 336d4234ba418df68efe?1e5a*","webpack:///./model-bb-account-statements-ng/model.xml","webpack:///./model-bb-account-statements-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///external \"data-bb-account-statements-http-ng\"","webpack:///external \"data-bb-product-summary-http-ng\"","webpack:///external \"lib-bb-storage-ng\"","webpack:///./model-bb-account-statements-ng/scripts/account-statements.js","webpack:///external \"lib-bb-model-errors\"","webpack:///./model-bb-account-statements-ng/scripts/constants.js"],"names":["moduleKey","modelAccountStatementsKey","module","factory","name","AccountStatementsModel","accountStatementsData","productSummaryData","bbStorage","loadAccounts","params","getProductsummaryArrangements","then","response","data","totalCount","parseInt","headers","catch","e","getSelectedAccountId","getItem","ACCOUNT_SELECTED","load","getAccountStatements","getStatementUrl","uid","getAccountStatementsDownloadRecordUrl","getCategories","getAccountStatementsCategories","BbStorageKeys","PRODUCT_SUMMARY"],"mappings":"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","file":"model-bb-account-statements-ng/scripts/model-bb-account-statements-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"data-bb-account-statements-http-ng\"), require(\"data-bb-product-summary-http-ng\"), require(\"lib-bb-storage-ng\"), require(\"lib-bb-model-errors\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"model-bb-account-statements-ng\", [\"vendor-bb-angular\", \"data-bb-account-statements-http-ng\", \"data-bb-product-summary-http-ng\", \"lib-bb-storage-ng\", \"lib-bb-model-errors\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"model-bb-account-statements-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"data-bb-account-statements-http-ng\"), require(\"data-bb-product-summary-http-ng\"), require(\"lib-bb-storage-ng\"), require(\"lib-bb-model-errors\"));\n\telse\n\t\troot[\"model-bb-account-statements-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"data-bb-account-statements-http-ng\"], root[\"data-bb-product-summary-http-ng\"], root[\"lib-bb-storage-ng\"], root[\"lib-bb-model-errors\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_25__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_30__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 336d4234ba418df68efe","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./model-bb-account-statements-ng/model.xml\n// module id = 0\n// module chunks = 2","/**\n * @module model-bb-account-statements-ng\n *\n * @description\n * Model for widget-bb-account-statements-ng\n *\n * @example\n * import modelAccountStatementsModuleKey, {\n *   modelAccountStatementsKey\n * } from 'model-bb-account-statements-ng';\n *\n * angular\n *   .module('ExampleModule', [\n *     modelAccountStatementsModuleKey,\n *   ])\n *   .factory('someFactory', [\n *     modelAccountStatementsKey,\n *     // into\n *     function someFactory(accountStatementsModel) {\n *       // ...\n *     },\n *   ]);\n */\nimport angular from 'vendor-bb-angular';\n\nimport accountStatementsDataModuleKey, {\n  accountStatementsDataKey,\n} from 'data-bb-account-statements-http-ng';\n\nimport productSummaryDataModuleKey, {\n  productSummaryDataKey,\n} from 'data-bb-product-summary-http-ng';\n\nimport bbStorageModuleKey, {\n  bbStorageServiceKey,\n} from 'lib-bb-storage-ng';\n\nimport Model from './account-statements';\n\nconst moduleKey = 'model-bb-account-statements-ng';\nexport const modelAccountStatementsKey = `${moduleKey}:model`;\n\nexport default angular\n  .module(moduleKey, [\n    accountStatementsDataModuleKey,\n    productSummaryDataModuleKey,\n    bbStorageModuleKey,\n  ])\n\n  .factory(modelAccountStatementsKey, [\n    accountStatementsDataKey,\n    productSummaryDataKey,\n    bbStorageServiceKey,\n    /* into */\n    Model,\n  ])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-account-statements-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_25__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 25\n// module chunks = 2 3 4 5 6","module.exports = __WEBPACK_EXTERNAL_MODULE_26__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-account-statements-http-ng\"\n// module id = 26\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-product-summary-http-ng\"\n// module id = 27\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-storage-ng\"\n// module id = 28\n// module chunks = 2","import { fromHttpError } from 'lib-bb-model-errors';\nimport { BbStorageKeys } from './constants';\n\n/**\n * Model factory for model-bb-account-statements-ng\n *\n * @inner\n * @type {function}\n * @param {object} accountStatementsData\n * @param {object} productSummaryData\n * @param {Object} bbStorage\n *\n * @return {Object}\n */\nexport default function AccountStatementsModel(\n  accountStatementsData,\n  productSummaryData,\n  bbStorage\n) {\n  /**\n   * @name AccountStatementsModel#loadAccounts\n   * @type {function}\n   *\n   * @description\n   * Retrieves list of accounts.\n   *\n   * @param {?object} params Optional configuration object.\n   * @returns {Promise.<Accounts, ModelError>}\n   * A Promise resolving to object with List of Accounts.\n   */\n  const loadAccounts = (params = {}) => productSummaryData.getProductsummaryArrangements(params)\n    .then((response) => ({\n      data: response.data,\n      totalCount: parseInt(response.headers('x-total-count'), 10) || 0,\n    }))\n    .catch(e => {\n      throw fromHttpError(e);\n    });\n\n  /**\n   * @name AccountStatementsModel#getSelectedAccountId\n   * @type {function}\n   *\n   * @description\n   * Retrieves selected account id.\n   *\n   * @returns {Promise.<String, ModelError>}\n   * A Promise resolving selected account ID.\n   */\n  const getSelectedAccountId = () => bbStorage.getItem(BbStorageKeys.ACCOUNT_SELECTED);\n\n  /**\n   * @name AccountStatementsModel#load\n   * @type {function}\n   *\n   * @description\n   * Gets the list of account statements.\n   *\n   * @param {?object} params Optional configuration object.\n   * @returns {Promise.<AccountStatements, ModelError>}\n   * A Promise resolving to object with the list of account statements.\n   */\n  const load = (params = {}) => accountStatementsData.getAccountStatements(params)\n    .then((response) => ({\n      data: response.data,\n      totalCount: parseInt(response.headers('x-total-count'), 10) || 0,\n    }))\n    .catch(e => {\n      throw fromHttpError(e);\n    });\n\n  /**\n   * @name AccountStatementsModel#getStatementUrl\n   * @type {function}\n   *\n   * @description\n   * Retrieves the account statement download record url.\n   *\n   * @param {string} uid The uid of the statement to get the download record url\n   * @returns {String}\n   */\n  const getStatementUrl = (uid) => accountStatementsData.getAccountStatementsDownloadRecordUrl(uid);\n\n  /**\n   * @name AccountStatementsModel#getCategories\n   * @type {function}\n   *\n   * @description\n   * get all statements categories.\n   *\n   * @returns {Promise.<Categories, ModelError>}\n   */\n  const getCategories = (params = {}) =>\n    accountStatementsData.getAccountStatementsCategories(params)\n      .then((response) => ({\n        data: response.data,\n      }))\n      .catch(e => {\n        throw fromHttpError(e);\n      });\n\n  /**\n   * @name AccountStatementsModel\n   * @type {Object}\n   *\n   * @description\n   * Model factory for widget-bb-account-statements-ng\n   */\n  return {\n    load,\n    loadAccounts,\n    getCategories,\n    getSelectedAccountId,\n    getStatementUrl,\n  };\n}\n\n/**\n * @typedef {Object} AccountStatements\n * @property {module:data-bb-account-statements-ng.AccountStatementsData.AccountStatement[]} data\n *   array of Account statements\n * @property {?Number} totalCount total count of account statements if needed\n */\n\n/**\n * @typedef {Object} Accounts\n * @property {module:data-bb-product-summary-ng.ProductSummaryData.ProductsummaryItem[]} data\n *   array of Accountss\n * @property {?Number} totalCount total count of account statements if needed\n */\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-account-statements-ng/scripts/account-statements.js","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 30\n// module chunks = 2 6","/**\n * bbStorage keys enum\n * @type {object}\n */\n// eslint-disable-next-line import/prefer-default-export\nexport const BbStorageKeys = {\n  PRODUCT_SUMMARY: 'bb.product.summary.data',\n  ACCOUNT_SELECTED: 'bb.product.selected',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-account-statements-ng/scripts/constants.js"],"sourceRoot":""}