{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6****","webpack:///webpack/bootstrap 110596ed019bd8a9816a?8523****","webpack:///./ext-bbm-transactions-list-ng/model.xml","webpack:///external \"ui-bb-format-amount-ng\"?8f72***","webpack:///external \"ui-bb-i18n-ng\"?dc01***","webpack:///./ext-bbm-transactions-list-ng/scripts/index.js","webpack:///external \"ui-bbm-scroll-ng\"","webpack:///./ext-bbm-transactions-list-ng/scripts/events.js","webpack:///./ext-bbm-transactions-list-ng/scripts/constants.js","webpack:///./ext-bbm-transactions-list-ng/scripts/helpers.js","webpack:///./ext-bbm-transactions-list-ng/scripts/debit-credit-sign.js","webpack:///./ext-bbm-transactions-list-ng/scripts/product-kind-view.js","webpack:///./ext-bbm-transactions-list-ng/scripts/intents.js"],"names":["events","extEvents","helpers","extHelpers","intents","extIntents","dependencyKeys","uiBbFormatAmountKey","uiBbI18nKey","uiBbmScrollKey","SEARCH_MIN_QUERY","SEARCH_INPUT_THRESHOLD","throttle","fn","threshold","last","timeout","throttledFn","args","context","now","Date","timeDifference","clearTimeout","setTimeout","apply","service","withNativeEvents","onSearchInput","value","length","setSearchQuery","ToolbarButtonEvent","SEARCH_TRANSACTION","detail","action","SearchActions","INPUT","text","CANCEL","cancelSearch","Intent","SHOW_TRANSACTION_DETAILS","SHOW_TRANSACTION_LIST","INITIATE_PAYMENT","Platform","ANDROID","IOS","getPlatform","window","BB_PLATFORM","warn","console","msg","getSelectedProductToDisplay","product","groupTransactions","groups","transactions","forEach","date","transaction","bookingDate","group","find","currGroup","push","getTransactionsToDisplay","map","debitCreditSign","stateContainer","getSelectedProduct","createSelector","state","data","getTransactions","hasTransactions","Boolean","getSearchTransactions","search","hasSearchTransactions","hasSelectedProduct","showLoadingState","loading","error","isSearching","searching","isAndroid","isIOS","showList","showSearch","showSearchErrorState","showSearchEmptyState","showSearchLoadingState","showEmptyState","showErrorState","showAccountActions","debitAccount","showFAB","showLoadMoreLoading","showSearchLoadMoreLoading","showSearchLoadMore","showLoadMore","getSignedAmount","amount","creditDebitIndicator","negativeSignKey","initiatePayment","selectTransaction","setSelectedTransaction","showTransactionDetails","loadMore","loadMoreTransactions","searchMore","searchMoreTransactions","positiveSignKey","creditDebitKeysToSign","Object","assign","maskCardNumber","suffix","defaultViewModel","viewModelFactories","currentAccounts","identifier","IBAN","BBAN","primaryValue","bookedBalance","secondaryValue","availableBalance","secondaryLabel","tertiaryValue","creditLimit","tertiaryLabel","savingsAccounts","accruedInterest","termDeposits","principalAmount","creditCards","number","debitCards","loans","investmentAccounts","currentInvestmentValue","Error","isProcessedProduct","hasOwnProperty","call","kind","TypeError","createRequest","handleRequest","showTransactionList","setSelectedProduct"],"mappings":"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","file":"ext-bbm-transactions-list-ng/scripts/ext-bbm-transactions-list-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-format-amount-ng\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bbm-scroll-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bbm-transactions-list-ng\", [\"ui-bb-format-amount-ng\", \"ui-bb-i18n-ng\", \"ui-bbm-scroll-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bbm-transactions-list-ng\"] = factory(require(\"ui-bb-format-amount-ng\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bbm-scroll-ng\"));\n\telse\n\t\troot[\"ext-bbm-transactions-list-ng\"] = factory(root[\"ui-bb-format-amount-ng\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bbm-scroll-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_43__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 110596ed019bd8a9816a","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bbm-transactions-list-ng/model.xml\n// module id = 0\n// module chunks = 4","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-format-amount-ng\"\n// module id = 4\n// module chunks = 0 1 2 3 4","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 7\n// module chunks = 0 1 2 3 4 5 6","/**\n * @module ext-bbm-transactions-list-ng\n *\n * @description\n * Transaction list view for the widget-bbm-transactions-ng\n *\n * NOTE: Starting from version 2.0.0 this extension (ext-bbm-transactions-list-ng)\n * is only compatible with widget-bbm-transactions-ng (mobile widget).\n * Please use version 1.x.x if you are using widget-bb-transactions-ng.\n *\n * @example\n * <!-- transactions widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *  <value type=\"string\">ext-bbm-transactions-list-ng</value>\n * </property>\n */\nimport uiBbFormatAmountKey from 'ui-bb-format-amount-ng';\nimport uiBbmScrollKey from 'ui-bbm-scroll-ng';\nimport uiBbI18nKey from 'ui-bb-i18n-ng';\n\nimport extEvents from './events';\nimport extHelpers from './helpers';\nimport extIntents from './intents';\n\nexport const events = extEvents;\nexport const helpers = extHelpers;\nexport const intents = extIntents;\n\nexport const dependencyKeys = [\n  uiBbFormatAmountKey,\n  uiBbI18nKey,\n  uiBbmScrollKey,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-transactions-list-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-scroll-ng\"\n// module id = 43\n// module chunks = 4","import {\n  SearchActions,\n  ToolbarButtonEvent,\n} from './constants';\n\n/**\n * Defines the min length for the search query\n * @inner\n * @type {number}\n */\nconst SEARCH_MIN_QUERY = 2;\n\n/**\n * Defines the debouncing time for a search to happen (in ms)\n * @inner\n * @type {number}\n */\nconst SEARCH_INPUT_THRESHOLD = 1000;\n\n/**\n * @description\n * Throttles some action by a given delay (threshold)\n *\n * @name throttle\n *\n * @inner\n * @param {function} fn - function to execute\n * @param {int} threshold - delay in execution (in ms)\n * @type {function}\n * @returns {function}\n */\nconst throttle = (fn, threshold) => {\n  let last;\n  let timeout;\n\n  return function throttledFn(...args) {\n    const context = this;\n    const now = Date.now();\n    const timeDifference = now - last;\n\n    if (last && timeDifference < threshold) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        last = now;\n        fn.apply(context, args);\n      }, threshold - timeDifference);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n};\n\nexport default ({ service, withNativeEvents }) => {\n  const onSearchInput = throttle(value => {\n    if (value.length >= SEARCH_MIN_QUERY) {\n      service.setSearchQuery(value);\n    }\n  }, SEARCH_INPUT_THRESHOLD);\n\n  return withNativeEvents({\n    [ToolbarButtonEvent.SEARCH_TRANSACTION]: ({ detail }) => {\n      if (detail.action === SearchActions.INPUT) {\n        onSearchInput(detail.text);\n      } else if (detail.action === SearchActions.CANCEL) {\n        service.cancelSearch();\n      }\n    },\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-transactions-list-ng/scripts/events.js","/* eslint-disable import/prefer-default-export */\n/**\n * Defines widget search action enumeration\n * @inner\n * @enum {string}\n * @type {object}\n */\nexport const SearchActions = {\n  CANCEL: 'cancel',\n  INPUT: 'input',\n};\n\n/**\n * Toolbar button events enum\n * @name ToolbarButtonEvent\n * @type {Object}\n * @inner\n */\nexport const ToolbarButtonEvent = {\n  SEARCH_TRANSACTION: 'bb.event.transactions.search',\n};\n\n/**\n * Intents enum\n * @name Intent\n * @type {Object}\n * @inner\n */\nexport const Intent = {\n  SHOW_TRANSACTION_DETAILS: 'intent.rbm.transactions.details.show',\n  SHOW_TRANSACTION_LIST: 'intent.rbm.transactions.list.show',\n  INITIATE_PAYMENT: 'intent.rbm.paymentOrder.payment.initiate',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-transactions-list-ng/scripts/constants.js","/* global window */\nimport debitCreditSign, { negativeSignKey } from './debit-credit-sign';\nimport productKindView from './product-kind-view';\n\n/**\n * Mobile Platform enum\n * @name Platform\n * @type {Object}\n * @inner\n */\nconst Platform = {\n  ANDROID: 'android',\n  IOS: 'ios',\n};\n\n/**\n * @name getPlatform\n * @type {function}\n * @description\n * Returns the mobile platform that is stored on the window object\n * @returns {string} platform\n * @inner\n */\nconst getPlatform = () => window.BB_PLATFORM;\n\n/**\n * @name warn\n * @type {function}\n * @description\n * Logs a warning message to the console\n * @inner\n */\nconst warn = msg => console.warn(`[ext-bbm-transactions-list-ng] ${msg}`);\n\n/**\n * @name getSelectedProductToDisplay\n * @description\n * Processes a product.\n *\n * @type {function}\n * @param {Object} product The original product from the API\n * @returns {Object} The processed product\n */\nconst getSelectedProductToDisplay = product => product && productKindView(product);\n\n/**\n * @name groupTransactions\n *\n * @description\n * Groups transactions by date\n * We assume that scheduledDate is always date only, e.g. \"2016-10-14\"\n * Otherwise this method should be improved\n *\n * @type {function}\n * @param {Array<object>} transactions\n * @returns {Array} groups - Transactions grouped by date\n * @inner\n */\nconst groupTransactions = transactions => {\n  const groups = [];\n\n  transactions.forEach(transaction => {\n    const date = transaction.bookingDate;\n    let group = groups.find(currGroup => currGroup.date === date);\n\n    if (!group) {\n      group = {\n        date,\n        transactions: [],\n      };\n      groups.push(group);\n    }\n\n    group.transactions.push(transaction);\n  });\n\n  return groups;\n};\n\n/**\n * @name getTransactionsToDisplay\n * @description\n * Processes the list of transactions.\n *\n * @type {function}\n * @param {Array<object>} transactions The original transactions from the API\n * @returns {Array<object>} The list of processed transactions\n */\nconst getTransactionsToDisplay = transactions => (\n  groupTransactions(transactions.map(debitCreditSign))\n);\n\n/**\n * @description\n * Helpers for ext-bbm-transactions-list-ng.\n *\n * @name Helpers\n * @type {Object}\n */\nexport default ({ service, stateContainer, intents }) => {\n  /**\n   * @description\n   * Returns the current selected `product` from the state\n   *\n   * @name Helpers#getSelectedProduct\n   * @type {function}\n   * @returns {Object} product Product from the state\n   * @inner\n   */\n  const getSelectedProduct = stateContainer.createSelector(\n    state => getSelectedProductToDisplay(state.product.data)\n  );\n\n  /**\n   * @description\n   * Returns the `transactions` from the state\n   *\n   * @name Helpers#getTransactions\n   * @type {function}\n   * @returns {Array} transactions List of transactions from the state\n   * @inner\n   */\n  const getTransactions = stateContainer.createSelector(\n    state => getTransactionsToDisplay(state.transactions.data)\n  );\n\n  /**\n   * @description\n   * Returns true if there are `transactions` on the state. Otherwise returns false.\n   *\n   * @name Helpers#hasTransactions\n   * @type {function}\n   * @returns {boolean}\n   * @inner\n   */\n  const hasTransactions = stateContainer.createSelector(state => Boolean(\n    state.transactions.data &&\n    state.transactions.data.length > 0\n  ));\n\n  /**\n   * @description\n   * Returns the searched `transactions` from the state\n   *\n   * @name Helpers#getSearchTransactions\n   * @type {function}\n   * @returns {Array} transactions List of transactions from the state\n   * @inner\n   */\n  const getSearchTransactions = stateContainer.createSelector(\n    state => getTransactionsToDisplay(state.search.data)\n  );\n\n  /**\n   * @description\n   * Returns true if there are searched `transactions` on the state. Otherwise returns false.\n   *\n   * @name Helpers#hasSearchTransactions\n   * @type {function}\n   * @returns {boolean}\n   * @inner\n   */\n  const hasSearchTransactions = stateContainer.createSelector(state => Boolean(\n    state.search.data &&\n    state.search.data.length > 0\n  ));\n\n  /**\n   * @description\n   * Returns true if there is a `product` on the state. Otherwise returns false.\n   *\n   * @name Helpers#hasSelectedProduct\n   * @type {function}\n   * @returns {boolean}\n   * @inner\n   */\n  const hasSelectedProduct = stateContainer.createSelector(state => state.product.data !== null);\n\n  /**\n   * @description\n   * Checks for initial loading.\n   *\n   * @name Helpers#showLoadingState\n   * @type {function}\n   *\n   * @returns {boolean}\n   */\n  const showLoadingState = stateContainer.createSelector(state => Boolean(\n    state.transactions.loading &&\n    !state.transactions.data &&\n    !state.transactions.error\n  ));\n\n  /**\n   * @description\n   * Checks whether the searching flag on the state is set to true\n   *\n   * @name Helpers#isSearching\n   * @type {function}\n   * @returns {boolean}\n   */\n  const isSearching = stateContainer.createSelector(state => state.searching);\n\n  /**\n   * @description\n   * Checks whether the widget is running on Android.\n   * Returns true, if the platform is Android, false otherwise.\n   *\n   * @name Helpers#isAndroid\n   * @type {function}\n   * @returns {boolean}\n   */\n  const isAndroid = () => getPlatform() === Platform.ANDROID;\n\n  /**\n   * @description\n   * Checks whether the widget is running on iOS.\n   * Returns true, if the platform is iOS, false otherwise.\n   *\n   * @name Helpers#isIOS\n   * @type {function}\n   * @returns {boolean}\n   */\n  const isIOS = () => getPlatform() === Platform.IOS;\n\n  /**\n   * @name Helpers#showList\n   * @type {function}\n   * @description\n   * Determines if the list view should be shown\n   * @return {boolean}\n   * @inner\n   */\n  const showList = stateContainer.createSelector(state => !state.searching);\n\n  /**\n   * @name Helpers#showSearch\n   * @type {function}\n   * @description\n   * Determines if the search view should be shown\n   * @return {boolean}\n   * @inner\n   */\n  const showSearch = stateContainer.createSelector(state => state.searching);\n\n  /**\n   * @description\n   * Determines if the search error view should be shown\n   *\n   * @name Helpers#showSearchErrorState\n   * @type {function}\n   *\n   * @returns {boolean}\n   */\n  const showSearchErrorState = stateContainer.createSelector(state => Boolean(\n    state.searching &&\n    state.search.error &&\n    !state.search.loading\n  ));\n\n  /**\n   * @description\n   * Determines if the search empty state view should be shown\n   *\n   * @name Helpers#showSearchEmptyState\n   * @type {function}\n   *\n   * @returns {boolean}\n   */\n  const showSearchEmptyState = stateContainer.createSelector(state => Boolean(\n    state.searching &&\n    Boolean(state.search.data && !state.search.data.length > 0) &&\n    !state.search.error &&\n    !state.search.loading\n  ));\n\n  /**\n   * @description\n   * Determines if the search empty state view should be shown\n   *\n   * @name Helpers#showSearchLoadingState\n   * @type {function}\n   *\n   * @returns {boolean}\n   */\n  const showSearchLoadingState = stateContainer.createSelector(state => Boolean(\n    state.searching &&\n    state.search.loading &&\n    !state.search.data &&\n    !state.search.error\n  ));\n\n  /**\n   * @description\n   * Determines if the empty state view should be shown\n   *\n   * @name Helpers#showEmptyState\n   * @type {function}\n   *\n   * @returns {boolean}\n   */\n  const showEmptyState = stateContainer.createSelector(state => Boolean(\n    !state.searching &&\n    Boolean(state.transactions.data && !state.transactions.data.length > 0) &&\n    !state.transactions.loading &&\n    !state.transactions.error\n  ));\n\n  /**\n   * @description\n   * Determines if the error state view should be shown\n   *\n   * @name Helpers#showErrorState\n   * @type {function}\n   *\n   * @returns {boolean}\n   */\n  const showErrorState = stateContainer.createSelector(state => Boolean(\n    !state.searching &&\n    !state.transactions.loading &&\n    state.transactions.error\n  ));\n\n  /**\n   * @description\n   * Checks whether actions for a given account should be displayed.\n   * Returns true, if they should be displayed, or `false` otherwise.\n   *\n   * @name Helpers#showAccountActions\n   * @type {function}\n   * @returns {boolean}\n   */\n  const showAccountActions = () => Boolean(\n    getSelectedProduct() &&\n    getSelectedProduct().debitAccount\n  );\n\n  /**\n   * @description\n   * Checks whether FAB (Floating Action Buttons) should be displayed. Returns true\n   * if it should be displayed, false otherwise.\n   *\n   * @name Helpers#showFAB\n   * @type {function}\n   * @returns {boolean}\n   */\n  const showFAB = () => Boolean(\n    !isSearching() &&\n    isAndroid() &&\n    showAccountActions()\n  );\n\n  /**\n   * @description\n   * Checks for the load more's loading state.\n   *\n   * @name Helpers#showLoadMoreLoading\n   * @type {function}\n   *\n   * @return {boolean}\n   */\n  const showLoadMoreLoading = stateContainer.createSelector(state => Boolean(\n    state.transactions.loading &&\n    state.transactions.data\n  ));\n\n  /**\n   * @description\n   * Checks for the load more's loading state.\n   *\n   * @name Helpers#showSearchLoadMoreLoading\n   * @type {function}\n   *\n   * @return {boolean}\n   */\n  const showSearchLoadMoreLoading = stateContainer.createSelector(state => Boolean(\n    state.searching &&\n    state.search.loading &&\n    state.search.data\n  ));\n\n  /**\n   * @description\n   * Checks if the load more message should be visible.\n   *\n   * @name Helpers#showSearchLoadMore\n   * @type {function}\n   *\n   * @return {boolean}\n   */\n  const showSearchLoadMore = () => (\n    showSearchLoadMoreLoading()\n  );\n\n  /**\n   * @description\n   * Checks if the load more message should be visible.\n   *\n   * @name Helpers#showLoadMore\n   * @type {function}\n   *\n   * @return {boolean}\n   */\n  const showLoadMore = () => (\n    showLoadMoreLoading()\n  );\n\n  /**\n   * @description\n   * Based on credit/debit indicator, put right sign on the transaction amount\n   *\n   * @name Helpers#getSignedAmount\n   * @type {function}\n   * @param {Object} transaction Transaction object\n   * @returns {number} Signed amount\n   */\n  const getSignedAmount = transaction => (\n    transaction.amount * (transaction.creditDebitIndicator === negativeSignKey ? -1 : 1)\n  );\n\n  /**\n   * @description\n   * Initiates payment from the given product.\n   *\n   * @name Helpers#initiatePayment\n   * @type {function}\n   */\n  const initiatePayment = () => {\n    const product = getSelectedProduct();\n\n    if (!product) {\n      warn('Cannot initiate a payment – no selected product');\n      return;\n    }\n\n    intents.initiatePayment({\n      debitAccount: product,\n    });\n  };\n\n  /**\n   * @description\n   * Sets the currently selected transactions and fires the intent\n   * to show the transaction details\n   *\n   * @name Helpers#selectTransaction\n   * @param {Object} transaction Transaction object\n   * @type {function}\n   */\n  const selectTransaction = transaction => {\n    service.setSelectedTransaction(transaction);\n    return intents.showTransactionDetails(transaction);\n  };\n\n  /**\n   * @description\n   * Loads more transactions\n   *\n   * @name Helpers#loadMore\n   * @type {function}\n   */\n  const loadMore = () => service.loadMoreTransactions();\n\n  /**\n   * @description\n   * Loads more transactions for the active search query\n   *\n   * @name Helpers#searchMore\n   * @type {function}\n   */\n  const searchMore = () => service.searchMoreTransactions();\n\n  return {\n    getSearchTransactions,\n    getSelectedProduct,\n    getSignedAmount,\n    getTransactions,\n    hasSearchTransactions,\n    hasSelectedProduct,\n    hasTransactions,\n    initiatePayment,\n    isAndroid,\n    isIOS,\n    loadMore,\n    searchMore,\n    selectTransaction,\n    showAccountActions,\n    showEmptyState,\n    showErrorState,\n    showFAB,\n    showList,\n    showLoadingState,\n    showLoadMore,\n    showLoadMoreLoading,\n    showSearch,\n    showSearchEmptyState,\n    showSearchLoadingState,\n    showSearchErrorState,\n    showSearchLoadMore,\n    showSearchLoadMoreLoading,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-transactions-list-ng/scripts/helpers.js","export const positiveSignKey = 'CRDT';\nexport const negativeSignKey = 'DBIT';\n\nconst creditDebitKeysToSign = {};\ncreditDebitKeysToSign[positiveSignKey] = '+';\ncreditDebitKeysToSign[negativeSignKey] = '-';\n\n/**\n * @description\n * Adds debitCreditSign property to transaction object based on debitCreditIndicator key\n *\n * @param {Object} transaction Transaction object\n * @returns {Object} new copy of Transaction object\n */\nexport default (transaction) =>\n  Object.assign({\n    debitCreditSign: creditDebitKeysToSign[transaction.creditDebitIndicator],\n  }, transaction);\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-transactions-list-ng/scripts/debit-credit-sign.js","\nconst maskCardNumber = (suffix) => {\n  if (!suffix) {\n    return '';\n  }\n  return `XXXX-XXXX-XXXX-${suffix}`;\n};\n\nconst defaultViewModel = product => product;\n\nconst viewModelFactories = {\n  currentAccounts: product => ({\n    ...product,\n    identifier: product.IBAN || product.BBAN,\n    primaryValue: product.bookedBalance,\n    secondaryValue: product.availableBalance,\n    secondaryLabel: 'label.availableBalance',\n    tertiaryValue: product.creditLimit,\n    tertiaryLabel: 'label.creditLimit',\n  }),\n\n  savingsAccounts: product => ({\n    ...product,\n    identifier: product.BBAN || product.IBAN,\n    primaryValue: product.bookedBalance,\n    secondaryValue: product.accruedInterest,\n    secondaryLabel: 'label.accruedInterestAmount',\n  }),\n\n  termDeposits: product => ({\n    ...product,\n    primaryValue: product.principalAmount,\n    secondaryValue: product.accruedInterest,\n    secondaryLabel: 'label.accruedInterestAmount',\n  }),\n\n  creditCards: product => ({\n    ...product,\n    identifier: maskCardNumber(product.number),\n    primaryValue: product.bookedBalance,\n    secondaryValue: product.creditLimit,\n    secondaryLabel: 'label.creditLimit',\n    tertiaryValue: product.availableBalance,\n    tertiaryLabel: 'label.availableBalance',\n  }),\n\n  debitCards: product => ({\n    ...product,\n    identifier: maskCardNumber(product.number),\n  }),\n\n  loans: product => ({\n    ...product,\n    primaryValue: product.bookedBalance,\n  }),\n\n  investmentAccounts: product => ({\n    ...product,\n    primaryValue: product.currentInvestmentValue,\n  }),\n};\n\n/**\n * Prepare the fields of a Product into a form ready for display to the User\n *\n * @param {object} product The source Product from the API\n * @type {function}\n * @returns {ProductView}\n * @inner\n */\nexport default (product) => {\n  if (!product) {\n    throw new Error('No product to convert. Please provide a product');\n  }\n\n  const isProcessedProduct = {}.hasOwnProperty.call(product, 'identifier') ||\n    {}.hasOwnProperty.call(product, 'primaryValue');\n\n  if (isProcessedProduct) {\n    return product;\n  }\n\n  const kind = product.kind;\n  if (!{}.hasOwnProperty.call(viewModelFactories, kind)) {\n    throw new TypeError(`Unhandled product kind: ${kind}`);\n  }\n\n  return viewModelFactories[product.kind](product) || defaultViewModel(product);\n};\n\n\n/**\n * @typedef ProductView\n * @type {object}\n * @property {string} id The internal Product Identifier\n * @property {string} name The product's name, suitable for display to users\n * @property {string} alias The product's alias, suitable for display to users\n * @property {?string} identifier The identifier of the Product from the user's perspective\n * @property {?string} primaryValue The most important associated value to be displayed\n * @property {?string} secondaryValue A secondary associated value to be displayed\n * @property {?string} secondaryLabel A label to describe the secondary value\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-transactions-list-ng/scripts/product-kind-view.js","import { Intent } from './constants';\n\n/**\n * @name Intents\n * @type {Object}\n */\nexport default ({ createRequest, handleRequest, service }) => ({\n  /**\n   * @name Intents#showTransactionDetails\n   * @description The intent to show the transactions details\n   * @type {function}\n   * @inner\n   */\n  showTransactionDetails: createRequest(Intent.SHOW_TRANSACTION_DETAILS),\n\n  /**\n   * @name Intents#initiatePayment\n   * @description The intent to initiate a new payment\n   * @type {function}\n   * @inner\n   */\n  initiatePayment: createRequest(Intent.INITIATE_PAYMENT),\n\n  /**\n   * @name Intents#showTransactionList\n   * @description Handles the intent to show the transaction list\n   * @type {function}\n   * @inner\n   */\n  showTransactionList: handleRequest(Intent.SHOW_TRANSACTION_LIST, product => {\n    if (product) {\n      service.setSelectedProduct(product);\n    } else {\n      throw new Error(\n        'Product is undefined. Please pass a product object as the payload of the intent'\n      );\n    }\n  }),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-transactions-list-ng/scripts/intents.js"],"sourceRoot":""}