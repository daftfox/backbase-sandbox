{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cb77e9a1ca29260196ab","webpack:///./fe-dist/http-ng/data-bb-batches-http-ng/model.xml","webpack:///./fe-dist/http-ng/data-bb-batches-http-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///./fe-dist/http-ng/data-bb-batches-http-ng/scripts/data-bb-batches-http.js"],"names":["batchesDataModuleKey","batchesDataKey","module","provider","config","baseUri","setBaseUri","$get","name","conf","httpClient","serializeParams","version","definedTypes","parse","res","data","headers","status","statusText","getBatchesLegalentityRecord","legalEntityId","params","url","method","then","catch","err","postBatchesLegalentityRecord","getBatchesLegalentityAuthorizations","getBatchesLegalentityPayments","batchId","postBatchesLegalentityAuthorizationsRecord","postBatchesLegalentityRejectionsRecord","schemas"],"mappings":"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","file":"data-bb-batches-http-ng/scripts/data-bb-batches-http-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-bb-batches-http-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-bb-batches-http-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"data-bb-batches-http-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cb77e9a1ca29260196ab","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fe-dist/http-ng/data-bb-batches-http-ng/model.xml\n// module id = 0\n// module chunks = 0","/* eslint-disable */\n/**\n * @module data-bb-batches-http-ng\n *\n * @description A data module for accessing the Batches REST API.\n *\n * @returns {String} `data-bb-batches-http-ng`\n * @example\n * import batchesDataModuleKey, {\n *   batchesDataKey,\n * } from 'data-bb-batches-http-ng';\n */\n\nimport ng from 'vendor-bb-angular';\n\nimport batchesData from './data-bb-batches-http';\n\nconst batchesDataModuleKey = 'data-bb-batches-http-ng';\n/**\n * @name batchesDataKey\n * @type {string}\n * @description Angular dependency injection key for the BatchesData service\n */\nexport const batchesDataKey = 'data-bb-batches-http-ng:batchesData';\n/**\n * @name default\n * @type {string}\n * @description Angular dependency injection module key\n */\nexport default ng\n  .module(batchesDataModuleKey, [])\n  \n  /**\n   * @constructor BatchesData\n   * @type {object}\n   *\n   * @description Public api for data-bb-batches-http-ng service\n   *\n   */\n  .provider(batchesDataKey, [() => {\n    const config = {\n      baseUri: '/',\n    };\n\n    /**\n     * @name BatchesDataProvider\n     * @type {object}\n     * @ngkey data-bb-batches-http-ng:batchesDataProvider\n     * @description\n     * Data service that can be configured with custom base URI.\n     *\n     * @example\n     * // Configuring in an angular app:\n     * angular.module(...)\n     *   .config(['data-bb-batches-http-ng:batchesDataProvider',\n     *     (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *       });\n     *\n     * // Configuring With config-bb-providers-ng:\n     * export default [\n     *   ['data-bb-batches-http-ng:batchesDataProvider', (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *   }]\n     * ];\n     */\n    return {\n      /**\n       * @name BatchesDataProvider#setBaseUri\n       * @type {function}\n       * @param {string} baseUri Base URI which will be the prefix for all HTTP requests\n       */\n      setBaseUri: (baseUri) => {\n        config.baseUri = baseUri;\n      },\n\n      /**\n       * @name BatchesDataProvider#$get\n       * @type {function}\n       * @return {object} An instance of the service\n       */\n      $get: [\n        '$http',\n        '$httpParamSerializer',\n        /* into */\n       batchesData(config),\n      ],\n    };\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-batches-http-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0","/* eslint-disable */\nexport default (conf) => (httpClient, serializeParams) => {\n  // Base param constants\n  const baseUri = conf.baseUri || '';\n\n  const version = 'v2';\n\n\n  /**\n   * The root defined types from the RAML.\n   * @private\n   */\n  const definedTypes = {};\n\n  \n  definedTypes['BatchesData.Batches'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\",\"required\":true},\"fileName\":{\"type\":\"string\",\"required\":true},\"fileSize\":{\"type\":\"integer\",\"required\":true},\"creationDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"creationUser\":{\"type\":\"object\",\"properties\":{\"firstName\":{\"type\":\"string\",\"required\":false},\"lastName\":{\"type\":\"string\",\"required\":true}},\"required\":true},\"status\":{\"type\":\"string\",\"enum\":[\"UNAUTHORIZED\",\"PARTIALLY_AUTHORIZED\",\"AUTHORIZED\",\"REJECTED_BY_USER\"],\"required\":true},\"type\":{\"type\":\"string\",\"enum\":[\"SEPA CT\"],\"required\":true},\"reference\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":35,\"pattern\":\"^[0-9a-zA-Z]*$\",\"required\":true},\"amount\":{\"type\":\"number\",\"required\":true},\"currency\":{\"type\":\"string\",\"enum\":[\"EUR\"],\"required\":true},\"executionDate\":{\"type\":\"string\",\"format\":\"date\",\"required\":true},\"paymentsCount\":{\"type\":\"integer\",\"minimum\":1,\"required\":true}}}};\n  \n  definedTypes['BatchesData.UploadBatch'] = {\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\",\"required\":true}}};\n  \n  definedTypes['BatchesData.BatchPayments'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\",\"required\":true},\"creditAccountIdentification\":{\"type\":\"object\",\"properties\":{\"counterpartyName\":{\"type\":\"string\",\"required\":true},\"scheme\":{\"type\":\"string\",\"enum\":[\"BBAN\",\"IBAN\",\"ID\"],\"required\":true},\"identification\":{\"type\":\"string\",\"required\":true}},\"required\":false},\"amount\":{\"type\":\"string\",\"required\":true},\"currency\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true},\"description\":{\"type\":\"string\",\"required\":false},\"transactionReferece\":{\"type\":\"string\",\"maxLength\":35,\"required\":true}}}};\n  \n  definedTypes['BatchesData.Authorizations'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\",\"required\":true},\"fileName\":{\"type\":\"string\",\"required\":true},\"fileSize\":{\"type\":\"integer\",\"required\":true},\"creationDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"creationUser\":{\"type\":\"object\",\"properties\":{\"firstName\":{\"type\":\"string\",\"required\":false},\"lastName\":{\"type\":\"string\",\"required\":true}},\"required\":true},\"status\":{\"type\":\"string\",\"enum\":[\"UNAUTHORIZED\",\"PARTIALLY_AUTHORIZED\",\"AUTHORIZED\",\"REJECTED_BY_USER\"],\"required\":true},\"type\":{\"type\":\"string\",\"enum\":[\"SEPA CT\"],\"required\":true},\"reference\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":35,\"pattern\":\"^[0-9a-zA-Z]*$\",\"required\":true},\"amount\":{\"type\":\"number\",\"required\":true},\"currency\":{\"type\":\"string\",\"enum\":[\"EUR\"],\"required\":true},\"executionDate\":{\"type\":\"string\",\"format\":\"date\",\"required\":true},\"paymentsCount\":{\"type\":\"integer\",\"minimum\":1,\"required\":true}}}};\n  \n\n  \n  /**\n   * @typedef BatchesData.AccountIdentification\n   * @type {Object}\n   * @property {String} counterpartyName Counterparty name. Only required when 'scheme' is set to IBAN/BBAN.\n   * @property {String} scheme One of \"BBAN\", \"IBAN\", \"ID\"\n   * @property {String} identification Unique identification of the product\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef BatchesData.Authorizations\n   * @type {Array.<BatchesData.Batch>}\n   */\n  \n  /**\n   * @typedef BatchesData.Batch\n   * @type {Object}\n   * @property {String} id\n   * @property {String} fileName Uploaded file name\n   * @property {Integer} fileSize Uploaded file size (in bytes)\n   * @property {String} creationDate Creation date and time of the uploaded file\n   * @property {BatchesData.creationUser} creationUser User which uploaded batch file\n   * @property {String} status One of \"UNAUTHORIZED\", \"PARTIALLY_AUTHORIZED\", \"AUTHORIZED\", \"REJECTED_BY_USER\"\n   * @property {String} type One of \"SEPA CT\"\n   * @property {String} reference Alphanumeric uniqe reference number of the batch\n   * @property {Number} amount The total amount of all payment orders inside batch\n   * @property {String} currency One of \"EUR\"\n   * @property {String} executionDate Execution date of the batch\n   * @property {Integer} paymentsCount Number of payment orders inside batch\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef BatchesData.BatchPayments\n   * @type {Array.<BatchesData.Payment>}\n   */\n  \n  /**\n   * @typedef BatchesData.Batches\n   * @type {Array.<BatchesData.Batch>}\n   */\n  \n  /**\n   * @typedef BatchesData.Payment\n   * @type {Object}\n   * @property {String} id\n   * @property {?BatchesData.AccountIdentification} creditAccountIdentification\n   * @property {String} amount The amount of the payment\n   * @property {String} currency The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount\n   * @property {?String} description The description for the payment.\n   * @property {String} transactionReferece The reference for the payment, provided by the client from the batch file\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef BatchesData.UploadBatch\n   * @type {Object}\n   * @property {String} id\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef BatchesData.creationUser\n   * @type {Object}\n   * @property {?String} firstName The given name of a user\n   * @property {String} lastName The family name of a user\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n\n  /*\n   * @name parse\n   * @type {Function}\n   * @private\n   * @description Should be overwritten by transformResponse on a project level\n   */\n  function parse(res) {\n    return {\n      data: res.data,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n    };\n  }\n\n  \n  /**\n   * @name BatchesData#getBatchesLegalentityRecord\n   * @type {Function}\n   * @description Retrieve list of uploaded batch files\n   \n   * @param {string} legalEntityId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   * @param {?string} params.orderBy Order by field: status, type, paymentsCount, currency, amount, executionDate, creationUser, creationDate.\n     \n   * @param {?string} params.direction Direction. (defaults to DESC)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link BatchesData.Batches} on success \n   *\n   * @example\n   * batchesData\n   *  .getBatchesLegalentityRecord(legalEntityId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getBatchesLegalentityRecord(legalEntityId, params, headers) {\n    const url = `${baseUri}${version}/batches/legalentity/${legalEntityId}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name BatchesData#postBatchesLegalentityRecord\n   * @type {Function}\n   * @description Upload new batch file\n   \n   * @param {string} legalEntityId \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link BatchesData.UploadBatch} on success \n   *\n   * @example\n   * batchesData\n   *  .postBatchesLegalentityRecord(legalEntityId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postBatchesLegalentityRecord(legalEntityId, data, headers) {\n    const url = `${baseUri}${version}/batches/legalentity/${legalEntityId}`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name BatchesData#getBatchesLegalentityAuthorizations\n   * @type {Function}\n   * @description Retrieve list of batches, which can be authorized or rejected.\n   \n   * @param {string} legalEntityId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   * @param {?string} params.orderBy Order by field: status, type, paymentsCount, currency, amount, executionDate, creationUser, creationDate.\n     \n   * @param {?string} params.direction Direction. (defaults to DESC)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link BatchesData.Authorizations} on success \n   *\n   * @example\n   * batchesData\n   *  .getBatchesLegalentityAuthorizations(legalEntityId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getBatchesLegalentityAuthorizations(legalEntityId, params, headers) {\n    const url = `${baseUri}${version}/batches/legalentity/${legalEntityId}/authorizations`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name BatchesData#getBatchesLegalentityPayments\n   * @type {Function}\n   * @description Retrieve list of batch payments\n   \n   * @param {string} legalEntityId \n     \n   \n   * @param {string} batchId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link BatchesData.BatchPayments} on success \n   *\n   * @example\n   * batchesData\n   *  .getBatchesLegalentityPayments(legalEntityId, batchId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getBatchesLegalentityPayments(legalEntityId, batchId, params, headers) {\n    const url = `${baseUri}${version}/batches/legalentity/${legalEntityId}/${batchId}/payments`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name BatchesData#postBatchesLegalentityAuthorizationsRecord\n   * @type {Function}\n   * @description Authorize batch.\n   \n   * @param {string} legalEntityId \n     \n   \n   * @param {string} batchId \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * batchesData\n   *  .postBatchesLegalentityAuthorizationsRecord(legalEntityId, batchId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postBatchesLegalentityAuthorizationsRecord(legalEntityId, batchId, data, headers) {\n    const url = `${baseUri}${version}/batches/legalentity/${legalEntityId}/authorizations/${batchId}`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name BatchesData#postBatchesLegalentityRejectionsRecord\n   * @type {Function}\n   * @description Reject batch.\n   \n   * @param {string} legalEntityId \n     \n   \n   * @param {string} batchId \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * batchesData\n   *  .postBatchesLegalentityRejectionsRecord(legalEntityId, batchId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postBatchesLegalentityRejectionsRecord(legalEntityId, batchId, data, headers) {\n    const url = `${baseUri}${version}/batches/legalentity/${legalEntityId}/rejections/${batchId}`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n\n  \n\n  \n  const schemas = {};\n  \n\n  /**\n   * @typedef Response\n   * @type {Object}\n   * @property {Object} data See method descriptions for possible return types\n   * @property {Function} headers Getter headers function\n   * @property {Number} status HTTP status code of the response.\n   * @property {String} statusText HTTP status text of the response.\n   */\n\n  return ({\n    \n    getBatchesLegalentityRecord,\n    \n    postBatchesLegalentityRecord,\n    \n    getBatchesLegalentityAuthorizations,\n    \n    getBatchesLegalentityPayments,\n    \n    postBatchesLegalentityAuthorizationsRecord,\n    \n    postBatchesLegalentityRejectionsRecord,\n    \n    \n    schemas,\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-batches-http-ng/scripts/data-bb-batches-http.js"],"sourceRoot":""}