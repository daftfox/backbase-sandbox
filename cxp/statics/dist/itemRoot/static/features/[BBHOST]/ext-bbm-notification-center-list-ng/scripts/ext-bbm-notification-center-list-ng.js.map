{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6****","webpack:///webpack/bootstrap 35bfb9b1c80b5da44aff?9560****","webpack:///./ext-bbm-notification-center-list-ng/model.xml","webpack:///external \"ui-bb-i18n-ng\"?dc01***","webpack:///external \"ui-bb-date-label-filter-ng\"?be82***","webpack:///./ext-bbm-notification-center-list-ng/scripts/index.js","webpack:///external \"ui-bbm-scroll-ng\"","webpack:///./ext-bbm-notification-center-list-ng/scripts/events.js","webpack:///./ext-bbm-notification-center-list-ng/scripts/constants.js","webpack:///./ext-bbm-notification-center-list-ng/scripts/intents.js","webpack:///./ext-bbm-notification-center-list-ng/scripts/helpers.js"],"names":["events","extEvents","intents","extIntents","helpers","extHelpers","dependencyKeys","uiBbI18nKey","uiBbDateLabelFilterKey","uiBbmScrollKey","service","Event","NOTIFICATION_CHANGE_READ","reloadNotifications","AFTER_NOTIFICATION_DELETE_SUCCESS","LevelIcon","ALERT","INFO","SUCCESS","WARNING","DateLabel","TimePeriod","NOW","TODAY","YESTERDAY","Intent","SHOW_NOTIFICATION_LIST","SHOW_NOTIFICATION_DETAILS","createRequest","showNotificationDetails","$filter","stateContainer","getNotifications","createSelector","state","notifications","data","normalizeDate","filteredDate","dateStr","replace","getLevelIcon","level","getDateLabel","date","notification","createdOn","labelKey","resultDateLabel","isOpen","hasNotifications","Boolean","length","showLoadingState","loading","error","showLoadMoreLoading","showLoadMore","showErrorState","showEmptyState","selectNotification","setSelectedNotification","loadMoreNotifications"],"mappings":"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","file":"ext-bbm-notification-center-list-ng/scripts/ext-bbm-notification-center-list-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-date-label-filter-ng\"), require(\"ui-bbm-scroll-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bbm-notification-center-list-ng\", [\"ui-bb-i18n-ng\", \"ui-bb-date-label-filter-ng\", \"ui-bbm-scroll-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bbm-notification-center-list-ng\"] = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-date-label-filter-ng\"), require(\"ui-bbm-scroll-ng\"));\n\telse\n\t\troot[\"ext-bbm-notification-center-list-ng\"] = factory(root[\"ui-bb-i18n-ng\"], root[\"ui-bb-date-label-filter-ng\"], root[\"ui-bbm-scroll-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_33__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 35bfb9b1c80b5da44aff","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bbm-notification-center-list-ng/model.xml\n// module id = 0\n// module chunks = 4","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 4\n// module chunks = 0 1 2 3 4 5","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-date-label-filter-ng\"\n// module id = 5\n// module chunks = 0 1 2 3 4 5","/**\n * @module ext-bbm-notification-center-list-ng\n *\n * @description\n * Mobile extension for a notiication center list.\n *\n * @example\n * <!-- Contact widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *   <value type=\"string\">ext-bbm-notification-list-ng</value>\n * </property>\n */\nimport uiBbI18nKey from 'ui-bb-i18n-ng';\nimport uiBbDateLabelFilterKey from 'ui-bb-date-label-filter-ng';\nimport uiBbmScrollKey from 'ui-bbm-scroll-ng';\n\nimport extEvents from './events';\nimport extIntents from './intents';\nimport extHelpers from './helpers';\n\nexport const events = extEvents;\nexport const intents = extIntents;\nexport const helpers = extHelpers;\n\nexport const dependencyKeys = [\n  uiBbI18nKey,\n  uiBbDateLabelFilterKey,\n  uiBbmScrollKey,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-list-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_33__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-scroll-ng\"\n// module id = 33\n// module chunks = 4","import {\n  Event,\n} from './constants';\n\nexport default ({ service }) => ({\n  [Event.NOTIFICATION_CHANGE_READ]: () => {\n    service.reloadNotifications();\n  },\n\n  [Event.AFTER_NOTIFICATION_DELETE_SUCCESS]: () => {\n    service.reloadNotifications();\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-list-ng/scripts/events.js","import { TimePeriod } from 'ui-bb-date-label-filter-ng';\n\n/**\n * Level icons\n * @name LevelIcon\n * @type {Object}\n * @inner\n */\nexport const LevelIcon = {\n  ALERT: 'fa-exclamation-circle',\n  INFO: 'fa-info-circle',\n  SUCCESS: 'fa-check-circle',\n  WARNING: 'fa-exclamation-triangle',\n};\n\n/**\n * Date labels\n * @name DateLabel\n * @type {Object}\n * @inner\n */\nexport const DateLabel = {\n  [TimePeriod.NOW]: 'calendar.label.now',\n  [TimePeriod.TODAY]: 'calendar.label.today',\n  [TimePeriod.YESTERDAY]: 'calendar.label.yesterday',\n};\n\nexport const Event = {\n  /**\n   * A notification was successfully deleted.\n   * @event bb.event.notification.delete.done\n   * @type {string}\n   */\n  AFTER_NOTIFICATION_DELETE_SUCCESS: 'bb.event.notification.delete.done',\n\n  /**\n   * The read status of a notification was changed.\n   * @event bb.event.notification.read.change\n   * @type {string}\n   */\n  NOTIFICATION_CHANGE_READ: 'bb.event.notification.read.change',\n};\n\n/**\n * Intents enum\n * @name Intent\n * @type {Object}\n * @inner\n */\nexport const Intent = {\n  SHOW_NOTIFICATION_LIST: 'intent.rbm.notification.list.show',\n  SHOW_NOTIFICATION_DETAILS: 'intent.rbm.notification.details.show',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-list-ng/scripts/constants.js","import { Intent } from './constants';\n\n/**\n * @name Intents\n * @type {Object}\n */\nexport default ({ createRequest }) => ({\n  /**\n   * @name Intents#showNotificationDetails\n   * @description The intent to show the notification details\n   * @type {function}\n   */\n  showNotificationDetails: createRequest(Intent.SHOW_NOTIFICATION_DETAILS),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-list-ng/scripts/intents.js","import { TimePeriod } from 'ui-bb-date-label-filter-ng';\n\nimport {\n  LevelIcon,\n  DateLabel,\n} from './constants';\n\n/**\n * @description\n * Helpers for ext-bbm-notification-center-list-ng\n *\n * @name Helpers\n * @type {Object}\n */\nexport default ({ $filter, service, stateContainer, intents }) => {\n  /**\n   * @description\n   * Returns the `notifications` from the state\n   *\n   * @name Helpers#getNotifications\n   * @type {function}\n   * @returns {Array} notifications List of notifications from the state\n   * @inner\n   */\n  const getNotifications = stateContainer.createSelector(\n    state => state.notifications.data\n  );\n\n  /**\n   * The standard ISO-8601 supports the following formats for time offsets:\n   * ±[hh]:[mm], ±[hh][mm], or ±[hh]\n   * However iOS does support only ±[hh]:[mm] format.\n   * Thus we make sure that the given date string has the following\n   * variation of the ISO-8601 standard:\n   * \"YYYY-MM-DDThh:mm:ss.SSS±hh:mm\"\n   * @name normalizeDate\n   * @type {function}\n   *\n   * @param dateStr\n   * @inner\n   */\n  const normalizeDate = dateStr => {\n    const filteredDate = $filter('date')(dateStr, 'yyyy-MM-ddTHH:mm:ss.sssZ');\n    return filteredDate.replace(/(\\d{2}):?(\\d{2})$/, '$1:$2');\n  };\n\n  /**\n   * @description\n   * Returns CSS class for icon according to the given level.\n   *\n   * @name Helpers#getLevelIcon\n   * @type {function}\n   *\n   * @param {string} level Notification level\n   * @return {string}\n   */\n  const getLevelIcon = level => LevelIcon[level];\n\n  /**\n   * @description\n   * Returns a date label for the given notification.\n   * @name Helpers#getDateLabel\n   * @type {function}\n   * @param {module:data-bb-notifications-http-ng.NotificationsData.NotificationItem} notification\n   *   Notification item\n   * @return {string}\n   */\n  const getDateLabel = notification => {\n    const date = normalizeDate(notification.createdOn);\n    let labelKey;\n    let resultDateLabel;\n\n    if (!notification.isOpen) {\n      labelKey = DateLabel[$filter('dateLabel')(date)];\n      if (labelKey) {\n        if (labelKey === DateLabel[TimePeriod.NOW]) {\n          resultDateLabel = $filter('i18n')(labelKey);\n        } else {\n          resultDateLabel = $filter('i18n')(labelKey) +\n            $filter('i18n')('calendar.label.at') +\n            $filter('date')(date, 'hh:mm');\n        }\n      }\n    }\n\n    return labelKey ? resultDateLabel : $filter('date')(date, 'd MMMM yyyy');\n  };\n\n  /**\n   * @description\n   * Checks if there are notifications.\n   *\n   * @name Helpers#hasNotifications\n   * @type {function}\n   *\n   * @return {boolean}\n   */\n  const hasNotifications = stateContainer.createSelector(state => Boolean(\n    state.notifications.data &&\n    state.notifications.data.length\n  ));\n\n  /**\n   * @description\n   * Checks for the loading state.\n   *\n   * @name Helpers#showLoadingState\n   * @type {function}\n   *\n   * @return {boolean}\n   */\n  const showLoadingState = stateContainer.createSelector(state => Boolean(\n    state.notifications.loading &&\n    !state.notifications.data &&\n    !state.notifications.error\n  ));\n\n  /**\n   * @description\n   * Checks for the load more's loading state.\n   *\n   * @name Helpers#showLoadMoreLoading\n   * @type {function}\n   *\n   * @return {boolean}\n   */\n  const showLoadMoreLoading = stateContainer.createSelector(state => Boolean(\n    state.notifications.loading &&\n    state.notifications.data\n  ));\n\n  /**\n   * @description\n   * Checks for the load more states.\n   *\n   * @name Helpers#showLoadMore\n   * @type {function}\n   *\n   * @return {boolean}\n   */\n  const showLoadMore = () => (\n    showLoadMoreLoading()\n  );\n\n  /**\n   * @description\n   * Checks for the error state.\n   *\n   * @name Helpers#showErrorState\n   * @type {function}\n   *\n   * @return {boolean}\n   */\n  const showErrorState = stateContainer.createSelector(state => Boolean(\n    state.notifications.error &&\n    !state.notifications.loading\n  ));\n\n  /**\n   * @description\n   * Checks for the empty state.\n   *\n   * @name Helpers#showEmptyState\n   * @type {function}\n   *\n   * @return {boolean}\n   */\n  const showEmptyState = stateContainer.createSelector(state => Boolean(\n    Boolean(state.notifications.data && !state.notifications.data.length) &&\n    !state.notifications.error &&\n    !state.notifications.loading\n  ));\n\n  /**\n   * @description\n   * Sets the selected notification and fires the intent to show the notification details\n   *\n   * @name Helpers#selectNotification\n   * @type {function}\n   * @param {Object} notification The notification to select\n   * @inner\n   */\n  const selectNotification = notification => {\n    service.setSelectedNotification(notification);\n    return intents.showNotificationDetails(notification);\n  };\n\n  /**\n   * @description\n   * Loads more notifications\n   *\n   * @name Helpers#loadMoreNotifications\n   * @type {function}\n   */\n  const loadMoreNotifications = () => service.loadMoreNotifications();\n\n  return {\n    getDateLabel,\n    getLevelIcon,\n    getNotifications,\n    hasNotifications,\n    loadMoreNotifications,\n    selectNotification,\n    showEmptyState,\n    showErrorState,\n    showLoadingState,\n    showLoadMore,\n    showLoadMoreLoading,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-list-ng/scripts/helpers.js"],"sourceRoot":""}