{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6********","webpack:///webpack/bootstrap d0309a746b17cd403690?c295********","webpack:///./ext-wm-portfolio-summary-extended-ng/model.xml","webpack:///external \"ui-bb-loading-indicator-ng\"?8f10*******","webpack:///external \"ui-bb-i18n-ng\"?dc01*******","webpack:///external \"ui-bb-empty-state-ng\"?88ee*******","webpack:///external \"ui-bb-format-amount-ng\"","webpack:///external \"lib-bb-model-errors\"","webpack:///external \"lib-wm-colorset\"?5f86****","webpack:///external \"ui-bb-chartjs-chart-donut-ng\"?010b*","webpack:///external \"vendor-bb-uib-accordion\"?1141","webpack:///external \"ui-bb-dropdown-select-ng\"?4101*","webpack:///external \"ui-bb-ellipsis-tooltip-ng\"?1933","webpack:///external \"ui-bb-notification-stripe-ng\"?0663","webpack:///./ext-wm-portfolio-summary-extended-ng/scripts/index.js","webpack:///external \"ui-bb-paginator-ng\"","webpack:///external \"ui-bb-sortable-column-ng\"","webpack:///external \"ui-bb-search-box-ng\"","webpack:///external \"ui-bb-loading-overlay-ng\"","webpack:///external \"ui-bb-modal-ng\"","webpack:///external \"ui-bb-confirm-ng\"","webpack:///external \"vendor-bb-angular-ng-messages\"","webpack:///external \"lib-wm-pluralize-i18n-key-filter-ng\"","webpack:///./ext-wm-portfolio-summary-extended-ng/scripts/helpers.js","webpack:///./ext-wm-portfolio-summary-extended-ng/scripts/hooks.js"],"names":["extHooks","helpers","extHelpers","hooks","dependencyKeys","uibAccordionKey","uiBbPaginatorKey","uiBbFormatAmountKey","uiBbSortableColumnKey","uiBbSearchBoxKey","uiBbLoadingOverlayKey","uiBbEllipsisTooltipKey","uiBbChartjsChartDonutKey","uiBbModalKey","uiBbNotifacationStripeKey","uiBbLoadingIndicatorKey","i18nKey","uiBbEmptyStateKey","uiBBDropdownSelectKey","uiBbConfirmKey","vendorBbAngularMessagesKey","uiWmPluralizeFilterKey","errors","E_AUTH","message","title","icon","E_CONNECTIVITY","E_USER","E_UNEXPECTED","NAME_INPUT_VALIDATION_PATTERN","validation","nameInputValidationPattern","sortAlphabetically","list","key","length","slice","sort","a","b","$filter","stateContainer","numberFilter","i18nFilter","i18nPluralizeFilter","existingListDefaultItem","name","PRECISION","headers","label","class","sortable","direction","isHidden","decimalCount","number","NO_DECIMAL_NUMBERS","match","toString","localizeNumber","getNetCashTotalAmount","inCashTotalAmount","outCashTotalAmount","isSortableActive","orderBy","showSign","absNumber","Math","abs","toFixed","sign","localizedNumber","chartOptions","tooltips","enabled","hover","mode","cutoutPercentage","modal","DISMISS_MESSAGE_TIME","notifications","data","dismissMessageTime","isFavorite","status","isOpen","success","doPluralize","i18nKeyName","pluralize","itemsNumber","notificationSuccess","i18n","notificationError","notificationAddFavorites","notificationRemoveFavorites","closeNotification","getNotifications","initModal","modalConfig","listName","onSubmit","getModalData","cancel","createNewList","$ctrl","state","getState","selectedPortfoliosIds","Object","keys","portfolios","filter","isChecked","createCustomList","then","assign","selectedExistingList","catch","error","loadCustomLists","customLists","setSelectedList","find","item","load","renameCustomList","ctrl","uuid","selectedList","oldSelectedListName","setState","map","showCreateNewListModal","showEditListModal","plugins","afterInit","chartInstance","setTimeout","update","isPortfoliosAvailable","createSelector","selectedPortfolios","checked","portfolio","iban","backgroundColor","assetClasses","_","index","valuePct","dataseries","labels","datasets","searchPortfolios","loading","pageParams","from","onPortfolioChecked","isAllChecked","getError","code","getMessageForNoPortfolio","query","subtitle","toggleAll","reduce","current","mapOfOpenItems","Map","id","get","onToggle","set","allPortfoliosCustomListItem","favoritesPortfolios","getCustomListDefault","existingListEmptyItem","getCustomListFilterState","getCustomLists","sortedCustomList","isNameDuplicate","values","toLowerCase","includes","getExistingCustomLists","arePortfoliosSelected","some","getSelectedPortfolios","selectedPortfoliosAmount","onExistingListSelect","portfoliosToAdd","selectedAmount","setPortfoliosToCustomList","afterLoadCustomLists","isCustomListSelected","onCustomListDelete","deleteCustomList","onPortfolioFromListDelete","portfoliosToRemove","removePortfolioFromList","currentState","size","totalItems","response","portfoliosNumber","customListUuid","togglePortfolioAsFavorite","toggleFn","IBAN","goToFavorites","getNotificationWithLink","shouldDisableAddToCustomListDropdown","getColorClassByIndex","defaultSortableColumn","defaultSortableDirection"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,0C;;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;;ACAA,gD;;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;;;ACAA,iD;;;;;;;;;;ACAA,iD;;;;;;;;;;;;;;;ACAA,iD;;;;;;;;;;;;;;;;;ACAA,iD;;;;;;;;;ACAA,iD;;;;;;;;;;;;;;;;ACkBA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;KAAYA,Q;;;;;;AAEL,KAAMC,4BAAUC,iBAAhB;;AAEP;;;;;;;AAzCA;;;;;;;;;;;;;;;;;;AAgDO,KAAMC,wBAAQH,QAAd;;AAEA,KAAMI,0CAAiB,CAC5BC,8BAD4B,EAE5BC,yBAF4B,EAG5BC,4BAH4B,EAI5BC,8BAJ4B,EAK5BC,yBAL4B,EAM5BC,8BAN4B,EAO5BC,+BAP4B,EAQ5BC,iCAR4B,EAS5BC,qBAT4B,EAU5BC,kCAV4B,EAW5BC,gCAX4B,EAY5BC,oBAZ4B,EAa5BC,0BAb4B,EAc5BC,8BAd4B,EAe5BC,uBAf4B,EAgB5BC,mCAhB4B,EAiB5BC,uCAjB4B,CAAvB;;AAoBP;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;AAOA;;;;;;;AAOA;;;;;;AAMA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;;;ACtIA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;ACAA,iD;;;;;;;;;;;;;;ACCA;;AACA;;;;mNAFA;;;AAMA;;;;;;;AAOA;;;;;;;;AAQA,KAAMC,iDACHC,wBADG,EACM;AACRC,YAAS,0BADD;AAERC,UAAO,wBAFC;AAGRC,SAAM;AAHE,EADN,4BAMHC,gCANG,EAMc;AAChBH,YAAS,kCADO;AAEhBC,UAAO,gCAFS;AAGhBC,SAAM;AAHU,EANd,4BAWHE,wBAXG,EAWM;AACRJ,YAAS,0BADD;AAERC,UAAO,wBAFC;AAGRC,SAAM;AAHE,EAXN,4BAgBHG,8BAhBG,EAgBY;AACdL,YAAS,gCADK;AAEdC,UAAO,8BAFO;AAGdC,SAAM;AAHQ,EAhBZ,WAAN;;AAuBA;;;;;;;AAOA,KAAMI,gCAAgC,YAAtC;;AAEA;;;;;;;AAOA,KAAMC,aAAa;AACjBC,+BAA4BF;AADX,EAAnB;;AAIA;;;;;;;;;;;AAWA,KAAMG,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD,EAAOC,GAAP,EAAe;AACxC,OAAID,QAAQA,KAAKE,MAAL,GAAc,CAA1B,EAA6B;AAC3B,YAAOF,KAAKG,KAAL,GAAaC,IAAb,CAAkB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACjC,WAAID,EAAEJ,GAAF,IAASK,EAAEL,GAAF,CAAb,EAAqB,OAAO,CAAC,CAAR,CAArB,KACK,IAAII,EAAEJ,GAAF,IAASK,EAAEL,GAAF,CAAb,EAAqB,OAAO,CAAP;AAC1B,cAAO,CAAP;AACD,MAJM,CAAP;AAKD;AACD,UAAOD,IAAP;AACD,EATD;;mBAWe,gBAAiC;AAAA,OAA9BO,OAA8B,QAA9BA,OAA8B;AAAA,OAArBC,cAAqB,QAArBA,cAAqB;;AAC9C,OAAMC,eAAeF,QAAQ,QAAR,CAArB;AACA,OAAMG,aAAaH,QAAQ,MAAR,CAAnB;AACA,OAAMI,sBAAsBJ,QAAQ,eAAR,CAA5B;;AAEA;;;;;;;AAOA,OAAMK,0BAA0B;AAC9BC,WAAMH,WAAW,8BAAX;AADwB,IAAhC;;AAIA;;;;;;;AAOA,OAAMI,YAAY,CAAlB;;AAEA,OAAMC,UAAU,CACd;AACEC,YAAO,iBADT;AAEEC,YAAO,OAFT;AAGEC,eAAU;AACRjB,YAAK,YADG;AAERkB,kBAAW;AAFH;AAHZ,IADc,EASd;AACEH,YAAO,iBADT;AAEEC,YAAO,yBAFT;AAGEG,eAAU;AAAA,cAAM,KAAN;AAAA,MAHZ;AAIEF,eAAU;AACRjB,YAAK,OADG;AAERkB,kBAAW;AAFH;AAJZ,IATc,EAkBd;AACEH,YAAO,qBADT;AAEEC,YAAO,OAFT;AAGEG,eAAU;AAAA,cAAM,KAAN;AAAA,MAHZ;AAIEF,eAAU;AACRjB,YAAK,WADG;AAERkB,kBAAW;AAFH;AAJZ,IAlBc,EA2Bd;AACEH,YAAO,+BADT;AAEEC,YAAO,gBAFT;AAGEG,eAAU;AAAA,cAAM,KAAN;AAAA,MAHZ;AAIEF,eAAU;AACRjB,YAAK,mBADG;AAERkB,kBAAW;AAFH;AAJZ,IA3Bc,EAoCd;AACEH,YAAO,qBADT;AAEEC,YAAO,kBAFT;AAGEG,eAAU;AAAA,cAAM,KAAN;AAAA,MAHZ;AAIEF,eAAU;AACRjB,YAAK,kBADG;AAERkB,kBAAW;AAFH;AAJZ,IApCc,EA6Cd;AACEH,YAAO,oBADT;AAEEC,YAAO,OAFT;AAGEG,eAAU;AAAA,cAAM,KAAN;AAAA,MAHZ;AAIEF,eAAU;AACRjB,YAAK,wBADG;AAERkB,kBAAW;AAFH;AAJZ,IA7Cc,CAAhB;;AAwDA;;;;;;;;;;;AAWA,OAAME,eAAe,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/B,SAAMC,qBAAqB,CAA3B;AACA,SAAMC,QAASF,OAAOG,QAAP,EAAD,CAAoBD,KAApB,CAA0B,SAA1B,CAAd;;AAEA,SAAIA,KAAJ,EAAW;AACT,cAAOA,MAAM,CAAN,IAAWA,MAAM,CAAN,EAAStB,MAApB,GAA6BqB,kBAApC;AACD;;AAED,YAAOA,kBAAP;AACD,IATD;;AAWA;;;;;;;;;;;AAWA,OAAMG,iBAAiB,SAAjBA,cAAiB,CAACJ,MAAD;AAAA,YAAYb,aAAaa,MAAb,EAAqBD,aAAaC,MAAb,CAArB,CAAZ;AAAA,IAAvB;;AAEA;;;;;;;;;;;;AAYA,OAAMK,wBAAwB,SAAxBA,qBAAwB,CAACC,iBAAD,EAAoBC,kBAApB;AAAA,YAC5BD,oBAAoBC,kBADQ;AAAA,IAA9B;;AAGA;;;;;;;;;;;;AAYA,OAAMC,mBAAmB,SAAnBA,gBAAmB,CAACZ,QAAD,EAAWa,OAAX;AAAA,YACvBb,SAASjB,GAAT,KAAiB8B,OADM;AAAA,IAAzB;;AAIA;;;;;;;;;;;AAWA,OAAMC,WAAW,SAAXA,QAAW,SAAU;AACzB,SAAMC,YAAYC,KAAKC,GAAL,CAASb,MAAT,EAAiBc,OAAjB,CAAyBtB,SAAzB,CAAlB;AACA,SAAMuB,OAAOf,SAAS,CAAT,GAAa,GAAb,GAAmB,GAAhC;AACA,SAAMgB,kBAAkB7B,aAAawB,SAAb,EAAwBnB,SAAxB,CAAxB;AACA,YAAUuB,IAAV,SAAkBC,eAAlB;AACD,IALD;;AAOA;;;;;;;AAOA,OAAMC,eAAe;AACnBC,eAAU;AACRC,gBAAS;AADD,MADS;AAInBC,YAAO;AACLC,aAAM;AADD,MAJY;AAOnBC,uBAAkB;AAPC,IAArB;;AAUA;;;;;;;AAOA,OAAMC,QAAQ,EAAd;;AAEA;;;;;;;;AAQA,OAAMC,uBAAuB,CAA7B;;AAEA;;;;;;;AAOA,OAAMC,gBAAgB;AACpBC,WAAM,IADc;AAEpBC,yBAAoBH,oBAFA;AAGpBI,iBAAY,KAHQ;AAIpBC,aAAQ;AACNC,eAAQ,KADF;AAENC,gBAAS,KAFH;AAGNvE,gBAAS;AAHH;AAJY,IAAtB;;AAYA;;;;;;;;;;;;AAYA,OAAMwE,cAAc,SAAdA,WAAc,CAACC,WAAD,EAAcC,SAAd,EAAyBC,WAAzB;AAAA,YAClBD,YAAY7C,oBAAoB4C,WAApB,EAAiCE,WAAjC,CAAZ,GAA4DF,WAD1C;AAAA,IAApB;;AAIA;;;;;;;;;;;AAWA,OAAMG,sBAAsB,SAAtBA,mBAAsB,CAACH,WAAD,EAAcP,IAAd,EAAoBQ,SAApB,EAA+BC,WAA/B,EAA+C;AACzEV,mBAAcI,MAAd,CAAqBC,MAArB,GAA8B,IAA9B;AACAL,mBAAcI,MAAd,CAAqBE,OAArB,GAA+B,IAA/B;AACAN,mBAAcI,MAAd,CAAqBQ,IAArB,GAA4BjD,WAC1B4C,YAAeC,WAAf,eAAsCC,SAAtC,EAAiDC,WAAjD,CAD0B,EAE1BT,IAF0B,CAA5B;AAID,IAPD;;AASA;;;;;;;;;;AAUA,OAAMY,oBAAoB,SAApBA,iBAAoB,CAACL,WAAD,EAAcP,IAAd,EAAoBQ,SAApB,EAA+BC,WAA/B,EAA+C;AACvEV,mBAAcI,MAAd,CAAqBC,MAArB,GAA8B,IAA9B;AACAL,mBAAcI,MAAd,CAAqBE,OAArB,GAA+B,KAA/B;AACAN,mBAAcI,MAAd,CAAqBQ,IAArB,GAA4BjD,WAC1B4C,YAAeC,WAAf,aAAoCC,SAApC,EAA+CC,WAA/C,CAD0B,EAE1BT,IAF0B,CAA5B;AAID,IAPD;;AASA;;;;;;;;;;AAUA,OAAMa,2BAA2B,SAA3BA,wBAA2B,GAAM;AACrCd,mBAAcI,MAAd,CAAqBC,MAArB,GAA8B,IAA9B;AACAL,mBAAcI,MAAd,CAAqBE,OAArB,GAA+B,IAA/B;AACD,IAHD;;AAKA;;;;;;;;;;;AAWA,OAAMS,8BAA8B,SAA9BA,2BAA8B,CAACP,WAAD,EAAiB;AACnDR,mBAAcI,MAAd,CAAqBC,MAArB,GAA8B,IAA9B;AACAL,mBAAcI,MAAd,CAAqBE,OAArB,GAA+B,IAA/B;AACAN,mBAAcI,MAAd,CAAqBQ,IAArB,GAA4BjD,WAAc6C,WAAd,aAA5B;AACD,IAJD;;AAMA;;;;;;;;;;AAUA,OAAMQ,oBAAoB,SAApBA,iBAAoB,GAAM;AAC9BhB,mBAAcI,MAAd,CAAqBC,MAArB,GAA8B,KAA9B;AACAL,mBAAcI,MAAd,CAAqBE,OAArB,GAA+B,KAA/B;AACAN,mBAAcG,UAAd,GAA2B,KAA3B;AACD,IAJD;;AAMA;;;;;;;;;;;AAWA,OAAMc,mBAAmB,SAAnBA,gBAAmB;AAAA,YAAMjB,aAAN;AAAA,IAAzB;;AAEA;;;;;;;;AAQA,OAAMkB,YAAY,SAAZA,SAAY,CAACC,WAAD,EAAiB;AACjCrB,WAAMO,MAAN,GAAe,IAAf;AACAP,WAAMtD,KAAN,GAAc2E,YAAY3E,KAA1B;AACAsD,WAAM7C,IAAN,GAAa;AACXa,aAAMqD,YAAYC,QAAZ,IAAwB;AADnB,MAAb;AAGAtB,WAAMuB,QAAN,GAAiBF,YAAYE,QAA7B;AACD,IAPD;;AASA;;;;;;;;;AASA,OAAMC,eAAe,SAAfA,YAAe;AAAA,YAAMxB,KAAN;AAAA,IAArB;;AAEA;;;;;;;;;AASA,OAAMyB,SAAS,SAATA,MAAS,GAAM;AACnBzB,WAAMO,MAAN,GAAe,KAAf;AACD,IAFD;;AAIA;;;;;;;;;;;AAWA;;;;;;;;;;AAUA,OAAMmB,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAQxE,IAAR,EAAiB;AACrC,SAAMyE,QAAQjE,eAAekE,QAAf,EAAd;AACA,SAAMC,wBAAwBC,OAAOC,IAAP,CAAYJ,MAAMK,UAAN,CAAiB9E,IAA7B,EAC3B+E,MAD2B,CACpB;AAAA,cAAON,MAAMK,UAAN,CAAiB9E,IAAjB,CAAsBC,GAAtB,EAA2B+E,SAAlC;AAAA,MADoB,CAA9B;;AAGA,SAAMhC,OAAO;AACXnC,aAAMb,KAAKa,IADA;AAEXiE,mBAAYH;AAFD,MAAb;AAIAH,WAAMS,gBAAN,CAAuBjC,IAAvB,EACGkC,IADH,CACQ,YAAM;AACVZ;AACAZ,2BAAoB,eAApB,EAAqC,EAAES,UAAUnB,KAAKnC,IAAjB,EAArC;AACA+D,cAAOO,MAAP,CAAcX,KAAd,EAAqB,EAAEY,sBAAsBxE,uBAAxB,EAArB;AACD,MALH,EAMGyE,KANH,CAMS,UAACC,KAAD,EAAW;AAChBhB;AACAV,yBAAkB,eAAlB,EAAmC,EAAEO,UAAUnB,KAAKnC,IAAjB,EAAnC;AACA,aAAMyE,KAAN;AACD,MAVH,EAWGJ,IAXH,CAWQV,MAAMe,eAXd,EAYGL,IAZH,CAYQ,UAACM,WAAD;AAAA,cAAiBhB,MAAMiB,eAAN,CACrBD,YAAYE,IAAZ,CAAiB;AAAA,gBAAQC,KAAK9E,IAAL,KAAcb,KAAKa,IAA3B;AAAA,QAAjB,CADqB,CAAjB;AAAA,MAZR,EAcGqE,IAdH,CAcQV,MAAMoB,IAdd;AAeD,IAxBD;;AA0BA;;;;;;;;;;;AAWA,OAAMC,mBAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAO9F,IAAP,EAAa+F,IAAb,EAAsB;AAC7CD,UAAKD,gBAAL,CAAsBE,IAAtB,EAA4B/F,IAA5B,EACGkF,IADH,CACQ,YAAM;AACVZ;AACAM,cAAOO,MAAP,CAAcW,IAAd,EAAoB,EAAEE,cAAchG,IAAhB,EAApB;AACA,WAAMyE,QAAQjE,eAAekE,QAAf,EAAd;AACA,WAAMuB,sBAAsBxB,MAAMK,UAAN,CAAiBkB,YAAjB,CAA8BnF,IAA1D;;AAEAL,sBAAe0F,QAAf,mBACKzB,KADL;AAEEK,uCACKL,MAAMK,UADX;AAEEU,wBAAaf,MAAMK,UAAN,CAAiBU,WAAjB,CACVW,GADU,CACN,UAACR,IAAD;AAAA,oBAAWA,KAAKI,IAAL,KAAcA,IAAd,qBACPJ,IADO,IACD9E,MAAMb,KAAKa,IADV,MACmB8E,IAD9B;AAAA,YADM,CAFf;AAKEK,2CACKvB,MAAMK,UAAN,CAAiBkB,YADtB,EAEKhG,IAFL;AALF;AAFF;AAaA0D,2BAAoB,UAApB,EAAgC,EAAES,UAAU8B,mBAAZ,EAAhC;AACD,MArBH,EAsBGZ,KAtBH,CAsBS,YAAM;AACXf;AACAV,yBAAkB,UAAlB,EAA8B,EAAEO,UAAU2B,KAAKE,YAAL,CAAkBnF,IAA9B,EAA9B;AACD,MAzBH;AA0BD,IA3BD;;AA6BA;;;;;;;;;AASA,OAAMuF,yBAAyB,SAAzBA,sBAAyB;AAAA,YAAMnC,UAAU;AAC7C1E,cAAOmB,WAAW,0BAAX,CADsC;AAE7C0D,iBAAUG;AAFmC,MAAV,CAAN;AAAA,IAA/B;;AAKA;;;;;;;;;AASA,OAAM8B,oBAAoB,SAApBA,iBAAoB,GAAM;AAC9B,SAAM5B,QAAQjE,eAAekE,QAAf,EAAd;AACA,YAAOT,UAAU;AACf1E,cAAOmB,WAAW,6BAAX,CADQ;AAEf0D,iBAAUyB,gBAFK;AAGf1B,iBAAUM,MAAMK,UAAN,CAAiBkB,YAAjB,CAA8BnF;AAHzB,MAAV,CAAP;AAKD,IAPD;;AASA;;;;;;;AAOA,OAAMyF,UAAU,CAAC;AACfC,gBAAW,mBAACC,aAAD,EAAmB;AAC5BC,kBAAW;AAAA,gBAAMD,cAAcE,MAAd,EAAN;AAAA,QAAX,EAAyC,GAAzC;AACD;AAHc,IAAD,CAAhB;;AAOA;;;;;;;;;AASA,OAAMC,wBAAwBnG,eAAeoG,cAAf,CAA8B;AAAA,YAC1DnC,MAAMK,UAAN,IAAoBL,MAAMK,UAAN,CAAiB9B,IAArC,IAA6CyB,MAAMK,UAAN,CAAiB9B,IAAjB,CAAsB9C,MADT;AAAA,IAA9B,CAA9B;;AAGA,OAAM2G,qBAAqB,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AACtC,SAAMrC,QAAQjE,eAAekE,QAAf,EAAd;AACAlE,oBAAe0F,QAAf,mBACKzB,KADL;AAEEK,qCACKL,MAAMK,UADX;AAEE9B,eAAMyB,MAAMK,UAAN,CAAiB9B,IAAjB,CAAsBmD,GAAtB,CAA0B;AAAA,oCAC3BY,SAD2B;AAE9B/B,wBAAW8B;AAFmB;AAAA,UAA1B;AAFR;AAFF;AAUD,IAZD;;AAcA;;;;;;;;;;AAUA,OAAMhC,aAAatE,eAAeoG,cAAf,CAA8B;AAAA,YAC/CnC,MAAMK,UAAN,CAAiB9B,IAAjB,CAAsBmD,GAAtB,CAA0B,gBAAQ;AAChC,WAAMY,YAAYtC,MAAMK,UAAN,CAAiB9E,IAAjB,CAAsBgH,IAAtB,CAAlB;AACA,WAAMC,kBAAkBF,UAAUG,YAAV,CACrBf,GADqB,CACjB,UAACgB,CAAD,EAAIC,KAAJ;AAAA,gBAAc,oCAAgBA,KAAhB,CAAd;AAAA,QADiB,CAAxB;AAEA,WAAMpE,OAAO+D,UAAUG,YAAV,CACVf,GADU,CACN;AAAA,gBAAK9F,EAAEgH,QAAP;AAAA,QADM,EAEVtC,MAFU,CAEH;AAAA,gBAAK1E,IAAI,CAAT;AAAA,QAFG,CAAb;AAGA,gCACK0G,SADL;AAEEO,qBAAY;AACVC,mBAAQR,UAAUG,YAAV,CAAuBf,GAAvB,CAA2B;AAAA,oBAAK9F,EAAEQ,IAAP;AAAA,YAA3B,CADE;AAEV2G,qBAAU,CAAC;AACTxE,uBADS;AAETiE;AAFS,YAAD;AAFA;AAFd;AAUD,MAjBD,CAD+C;AAAA,IAA9B,CAAnB;;AAqBA;;;;;;;;;AASA,OAAMQ,mBAAmB,SAAnBA,gBAAmB,CAACjD,KAAD,EAAW;AAClC,SAAMC,QAAQjE,eAAekE,QAAf,EAAd;AACAlE,oBAAe0F,QAAf,mBACKzB,KADL;AAEEK,qCACKL,MAAMK,UADX;AAEE4C,kBAAS;AAFX,SAFF;AAMEC,qCACKlD,MAAMkD,UADX;AAEEC,eAAM;AAFR;AANF;AAWApD,WAAMoB,IAAN,CAAWpF,eAAekE,QAAf,GAA0BiD,UAArC;AACD,IAdD;;AAgBA,OAAME,qBAAqB,SAArBA,kBAAqB,CAACb,IAAD,EAAU;AACnC,SAAMvC,QAAQjE,eAAekE,QAAf,EAAd;AACAlE,oBAAe0F,QAAf,mBACKzB,KADL;AAEEqD,qBAAc,KAFhB;AAGEhD,qCACKL,MAAMK,UADX;AAEE9E,iCACKyE,MAAMK,UAAN,CAAiB9E,IADtB,sBAEGgH,IAFH,oBAGOvC,MAAMK,UAAN,CAAiB9E,IAAjB,CAAsBgH,IAAtB,CAHP;AAIIhC,sBAAW,CAACP,MAAMK,UAAN,CAAiB9E,IAAjB,CAAsBgH,IAAtB,EAA4BhC;AAJ5C;AAFF;AAHF;AAcD,IAhBD;;AAkBA;;;;;;;;AAQA,OAAM+C,WAAW,SAAXA,QAAW,CAACC,IAAD;AAAA,YAAU5I,OAAO4I,IAAP,CAAV;AAAA,IAAjB;;AAEA;;;;;;;;;;AAUA,OAAMC,2BAA2BzH,eAAeoG,cAAf,CAA8B;AAAA,YAC7DnC,MAAMkD,UAAN,CAAiBO,KAAjB,GAAyB;AACvB1I,aAAM,WADiB;AAEvBD,cAAO,iCAFgB;AAGvB4I,iBAAU;AAHa,MAAzB,GAII;AACF3I,aAAM,yBADJ;AAEFD,cAAO,wBAFL;AAGF4I,iBAAU;AAHR,MALyD;AAAA,IAA9B,CAAjC;;AAYA;;;;;;;;;AASA,OAAMC,YAAY,SAAZA,SAAY,GAAM;AACtB,SAAM3D,QAAQjE,eAAekE,QAAf,EAAd;AACA,SAAMoD,eAAe,CAACrD,MAAMqD,YAA5B;;AAEAtH,oBAAe0F,QAAf,mBACKzB,KADL;AAEEqD,iCAFF;AAGEhD,qCACKL,MAAMK,UADX;AAEE9E,eAAM4E,OACHC,IADG,CACEJ,MAAMK,UAAN,CAAiB9E,IADnB,EAEHqI,MAFG,CAEI,UAACrI,IAAD,EAAOsI,OAAP;AAAA,oCACHtI,IADG,sBAELsI,OAFK,oBAGD7D,MAAMK,UAAN,CAAiB9E,IAAjB,CAAsBsI,OAAtB,CAHC;AAIJtD,wBAAW8C;AAJP;AAAA,UAFJ,EAQA,EARA;AAFR;AAHF;AAgBD,IApBD;;AAsBA;;;;;;;;AAQA,OAAMS,iBAAiB,IAAIC,GAAJ,EAAvB;;AAEA;;;;;;;;;AASA,OAAMpF,SAAS,SAATA,MAAS,CAACqF,EAAD;AAAA,YACbF,eAAeG,GAAf,CAAmBD,EAAnB,CADa;AAAA,IAAf;;AAGA;;;;;;;;AAQA,OAAME,WAAW,SAAXA,QAAW;AAAA,YAAMJ,eAAeK,GAAf,CAAmBH,EAAnB,EAAuB,CAACF,eAAeG,GAAf,CAAmBD,EAAnB,CAAxB,CAAN;AAAA,IAAjB;;AAEA;;;;;;;;;AASA,OAAMzD,YAAY,SAAZA,SAAY;AAAA,YAChBxE,eAAekE,QAAf,GAA0BI,UAA1B,CAAqC9E,IAArC,CAA0CgH,IAA1C,EAAgDhC,SADhC;AAAA,IAAlB;;AAGA;;;;;;;;AAQA,OAAM8C,eAAetH,eAAeoG,cAAf,CAA8B;AAAA,YACjDnC,MAAMqD,YAD2C;AAAA,IAA9B,CAArB;;AAIA;;;;;;;AAOA,OAAMe,8BAA8B;AAClChI,WAAMH,WAAW,gBAAX;AAD4B,IAApC;AAGA,OAAMoI,sBAAsB;AAC1BjI,WAAMH,WAAW,sBAAX,CADoB;AAE1BwC,iBAAY;AAFc,IAA5B;;AAKA;;;;;;;;;;AAUA,OAAM6F,uBAAuB,SAAvBA,oBAAuB;AAAA,YAC3BvI,eAAekE,QAAf,GAA0BI,UAA1B,CAAqCkB,YAArC,IACG6C,2BAFwB;AAAA,IAA7B;;AAIA;;;;;;;AAOA,OAAMG,wBAAwB;AAC5BnI,WAAMH,WAAW,mCAAX;AADsB,IAA9B;;AAIA;;;;;;;;;;AAUA,OAAMuI,2BAA2BzI,eAAeoG,cAAf,CAA8B,iBAAS;AACtE,SAAInC,MAAMK,UAAN,CAAiBU,WAAjB,CAA6BtF,MAA7B,GAAsC,CAA1C,EAA6C;AAC3C,cAAOU,uBAAP;AACD;AACD,YAAOoI,qBAAP;AACD,IALgC,CAAjC;;AAOA;;;;;;;;;;AAUA,OAAME,iBAAiB1I,eAAeoG,cAAf,CAA8B,iBAAS;AAC5D,SAAMuC,mBACHpJ,mBAAmB0E,MAAMK,UAAN,CAAiBU,WAApC,EAAiD,MAAjD,KAA4D,EAD/D;AAEA,yCAAW2D,gBAAX;AACD,IAJsB,CAAvB;;AAMA;;;;;;;;;AASA,OAAMC,kBAAkB,SAAlBA,eAAkB,CAACvI,IAAD,EAAOwI,MAAP;AAAA,YACtBA,OAAOlD,GAAP,CAAW;AAAA,cAAQR,KAAK9E,IAAL,CAAUyI,WAAV,EAAR;AAAA,MAAX,EAA4CC,QAA5C,CAAqD1I,KAAKyI,WAAL,EAArD,CADsB;AAAA,IAAxB;;AAGA;;;;;;;;;;AAUA,OAAME,yBAAyBhJ,eAAeoG,cAAf,CAA8B;AAAA,YAC3D7G,mBAAmB0E,MAAMK,UAAN,CAAiBU,WAApC,EAAiD,MAAjD,CAD2D;AAAA,IAA9B,CAA/B;;AAIA;;;;;;;;;;AAUA,OAAMiE,wBAAwBjJ,eAAeoG,cAAf,CAA8B;AAAA,YAC1DhC,OACGC,IADH,CACQJ,MAAMK,UAAN,CAAiB9E,IADzB,EAEG0J,IAFH,CAEQ;AAAA,cAAOjF,MAAMK,UAAN,CAAiB9E,IAAjB,CAAsBC,GAAtB,EAA2B+E,SAAlC;AAAA,MAFR,CAD0D;AAAA,IAA9B,CAA9B;;AAMA;;;;;;;;;AASA,OAAM2E,wBAAwBnJ,eAAeoG,cAAf,CAA8B;AAAA,YAC1DhC,OACGC,IADH,CACQJ,MAAMK,UAAN,CAAiB9E,IADzB,EAEG+E,MAFH,CAEU;AAAA,cAAON,MAAMK,UAAN,CAAiB9E,IAAjB,CAAsBC,GAAtB,EAA2B+E,SAAlC;AAAA,MAFV,CAD0D;AAAA,IAA9B,CAA9B;;AAMA;;;;;;;;;AASA,OAAM4E,2BAA2BpJ,eAAeoG,cAAf,CAA8B;AAAA,YAC7D+C,wBAAwBzJ,MADqC;AAAA,IAA9B,CAAjC;;AAIA;;;;;;;;;;;;;AAaA,OAAM2J,uBAAuB,SAAvBA,oBAAuB,CAACrF,KAAD,EAAQsF,eAAR,EAA4B;AAAA,SAC/C1E,oBAD+C,GACtBZ,KADsB,CAC/CY,oBAD+C;;AAEvDR,YAAOO,MAAP,CAAcX,KAAd,EAAqB,EAAEY,sBAAsBxE,uBAAxB,EAArB;AACA,SAAMmJ,iBAAiBH,0BAAvB;;AAEApF,WACGwF,yBADH,CAC6B5E,qBAAqBW,IADlD,EACwD+D,eADxD,EAEG5E,IAFH,CAEQ;AAAA,cAAMxB,oBACV,mBADU,EAEV,EAAES,UAAUiB,qBAAqBvE,IAAjC,EAFU,EAGV,IAHU,EAIVkJ,cAJU,CAAN;AAAA,MAFR,EAQG1E,KARH,CAQS,UAACC,KAAD,EAAW;AAChB1B,yBACE,mBADF,EAEE,EAAEO,UAAUK,MAAMY,oBAAN,CAA2BvE,IAAvC,EAFF,EAGE,IAHF,EAIEkJ,cAJF;AAMA,aAAMzE,KAAN;AACD,MAhBH,EAiBGJ,IAjBH,CAiBQ;AAAA,cAAMV,MAAMiB,eAAN,CAAsBL,oBAAtB,CAAN;AAAA,MAjBR;AAkBD,IAvBD;;AAyBA;;;;;;;;;;AAUA,OAAM6E,uBAAuB,SAAvBA,oBAAuB;AAAA,YAAS,gBAAQ;AAC5C,WAAIjH,KAAK9C,MAAL,KAAgB,CAApB,EAAuB;AACrB,gBAAO,KAAP;AACD;AACD0E,cAAOO,MAAP,CAAcX,KAAd,EAAqB,EAAEY,sBAAsBxE,uBAAxB,EAArB;AACA,cAAOA,uBAAP;AACD,MAN4B;AAAA,IAA7B;;AAQA;;;;;;;;AAQA,OAAMsJ,uBAAuB,SAAvBA,oBAAuB,GAAM;AACjC,SAAMzF,QAAQjE,eAAekE,QAAf,EAAd;AACA,YAAOD,MAAMK,UAAN,CAAiBkB,YAAjB,IAAiCvB,MAAMK,UAAN,CAAiBkB,YAAjB,CAA8BD,IAAtE;AACD,IAHD;;AAKA;;;;;;;AAOA,OAAMoE,qBAAqB,SAArBA,kBAAqB,CAAC3F,KAAD,EAAQoB,IAAR,EAAcwE,gBAAd,EAAmC;AAC5D,SAAIF,sBAAJ,EAA4B;AAC1B,WAAMzF,QAAQjE,eAAekE,QAAf,EAAd;AACA0F,wBAAiB3F,MAAMK,UAAN,CAAiBkB,YAAjB,CAA8BD,IAA/C,EACGb,IADH,CACQ,iBAAqB;AAAA,aAAlBM,WAAkB,SAAlBA,WAAkB;;AACzB9B,6BACE,YADF,EAEE,EAAES,UAAUM,MAAMK,UAAN,CAAiBkB,YAAjB,CAA8BnF,IAA1C,EAFF;AAIA2D,eAAMiB,eAAN,CAAsBoD,2BAAtB;;AAEA,aAAIrD,YAAYtF,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B0E,kBAAOO,MAAP,CAAcX,KAAd,EAAqB;AACnBY,mCAAsB4D;AADH,YAArB;AAGD;AACF,QAbH,EAcG3D,KAdH,CAcS;AAAA,gBAAMzB,kBACX,YADW,EAEX,EAAEO,UAAUM,MAAMK,UAAN,CAAiBkB,YAAjB,CAA8BnF,IAA1C,EAFW,CAAN;AAAA,QAdT;AAkBD;AACF,IAtBD;;AAwBA;;;;;;;AAOA,OAAMwJ,4BAA4B,SAA5BA,yBAA4B,CAAC7F,KAAD,EAAQ8F,kBAAR,EAA+B;AAC/D,SAAM7F,QAAQjE,eAAekE,QAAf,EAAd;AAD+D,SAEvDqB,IAFuD,GAE9CtB,MAAMK,UAAN,CAAiBkB,YAF6B,CAEvDD,IAFuD;;AAG/DvB,WAAM+F,uBAAN,CACED,kBADF,EAEEvE,IAFF,EAIGb,IAJH,CAIQ,oBAAY;AAChB,WAAMsF,eAAehK,eAAekE,QAAf,EAArB;AADgB,mCAEmB8F,aAAa7C,UAFhC;AAAA,WAERC,IAFQ,yBAERA,IAFQ;AAAA,WAEF6C,IAFE,yBAEFA,IAFE;AAAA,WAEIC,UAFJ,yBAEIA,UAFJ;;AAGhB,WACEA,eAAgB9C,OAAO6C,IAAR,GAAgBH,mBAAmBpK,MAAlD,IACA0H,SAAS,CAFX,EAGE;AACApH,wBAAe0F,QAAf,mBACKsE,YADL;AAEE7C,yCACK6C,aAAa7C,UADlB;AAEEC,mBAAMA,OAAO;AAFf;AAFF;AAOD;AACD,cAAO+C,QAAP;AACD,MApBH,EAqBGzF,IArBH,CAqBQ;AAAA,cAAMxB,oBAAoB,yBAApB,EAA+C;AACzDS,mBAAUM,MAAMK,UAAN,CAAiBkB,YAAjB,CAA8BnF,IADiB;AAEzD+J,2BAAkBhB;AAFuC,QAA/C,EAGT,IAHS,EAGHA,0BAHG,CAAN;AAAA,MArBR,EAyBG1E,IAzBH,CAyBQ;AAAA,cAAMV,MAAMoB,IAAN,CAAW,EAAEiF,gBAAgB9E,IAAlB,EAAX,CAAN;AAAA,MAzBR,EA0BGV,KA1BH,CA0BS;AAAA,cAAMzB,kBAAkB,yBAAlB,EAA6C;AACxDO,mBAAUM,MAAMK,UAAN,CAAiBkB,YAAjB,CAA8BnF;AADgB,QAA7C,EAEV,IAFU,EAEJ+I,0BAFI,CAAN;AAAA,MA1BT;AA6BD,IAhCD;;AAkCA;;;;;;;;;;AAUA,OAAMkB,4BAA4B,SAA5BA,yBAA4B,CAACC,QAAD,EAAWC,IAAX,EAAiB9H,UAAjB,EAAgC;AAChE6H,cAASC,IAAT,EACG9F,IADH,CACQ,YAAM;AACV,WAAI,CAAChC,UAAL,EAAiB;AACfH,uBAAcG,UAAd,GAA2B,IAA3B;AACAW;AACD,QAHD,MAGO;AACLd,uBAAcG,UAAd,GAA2B,KAA3B;AACAY,qCACE,eADF;AAGD;AACF,MAXH,EAYGuB,KAZH,CAYS;AAAA,cAAMzB,kBAAkB,4BAAlB,EAAgD,EAAhD,CAAN;AAAA,MAZT;AAaD,IAdD;;AAgBA;;;;;;;;;AASA,OAAMqH,gBAAgB,SAAhBA,aAAgB,CAACzG,KAAD,EAAW;AAC/B,SAAMC,QAAQjE,eAAekE,QAAf,EAAd;AACAlE,oBAAe0F,QAAf,mBACKzB,KADL;AAEEK,qCACKL,MAAMK,UADX;AAEEkB,uBAAc8C;AAFhB;AAFF;AAOAtE,WAAMiB,eAAN,CAAsBqD,mBAAtB;AACD,IAVD;;AAYA;;;;;;;;;AASA,OAAMoC,0BAA0B,SAA1BA,uBAA0B;AAAA,YAAMnI,cAAcG,UAApB;AAAA,IAAhC;;AAEA;;;;;;;;;;AAUA,OAAMiI,uCACJ3K,eAAeoG,cAAf,CAA8B;AAAA,YAC5B,CAAC6C,uBAAD,IACAD,yBAAyBtJ,MAAzB,KAAoC,CADpC,IAGEsJ,yBAAyBtJ,MAAzB,KAAoC,CAApC,IACAsJ,yBAAyB,CAAzB,EAA4BzD,IAA5B,KAAqCtB,MAAMK,UAAN,CAAiBkB,YAAjB,CAA8BD,IALzC;AAAA,IAA9B,CADF;;AAUA,UAAO;AACLhF,qBADK;AAELY,iDAFK;AAGLG,uCAHK;AAILE,uBAJK;AAKLO,+BALK;AAML6D,mDANK;AAOLC,yCAPK;AAQLR,uCARK;AASLuD,qCATK;AAUL/E,+BAVK;AAWLE,iCAXK;AAYLD,mBAZK;AAaLqC,iDAbK;AAcLL,qBAdK;AAeLxB,2BAfK;AAgBLsD,yBAhBK;AAiBLhF,mBAjBK;AAkBLuF,uBAlBK;AAmBLb,+BAnBK;AAoBLoB,mCApBK;AAqBLrC,2CArBK;AAsBL8C,iDAtBK;AAuBLd,6DAvBK;AAwBLhB,2CAxBK;AAyBL2B,mDAzBK;AA0BL5I,qDA1BK;AA2BLoI,iDA3BK;AA4BLS,iDA5BK;AA6BLV,+CA7BK;AA8BLrH,mCA9BK;AA+BL0J,8DA/BK;AAgCLvB,+CAhCK;AAiCL7E,yBAjCK;AAkCLiF,+CAlCK;AAmCLlC,uBAnCK;AAoCLmC,+CApCK;AAqCLN,uDArCK;AAsCLnC,uCAtCK;AAuCL0C,2CAvCK;AAwCLE,yDAxCK;AAyCLrG,uCAzCK;AA0CLD,yCA1CK;AA2CL+G,yDA3CK;AA4CL7C,uDA5CK;AA6CLgD,iCA7CK;AA8CLC,qDA9CK;AA+CLjC,uDA/CK;AAgDLH,6CAhDK;AAiDLjJ,2BAjDK;AAkDLsL;AAlDK,IAAP;AAoDD,E;;;;;;;;;;;AC7sCD;;;;;;;;;AASO,KAAME,wDAAwB,SAAxBA,qBAAwB;AAAA,UAAM,YAAN;AAAA,EAA9B;;AAEP;;;;;;;;;AASO,KAAMC,8DAA2B,SAA3BA,wBAA2B;AAAA,UAAM,KAAN;AAAA,EAAjC,C","file":"ext-wm-portfolio-summary-extended-ng/scripts/ext-wm-portfolio-summary-extended-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-loading-indicator-ng\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-format-amount-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-wm-colorset\"), require(\"ui-bb-chartjs-chart-donut-ng\"), require(\"vendor-bb-uib-accordion\"), require(\"ui-bb-dropdown-select-ng\"), require(\"ui-bb-ellipsis-tooltip-ng\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bb-paginator-ng\"), require(\"ui-bb-sortable-column-ng\"), require(\"ui-bb-search-box-ng\"), require(\"ui-bb-loading-overlay-ng\"), require(\"ui-bb-modal-ng\"), require(\"ui-bb-confirm-ng\"), require(\"vendor-bb-angular-ng-messages\"), require(\"lib-wm-pluralize-i18n-key-filter-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-wm-portfolio-summary-extended-ng\", [\"ui-bb-loading-indicator-ng\", \"ui-bb-i18n-ng\", \"ui-bb-empty-state-ng\", \"ui-bb-format-amount-ng\", \"lib-bb-model-errors\", \"lib-wm-colorset\", \"ui-bb-chartjs-chart-donut-ng\", \"vendor-bb-uib-accordion\", \"ui-bb-dropdown-select-ng\", \"ui-bb-ellipsis-tooltip-ng\", \"ui-bb-notification-stripe-ng\", \"ui-bb-paginator-ng\", \"ui-bb-sortable-column-ng\", \"ui-bb-search-box-ng\", \"ui-bb-loading-overlay-ng\", \"ui-bb-modal-ng\", \"ui-bb-confirm-ng\", \"vendor-bb-angular-ng-messages\", \"lib-wm-pluralize-i18n-key-filter-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-wm-portfolio-summary-extended-ng\"] = factory(require(\"ui-bb-loading-indicator-ng\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-format-amount-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-wm-colorset\"), require(\"ui-bb-chartjs-chart-donut-ng\"), require(\"vendor-bb-uib-accordion\"), require(\"ui-bb-dropdown-select-ng\"), require(\"ui-bb-ellipsis-tooltip-ng\"), require(\"ui-bb-notification-stripe-ng\"), require(\"ui-bb-paginator-ng\"), require(\"ui-bb-sortable-column-ng\"), require(\"ui-bb-search-box-ng\"), require(\"ui-bb-loading-overlay-ng\"), require(\"ui-bb-modal-ng\"), require(\"ui-bb-confirm-ng\"), require(\"vendor-bb-angular-ng-messages\"), require(\"lib-wm-pluralize-i18n-key-filter-ng\"));\n\telse\n\t\troot[\"ext-wm-portfolio-summary-extended-ng\"] = factory(root[\"ui-bb-loading-indicator-ng\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-empty-state-ng\"], root[\"ui-bb-format-amount-ng\"], root[\"lib-bb-model-errors\"], root[\"lib-wm-colorset\"], root[\"ui-bb-chartjs-chart-donut-ng\"], root[\"vendor-bb-uib-accordion\"], root[\"ui-bb-dropdown-select-ng\"], root[\"ui-bb-ellipsis-tooltip-ng\"], root[\"ui-bb-notification-stripe-ng\"], root[\"ui-bb-paginator-ng\"], root[\"ui-bb-sortable-column-ng\"], root[\"ui-bb-search-box-ng\"], root[\"ui-bb-loading-overlay-ng\"], root[\"ui-bb-modal-ng\"], root[\"ui-bb-confirm-ng\"], root[\"vendor-bb-angular-ng-messages\"], root[\"lib-wm-pluralize-i18n-key-filter-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_43__, __WEBPACK_EXTERNAL_MODULE_48__, __WEBPACK_EXTERNAL_MODULE_49__, __WEBPACK_EXTERNAL_MODULE_50__, __WEBPACK_EXTERNAL_MODULE_51__, __WEBPACK_EXTERNAL_MODULE_52__, __WEBPACK_EXTERNAL_MODULE_53__, __WEBPACK_EXTERNAL_MODULE_54__, __WEBPACK_EXTERNAL_MODULE_55__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d0309a746b17cd403690","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-wm-portfolio-summary-extended-ng/model.xml\n// module id = 0\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-loading-indicator-ng\"\n// module id = 2\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 3\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-empty-state-ng\"\n// module id = 4\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-format-amount-ng\"\n// module id = 6\n// module chunks = 0 1 2 3 5 6 7 8 9 10 11 12 13 14","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 8\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 21","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-wm-colorset\"\n// module id = 9\n// module chunks = 0 1 2 3 7 8","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-chartjs-chart-donut-ng\"\n// module id = 12\n// module chunks = 1 7 8","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-accordion\"\n// module id = 17\n// module chunks = 2 8 9 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-dropdown-select-ng\"\n// module id = 27\n// module chunks = 4 5 8 14 27","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-ellipsis-tooltip-ng\"\n// module id = 39\n// module chunks = 7 8 9 10 11 12 13","module.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-notification-stripe-ng\"\n// module id = 43\n// module chunks = 7 8","/**\n * @module ext-wm-portfolio-summary-extended-ng\n *\n * @description\n * Additional extension for portfolio summary widget.\n *\n *\n * @requires vendor-bb-uib-popover\n * @requires vendor-bb-uib-accordion\n * @example\n * <!-- portfolio widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *  <value type=\"string\">ext-wm-portfolio-summary-extended-ng</value>\n * </property>\n *\n *\n */\n\nimport uibAccordionKey from 'vendor-bb-uib-accordion';\nimport uiBbPaginatorKey from 'ui-bb-paginator-ng';\nimport uiBbFormatAmountKey from 'ui-bb-format-amount-ng';\nimport uiBbSortableColumnKey from 'ui-bb-sortable-column-ng';\nimport uiBbSearchBoxKey from 'ui-bb-search-box-ng';\nimport uiBbLoadingOverlayKey from 'ui-bb-loading-overlay-ng';\nimport uiBbEllipsisTooltipKey from 'ui-bb-ellipsis-tooltip-ng';\nimport uiBbChartjsChartDonutKey from 'ui-bb-chartjs-chart-donut-ng';\nimport uiBbModalKey from 'ui-bb-modal-ng';\nimport uiBbNotifacationStripeKey from 'ui-bb-notification-stripe-ng';\nimport uiBbLoadingIndicatorKey from 'ui-bb-loading-indicator-ng';\nimport i18nKey from 'ui-bb-i18n-ng';\nimport uiBbEmptyStateKey from 'ui-bb-empty-state-ng';\nimport uiBBDropdownSelectKey from 'ui-bb-dropdown-select-ng';\nimport uiBbConfirmKey from 'ui-bb-confirm-ng';\nimport vendorBbAngularMessagesKey from 'vendor-bb-angular-ng-messages';\nimport uiWmPluralizeFilterKey from 'lib-wm-pluralize-i18n-key-filter-ng';\n\nimport extHelpers from './helpers';\nimport * as extHooks from './hooks';\n\nexport const helpers = extHelpers;\n\n/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-wm-portfolio-summary-extended-ng\n */\nexport const hooks = extHooks;\n\nexport const dependencyKeys = [\n  uibAccordionKey,\n  uiBbPaginatorKey,\n  uiBbFormatAmountKey,\n  uiBbSortableColumnKey,\n  uiBbSearchBoxKey,\n  uiBbLoadingOverlayKey,\n  uiBbEllipsisTooltipKey,\n  uiBbChartjsChartDonutKey,\n  uiBbModalKey,\n  uiBbNotifacationStripeKey,\n  uiBbLoadingIndicatorKey,\n  i18nKey,\n  uiBbEmptyStateKey,\n  uiBBDropdownSelectKey,\n  uiBbConfirmKey,\n  vendorBbAngularMessagesKey,\n  uiWmPluralizeFilterKey,\n];\n\n/**\n * Portfolio type definition\n * @typedef {Object} Portfolio\n * @property {string}               IBAN               - International Bank Account Number\n * @property {string}               clientName         - Client name\n * @property {string}               alias              - A portfolio name manually set by the client\n * @property {assetClass[]}         assetClasses       - Asset classes list for portfolio\n * @property {object}               valuation          - Total cost of all assets in the portfolio\n * @property {object}               inCashTotal        - Incoming cash for the period of time\n * @property {object}               outCashTotal       - Outgoing cash for the period of time\n * @property {number}               performanceMTD     - Portfolio performance for month\n * @property {number}               performanceMTDpct  - Portfolio performance for month in percents\n * @property {number}               performanceYTD     - Portfolio performance amount for year\n * @property {number}               performanceYTDpct  - Portfolio performance amount for year\n *                                                       in percents\n * @property {string}               riskClass          - Risk of portfolio investement strategy\n * @property {manager[]}            managers           - Managers of portfolio\n * @property {attorney[]}           attorneys          - Attorneys of portfolio\n * @property {BBSeriesPortfolio[]}  dataseries         - data in format suitable for chart\n *                                                       UI components\n */\n\n\n/**\n * Portfolio specific BBSeries object\n * @typedef {object} BBSeriesPortfolio\n * @property {string[]} labels  Array chart slices labels\n * @property {PortfolioDataset[]} datasets Array of chart datasets\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} PortfolioDataset\n * @extends Dataset\n * @property {string[]} backgroundColor Array  which represent rgb colors of chart\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} Dataset\n * @property {number[]} data Array of data points for chart slices\n */\n\n/**\n * Assetclass object\n * @typedef {object} AssetClass\n * @property {string} name name of asset class\n * @property {number} valuePct value that represents percentage of asset\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} attorney\n * @property {string} id id of a portfolio manager\n * @property {string} name name of a portfolio manager\n */\n\n/**\n * Dataset object for chart data\n * @typedef {object} manager\n * @property {string} id id of a portfolio manager\n * @property {string} name name of a portfolio manager\n */\n\n/**\n * Settings object with options available for bar chart.\n * More info {@link http://www.chartjs.org/docs/latest/charts/bar.html}\n * @typedef {object} ChartjsSettings\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-wm-portfolio-summary-extended-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_48__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-paginator-ng\"\n// module id = 48\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_49__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-sortable-column-ng\"\n// module id = 49\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_50__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-search-box-ng\"\n// module id = 50\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_51__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-loading-overlay-ng\"\n// module id = 51\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_52__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-modal-ng\"\n// module id = 52\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_53__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-confirm-ng\"\n// module id = 53\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_54__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-messages\"\n// module id = 54\n// module chunks = 8 27","module.exports = __WEBPACK_EXTERNAL_MODULE_55__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-wm-pluralize-i18n-key-filter-ng\"\n// module id = 55\n// module chunks = 8","/* eslint max-len: [\"error\", { \"ignoreComments\": true }] */\nimport { getColorClassByIndex, getColorByIndex } from 'lib-wm-colorset';\nimport {\n  E_AUTH, E_CONNECTIVITY, E_UNEXPECTED, E_USER,\n} from 'lib-bb-model-errors';\n\n/**\n * @typedef {Object} errorMessageDescriptor\n * @property {string} message Localization key of the error message\n * @property {string} title Localization key of the error message`s title\n * @property {string} icon CSS class for icon\n */\n\n/**\n * @description\n * Map of error code to message, title and icon to display to user\n *\n * @public\n * @name errors\n * @type {object.<E_AUTH | E_CONNECTIVITY | E_UNEXPECTED | E_USER, errorMessageDescriptor>}\n */\nconst errors = {\n  [E_AUTH]: {\n    message: 'model.error.auth.message',\n    title: 'model.error.auth.title',\n    icon: 'fa-sign-in-alt',\n  },\n  [E_CONNECTIVITY]: {\n    message: 'model.error.connectivity.message',\n    title: 'model.error.connectivity.title',\n    icon: 'fa-exclamation-triangle',\n  },\n  [E_USER]: {\n    message: 'model.error.user.message',\n    title: 'model.error.user.title',\n    icon: 'fa-user',\n  },\n  [E_UNEXPECTED]: {\n    message: 'model.error.unexpected.message',\n    title: 'model.error.unexpected.title',\n    icon: 'fa-server',\n  },\n};\n\n/**\n * @name NAME_INPUT_VALIDATION_PATTERN\n * @type {string}\n *\n * @description\n * Regular expression for input field\n */\nconst NAME_INPUT_VALIDATION_PATTERN = '^[^\\\\\\\\]*$';\n\n/**\n * @description\n * Contains config used to validate input field\n *\n * @name validation\n * @type {object}\n */\nconst validation = {\n  nameInputValidationPattern: NAME_INPUT_VALIDATION_PATTERN,\n};\n\n/**\n * @name sortAlphabetically\n * @type {function}\n *\n * @description\n * Sorts given list of items alphabetically\n *\n * @param list Array of items to be sorted\n * @param key Filb. by which list will be sorted\n * @returns {array} Sorted list\n */\nconst sortAlphabetically = (list, key) => {\n  if (list && list.length > 0) {\n    return list.slice().sort((a, b) => {\n      if (a[key] < b[key]) return -1;\n      else if (a[key] > b[key]) return 1;\n      return 0;\n    });\n  }\n  return list;\n};\n\nexport default ({ $filter, stateContainer }) => {\n  const numberFilter = $filter('number');\n  const i18nFilter = $filter('i18n');\n  const i18nPluralizeFilter = $filter('i18nPluralize');\n\n  /**\n   * @name addToExistingListDefaultItem\n   * @type {object}\n   *\n   * @description\n   * Holds default custom lists filter state\n   */\n  const existingListDefaultItem = {\n    name: i18nFilter('portfolios.addToExistingList'),\n  };\n\n  /**\n   * @name PRECISION\n   * @type {number}\n   *\n   * @description\n   * Number of decimals to display\n   */\n  const PRECISION = 2;\n\n  const headers = [\n    {\n      label: 'portfolio.label',\n      class: 'col-3',\n      sortable: {\n        key: 'clientName',\n        direction: 'ASC',\n      },\n    },\n    {\n      label: 'portfolio.alias',\n      class: 'col-1 d-none d-lg-block',\n      isHidden: () => false,\n      sortable: {\n        key: 'alias',\n        direction: 'ASC',\n      },\n    },\n    {\n      label: 'portfolio.riskClass',\n      class: 'col-1',\n      isHidden: () => false,\n      sortable: {\n        key: 'riskClass',\n        direction: 'ASC',\n      },\n    },\n    {\n      label: 'portfolio.ytd.performance.pct',\n      class: 'col-2 col-lg-1',\n      isHidden: () => false,\n      sortable: {\n        key: 'performanceYTDpct',\n        direction: 'DESC',\n      },\n    },\n    {\n      label: 'portfolio.valuation',\n      class: 'col-2 text-right',\n      isHidden: () => false,\n      sortable: {\n        key: 'valuation.amount',\n        direction: 'DESC',\n      },\n    },\n    {\n      label: 'portfolio.currency',\n      class: 'col-1',\n      isHidden: () => false,\n      sortable: {\n        key: 'valuation.currencyCode',\n        direction: 'ASC',\n      },\n    },\n  ];\n\n  /**\n   * @description\n   * Get the count of decimal numbers\n   *\n   * @private\n   * @name decimalCount\n   * @type {function}\n   * @param {number} number                           number to for counting its decimal numbers\n   *\n   * @returns {number}\n   */\n  const decimalCount = (number) => {\n    const NO_DECIMAL_NUMBERS = 0;\n    const match = (number.toString()).match(/\\.(\\d*)/);\n\n    if (match) {\n      return match[1] ? match[1].length : NO_DECIMAL_NUMBERS;\n    }\n\n    return NO_DECIMAL_NUMBERS;\n  };\n\n  /**\n   * @description\n   * Transform number to its localized string representation\n   *\n   * @public\n   * @name localizeNumber\n   * @type {function}\n   * @param {number} number                           number to localize\n   *\n   * @returns {string}\n   */\n  const localizeNumber = (number) => numberFilter(number, decimalCount(number));\n\n  /**\n   * @description\n   * Substitutes outCashTotalAmount from inCashTotalAmount value and returns new value of netCashTotalAmount\n   *\n   * @public\n   * @name getNetCashTotalAmount\n   * @type {function}\n   * @param {number} inCashTotalAmountIncoming        Cash for the period of time amaunt value\n   * @param {number} outCashTotalAmount               Outgoing cash for the period of time amaunt value\n   *\n   * @returns {number}\n   */\n  const getNetCashTotalAmount = (inCashTotalAmount, outCashTotalAmount) =>\n    inCashTotalAmount - outCashTotalAmount;\n\n  /**\n   * @description\n   * Checks if actual sortable key equal to orderBy state\n   *\n   * @public\n   * @name isSortableActive\n   * @type {function}\n   * @param {object} sortable     Object with sortable props\n   * @param {oblect} sort         Sort state of controller\n   *\n   * @returns {boolean}\n   */\n  const isSortableActive = (sortable, orderBy) => (\n    sortable.key === orderBy\n  );\n\n  /**\n   * @description\n   * Appends + or - sign if number is positive or negative\n   *\n   * @public\n   * @name showSign\n   * @type {function}\n   * @param {number} number     Number inputed\n   *\n   * @returns {string}          String with appended sign and number\n   */\n  const showSign = number => {\n    const absNumber = Math.abs(number).toFixed(PRECISION);\n    const sign = number > 0 ? '+' : '-';\n    const localizedNumber = numberFilter(absNumber, PRECISION);\n    return `${sign} ${localizedNumber}`;\n  };\n\n  /**\n   * @description\n   * Object with chart options that need to be overriden\n   *\n   * @name chartOptions\n   * @type {ChartjsSettings}\n   */\n  const chartOptions = {\n    tooltips: {\n      enabled: false,\n    },\n    hover: {\n      mode: null,\n    },\n    cutoutPercentage: 65,\n  };\n\n  /**\n   * @description\n   * Contains default modal config (if any) used to init the modal window\n   *\n   * @name modal\n   * @type {object}\n   */\n  const modal = {};\n\n  /**\n   * @description\n   * Dismiss message time of notification\n   * @public\n   *\n   * @name DISMISS_MESSAGE_TIME\n   * @type {number}\n   */\n  const DISMISS_MESSAGE_TIME = 3;\n\n  /**\n   * @description\n   * Contains default notification config (if any) used to init notification popup\n   *\n   * @name notifications\n   * @type {object}\n   */\n  const notifications = {\n    data: null,\n    dismissMessageTime: DISMISS_MESSAGE_TIME,\n    isFavorite: false,\n    status: {\n      isOpen: false,\n      success: false,\n      i18nKey: null,\n    },\n  };\n\n\n  /**\n   * @description\n   * Pluralizes i18n message key in case pluralize argument is true.\n   * Otherwise, it returns passed i18n message key.\n   *\n   * @inner\n   * @name doPluralize\n   * @type {function}\n   * @param {string}  i18nKeyName  i18n name of notification to display in message\n   * @param {boolean} pluralize Flag whether message key should be pluralized\n   * @param {number} itemsNumber Number to use in pluralization logic\n   */\n  const doPluralize = (i18nKeyName, pluralize, itemsNumber) => (\n    pluralize ? i18nPluralizeFilter(i18nKeyName, itemsNumber) : i18nKeyName\n  );\n\n  /**\n   * @description\n   *\n   * Function that invokes a successful notification\n   *\n   * @public\n   * @name notificationSuccess\n   * @type {function}\n   * @param {string}              i18nKeyName     i18n name of notification to display in message\n   *\n   */\n  const notificationSuccess = (i18nKeyName, data, pluralize, itemsNumber) => {\n    notifications.status.isOpen = true;\n    notifications.status.success = true;\n    notifications.status.i18n = i18nFilter(\n      doPluralize(`${i18nKeyName}.success`, pluralize, itemsNumber),\n      data\n    );\n  };\n\n  /**\n   * @description\n   * Function that invokes a error notification\n   *\n   * @public\n   * @name notificationError\n   * @type {function}\n   * @param {string} i18nKeyName i18n name of notification to display in message\n   *\n   */\n  const notificationError = (i18nKeyName, data, pluralize, itemsNumber) => {\n    notifications.status.isOpen = true;\n    notifications.status.success = false;\n    notifications.status.i18n = i18nFilter(\n      doPluralize(`${i18nKeyName}.error`, pluralize, itemsNumber),\n      data\n    );\n  };\n\n  /**\n   * @description\n   *\n   * Function that invokes a notification when portfolio is added to favorites list\n   *\n   * @public\n   * @name notificationAddFavorites\n   * @type {function}\n   *\n   */\n  const notificationAddFavorites = () => {\n    notifications.status.isOpen = true;\n    notifications.status.success = true;\n  };\n\n  /**\n   * @description\n   *\n   * Function that invokes a notification when portfolio is removed from favorites list\n   *\n   * @public\n   * @name notificationRemoveFavorites\n   * @type {function}\n   * @param {string} i18nKeyName i18n name of notification to display in message\n   *\n   */\n  const notificationRemoveFavorites = (i18nKeyName) => {\n    notifications.status.isOpen = true;\n    notifications.status.success = true;\n    notifications.status.i18n = i18nFilter(`${i18nKeyName}.remove`);\n  };\n\n  /**\n   * @description\n   *\n   * Function that closes notifications\n   *\n   * @public\n   * @name closeNotification\n   * @type {function}\n   *\n   */\n  const closeNotification = () => {\n    notifications.status.isOpen = false;\n    notifications.status.success = false;\n    notifications.isFavorite = false;\n  };\n\n  /**\n   * @description\n   * Function that gets notifications configuration object\n   *\n   * @public\n   * @name getNotifications\n   * @type {function}\n   *\n   * @returns {object}\n   *\n   */\n  const getNotifications = () => notifications;\n\n  /**\n   * @name initModal\n   *\n   * @description\n   * Get modal widget data\n   * @param {object} modalConfig Config modal object\n   * @type {function}\n   */\n  const initModal = (modalConfig) => {\n    modal.isOpen = true;\n    modal.title = modalConfig.title;\n    modal.list = {\n      name: modalConfig.listName || '',\n    };\n    modal.onSubmit = modalConfig.onSubmit;\n  };\n\n  /**\n   * @name getModalData\n   *\n   * @description\n   * Get modal widget data\n   *\n   * @type {function}\n   * @returns {object}\n   */\n  const getModalData = () => modal;\n\n  /**\n   * @name cancel\n   *\n   * @description\n   * Cancel / close the modal window\n   *\n   * @type {function}\n   * @returns {void}\n   */\n  const cancel = () => {\n    modal.isOpen = false;\n  };\n\n  /**\n   * @name setSelectedList\n   *\n   * @description\n   * Set selected list\n   * @param {object} ctrl  Controller object\n   * @param {object} selectedList  Selected list object\n   *\n   * @type {function}\n   */\n\n  /**\n   * @name createNewList\n   *\n   * @description\n   * Create new list\n   * @param {object} $ctrl  Controller object\n   * @param {object} list  Custom list object\n   *\n   * @type {function}\n   */\n  const createNewList = ($ctrl, list) => {\n    const state = stateContainer.getState();\n    const selectedPortfoliosIds = Object.keys(state.portfolios.list)\n      .filter(key => state.portfolios.list[key].isChecked);\n\n    const data = {\n      name: list.name,\n      portfolios: selectedPortfoliosIds,\n    };\n    $ctrl.createCustomList(data)\n      .then(() => {\n        cancel();\n        notificationSuccess('createNewList', { listName: data.name });\n        Object.assign($ctrl, { selectedExistingList: existingListDefaultItem });\n      })\n      .catch((error) => {\n        cancel();\n        notificationError('createNewList', { listName: data.name });\n        throw error;\n      })\n      .then($ctrl.loadCustomLists)\n      .then((customLists) => $ctrl.setSelectedList(\n        customLists.find(item => item.name === list.name)))\n      .then($ctrl.load);\n  };\n\n  /**\n   * @name renameCustomList\n   *\n   * @description\n   * Edit custom list name\n   * @param {object} ctrl  Controller object\n   * @param {object} list  New list name\n   * @param {string} uuid  Custom list uuid\n   *\n   * @type {function}\n   */\n  const renameCustomList = (ctrl, list, uuid) => {\n    ctrl.renameCustomList(uuid, list)\n      .then(() => {\n        cancel();\n        Object.assign(ctrl, { selectedList: list });\n        const state = stateContainer.getState();\n        const oldSelectedListName = state.portfolios.selectedList.name;\n\n        stateContainer.setState({\n          ...state,\n          portfolios: {\n            ...state.portfolios,\n            customLists: state.portfolios.customLists\n              .map((item) => (item.uuid === uuid\n                ? { ...item, name: list.name } : item)),\n            selectedList: {\n              ...state.portfolios.selectedList,\n              ...list,\n            },\n          },\n        });\n        notificationSuccess('editList', { listName: oldSelectedListName });\n      })\n      .catch(() => {\n        cancel();\n        notificationError('editList', { listName: ctrl.selectedList.name });\n      });\n  };\n\n  /**\n   * @name showCreateNewListModal\n   *\n   * @description\n   * Show create new list modal\n   * @type {function}\n   *\n   * @returns {object} Config modal object\n   */\n  const showCreateNewListModal = () => initModal({\n    title: i18nFilter('portfolios.createNewList'),\n    onSubmit: createNewList,\n  });\n\n  /**\n   * @name showEditListModal\n   *\n   * @description\n   * Show edit list modal\n   * @type {function}\n   *\n   * @returns {object} Config modal object\n   */\n  const showEditListModal = () => {\n    const state = stateContainer.getState();\n    return initModal({\n      title: i18nFilter('portfolios.editExistingList'),\n      onSubmit: renameCustomList,\n      listName: state.portfolios.selectedList.name,\n    });\n  };\n\n  /**\n   * @description\n   * Array with plugins objects for chartjs\n   *\n   * @name plugins\n   * @type {array}\n   */\n  const plugins = [{\n    afterInit: (chartInstance) => {\n      setTimeout(() => chartInstance.update(), 100);\n    },\n  },\n  ];\n\n  /**\n   * @description\n   * Checks if portfolios data is available\n   *\n   * @name isPortfoliosAvailable\n   * @type {function}\n   * @param {object} portfolios\n   * @returns {boolean} returns true if portfolios data is not present\n   */\n  const isPortfoliosAvailable = stateContainer.createSelector(state =>\n    state.portfolios && state.portfolios.data && state.portfolios.data.length);\n\n  const selectedPortfolios = (checked) => {\n    const state = stateContainer.getState();\n    stateContainer.setState({\n      ...state,\n      portfolios: {\n        ...state.portfolios,\n        data: state.portfolios.data.map(portfolio => ({\n          ...portfolio,\n          isChecked: checked,\n        })),\n      },\n    });\n  };\n\n  /**\n   * @name portfolios\n   * @type {function}\n   *\n   * @description\n   * Selector for portfolio data processing\n   *\n   * @param {Portfolio[]} data original data object\n   * @returns {Portfolio[]} data processed data object\n   */\n  const portfolios = stateContainer.createSelector(state => (\n    state.portfolios.data.map(iban => {\n      const portfolio = state.portfolios.list[iban];\n      const backgroundColor = portfolio.assetClasses\n        .map((_, index) => getColorByIndex(index));\n      const data = portfolio.assetClasses\n        .map(a => a.valuePct)\n        .filter(a => a > 0);\n      return {\n        ...portfolio,\n        dataseries: {\n          labels: portfolio.assetClasses.map(a => a.name),\n          datasets: [{\n            data,\n            backgroundColor,\n          }],\n        },\n      };\n    })\n  ));\n\n  /**\n   * @name searchPortfolios\n   * @type {function}\n   *\n   * @description\n   * Performs search portfolios by query string parameter\n   *\n   * @param {object} $ctrl Controller of the widget\n   */\n  const searchPortfolios = ($ctrl) => {\n    const state = stateContainer.getState();\n    stateContainer.setState({\n      ...state,\n      portfolios: {\n        ...state.portfolios,\n        loading: true,\n      },\n      pageParams: {\n        ...state.pageParams,\n        from: 0,\n      },\n    });\n    $ctrl.load(stateContainer.getState().pageParams);\n  };\n\n  const onPortfolioChecked = (iban) => {\n    const state = stateContainer.getState();\n    stateContainer.setState({\n      ...state,\n      isAllChecked: false,\n      portfolios: {\n        ...state.portfolios,\n        list: {\n          ...state.portfolios.list,\n          [iban]: {\n            ...state.portfolios.list[iban],\n            isChecked: !state.portfolios.list[iban].isChecked,\n          },\n        },\n      },\n    });\n  };\n\n  /**\n   * @description\n   * Returns error object by error code\n   *\n   * @public\n   * @name getError\n   * @type {function}\n   */\n  const getError = (code) => errors[code];\n\n  /**\n   * @description\n   * Returns correct generic message for empty-state\n   *\n   * @public\n   * @name getMessageForNoPortfolio\n   * @type {function}\n   *\n   * @returns {object} Message object\n   */\n  const getMessageForNoPortfolio = stateContainer.createSelector(state => (\n    state.pageParams.query ? {\n      icon: 'fa-search',\n      title: 'portfolios.noSearchResult.title',\n      subtitle: 'portfolios.noSearchResult.message',\n    } : {\n      icon: 'fa-exclamation-triangle',\n      title: 'portfolios.empty.title',\n      subtitle: 'portfolios.empty.message.noPortfolios',\n    }\n  ));\n\n  /**\n   * @name toggleAll\n   * @type {function}\n   *\n   * @description\n   * Toggles selected state for all portfolios\n   *\n   * @returns {void}\n   */\n  const toggleAll = () => {\n    const state = stateContainer.getState();\n    const isAllChecked = !state.isAllChecked;\n\n    stateContainer.setState({\n      ...state,\n      isAllChecked,\n      portfolios: {\n        ...state.portfolios,\n        list: Object\n          .keys(state.portfolios.list)\n          .reduce((list, current) => ({\n            ...list,\n            [current]: {\n              ...state.portfolios.list[current],\n              isChecked: isAllChecked,\n            },\n          }), {}),\n      },\n    });\n  };\n\n  /**\n   * @name mapOfOpenItems\n   * @type {map}\n   * @inner\n   *\n   * @description\n   * Map keeping portfolios` open state\n   */\n  const mapOfOpenItems = new Map();\n\n  /**\n   * @name isOpen\n   * @public\n   * @type {function}\n   * @description Tells, whether item's open property is truthy\n   * @param {number} id\n   * @param {number} index Index of portfolio in portfolios collection\n   * @returns {boolean} Flag (true|false) that stands for open state of item\n   */\n  const isOpen = (id) =>\n    mapOfOpenItems.get(id);\n\n  /**\n   * @name onToggle\n   * @public\n   * @type {function}\n   * @description Changes open state of item to the opposite\n   * @param {number} id\n   * @returns {map} Map of items\n   */\n  const onToggle = id => mapOfOpenItems.set(id, !mapOfOpenItems.get(id));\n\n  /**\n   * @name isChecked\n   * @type {function}\n   *\n   * @description\n   * Checks whether portfolio item is checked\n   *\n   * @returns {boolean} State of portfolio item selection\n   */\n  const isChecked = iban =>\n    stateContainer.getState().portfolios.list[iban].isChecked;\n\n  /**\n   * @description\n   * Checks if all portfolios are checked\n   *\n   * @name isAllChecked\n   * @type {function}\n   * @returns {boolean} Returns true if all portfolios are checked\n   */\n  const isAllChecked = stateContainer.createSelector(state =>\n    state.isAllChecked\n  );\n\n  /**\n   * @name allPortfoliosCustomListItem\n   * @type {object}\n   *\n   * @description\n   * Holds default custom lists filter state\n   */\n  const allPortfoliosCustomListItem = {\n    name: i18nFilter('portfolios.all'),\n  };\n  const favoritesPortfolios = {\n    name: i18nFilter('portfolios.favorites'),\n    isFavorite: true,\n  };\n\n  /**\n   * @name getCustomListDefault\n   * @type {function}\n   * @public\n   *\n   * @description\n   * Returns default custom list value\n   *\n   * @returns {object} Custom list object\n   */\n  const getCustomListDefault = () =>\n    stateContainer.getState().portfolios.selectedList\n    || allPortfoliosCustomListItem;\n\n  /**\n   * @name existingListEmptyItem\n   * @type {object}\n   *\n   * @description\n   * Holds default custom lists empty filter state\n   */\n  const existingListEmptyItem = {\n    name: i18nFilter('portfolios.addToExistingListEmpty'),\n  };\n\n  /**\n   * @public\n   * @name getCustomListFilterState\n   * @type {function}\n   *\n   * @description\n   * Returns correct custom lists filter state\n   *\n   * @returns {object} Filter state\n   */\n  const getCustomListFilterState = stateContainer.createSelector(state => {\n    if (state.portfolios.customLists.length > 0) {\n      return existingListDefaultItem;\n    }\n    return existingListEmptyItem;\n  });\n\n  /**\n   * @public\n   * @name getCustomLists\n   * @type {function}\n   *\n   * @description\n   * Selector for all custom lists\n   *\n   * @returns {array} Custom lists\n   */\n  const getCustomLists = stateContainer.createSelector(state => {\n    const sortedCustomList =\n      (sortAlphabetically(state.portfolios.customLists, 'name') || []);\n    return [...sortedCustomList];\n  });\n\n  /**\n   * @name isNameDuplicate\n   * @type {function}\n   *\n   * @description\n   * Checks if string is present in array\n   *\n   * @returns {boolean}\n   */\n  const isNameDuplicate = (name, values) =>\n    values.map(item => item.name.toLowerCase()).includes(name.toLowerCase());\n\n  /**\n   * @public\n   * @name getExistingCustomLists\n   * @type {function}\n   *\n   * @description\n   * Selector for all custom lists\n   *\n   * @returns {array} Custom lists\n   */\n  const getExistingCustomLists = stateContainer.createSelector(state =>\n    sortAlphabetically(state.portfolios.customLists, 'name')\n  );\n\n  /**\n   * @public\n   * @name arePortfoliosSelected\n   * @type {function}\n   *\n   * @description\n   * Tells, whether any portfolio is selected\n   *\n   * @returns {boolean} True in case any portfolio is selected/checked\n   */\n  const arePortfoliosSelected = stateContainer.createSelector(state =>\n    Object\n      .keys(state.portfolios.list)\n      .some(key => state.portfolios.list[key].isChecked)\n  );\n\n  /**\n   * @name getSelectedPortfolios\n   * @type {function}\n   *\n   * @description\n   * Returns ids of selected/checked portfolios\n   *\n   * @returns {array.<string>} Array of portfolios` ids\n   */\n  const getSelectedPortfolios = stateContainer.createSelector(state =>\n    Object\n      .keys(state.portfolios.list)\n      .filter(key => state.portfolios.list[key].isChecked)\n  );\n\n  /**\n   * @name selectedPortfoliosAmount\n   * @type {function}\n   *\n   * @description\n   * Returns number of selected portfolios\n   *\n   * @returns {number} Number of selected portfolios\n   */\n  const selectedPortfoliosAmount = stateContainer.createSelector(() => (\n    getSelectedPortfolios().length\n  ));\n\n  /**\n   * @public\n   * @name onExistingListSelect\n   * @type {function}\n   *\n   * @param {object} $ctrl Controller of the widget\n   * @param {array.<string>} Array of portfolios`s ids to add to custom list\n   *\n   * @description\n   * Performs actions, needed on selection of existing list\n   *\n   * @returns {void}\n   */\n  const onExistingListSelect = ($ctrl, portfoliosToAdd) => {\n    const { selectedExistingList } = $ctrl;\n    Object.assign($ctrl, { selectedExistingList: existingListDefaultItem });\n    const selectedAmount = selectedPortfoliosAmount();\n\n    $ctrl\n      .setPortfoliosToCustomList(selectedExistingList.uuid, portfoliosToAdd)\n      .then(() => notificationSuccess(\n        'addToExistingList',\n        { listName: selectedExistingList.name },\n        true,\n        selectedAmount\n      ))\n      .catch((error) => {\n        notificationError(\n          'addToExistingList',\n          { listName: $ctrl.selectedExistingList.name },\n          true,\n          selectedAmount\n        );\n        throw error;\n      })\n      .then(() => $ctrl.setSelectedList(selectedExistingList));\n  };\n\n  /**\n   * @public\n   * @name afterLoadCustomLists\n   * @type {function}\n   *\n   * @description\n   * Performs actions, needed after loading of custom lists\n   *\n   * @returns {void}\n   */\n  const afterLoadCustomLists = $ctrl => data => {\n    if (data.length === 0) {\n      return false;\n    }\n    Object.assign($ctrl, { selectedExistingList: existingListDefaultItem });\n    return existingListDefaultItem;\n  };\n\n  /**\n   * @name isCustomListSelected\n   * @type {function}\n   *\n   * @description\n   * Checks if custom list is selected\n   * @returns {boolean} Returns true if custom list is selected\n   */\n  const isCustomListSelected = () => {\n    const state = stateContainer.getState();\n    return state.portfolios.selectedList && state.portfolios.selectedList.uuid;\n  };\n\n  /**\n   * @name onCustomListDelete\n   * @type {function}\n   *\n   * @description\n   * Deletes a selected custom list\n   */\n  const onCustomListDelete = ($ctrl, load, deleteCustomList) => {\n    if (isCustomListSelected()) {\n      const state = stateContainer.getState();\n      deleteCustomList(state.portfolios.selectedList.uuid)\n        .then(({ customLists }) => {\n          notificationSuccess(\n            'deleteList',\n            { listName: state.portfolios.selectedList.name }\n          );\n          $ctrl.setSelectedList(allPortfoliosCustomListItem);\n\n          if (customLists.length === 0) {\n            Object.assign($ctrl, {\n              selectedExistingList: existingListEmptyItem,\n            });\n          }\n        })\n        .catch(() => notificationError(\n          'deleteList',\n          { listName: state.portfolios.selectedList.name }\n        ));\n    }\n  };\n\n  /**\n   * @name onPortfolioFromListDelete\n   * @type {function}\n   *\n   * @description\n   * Deletes a selected custom list\n   */\n  const onPortfolioFromListDelete = ($ctrl, portfoliosToRemove) => {\n    const state = stateContainer.getState();\n    const { uuid } = state.portfolios.selectedList;\n    $ctrl.removePortfolioFromList(\n      portfoliosToRemove,\n      uuid\n    )\n      .then(response => {\n        const currentState = stateContainer.getState();\n        const { from, size, totalItems } = currentState.pageParams;\n        if (\n          totalItems === (from * size) + portfoliosToRemove.length &&\n          from !== 0\n        ) {\n          stateContainer.setState({\n            ...currentState,\n            pageParams: {\n              ...currentState.pageParams,\n              from: from - 1,\n            },\n          });\n        }\n        return response;\n      })\n      .then(() => notificationSuccess('deletePortfolioFromList', {\n        listName: state.portfolios.selectedList.name,\n        portfoliosNumber: selectedPortfoliosAmount(),\n      }, true, selectedPortfoliosAmount()))\n      .then(() => $ctrl.load({ customListUuid: uuid }))\n      .catch(() => notificationError('deletePortfolioFromList', {\n        listName: state.portfolios.selectedList.name,\n      }, true, selectedPortfoliosAmount()));\n  };\n\n  /**\n   * @name togglePortfolioAsFavorite\n   * @type {function}\n   * @param {function} toggleFn Ctrl`s function to toggle portfolio`s Favorite status with\n   * @param {string} IBAN IBAN of Portfolio to change Favorite status of\n   * @param {boolean} isFavorite Is portfolio already in favorites list or should be added\n   *\n   * @description\n   * Set/Unset portfolio as favorite. In case error happens, displays notification message.\n   */\n  const togglePortfolioAsFavorite = (toggleFn, IBAN, isFavorite) => {\n    toggleFn(IBAN)\n      .then(() => {\n        if (!isFavorite) {\n          notifications.isFavorite = true;\n          notificationAddFavorites();\n        } else {\n          notifications.isFavorite = false;\n          notificationRemoveFavorites(\n            'favoritesList'\n          );\n        }\n      })\n      .catch(() => notificationError('settingPortfolioAsFavorite', {}));\n  };\n\n  /**\n   * @public\n   * @name goToFavorites\n   * @type {function}\n   *\n   * @description\n   * Show list of favorites portfolios after click on link in notification\n   *\n   */\n  const goToFavorites = ($ctrl) => {\n    const state = stateContainer.getState();\n    stateContainer.setState({\n      ...state,\n      portfolios: {\n        ...state.portfolios,\n        selectedList: favoritesPortfolios,\n      },\n    });\n    $ctrl.setSelectedList(favoritesPortfolios);\n  };\n\n  /**\n   * @public\n   * @name getNotificationWithLink\n   * @type {function}\n   *\n   * @description\n   * Return parameter, that define correct message in notification\n   *\n   */\n  const getNotificationWithLink = () => notifications.isFavorite;\n\n  /**\n   * @public\n   * @name shouldDisableAddToCustomListDropdown\n   * @type {function}\n   *\n   * @description\n   * Flag or state that defines if \"Add to Existing List\" dropdown should be disabled or enabled\n   *\n   * @returns {boolean} state to disable or enable \"Add to Existing List\" dropdown\n   */\n  const shouldDisableAddToCustomListDropdown =\n    stateContainer.createSelector(state =>\n      !arePortfoliosSelected() ||\n      getExistingCustomLists().length === 0 ||\n      (\n        getExistingCustomLists().length === 1 &&\n        getExistingCustomLists()[0].uuid === state.portfolios.selectedList.uuid\n      )\n    );\n\n  return {\n    headers,\n    getNetCashTotalAmount,\n    isSortableActive,\n    showSign,\n    chartOptions,\n    showCreateNewListModal,\n    showEditListModal,\n    renameCustomList,\n    isNameDuplicate,\n    getModalData,\n    createNewList,\n    cancel,\n    isPortfoliosAvailable,\n    plugins,\n    portfolios,\n    toggleAll,\n    isOpen,\n    onToggle,\n    isAllChecked,\n    getCustomLists,\n    selectedPortfolios,\n    getSelectedPortfolios,\n    allPortfoliosCustomListItem,\n    onPortfolioChecked,\n    getExistingCustomLists,\n    existingListDefaultItem,\n    existingListEmptyItem,\n    arePortfoliosSelected,\n    getCustomListDefault,\n    localizeNumber,\n    getColorClassByIndex,\n    onExistingListSelect,\n    isChecked,\n    afterLoadCustomLists,\n    getError,\n    isCustomListSelected,\n    selectedPortfoliosAmount,\n    searchPortfolios,\n    onCustomListDelete,\n    onPortfolioFromListDelete,\n    getNotifications,\n    closeNotification,\n    togglePortfolioAsFavorite,\n    getMessageForNoPortfolio,\n    goToFavorites,\n    getNotificationWithLink,\n    getCustomListFilterState,\n    favoritesPortfolios,\n    validation,\n    shouldDisableAddToCustomListDropdown,\n  };\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./ext-wm-portfolio-summary-extended-ng/scripts/helpers.js","/**\n * @name defaultSortableColumn\n *\n * @description\n * Return the key of the default sort column\n *\n * @type {function}\n * @returns {string} Returns column key\n */\nexport const defaultSortableColumn = () => 'clientName';\n\n/**\n * @name defaultSortableDirection\n *\n * @description\n * Return the sorting direction of the default sort column\n *\n * @type {function}\n * @returns {string} Returns sorting direction\n */\nexport const defaultSortableDirection = () => 'ASC';\n\n\n\n// WEBPACK FOOTER //\n// ./ext-wm-portfolio-summary-extended-ng/scripts/hooks.js"],"sourceRoot":""}